// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: usermessages.proto

#ifndef PROTOBUF_INCLUDED_usermessages_2eproto
#define PROTOBUF_INCLUDED_usermessages_2eproto

#ifndef PROTOBUF_USE_DLLS
#define PROTOBUF_USE_DLLS
#endif

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "networkbasetypes.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_usermessages_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_usermessages_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[66]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_usermessages_2eproto();
class CEntityMessageDoSpark;
class CEntityMessageDoSparkDefaultTypeInternal;
extern CEntityMessageDoSparkDefaultTypeInternal _CEntityMessageDoSpark_default_instance_;
class CEntityMessageFixAngle;
class CEntityMessageFixAngleDefaultTypeInternal;
extern CEntityMessageFixAngleDefaultTypeInternal _CEntityMessageFixAngle_default_instance_;
class CEntityMessagePlayJingle;
class CEntityMessagePlayJingleDefaultTypeInternal;
extern CEntityMessagePlayJingleDefaultTypeInternal _CEntityMessagePlayJingle_default_instance_;
class CEntityMessagePropagateForce;
class CEntityMessagePropagateForceDefaultTypeInternal;
extern CEntityMessagePropagateForceDefaultTypeInternal _CEntityMessagePropagateForce_default_instance_;
class CEntityMessageRemoveAllDecals;
class CEntityMessageRemoveAllDecalsDefaultTypeInternal;
extern CEntityMessageRemoveAllDecalsDefaultTypeInternal _CEntityMessageRemoveAllDecals_default_instance_;
class CEntityMessageScreenOverlay;
class CEntityMessageScreenOverlayDefaultTypeInternal;
extern CEntityMessageScreenOverlayDefaultTypeInternal _CEntityMessageScreenOverlay_default_instance_;
class CUserMessageAchievementEvent;
class CUserMessageAchievementEventDefaultTypeInternal;
extern CUserMessageAchievementEventDefaultTypeInternal _CUserMessageAchievementEvent_default_instance_;
class CUserMessageAmmoDenied;
class CUserMessageAmmoDeniedDefaultTypeInternal;
extern CUserMessageAmmoDeniedDefaultTypeInternal _CUserMessageAmmoDenied_default_instance_;
class CUserMessageAnimStateGraphState;
class CUserMessageAnimStateGraphStateDefaultTypeInternal;
extern CUserMessageAnimStateGraphStateDefaultTypeInternal _CUserMessageAnimStateGraphState_default_instance_;
class CUserMessageAudioParameter;
class CUserMessageAudioParameterDefaultTypeInternal;
extern CUserMessageAudioParameterDefaultTypeInternal _CUserMessageAudioParameter_default_instance_;
class CUserMessageCameraTransition;
class CUserMessageCameraTransitionDefaultTypeInternal;
extern CUserMessageCameraTransitionDefaultTypeInternal _CUserMessageCameraTransition_default_instance_;
class CUserMessageCameraTransition_Transition_DataDriven;
class CUserMessageCameraTransition_Transition_DataDrivenDefaultTypeInternal;
extern CUserMessageCameraTransition_Transition_DataDrivenDefaultTypeInternal _CUserMessageCameraTransition_Transition_DataDriven_default_instance_;
class CUserMessageCloseCaption;
class CUserMessageCloseCaptionDefaultTypeInternal;
extern CUserMessageCloseCaptionDefaultTypeInternal _CUserMessageCloseCaption_default_instance_;
class CUserMessageCloseCaptionDirect;
class CUserMessageCloseCaptionDirectDefaultTypeInternal;
extern CUserMessageCloseCaptionDirectDefaultTypeInternal _CUserMessageCloseCaptionDirect_default_instance_;
class CUserMessageCloseCaptionPlaceholder;
class CUserMessageCloseCaptionPlaceholderDefaultTypeInternal;
extern CUserMessageCloseCaptionPlaceholderDefaultTypeInternal _CUserMessageCloseCaptionPlaceholder_default_instance_;
class CUserMessageColoredText;
class CUserMessageColoredTextDefaultTypeInternal;
extern CUserMessageColoredTextDefaultTypeInternal _CUserMessageColoredText_default_instance_;
class CUserMessageCreditsMsg;
class CUserMessageCreditsMsgDefaultTypeInternal;
extern CUserMessageCreditsMsgDefaultTypeInternal _CUserMessageCreditsMsg_default_instance_;
class CUserMessageCrosshairAngle;
class CUserMessageCrosshairAngleDefaultTypeInternal;
extern CUserMessageCrosshairAngleDefaultTypeInternal _CUserMessageCrosshairAngle_default_instance_;
class CUserMessageCurrentTimescale;
class CUserMessageCurrentTimescaleDefaultTypeInternal;
extern CUserMessageCurrentTimescaleDefaultTypeInternal _CUserMessageCurrentTimescale_default_instance_;
class CUserMessageDesiredTimescale;
class CUserMessageDesiredTimescaleDefaultTypeInternal;
extern CUserMessageDesiredTimescaleDefaultTypeInternal _CUserMessageDesiredTimescale_default_instance_;
class CUserMessageFade;
class CUserMessageFadeDefaultTypeInternal;
extern CUserMessageFadeDefaultTypeInternal _CUserMessageFade_default_instance_;
class CUserMessageGameTitle;
class CUserMessageGameTitleDefaultTypeInternal;
extern CUserMessageGameTitleDefaultTypeInternal _CUserMessageGameTitle_default_instance_;
class CUserMessageHapticPulse;
class CUserMessageHapticPulseDefaultTypeInternal;
extern CUserMessageHapticPulseDefaultTypeInternal _CUserMessageHapticPulse_default_instance_;
class CUserMessageHapticPulsePrecise;
class CUserMessageHapticPulsePreciseDefaultTypeInternal;
extern CUserMessageHapticPulsePreciseDefaultTypeInternal _CUserMessageHapticPulsePrecise_default_instance_;
class CUserMessageHintText;
class CUserMessageHintTextDefaultTypeInternal;
extern CUserMessageHintTextDefaultTypeInternal _CUserMessageHintText_default_instance_;
class CUserMessageHudMsg;
class CUserMessageHudMsgDefaultTypeInternal;
extern CUserMessageHudMsgDefaultTypeInternal _CUserMessageHudMsg_default_instance_;
class CUserMessageHudText;
class CUserMessageHudTextDefaultTypeInternal;
extern CUserMessageHudTextDefaultTypeInternal _CUserMessageHudText_default_instance_;
class CUserMessageItemPickup;
class CUserMessageItemPickupDefaultTypeInternal;
extern CUserMessageItemPickupDefaultTypeInternal _CUserMessageItemPickup_default_instance_;
class CUserMessageKeyHintText;
class CUserMessageKeyHintTextDefaultTypeInternal;
extern CUserMessageKeyHintTextDefaultTypeInternal _CUserMessageKeyHintText_default_instance_;
class CUserMessageRequestState;
class CUserMessageRequestStateDefaultTypeInternal;
extern CUserMessageRequestStateDefaultTypeInternal _CUserMessageRequestState_default_instance_;
class CUserMessageResetHUD;
class CUserMessageResetHUDDefaultTypeInternal;
extern CUserMessageResetHUDDefaultTypeInternal _CUserMessageResetHUD_default_instance_;
class CUserMessageRumble;
class CUserMessageRumbleDefaultTypeInternal;
extern CUserMessageRumbleDefaultTypeInternal _CUserMessageRumble_default_instance_;
class CUserMessageSayText;
class CUserMessageSayTextDefaultTypeInternal;
extern CUserMessageSayTextDefaultTypeInternal _CUserMessageSayText_default_instance_;
class CUserMessageSayText2;
class CUserMessageSayText2DefaultTypeInternal;
extern CUserMessageSayText2DefaultTypeInternal _CUserMessageSayText2_default_instance_;
class CUserMessageSayTextChannel;
class CUserMessageSayTextChannelDefaultTypeInternal;
extern CUserMessageSayTextChannelDefaultTypeInternal _CUserMessageSayTextChannel_default_instance_;
class CUserMessageScreenTilt;
class CUserMessageScreenTiltDefaultTypeInternal;
extern CUserMessageScreenTiltDefaultTypeInternal _CUserMessageScreenTilt_default_instance_;
class CUserMessageSendAudio;
class CUserMessageSendAudioDefaultTypeInternal;
extern CUserMessageSendAudioDefaultTypeInternal _CUserMessageSendAudio_default_instance_;
class CUserMessageShake;
class CUserMessageShakeDefaultTypeInternal;
extern CUserMessageShakeDefaultTypeInternal _CUserMessageShake_default_instance_;
class CUserMessageShakeDir;
class CUserMessageShakeDirDefaultTypeInternal;
extern CUserMessageShakeDirDefaultTypeInternal _CUserMessageShakeDir_default_instance_;
class CUserMessageShowMenu;
class CUserMessageShowMenuDefaultTypeInternal;
extern CUserMessageShowMenuDefaultTypeInternal _CUserMessageShowMenu_default_instance_;
class CUserMessageTextMsg;
class CUserMessageTextMsgDefaultTypeInternal;
extern CUserMessageTextMsgDefaultTypeInternal _CUserMessageTextMsg_default_instance_;
class CUserMessageTrain;
class CUserMessageTrainDefaultTypeInternal;
extern CUserMessageTrainDefaultTypeInternal _CUserMessageTrain_default_instance_;
class CUserMessageVGUIMenu;
class CUserMessageVGUIMenuDefaultTypeInternal;
extern CUserMessageVGUIMenuDefaultTypeInternal _CUserMessageVGUIMenu_default_instance_;
class CUserMessageVGUIMenu_Keys;
class CUserMessageVGUIMenu_KeysDefaultTypeInternal;
extern CUserMessageVGUIMenu_KeysDefaultTypeInternal _CUserMessageVGUIMenu_Keys_default_instance_;
class CUserMessageVoiceMask;
class CUserMessageVoiceMaskDefaultTypeInternal;
extern CUserMessageVoiceMaskDefaultTypeInternal _CUserMessageVoiceMask_default_instance_;
class CUserMessageVoiceSubtitle;
class CUserMessageVoiceSubtitleDefaultTypeInternal;
extern CUserMessageVoiceSubtitleDefaultTypeInternal _CUserMessageVoiceSubtitle_default_instance_;
class CUserMsg_CustomGameEvent;
class CUserMsg_CustomGameEventDefaultTypeInternal;
extern CUserMsg_CustomGameEventDefaultTypeInternal _CUserMsg_CustomGameEvent_default_instance_;
class CUserMsg_HudError;
class CUserMsg_HudErrorDefaultTypeInternal;
extern CUserMsg_HudErrorDefaultTypeInternal _CUserMsg_HudError_default_instance_;
class CUserMsg_ParticleManager;
class CUserMsg_ParticleManagerDefaultTypeInternal;
extern CUserMsg_ParticleManagerDefaultTypeInternal _CUserMsg_ParticleManager_default_instance_;
class CUserMsg_ParticleManager_ChangeControlPointAttachment;
class CUserMsg_ParticleManager_ChangeControlPointAttachmentDefaultTypeInternal;
extern CUserMsg_ParticleManager_ChangeControlPointAttachmentDefaultTypeInternal _CUserMsg_ParticleManager_ChangeControlPointAttachment_default_instance_;
class CUserMsg_ParticleManager_CreateParticle;
class CUserMsg_ParticleManager_CreateParticleDefaultTypeInternal;
extern CUserMsg_ParticleManager_CreateParticleDefaultTypeInternal _CUserMsg_ParticleManager_CreateParticle_default_instance_;
class CUserMsg_ParticleManager_DestroyParticle;
class CUserMsg_ParticleManager_DestroyParticleDefaultTypeInternal;
extern CUserMsg_ParticleManager_DestroyParticleDefaultTypeInternal _CUserMsg_ParticleManager_DestroyParticle_default_instance_;
class CUserMsg_ParticleManager_DestroyParticleInvolving;
class CUserMsg_ParticleManager_DestroyParticleInvolvingDefaultTypeInternal;
extern CUserMsg_ParticleManager_DestroyParticleInvolvingDefaultTypeInternal _CUserMsg_ParticleManager_DestroyParticleInvolving_default_instance_;
class CUserMsg_ParticleManager_ReleaseParticleIndex;
class CUserMsg_ParticleManager_ReleaseParticleIndexDefaultTypeInternal;
extern CUserMsg_ParticleManager_ReleaseParticleIndexDefaultTypeInternal _CUserMsg_ParticleManager_ReleaseParticleIndex_default_instance_;
class CUserMsg_ParticleManager_SetParticleFoWProperties;
class CUserMsg_ParticleManager_SetParticleFoWPropertiesDefaultTypeInternal;
extern CUserMsg_ParticleManager_SetParticleFoWPropertiesDefaultTypeInternal _CUserMsg_ParticleManager_SetParticleFoWProperties_default_instance_;
class CUserMsg_ParticleManager_SetParticleShouldCheckFoW;
class CUserMsg_ParticleManager_SetParticleShouldCheckFoWDefaultTypeInternal;
extern CUserMsg_ParticleManager_SetParticleShouldCheckFoWDefaultTypeInternal _CUserMsg_ParticleManager_SetParticleShouldCheckFoW_default_instance_;
class CUserMsg_ParticleManager_SetParticleText;
class CUserMsg_ParticleManager_SetParticleTextDefaultTypeInternal;
extern CUserMsg_ParticleManager_SetParticleTextDefaultTypeInternal _CUserMsg_ParticleManager_SetParticleText_default_instance_;
class CUserMsg_ParticleManager_UpdateEntityPosition;
class CUserMsg_ParticleManager_UpdateEntityPositionDefaultTypeInternal;
extern CUserMsg_ParticleManager_UpdateEntityPositionDefaultTypeInternal _CUserMsg_ParticleManager_UpdateEntityPosition_default_instance_;
class CUserMsg_ParticleManager_UpdateParticle;
class CUserMsg_ParticleManager_UpdateParticleDefaultTypeInternal;
extern CUserMsg_ParticleManager_UpdateParticleDefaultTypeInternal _CUserMsg_ParticleManager_UpdateParticle_default_instance_;
class CUserMsg_ParticleManager_UpdateParticleEnt;
class CUserMsg_ParticleManager_UpdateParticleEntDefaultTypeInternal;
extern CUserMsg_ParticleManager_UpdateParticleEntDefaultTypeInternal _CUserMsg_ParticleManager_UpdateParticleEnt_default_instance_;
class CUserMsg_ParticleManager_UpdateParticleFallback;
class CUserMsg_ParticleManager_UpdateParticleFallbackDefaultTypeInternal;
extern CUserMsg_ParticleManager_UpdateParticleFallbackDefaultTypeInternal _CUserMsg_ParticleManager_UpdateParticleFallback_default_instance_;
class CUserMsg_ParticleManager_UpdateParticleFwd;
class CUserMsg_ParticleManager_UpdateParticleFwdDefaultTypeInternal;
extern CUserMsg_ParticleManager_UpdateParticleFwdDefaultTypeInternal _CUserMsg_ParticleManager_UpdateParticleFwd_default_instance_;
class CUserMsg_ParticleManager_UpdateParticleOffset;
class CUserMsg_ParticleManager_UpdateParticleOffsetDefaultTypeInternal;
extern CUserMsg_ParticleManager_UpdateParticleOffsetDefaultTypeInternal _CUserMsg_ParticleManager_UpdateParticleOffset_default_instance_;
class CUserMsg_ParticleManager_UpdateParticleOrient;
class CUserMsg_ParticleManager_UpdateParticleOrientDefaultTypeInternal;
extern CUserMsg_ParticleManager_UpdateParticleOrientDefaultTypeInternal _CUserMsg_ParticleManager_UpdateParticleOrient_default_instance_;
class CUserMsg_ParticleManager_UpdateParticleSetFrozen;
class CUserMsg_ParticleManager_UpdateParticleSetFrozenDefaultTypeInternal;
extern CUserMsg_ParticleManager_UpdateParticleSetFrozenDefaultTypeInternal _CUserMsg_ParticleManager_UpdateParticleSetFrozen_default_instance_;
class CUserMsg_ParticleManager_UpdateParticleShouldDraw;
class CUserMsg_ParticleManager_UpdateParticleShouldDrawDefaultTypeInternal;
extern CUserMsg_ParticleManager_UpdateParticleShouldDrawDefaultTypeInternal _CUserMsg_ParticleManager_UpdateParticleShouldDraw_default_instance_;
namespace google {
namespace protobuf {
template<> ::CEntityMessageDoSpark* Arena::CreateMaybeMessage<::CEntityMessageDoSpark>(Arena*);
template<> ::CEntityMessageFixAngle* Arena::CreateMaybeMessage<::CEntityMessageFixAngle>(Arena*);
template<> ::CEntityMessagePlayJingle* Arena::CreateMaybeMessage<::CEntityMessagePlayJingle>(Arena*);
template<> ::CEntityMessagePropagateForce* Arena::CreateMaybeMessage<::CEntityMessagePropagateForce>(Arena*);
template<> ::CEntityMessageRemoveAllDecals* Arena::CreateMaybeMessage<::CEntityMessageRemoveAllDecals>(Arena*);
template<> ::CEntityMessageScreenOverlay* Arena::CreateMaybeMessage<::CEntityMessageScreenOverlay>(Arena*);
template<> ::CUserMessageAchievementEvent* Arena::CreateMaybeMessage<::CUserMessageAchievementEvent>(Arena*);
template<> ::CUserMessageAmmoDenied* Arena::CreateMaybeMessage<::CUserMessageAmmoDenied>(Arena*);
template<> ::CUserMessageAnimStateGraphState* Arena::CreateMaybeMessage<::CUserMessageAnimStateGraphState>(Arena*);
template<> ::CUserMessageAudioParameter* Arena::CreateMaybeMessage<::CUserMessageAudioParameter>(Arena*);
template<> ::CUserMessageCameraTransition* Arena::CreateMaybeMessage<::CUserMessageCameraTransition>(Arena*);
template<> ::CUserMessageCameraTransition_Transition_DataDriven* Arena::CreateMaybeMessage<::CUserMessageCameraTransition_Transition_DataDriven>(Arena*);
template<> ::CUserMessageCloseCaption* Arena::CreateMaybeMessage<::CUserMessageCloseCaption>(Arena*);
template<> ::CUserMessageCloseCaptionDirect* Arena::CreateMaybeMessage<::CUserMessageCloseCaptionDirect>(Arena*);
template<> ::CUserMessageCloseCaptionPlaceholder* Arena::CreateMaybeMessage<::CUserMessageCloseCaptionPlaceholder>(Arena*);
template<> ::CUserMessageColoredText* Arena::CreateMaybeMessage<::CUserMessageColoredText>(Arena*);
template<> ::CUserMessageCreditsMsg* Arena::CreateMaybeMessage<::CUserMessageCreditsMsg>(Arena*);
template<> ::CUserMessageCrosshairAngle* Arena::CreateMaybeMessage<::CUserMessageCrosshairAngle>(Arena*);
template<> ::CUserMessageCurrentTimescale* Arena::CreateMaybeMessage<::CUserMessageCurrentTimescale>(Arena*);
template<> ::CUserMessageDesiredTimescale* Arena::CreateMaybeMessage<::CUserMessageDesiredTimescale>(Arena*);
template<> ::CUserMessageFade* Arena::CreateMaybeMessage<::CUserMessageFade>(Arena*);
template<> ::CUserMessageGameTitle* Arena::CreateMaybeMessage<::CUserMessageGameTitle>(Arena*);
template<> ::CUserMessageHapticPulse* Arena::CreateMaybeMessage<::CUserMessageHapticPulse>(Arena*);
template<> ::CUserMessageHapticPulsePrecise* Arena::CreateMaybeMessage<::CUserMessageHapticPulsePrecise>(Arena*);
template<> ::CUserMessageHintText* Arena::CreateMaybeMessage<::CUserMessageHintText>(Arena*);
template<> ::CUserMessageHudMsg* Arena::CreateMaybeMessage<::CUserMessageHudMsg>(Arena*);
template<> ::CUserMessageHudText* Arena::CreateMaybeMessage<::CUserMessageHudText>(Arena*);
template<> ::CUserMessageItemPickup* Arena::CreateMaybeMessage<::CUserMessageItemPickup>(Arena*);
template<> ::CUserMessageKeyHintText* Arena::CreateMaybeMessage<::CUserMessageKeyHintText>(Arena*);
template<> ::CUserMessageRequestState* Arena::CreateMaybeMessage<::CUserMessageRequestState>(Arena*);
template<> ::CUserMessageResetHUD* Arena::CreateMaybeMessage<::CUserMessageResetHUD>(Arena*);
template<> ::CUserMessageRumble* Arena::CreateMaybeMessage<::CUserMessageRumble>(Arena*);
template<> ::CUserMessageSayText* Arena::CreateMaybeMessage<::CUserMessageSayText>(Arena*);
template<> ::CUserMessageSayText2* Arena::CreateMaybeMessage<::CUserMessageSayText2>(Arena*);
template<> ::CUserMessageSayTextChannel* Arena::CreateMaybeMessage<::CUserMessageSayTextChannel>(Arena*);
template<> ::CUserMessageScreenTilt* Arena::CreateMaybeMessage<::CUserMessageScreenTilt>(Arena*);
template<> ::CUserMessageSendAudio* Arena::CreateMaybeMessage<::CUserMessageSendAudio>(Arena*);
template<> ::CUserMessageShake* Arena::CreateMaybeMessage<::CUserMessageShake>(Arena*);
template<> ::CUserMessageShakeDir* Arena::CreateMaybeMessage<::CUserMessageShakeDir>(Arena*);
template<> ::CUserMessageShowMenu* Arena::CreateMaybeMessage<::CUserMessageShowMenu>(Arena*);
template<> ::CUserMessageTextMsg* Arena::CreateMaybeMessage<::CUserMessageTextMsg>(Arena*);
template<> ::CUserMessageTrain* Arena::CreateMaybeMessage<::CUserMessageTrain>(Arena*);
template<> ::CUserMessageVGUIMenu* Arena::CreateMaybeMessage<::CUserMessageVGUIMenu>(Arena*);
template<> ::CUserMessageVGUIMenu_Keys* Arena::CreateMaybeMessage<::CUserMessageVGUIMenu_Keys>(Arena*);
template<> ::CUserMessageVoiceMask* Arena::CreateMaybeMessage<::CUserMessageVoiceMask>(Arena*);
template<> ::CUserMessageVoiceSubtitle* Arena::CreateMaybeMessage<::CUserMessageVoiceSubtitle>(Arena*);
template<> ::CUserMsg_CustomGameEvent* Arena::CreateMaybeMessage<::CUserMsg_CustomGameEvent>(Arena*);
template<> ::CUserMsg_HudError* Arena::CreateMaybeMessage<::CUserMsg_HudError>(Arena*);
template<> ::CUserMsg_ParticleManager* Arena::CreateMaybeMessage<::CUserMsg_ParticleManager>(Arena*);
template<> ::CUserMsg_ParticleManager_ChangeControlPointAttachment* Arena::CreateMaybeMessage<::CUserMsg_ParticleManager_ChangeControlPointAttachment>(Arena*);
template<> ::CUserMsg_ParticleManager_CreateParticle* Arena::CreateMaybeMessage<::CUserMsg_ParticleManager_CreateParticle>(Arena*);
template<> ::CUserMsg_ParticleManager_DestroyParticle* Arena::CreateMaybeMessage<::CUserMsg_ParticleManager_DestroyParticle>(Arena*);
template<> ::CUserMsg_ParticleManager_DestroyParticleInvolving* Arena::CreateMaybeMessage<::CUserMsg_ParticleManager_DestroyParticleInvolving>(Arena*);
template<> ::CUserMsg_ParticleManager_ReleaseParticleIndex* Arena::CreateMaybeMessage<::CUserMsg_ParticleManager_ReleaseParticleIndex>(Arena*);
template<> ::CUserMsg_ParticleManager_SetParticleFoWProperties* Arena::CreateMaybeMessage<::CUserMsg_ParticleManager_SetParticleFoWProperties>(Arena*);
template<> ::CUserMsg_ParticleManager_SetParticleShouldCheckFoW* Arena::CreateMaybeMessage<::CUserMsg_ParticleManager_SetParticleShouldCheckFoW>(Arena*);
template<> ::CUserMsg_ParticleManager_SetParticleText* Arena::CreateMaybeMessage<::CUserMsg_ParticleManager_SetParticleText>(Arena*);
template<> ::CUserMsg_ParticleManager_UpdateEntityPosition* Arena::CreateMaybeMessage<::CUserMsg_ParticleManager_UpdateEntityPosition>(Arena*);
template<> ::CUserMsg_ParticleManager_UpdateParticle* Arena::CreateMaybeMessage<::CUserMsg_ParticleManager_UpdateParticle>(Arena*);
template<> ::CUserMsg_ParticleManager_UpdateParticleEnt* Arena::CreateMaybeMessage<::CUserMsg_ParticleManager_UpdateParticleEnt>(Arena*);
template<> ::CUserMsg_ParticleManager_UpdateParticleFallback* Arena::CreateMaybeMessage<::CUserMsg_ParticleManager_UpdateParticleFallback>(Arena*);
template<> ::CUserMsg_ParticleManager_UpdateParticleFwd* Arena::CreateMaybeMessage<::CUserMsg_ParticleManager_UpdateParticleFwd>(Arena*);
template<> ::CUserMsg_ParticleManager_UpdateParticleOffset* Arena::CreateMaybeMessage<::CUserMsg_ParticleManager_UpdateParticleOffset>(Arena*);
template<> ::CUserMsg_ParticleManager_UpdateParticleOrient* Arena::CreateMaybeMessage<::CUserMsg_ParticleManager_UpdateParticleOrient>(Arena*);
template<> ::CUserMsg_ParticleManager_UpdateParticleSetFrozen* Arena::CreateMaybeMessage<::CUserMsg_ParticleManager_UpdateParticleSetFrozen>(Arena*);
template<> ::CUserMsg_ParticleManager_UpdateParticleShouldDraw* Arena::CreateMaybeMessage<::CUserMsg_ParticleManager_UpdateParticleShouldDraw>(Arena*);
}  // namespace protobuf
}  // namespace google

enum EBaseUserMessages {
  UM_AchievementEvent = 101,
  UM_CloseCaption = 102,
  UM_CloseCaptionDirect = 103,
  UM_CurrentTimescale = 104,
  UM_DesiredTimescale = 105,
  UM_Fade = 106,
  UM_GameTitle = 107,
  UM_HintText = 109,
  UM_HudMsg = 110,
  UM_HudText = 111,
  UM_KeyHintText = 112,
  UM_ColoredText = 113,
  UM_RequestState = 114,
  UM_ResetHUD = 115,
  UM_Rumble = 116,
  UM_SayText = 117,
  UM_SayText2 = 118,
  UM_SayTextChannel = 119,
  UM_Shake = 120,
  UM_ShakeDir = 121,
  UM_TextMsg = 124,
  UM_ScreenTilt = 125,
  UM_Train = 126,
  UM_VGUIMenu = 127,
  UM_VoiceMask = 128,
  UM_VoiceSubtitle = 129,
  UM_SendAudio = 130,
  UM_ItemPickup = 131,
  UM_AmmoDenied = 132,
  UM_CrosshairAngle = 133,
  UM_ShowMenu = 134,
  UM_CreditsMsg = 135,
  UM_CloseCaptionPlaceholder = 142,
  UM_CameraTransition = 143,
  UM_AudioParameter = 144,
  UM_ParticleManager = 145,
  UM_HudError = 146,
  UM_CustomGameEvent = 148,
  UM_HandHapticPulse = 149,
  UM_AnimGraphUpdate = 150,
  UM_HandHapticPulsePrecise = 151,
  UM_MAX_BASE = 200
};
bool EBaseUserMessages_IsValid(int value);
const EBaseUserMessages EBaseUserMessages_MIN = UM_AchievementEvent;
const EBaseUserMessages EBaseUserMessages_MAX = UM_MAX_BASE;
const int EBaseUserMessages_ARRAYSIZE = EBaseUserMessages_MAX + 1;

const ::google::protobuf::EnumDescriptor* EBaseUserMessages_descriptor();
inline const ::std::string& EBaseUserMessages_Name(EBaseUserMessages value) {
  return ::google::protobuf::internal::NameOfEnum(
    EBaseUserMessages_descriptor(), value);
}
inline bool EBaseUserMessages_Parse(
    const ::std::string& name, EBaseUserMessages* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EBaseUserMessages>(
    EBaseUserMessages_descriptor(), name, value);
}
enum EBaseEntityMessages {
  EM_PlayJingle = 136,
  EM_ScreenOverlay = 137,
  EM_RemoveAllDecals = 138,
  EM_PropagateForce = 139,
  EM_DoSpark = 140,
  EM_FixAngle = 141
};
bool EBaseEntityMessages_IsValid(int value);
const EBaseEntityMessages EBaseEntityMessages_MIN = EM_PlayJingle;
const EBaseEntityMessages EBaseEntityMessages_MAX = EM_FixAngle;
const int EBaseEntityMessages_ARRAYSIZE = EBaseEntityMessages_MAX + 1;

const ::google::protobuf::EnumDescriptor* EBaseEntityMessages_descriptor();
inline const ::std::string& EBaseEntityMessages_Name(EBaseEntityMessages value) {
  return ::google::protobuf::internal::NameOfEnum(
    EBaseEntityMessages_descriptor(), value);
}
inline bool EBaseEntityMessages_Parse(
    const ::std::string& name, EBaseEntityMessages* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EBaseEntityMessages>(
    EBaseEntityMessages_descriptor(), name, value);
}
enum eRollType {
  ROLL_NONE = -1,
  ROLL_STATS = 0,
  ROLL_CREDITS = 1,
  ROLL_LATE_JOIN_LOGO = 2,
  ROLL_OUTTRO = 3
};
bool eRollType_IsValid(int value);
const eRollType eRollType_MIN = ROLL_NONE;
const eRollType eRollType_MAX = ROLL_OUTTRO;
const int eRollType_ARRAYSIZE = eRollType_MAX + 1;

const ::google::protobuf::EnumDescriptor* eRollType_descriptor();
inline const ::std::string& eRollType_Name(eRollType value) {
  return ::google::protobuf::internal::NameOfEnum(
    eRollType_descriptor(), value);
}
inline bool eRollType_Parse(
    const ::std::string& name, eRollType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<eRollType>(
    eRollType_descriptor(), name, value);
}
enum PARTICLE_MESSAGE {
  GAME_PARTICLE_MANAGER_EVENT_CREATE = 0,
  GAME_PARTICLE_MANAGER_EVENT_UPDATE = 1,
  GAME_PARTICLE_MANAGER_EVENT_UPDATE_FORWARD = 2,
  GAME_PARTICLE_MANAGER_EVENT_UPDATE_ORIENTATION = 3,
  GAME_PARTICLE_MANAGER_EVENT_UPDATE_FALLBACK = 4,
  GAME_PARTICLE_MANAGER_EVENT_UPDATE_ENT = 5,
  GAME_PARTICLE_MANAGER_EVENT_UPDATE_OFFSET = 6,
  GAME_PARTICLE_MANAGER_EVENT_DESTROY = 7,
  GAME_PARTICLE_MANAGER_EVENT_DESTROY_INVOLVING = 8,
  GAME_PARTICLE_MANAGER_EVENT_RELEASE = 9,
  GAME_PARTICLE_MANAGER_EVENT_LATENCY = 10,
  GAME_PARTICLE_MANAGER_EVENT_SHOULD_DRAW = 11,
  GAME_PARTICLE_MANAGER_EVENT_FROZEN = 12,
  GAME_PARTICLE_MANAGER_EVENT_CHANGE_CONTROL_POINT_ATTACHMENT = 13,
  GAME_PARTICLE_MANAGER_EVENT_UPDATE_ENTITY_POSITION = 14,
  GAME_PARTICLE_MANAGER_EVENT_SET_FOW_PROPERTIES = 15,
  GAME_PARTICLE_MANAGER_EVENT_SET_TEXT = 16,
  GAME_PARTICLE_MANAGER_EVENT_SET_SHOULD_CHECK_FOW = 17
};
bool PARTICLE_MESSAGE_IsValid(int value);
const PARTICLE_MESSAGE PARTICLE_MESSAGE_MIN = GAME_PARTICLE_MANAGER_EVENT_CREATE;
const PARTICLE_MESSAGE PARTICLE_MESSAGE_MAX = GAME_PARTICLE_MANAGER_EVENT_SET_SHOULD_CHECK_FOW;
const int PARTICLE_MESSAGE_ARRAYSIZE = PARTICLE_MESSAGE_MAX + 1;

const ::google::protobuf::EnumDescriptor* PARTICLE_MESSAGE_descriptor();
inline const ::std::string& PARTICLE_MESSAGE_Name(PARTICLE_MESSAGE value) {
  return ::google::protobuf::internal::NameOfEnum(
    PARTICLE_MESSAGE_descriptor(), value);
}
inline bool PARTICLE_MESSAGE_Parse(
    const ::std::string& name, PARTICLE_MESSAGE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PARTICLE_MESSAGE>(
    PARTICLE_MESSAGE_descriptor(), name, value);
}
enum EHapticPulseType {
  VR_HAND_HAPTIC_PULSE_LIGHT = 0,
  VR_HAND_HAPTIC_PULSE_MEDIUM = 1,
  VR_HAND_HAPTIC_PULSE_STRONG = 2
};
bool EHapticPulseType_IsValid(int value);
const EHapticPulseType EHapticPulseType_MIN = VR_HAND_HAPTIC_PULSE_LIGHT;
const EHapticPulseType EHapticPulseType_MAX = VR_HAND_HAPTIC_PULSE_STRONG;
const int EHapticPulseType_ARRAYSIZE = EHapticPulseType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EHapticPulseType_descriptor();
inline const ::std::string& EHapticPulseType_Name(EHapticPulseType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EHapticPulseType_descriptor(), value);
}
inline bool EHapticPulseType_Parse(
    const ::std::string& name, EHapticPulseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EHapticPulseType>(
    EHapticPulseType_descriptor(), name, value);
}
// ===================================================================

class CUserMessageAchievementEvent :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageAchievementEvent) */ {
 public:
  CUserMessageAchievementEvent();
  virtual ~CUserMessageAchievementEvent();

  CUserMessageAchievementEvent(const CUserMessageAchievementEvent& from);

  inline CUserMessageAchievementEvent& operator=(const CUserMessageAchievementEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageAchievementEvent(CUserMessageAchievementEvent&& from) noexcept
    : CUserMessageAchievementEvent() {
    *this = ::std::move(from);
  }

  inline CUserMessageAchievementEvent& operator=(CUserMessageAchievementEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageAchievementEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageAchievementEvent* internal_default_instance() {
    return reinterpret_cast<const CUserMessageAchievementEvent*>(
               &_CUserMessageAchievementEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CUserMessageAchievementEvent* other);
  friend void swap(CUserMessageAchievementEvent& a, CUserMessageAchievementEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageAchievementEvent* New() const final {
    return CreateMaybeMessage<CUserMessageAchievementEvent>(nullptr);
  }

  CUserMessageAchievementEvent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageAchievementEvent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageAchievementEvent& from);
  void MergeFrom(const CUserMessageAchievementEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageAchievementEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 achievement = 1;
  bool has_achievement() const;
  void clear_achievement();
  static const int kAchievementFieldNumber = 1;
  ::google::protobuf::uint32 achievement() const;
  void set_achievement(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CUserMessageAchievementEvent)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 achievement_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageCloseCaption :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageCloseCaption) */ {
 public:
  CUserMessageCloseCaption();
  virtual ~CUserMessageCloseCaption();

  CUserMessageCloseCaption(const CUserMessageCloseCaption& from);

  inline CUserMessageCloseCaption& operator=(const CUserMessageCloseCaption& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageCloseCaption(CUserMessageCloseCaption&& from) noexcept
    : CUserMessageCloseCaption() {
    *this = ::std::move(from);
  }

  inline CUserMessageCloseCaption& operator=(CUserMessageCloseCaption&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageCloseCaption& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageCloseCaption* internal_default_instance() {
    return reinterpret_cast<const CUserMessageCloseCaption*>(
               &_CUserMessageCloseCaption_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CUserMessageCloseCaption* other);
  friend void swap(CUserMessageCloseCaption& a, CUserMessageCloseCaption& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageCloseCaption* New() const final {
    return CreateMaybeMessage<CUserMessageCloseCaption>(nullptr);
  }

  CUserMessageCloseCaption* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageCloseCaption>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageCloseCaption& from);
  void MergeFrom(const CUserMessageCloseCaption& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageCloseCaption* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed32 hash = 1;
  bool has_hash() const;
  void clear_hash();
  static const int kHashFieldNumber = 1;
  ::google::protobuf::uint32 hash() const;
  void set_hash(::google::protobuf::uint32 value);

  // optional float duration = 2;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  float duration() const;
  void set_duration(float value);

  // optional bool from_player = 3;
  bool has_from_player() const;
  void clear_from_player();
  static const int kFromPlayerFieldNumber = 3;
  bool from_player() const;
  void set_from_player(bool value);

  // optional int32 ent_index = 4;
  bool has_ent_index() const;
  void clear_ent_index();
  static const int kEntIndexFieldNumber = 4;
  ::google::protobuf::int32 ent_index() const;
  void set_ent_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUserMessageCloseCaption)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 hash_;
  float duration_;
  bool from_player_;
  ::google::protobuf::int32 ent_index_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageCloseCaptionDirect :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageCloseCaptionDirect) */ {
 public:
  CUserMessageCloseCaptionDirect();
  virtual ~CUserMessageCloseCaptionDirect();

  CUserMessageCloseCaptionDirect(const CUserMessageCloseCaptionDirect& from);

  inline CUserMessageCloseCaptionDirect& operator=(const CUserMessageCloseCaptionDirect& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageCloseCaptionDirect(CUserMessageCloseCaptionDirect&& from) noexcept
    : CUserMessageCloseCaptionDirect() {
    *this = ::std::move(from);
  }

  inline CUserMessageCloseCaptionDirect& operator=(CUserMessageCloseCaptionDirect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageCloseCaptionDirect& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageCloseCaptionDirect* internal_default_instance() {
    return reinterpret_cast<const CUserMessageCloseCaptionDirect*>(
               &_CUserMessageCloseCaptionDirect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CUserMessageCloseCaptionDirect* other);
  friend void swap(CUserMessageCloseCaptionDirect& a, CUserMessageCloseCaptionDirect& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageCloseCaptionDirect* New() const final {
    return CreateMaybeMessage<CUserMessageCloseCaptionDirect>(nullptr);
  }

  CUserMessageCloseCaptionDirect* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageCloseCaptionDirect>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageCloseCaptionDirect& from);
  void MergeFrom(const CUserMessageCloseCaptionDirect& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageCloseCaptionDirect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed32 hash = 1;
  bool has_hash() const;
  void clear_hash();
  static const int kHashFieldNumber = 1;
  ::google::protobuf::uint32 hash() const;
  void set_hash(::google::protobuf::uint32 value);

  // optional float duration = 2;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  float duration() const;
  void set_duration(float value);

  // optional bool from_player = 3;
  bool has_from_player() const;
  void clear_from_player();
  static const int kFromPlayerFieldNumber = 3;
  bool from_player() const;
  void set_from_player(bool value);

  // optional int32 ent_index = 4;
  bool has_ent_index() const;
  void clear_ent_index();
  static const int kEntIndexFieldNumber = 4;
  ::google::protobuf::int32 ent_index() const;
  void set_ent_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUserMessageCloseCaptionDirect)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 hash_;
  float duration_;
  bool from_player_;
  ::google::protobuf::int32 ent_index_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageCloseCaptionPlaceholder :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageCloseCaptionPlaceholder) */ {
 public:
  CUserMessageCloseCaptionPlaceholder();
  virtual ~CUserMessageCloseCaptionPlaceholder();

  CUserMessageCloseCaptionPlaceholder(const CUserMessageCloseCaptionPlaceholder& from);

  inline CUserMessageCloseCaptionPlaceholder& operator=(const CUserMessageCloseCaptionPlaceholder& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageCloseCaptionPlaceholder(CUserMessageCloseCaptionPlaceholder&& from) noexcept
    : CUserMessageCloseCaptionPlaceholder() {
    *this = ::std::move(from);
  }

  inline CUserMessageCloseCaptionPlaceholder& operator=(CUserMessageCloseCaptionPlaceholder&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageCloseCaptionPlaceholder& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageCloseCaptionPlaceholder* internal_default_instance() {
    return reinterpret_cast<const CUserMessageCloseCaptionPlaceholder*>(
               &_CUserMessageCloseCaptionPlaceholder_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CUserMessageCloseCaptionPlaceholder* other);
  friend void swap(CUserMessageCloseCaptionPlaceholder& a, CUserMessageCloseCaptionPlaceholder& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageCloseCaptionPlaceholder* New() const final {
    return CreateMaybeMessage<CUserMessageCloseCaptionPlaceholder>(nullptr);
  }

  CUserMessageCloseCaptionPlaceholder* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageCloseCaptionPlaceholder>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageCloseCaptionPlaceholder& from);
  void MergeFrom(const CUserMessageCloseCaptionPlaceholder& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageCloseCaptionPlaceholder* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string string = 1;
  bool has_string() const;
  void clear_string();
  static const int kStringFieldNumber = 1;
  const ::std::string& string() const;
  void set_string(const ::std::string& value);
  #if LANG_CXX11
  void set_string(::std::string&& value);
  #endif
  void set_string(const char* value);
  void set_string(const char* value, size_t size);
  ::std::string* mutable_string();
  ::std::string* release_string();
  void set_allocated_string(::std::string* string);

  // optional float duration = 2;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  float duration() const;
  void set_duration(float value);

  // optional bool from_player = 3;
  bool has_from_player() const;
  void clear_from_player();
  static const int kFromPlayerFieldNumber = 3;
  bool from_player() const;
  void set_from_player(bool value);

  // optional int32 ent_index = 4;
  bool has_ent_index() const;
  void clear_ent_index();
  static const int kEntIndexFieldNumber = 4;
  ::google::protobuf::int32 ent_index() const;
  void set_ent_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUserMessageCloseCaptionPlaceholder)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr string_;
  float duration_;
  bool from_player_;
  ::google::protobuf::int32 ent_index_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageCurrentTimescale :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageCurrentTimescale) */ {
 public:
  CUserMessageCurrentTimescale();
  virtual ~CUserMessageCurrentTimescale();

  CUserMessageCurrentTimescale(const CUserMessageCurrentTimescale& from);

  inline CUserMessageCurrentTimescale& operator=(const CUserMessageCurrentTimescale& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageCurrentTimescale(CUserMessageCurrentTimescale&& from) noexcept
    : CUserMessageCurrentTimescale() {
    *this = ::std::move(from);
  }

  inline CUserMessageCurrentTimescale& operator=(CUserMessageCurrentTimescale&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageCurrentTimescale& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageCurrentTimescale* internal_default_instance() {
    return reinterpret_cast<const CUserMessageCurrentTimescale*>(
               &_CUserMessageCurrentTimescale_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(CUserMessageCurrentTimescale* other);
  friend void swap(CUserMessageCurrentTimescale& a, CUserMessageCurrentTimescale& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageCurrentTimescale* New() const final {
    return CreateMaybeMessage<CUserMessageCurrentTimescale>(nullptr);
  }

  CUserMessageCurrentTimescale* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageCurrentTimescale>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageCurrentTimescale& from);
  void MergeFrom(const CUserMessageCurrentTimescale& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageCurrentTimescale* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float current = 1;
  bool has_current() const;
  void clear_current();
  static const int kCurrentFieldNumber = 1;
  float current() const;
  void set_current(float value);

  // @@protoc_insertion_point(class_scope:CUserMessageCurrentTimescale)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float current_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageDesiredTimescale :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageDesiredTimescale) */ {
 public:
  CUserMessageDesiredTimescale();
  virtual ~CUserMessageDesiredTimescale();

  CUserMessageDesiredTimescale(const CUserMessageDesiredTimescale& from);

  inline CUserMessageDesiredTimescale& operator=(const CUserMessageDesiredTimescale& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageDesiredTimescale(CUserMessageDesiredTimescale&& from) noexcept
    : CUserMessageDesiredTimescale() {
    *this = ::std::move(from);
  }

  inline CUserMessageDesiredTimescale& operator=(CUserMessageDesiredTimescale&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageDesiredTimescale& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageDesiredTimescale* internal_default_instance() {
    return reinterpret_cast<const CUserMessageDesiredTimescale*>(
               &_CUserMessageDesiredTimescale_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(CUserMessageDesiredTimescale* other);
  friend void swap(CUserMessageDesiredTimescale& a, CUserMessageDesiredTimescale& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageDesiredTimescale* New() const final {
    return CreateMaybeMessage<CUserMessageDesiredTimescale>(nullptr);
  }

  CUserMessageDesiredTimescale* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageDesiredTimescale>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageDesiredTimescale& from);
  void MergeFrom(const CUserMessageDesiredTimescale& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageDesiredTimescale* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float desired = 1;
  bool has_desired() const;
  void clear_desired();
  static const int kDesiredFieldNumber = 1;
  float desired() const;
  void set_desired(float value);

  // optional float acceleration = 2;
  bool has_acceleration() const;
  void clear_acceleration();
  static const int kAccelerationFieldNumber = 2;
  float acceleration() const;
  void set_acceleration(float value);

  // optional float minblendrate = 3;
  bool has_minblendrate() const;
  void clear_minblendrate();
  static const int kMinblendrateFieldNumber = 3;
  float minblendrate() const;
  void set_minblendrate(float value);

  // optional float blenddeltamultiplier = 4;
  bool has_blenddeltamultiplier() const;
  void clear_blenddeltamultiplier();
  static const int kBlenddeltamultiplierFieldNumber = 4;
  float blenddeltamultiplier() const;
  void set_blenddeltamultiplier(float value);

  // @@protoc_insertion_point(class_scope:CUserMessageDesiredTimescale)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float desired_;
  float acceleration_;
  float minblendrate_;
  float blenddeltamultiplier_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageFade :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageFade) */ {
 public:
  CUserMessageFade();
  virtual ~CUserMessageFade();

  CUserMessageFade(const CUserMessageFade& from);

  inline CUserMessageFade& operator=(const CUserMessageFade& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageFade(CUserMessageFade&& from) noexcept
    : CUserMessageFade() {
    *this = ::std::move(from);
  }

  inline CUserMessageFade& operator=(CUserMessageFade&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageFade& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageFade* internal_default_instance() {
    return reinterpret_cast<const CUserMessageFade*>(
               &_CUserMessageFade_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(CUserMessageFade* other);
  friend void swap(CUserMessageFade& a, CUserMessageFade& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageFade* New() const final {
    return CreateMaybeMessage<CUserMessageFade>(nullptr);
  }

  CUserMessageFade* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageFade>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageFade& from);
  void MergeFrom(const CUserMessageFade& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageFade* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 duration = 1;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 1;
  ::google::protobuf::uint32 duration() const;
  void set_duration(::google::protobuf::uint32 value);

  // optional uint32 hold_time = 2;
  bool has_hold_time() const;
  void clear_hold_time();
  static const int kHoldTimeFieldNumber = 2;
  ::google::protobuf::uint32 hold_time() const;
  void set_hold_time(::google::protobuf::uint32 value);

  // optional uint32 flags = 3;
  bool has_flags() const;
  void clear_flags();
  static const int kFlagsFieldNumber = 3;
  ::google::protobuf::uint32 flags() const;
  void set_flags(::google::protobuf::uint32 value);

  // optional fixed32 color = 4;
  bool has_color() const;
  void clear_color();
  static const int kColorFieldNumber = 4;
  ::google::protobuf::uint32 color() const;
  void set_color(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CUserMessageFade)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 duration_;
  ::google::protobuf::uint32 hold_time_;
  ::google::protobuf::uint32 flags_;
  ::google::protobuf::uint32 color_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageShake :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageShake) */ {
 public:
  CUserMessageShake();
  virtual ~CUserMessageShake();

  CUserMessageShake(const CUserMessageShake& from);

  inline CUserMessageShake& operator=(const CUserMessageShake& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageShake(CUserMessageShake&& from) noexcept
    : CUserMessageShake() {
    *this = ::std::move(from);
  }

  inline CUserMessageShake& operator=(CUserMessageShake&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageShake& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageShake* internal_default_instance() {
    return reinterpret_cast<const CUserMessageShake*>(
               &_CUserMessageShake_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(CUserMessageShake* other);
  friend void swap(CUserMessageShake& a, CUserMessageShake& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageShake* New() const final {
    return CreateMaybeMessage<CUserMessageShake>(nullptr);
  }

  CUserMessageShake* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageShake>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageShake& from);
  void MergeFrom(const CUserMessageShake& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageShake* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 command = 1;
  bool has_command() const;
  void clear_command();
  static const int kCommandFieldNumber = 1;
  ::google::protobuf::uint32 command() const;
  void set_command(::google::protobuf::uint32 value);

  // optional float amplitude = 2;
  bool has_amplitude() const;
  void clear_amplitude();
  static const int kAmplitudeFieldNumber = 2;
  float amplitude() const;
  void set_amplitude(float value);

  // optional float frequency = 3;
  bool has_frequency() const;
  void clear_frequency();
  static const int kFrequencyFieldNumber = 3;
  float frequency() const;
  void set_frequency(float value);

  // optional float duration = 4;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 4;
  float duration() const;
  void set_duration(float value);

  // @@protoc_insertion_point(class_scope:CUserMessageShake)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 command_;
  float amplitude_;
  float frequency_;
  float duration_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageShakeDir :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageShakeDir) */ {
 public:
  CUserMessageShakeDir();
  virtual ~CUserMessageShakeDir();

  CUserMessageShakeDir(const CUserMessageShakeDir& from);

  inline CUserMessageShakeDir& operator=(const CUserMessageShakeDir& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageShakeDir(CUserMessageShakeDir&& from) noexcept
    : CUserMessageShakeDir() {
    *this = ::std::move(from);
  }

  inline CUserMessageShakeDir& operator=(CUserMessageShakeDir&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageShakeDir& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageShakeDir* internal_default_instance() {
    return reinterpret_cast<const CUserMessageShakeDir*>(
               &_CUserMessageShakeDir_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(CUserMessageShakeDir* other);
  friend void swap(CUserMessageShakeDir& a, CUserMessageShakeDir& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageShakeDir* New() const final {
    return CreateMaybeMessage<CUserMessageShakeDir>(nullptr);
  }

  CUserMessageShakeDir* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageShakeDir>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageShakeDir& from);
  void MergeFrom(const CUserMessageShakeDir& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageShakeDir* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CUserMessageShake shake = 1;
  bool has_shake() const;
  void clear_shake();
  static const int kShakeFieldNumber = 1;
  const ::CUserMessageShake& shake() const;
  ::CUserMessageShake* release_shake();
  ::CUserMessageShake* mutable_shake();
  void set_allocated_shake(::CUserMessageShake* shake);

  // optional .CMsgVector direction = 2;
  bool has_direction() const;
  void clear_direction();
  static const int kDirectionFieldNumber = 2;
  const ::CMsgVector& direction() const;
  ::CMsgVector* release_direction();
  ::CMsgVector* mutable_direction();
  void set_allocated_direction(::CMsgVector* direction);

  // @@protoc_insertion_point(class_scope:CUserMessageShakeDir)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CUserMessageShake* shake_;
  ::CMsgVector* direction_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageScreenTilt :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageScreenTilt) */ {
 public:
  CUserMessageScreenTilt();
  virtual ~CUserMessageScreenTilt();

  CUserMessageScreenTilt(const CUserMessageScreenTilt& from);

  inline CUserMessageScreenTilt& operator=(const CUserMessageScreenTilt& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageScreenTilt(CUserMessageScreenTilt&& from) noexcept
    : CUserMessageScreenTilt() {
    *this = ::std::move(from);
  }

  inline CUserMessageScreenTilt& operator=(CUserMessageScreenTilt&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageScreenTilt& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageScreenTilt* internal_default_instance() {
    return reinterpret_cast<const CUserMessageScreenTilt*>(
               &_CUserMessageScreenTilt_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(CUserMessageScreenTilt* other);
  friend void swap(CUserMessageScreenTilt& a, CUserMessageScreenTilt& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageScreenTilt* New() const final {
    return CreateMaybeMessage<CUserMessageScreenTilt>(nullptr);
  }

  CUserMessageScreenTilt* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageScreenTilt>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageScreenTilt& from);
  void MergeFrom(const CUserMessageScreenTilt& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageScreenTilt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgVector angle = 3;
  bool has_angle() const;
  void clear_angle();
  static const int kAngleFieldNumber = 3;
  const ::CMsgVector& angle() const;
  ::CMsgVector* release_angle();
  ::CMsgVector* mutable_angle();
  void set_allocated_angle(::CMsgVector* angle);

  // optional uint32 command = 1;
  bool has_command() const;
  void clear_command();
  static const int kCommandFieldNumber = 1;
  ::google::protobuf::uint32 command() const;
  void set_command(::google::protobuf::uint32 value);

  // optional bool ease_in_out = 2;
  bool has_ease_in_out() const;
  void clear_ease_in_out();
  static const int kEaseInOutFieldNumber = 2;
  bool ease_in_out() const;
  void set_ease_in_out(bool value);

  // optional float duration = 4;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 4;
  float duration() const;
  void set_duration(float value);

  // optional float time = 5;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 5;
  float time() const;
  void set_time(float value);

  // @@protoc_insertion_point(class_scope:CUserMessageScreenTilt)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CMsgVector* angle_;
  ::google::protobuf::uint32 command_;
  bool ease_in_out_;
  float duration_;
  float time_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageSayText :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageSayText) */ {
 public:
  CUserMessageSayText();
  virtual ~CUserMessageSayText();

  CUserMessageSayText(const CUserMessageSayText& from);

  inline CUserMessageSayText& operator=(const CUserMessageSayText& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageSayText(CUserMessageSayText&& from) noexcept
    : CUserMessageSayText() {
    *this = ::std::move(from);
  }

  inline CUserMessageSayText& operator=(CUserMessageSayText&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageSayText& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageSayText* internal_default_instance() {
    return reinterpret_cast<const CUserMessageSayText*>(
               &_CUserMessageSayText_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(CUserMessageSayText* other);
  friend void swap(CUserMessageSayText& a, CUserMessageSayText& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageSayText* New() const final {
    return CreateMaybeMessage<CUserMessageSayText>(nullptr);
  }

  CUserMessageSayText* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageSayText>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageSayText& from);
  void MergeFrom(const CUserMessageSayText& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageSayText* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string text = 2;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // optional uint32 playerindex = 1;
  bool has_playerindex() const;
  void clear_playerindex();
  static const int kPlayerindexFieldNumber = 1;
  ::google::protobuf::uint32 playerindex() const;
  void set_playerindex(::google::protobuf::uint32 value);

  // optional bool chat = 3;
  bool has_chat() const;
  void clear_chat();
  static const int kChatFieldNumber = 3;
  bool chat() const;
  void set_chat(bool value);

  // @@protoc_insertion_point(class_scope:CUserMessageSayText)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::uint32 playerindex_;
  bool chat_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageSayText2 :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageSayText2) */ {
 public:
  CUserMessageSayText2();
  virtual ~CUserMessageSayText2();

  CUserMessageSayText2(const CUserMessageSayText2& from);

  inline CUserMessageSayText2& operator=(const CUserMessageSayText2& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageSayText2(CUserMessageSayText2&& from) noexcept
    : CUserMessageSayText2() {
    *this = ::std::move(from);
  }

  inline CUserMessageSayText2& operator=(CUserMessageSayText2&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageSayText2& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageSayText2* internal_default_instance() {
    return reinterpret_cast<const CUserMessageSayText2*>(
               &_CUserMessageSayText2_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(CUserMessageSayText2* other);
  friend void swap(CUserMessageSayText2& a, CUserMessageSayText2& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageSayText2* New() const final {
    return CreateMaybeMessage<CUserMessageSayText2>(nullptr);
  }

  CUserMessageSayText2* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageSayText2>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageSayText2& from);
  void MergeFrom(const CUserMessageSayText2& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageSayText2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string messagename = 3;
  bool has_messagename() const;
  void clear_messagename();
  static const int kMessagenameFieldNumber = 3;
  const ::std::string& messagename() const;
  void set_messagename(const ::std::string& value);
  #if LANG_CXX11
  void set_messagename(::std::string&& value);
  #endif
  void set_messagename(const char* value);
  void set_messagename(const char* value, size_t size);
  ::std::string* mutable_messagename();
  ::std::string* release_messagename();
  void set_allocated_messagename(::std::string* messagename);

  // optional string param1 = 4;
  bool has_param1() const;
  void clear_param1();
  static const int kParam1FieldNumber = 4;
  const ::std::string& param1() const;
  void set_param1(const ::std::string& value);
  #if LANG_CXX11
  void set_param1(::std::string&& value);
  #endif
  void set_param1(const char* value);
  void set_param1(const char* value, size_t size);
  ::std::string* mutable_param1();
  ::std::string* release_param1();
  void set_allocated_param1(::std::string* param1);

  // optional string param2 = 5;
  bool has_param2() const;
  void clear_param2();
  static const int kParam2FieldNumber = 5;
  const ::std::string& param2() const;
  void set_param2(const ::std::string& value);
  #if LANG_CXX11
  void set_param2(::std::string&& value);
  #endif
  void set_param2(const char* value);
  void set_param2(const char* value, size_t size);
  ::std::string* mutable_param2();
  ::std::string* release_param2();
  void set_allocated_param2(::std::string* param2);

  // optional string param3 = 6;
  bool has_param3() const;
  void clear_param3();
  static const int kParam3FieldNumber = 6;
  const ::std::string& param3() const;
  void set_param3(const ::std::string& value);
  #if LANG_CXX11
  void set_param3(::std::string&& value);
  #endif
  void set_param3(const char* value);
  void set_param3(const char* value, size_t size);
  ::std::string* mutable_param3();
  ::std::string* release_param3();
  void set_allocated_param3(::std::string* param3);

  // optional string param4 = 7;
  bool has_param4() const;
  void clear_param4();
  static const int kParam4FieldNumber = 7;
  const ::std::string& param4() const;
  void set_param4(const ::std::string& value);
  #if LANG_CXX11
  void set_param4(::std::string&& value);
  #endif
  void set_param4(const char* value);
  void set_param4(const char* value, size_t size);
  ::std::string* mutable_param4();
  ::std::string* release_param4();
  void set_allocated_param4(::std::string* param4);

  // optional uint32 entityindex = 1;
  bool has_entityindex() const;
  void clear_entityindex();
  static const int kEntityindexFieldNumber = 1;
  ::google::protobuf::uint32 entityindex() const;
  void set_entityindex(::google::protobuf::uint32 value);

  // optional bool chat = 2;
  bool has_chat() const;
  void clear_chat();
  static const int kChatFieldNumber = 2;
  bool chat() const;
  void set_chat(bool value);

  // @@protoc_insertion_point(class_scope:CUserMessageSayText2)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr messagename_;
  ::google::protobuf::internal::ArenaStringPtr param1_;
  ::google::protobuf::internal::ArenaStringPtr param2_;
  ::google::protobuf::internal::ArenaStringPtr param3_;
  ::google::protobuf::internal::ArenaStringPtr param4_;
  ::google::protobuf::uint32 entityindex_;
  bool chat_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageHudMsg :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageHudMsg) */ {
 public:
  CUserMessageHudMsg();
  virtual ~CUserMessageHudMsg();

  CUserMessageHudMsg(const CUserMessageHudMsg& from);

  inline CUserMessageHudMsg& operator=(const CUserMessageHudMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageHudMsg(CUserMessageHudMsg&& from) noexcept
    : CUserMessageHudMsg() {
    *this = ::std::move(from);
  }

  inline CUserMessageHudMsg& operator=(CUserMessageHudMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageHudMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageHudMsg* internal_default_instance() {
    return reinterpret_cast<const CUserMessageHudMsg*>(
               &_CUserMessageHudMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(CUserMessageHudMsg* other);
  friend void swap(CUserMessageHudMsg& a, CUserMessageHudMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageHudMsg* New() const final {
    return CreateMaybeMessage<CUserMessageHudMsg>(nullptr);
  }

  CUserMessageHudMsg* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageHudMsg>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageHudMsg& from);
  void MergeFrom(const CUserMessageHudMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageHudMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 11;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 11;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional uint32 channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  ::google::protobuf::uint32 channel() const;
  void set_channel(::google::protobuf::uint32 value);

  // optional float x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  float x() const;
  void set_x(float value);

  // optional float y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  float y() const;
  void set_y(float value);

  // optional fixed32 color1 = 4;
  bool has_color1() const;
  void clear_color1();
  static const int kColor1FieldNumber = 4;
  ::google::protobuf::uint32 color1() const;
  void set_color1(::google::protobuf::uint32 value);

  // optional fixed32 color2 = 5;
  bool has_color2() const;
  void clear_color2();
  static const int kColor2FieldNumber = 5;
  ::google::protobuf::uint32 color2() const;
  void set_color2(::google::protobuf::uint32 value);

  // optional uint32 effect = 6;
  bool has_effect() const;
  void clear_effect();
  static const int kEffectFieldNumber = 6;
  ::google::protobuf::uint32 effect() const;
  void set_effect(::google::protobuf::uint32 value);

  // optional float fade_in_time = 7;
  bool has_fade_in_time() const;
  void clear_fade_in_time();
  static const int kFadeInTimeFieldNumber = 7;
  float fade_in_time() const;
  void set_fade_in_time(float value);

  // optional float fade_out_time = 8;
  bool has_fade_out_time() const;
  void clear_fade_out_time();
  static const int kFadeOutTimeFieldNumber = 8;
  float fade_out_time() const;
  void set_fade_out_time(float value);

  // optional float hold_time = 9;
  bool has_hold_time() const;
  void clear_hold_time();
  static const int kHoldTimeFieldNumber = 9;
  float hold_time() const;
  void set_hold_time(float value);

  // optional float fx_time = 10;
  bool has_fx_time() const;
  void clear_fx_time();
  static const int kFxTimeFieldNumber = 10;
  float fx_time() const;
  void set_fx_time(float value);

  // @@protoc_insertion_point(class_scope:CUserMessageHudMsg)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::uint32 channel_;
  float x_;
  float y_;
  ::google::protobuf::uint32 color1_;
  ::google::protobuf::uint32 color2_;
  ::google::protobuf::uint32 effect_;
  float fade_in_time_;
  float fade_out_time_;
  float hold_time_;
  float fx_time_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageHudText :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageHudText) */ {
 public:
  CUserMessageHudText();
  virtual ~CUserMessageHudText();

  CUserMessageHudText(const CUserMessageHudText& from);

  inline CUserMessageHudText& operator=(const CUserMessageHudText& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageHudText(CUserMessageHudText&& from) noexcept
    : CUserMessageHudText() {
    *this = ::std::move(from);
  }

  inline CUserMessageHudText& operator=(CUserMessageHudText&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageHudText& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageHudText* internal_default_instance() {
    return reinterpret_cast<const CUserMessageHudText*>(
               &_CUserMessageHudText_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(CUserMessageHudText* other);
  friend void swap(CUserMessageHudText& a, CUserMessageHudText& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageHudText* New() const final {
    return CreateMaybeMessage<CUserMessageHudText>(nullptr);
  }

  CUserMessageHudText* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageHudText>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageHudText& from);
  void MergeFrom(const CUserMessageHudText& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageHudText* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 1;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:CUserMessageHudText)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageTextMsg :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageTextMsg) */ {
 public:
  CUserMessageTextMsg();
  virtual ~CUserMessageTextMsg();

  CUserMessageTextMsg(const CUserMessageTextMsg& from);

  inline CUserMessageTextMsg& operator=(const CUserMessageTextMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageTextMsg(CUserMessageTextMsg&& from) noexcept
    : CUserMessageTextMsg() {
    *this = ::std::move(from);
  }

  inline CUserMessageTextMsg& operator=(CUserMessageTextMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageTextMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageTextMsg* internal_default_instance() {
    return reinterpret_cast<const CUserMessageTextMsg*>(
               &_CUserMessageTextMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(CUserMessageTextMsg* other);
  friend void swap(CUserMessageTextMsg& a, CUserMessageTextMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageTextMsg* New() const final {
    return CreateMaybeMessage<CUserMessageTextMsg>(nullptr);
  }

  CUserMessageTextMsg* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageTextMsg>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageTextMsg& from);
  void MergeFrom(const CUserMessageTextMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageTextMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string param = 2;
  int param_size() const;
  void clear_param();
  static const int kParamFieldNumber = 2;
  const ::std::string& param(int index) const;
  ::std::string* mutable_param(int index);
  void set_param(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_param(int index, ::std::string&& value);
  #endif
  void set_param(int index, const char* value);
  void set_param(int index, const char* value, size_t size);
  ::std::string* add_param();
  void add_param(const ::std::string& value);
  #if LANG_CXX11
  void add_param(::std::string&& value);
  #endif
  void add_param(const char* value);
  void add_param(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& param() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_param();

  // optional uint32 dest = 1;
  bool has_dest() const;
  void clear_dest();
  static const int kDestFieldNumber = 1;
  ::google::protobuf::uint32 dest() const;
  void set_dest(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CUserMessageTextMsg)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField<::std::string> param_;
  ::google::protobuf::uint32 dest_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageGameTitle :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageGameTitle) */ {
 public:
  CUserMessageGameTitle();
  virtual ~CUserMessageGameTitle();

  CUserMessageGameTitle(const CUserMessageGameTitle& from);

  inline CUserMessageGameTitle& operator=(const CUserMessageGameTitle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageGameTitle(CUserMessageGameTitle&& from) noexcept
    : CUserMessageGameTitle() {
    *this = ::std::move(from);
  }

  inline CUserMessageGameTitle& operator=(CUserMessageGameTitle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageGameTitle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageGameTitle* internal_default_instance() {
    return reinterpret_cast<const CUserMessageGameTitle*>(
               &_CUserMessageGameTitle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(CUserMessageGameTitle* other);
  friend void swap(CUserMessageGameTitle& a, CUserMessageGameTitle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageGameTitle* New() const final {
    return CreateMaybeMessage<CUserMessageGameTitle>(nullptr);
  }

  CUserMessageGameTitle* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageGameTitle>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageGameTitle& from);
  void MergeFrom(const CUserMessageGameTitle& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageGameTitle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CUserMessageGameTitle)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageResetHUD :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageResetHUD) */ {
 public:
  CUserMessageResetHUD();
  virtual ~CUserMessageResetHUD();

  CUserMessageResetHUD(const CUserMessageResetHUD& from);

  inline CUserMessageResetHUD& operator=(const CUserMessageResetHUD& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageResetHUD(CUserMessageResetHUD&& from) noexcept
    : CUserMessageResetHUD() {
    *this = ::std::move(from);
  }

  inline CUserMessageResetHUD& operator=(CUserMessageResetHUD&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageResetHUD& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageResetHUD* internal_default_instance() {
    return reinterpret_cast<const CUserMessageResetHUD*>(
               &_CUserMessageResetHUD_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(CUserMessageResetHUD* other);
  friend void swap(CUserMessageResetHUD& a, CUserMessageResetHUD& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageResetHUD* New() const final {
    return CreateMaybeMessage<CUserMessageResetHUD>(nullptr);
  }

  CUserMessageResetHUD* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageResetHUD>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageResetHUD& from);
  void MergeFrom(const CUserMessageResetHUD& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageResetHUD* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CUserMessageResetHUD)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageSendAudio :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageSendAudio) */ {
 public:
  CUserMessageSendAudio();
  virtual ~CUserMessageSendAudio();

  CUserMessageSendAudio(const CUserMessageSendAudio& from);

  inline CUserMessageSendAudio& operator=(const CUserMessageSendAudio& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageSendAudio(CUserMessageSendAudio&& from) noexcept
    : CUserMessageSendAudio() {
    *this = ::std::move(from);
  }

  inline CUserMessageSendAudio& operator=(CUserMessageSendAudio&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageSendAudio& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageSendAudio* internal_default_instance() {
    return reinterpret_cast<const CUserMessageSendAudio*>(
               &_CUserMessageSendAudio_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(CUserMessageSendAudio* other);
  friend void swap(CUserMessageSendAudio& a, CUserMessageSendAudio& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageSendAudio* New() const final {
    return CreateMaybeMessage<CUserMessageSendAudio>(nullptr);
  }

  CUserMessageSendAudio* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageSendAudio>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageSendAudio& from);
  void MergeFrom(const CUserMessageSendAudio& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageSendAudio* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string soundname = 1;
  bool has_soundname() const;
  void clear_soundname();
  static const int kSoundnameFieldNumber = 1;
  const ::std::string& soundname() const;
  void set_soundname(const ::std::string& value);
  #if LANG_CXX11
  void set_soundname(::std::string&& value);
  #endif
  void set_soundname(const char* value);
  void set_soundname(const char* value, size_t size);
  ::std::string* mutable_soundname();
  ::std::string* release_soundname();
  void set_allocated_soundname(::std::string* soundname);

  // optional bool stop = 2;
  bool has_stop() const;
  void clear_stop();
  static const int kStopFieldNumber = 2;
  bool stop() const;
  void set_stop(bool value);

  // @@protoc_insertion_point(class_scope:CUserMessageSendAudio)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr soundname_;
  bool stop_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageAudioParameter :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageAudioParameter) */ {
 public:
  CUserMessageAudioParameter();
  virtual ~CUserMessageAudioParameter();

  CUserMessageAudioParameter(const CUserMessageAudioParameter& from);

  inline CUserMessageAudioParameter& operator=(const CUserMessageAudioParameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageAudioParameter(CUserMessageAudioParameter&& from) noexcept
    : CUserMessageAudioParameter() {
    *this = ::std::move(from);
  }

  inline CUserMessageAudioParameter& operator=(CUserMessageAudioParameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageAudioParameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageAudioParameter* internal_default_instance() {
    return reinterpret_cast<const CUserMessageAudioParameter*>(
               &_CUserMessageAudioParameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(CUserMessageAudioParameter* other);
  friend void swap(CUserMessageAudioParameter& a, CUserMessageAudioParameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageAudioParameter* New() const final {
    return CreateMaybeMessage<CUserMessageAudioParameter>(nullptr);
  }

  CUserMessageAudioParameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageAudioParameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageAudioParameter& from);
  void MergeFrom(const CUserMessageAudioParameter& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageAudioParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 parameter_type = 1;
  bool has_parameter_type() const;
  void clear_parameter_type();
  static const int kParameterTypeFieldNumber = 1;
  ::google::protobuf::uint32 parameter_type() const;
  void set_parameter_type(::google::protobuf::uint32 value);

  // optional uint32 name_hash_code = 2;
  bool has_name_hash_code() const;
  void clear_name_hash_code();
  static const int kNameHashCodeFieldNumber = 2;
  ::google::protobuf::uint32 name_hash_code() const;
  void set_name_hash_code(::google::protobuf::uint32 value);

  // optional float value = 3;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  float value() const;
  void set_value(float value);

  // optional uint32 int_value = 4;
  bool has_int_value() const;
  void clear_int_value();
  static const int kIntValueFieldNumber = 4;
  ::google::protobuf::uint32 int_value() const;
  void set_int_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CUserMessageAudioParameter)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 parameter_type_;
  ::google::protobuf::uint32 name_hash_code_;
  float value_;
  ::google::protobuf::uint32 int_value_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageVoiceMask :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageVoiceMask) */ {
 public:
  CUserMessageVoiceMask();
  virtual ~CUserMessageVoiceMask();

  CUserMessageVoiceMask(const CUserMessageVoiceMask& from);

  inline CUserMessageVoiceMask& operator=(const CUserMessageVoiceMask& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageVoiceMask(CUserMessageVoiceMask&& from) noexcept
    : CUserMessageVoiceMask() {
    *this = ::std::move(from);
  }

  inline CUserMessageVoiceMask& operator=(CUserMessageVoiceMask&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageVoiceMask& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageVoiceMask* internal_default_instance() {
    return reinterpret_cast<const CUserMessageVoiceMask*>(
               &_CUserMessageVoiceMask_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(CUserMessageVoiceMask* other);
  friend void swap(CUserMessageVoiceMask& a, CUserMessageVoiceMask& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageVoiceMask* New() const final {
    return CreateMaybeMessage<CUserMessageVoiceMask>(nullptr);
  }

  CUserMessageVoiceMask* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageVoiceMask>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageVoiceMask& from);
  void MergeFrom(const CUserMessageVoiceMask& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageVoiceMask* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 gamerules_masks = 1;
  int gamerules_masks_size() const;
  void clear_gamerules_masks();
  static const int kGamerulesMasksFieldNumber = 1;
  ::google::protobuf::uint32 gamerules_masks(int index) const;
  void set_gamerules_masks(int index, ::google::protobuf::uint32 value);
  void add_gamerules_masks(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      gamerules_masks() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_gamerules_masks();

  // repeated uint32 ban_masks = 2;
  int ban_masks_size() const;
  void clear_ban_masks();
  static const int kBanMasksFieldNumber = 2;
  ::google::protobuf::uint32 ban_masks(int index) const;
  void set_ban_masks(int index, ::google::protobuf::uint32 value);
  void add_ban_masks(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ban_masks() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ban_masks();

  // optional bool mod_enable = 3;
  bool has_mod_enable() const;
  void clear_mod_enable();
  static const int kModEnableFieldNumber = 3;
  bool mod_enable() const;
  void set_mod_enable(bool value);

  // @@protoc_insertion_point(class_scope:CUserMessageVoiceMask)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > gamerules_masks_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ban_masks_;
  bool mod_enable_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageRequestState :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageRequestState) */ {
 public:
  CUserMessageRequestState();
  virtual ~CUserMessageRequestState();

  CUserMessageRequestState(const CUserMessageRequestState& from);

  inline CUserMessageRequestState& operator=(const CUserMessageRequestState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageRequestState(CUserMessageRequestState&& from) noexcept
    : CUserMessageRequestState() {
    *this = ::std::move(from);
  }

  inline CUserMessageRequestState& operator=(CUserMessageRequestState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageRequestState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageRequestState* internal_default_instance() {
    return reinterpret_cast<const CUserMessageRequestState*>(
               &_CUserMessageRequestState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(CUserMessageRequestState* other);
  friend void swap(CUserMessageRequestState& a, CUserMessageRequestState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageRequestState* New() const final {
    return CreateMaybeMessage<CUserMessageRequestState>(nullptr);
  }

  CUserMessageRequestState* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageRequestState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageRequestState& from);
  void MergeFrom(const CUserMessageRequestState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageRequestState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CUserMessageRequestState)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageHintText :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageHintText) */ {
 public:
  CUserMessageHintText();
  virtual ~CUserMessageHintText();

  CUserMessageHintText(const CUserMessageHintText& from);

  inline CUserMessageHintText& operator=(const CUserMessageHintText& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageHintText(CUserMessageHintText&& from) noexcept
    : CUserMessageHintText() {
    *this = ::std::move(from);
  }

  inline CUserMessageHintText& operator=(CUserMessageHintText&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageHintText& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageHintText* internal_default_instance() {
    return reinterpret_cast<const CUserMessageHintText*>(
               &_CUserMessageHintText_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(CUserMessageHintText* other);
  friend void swap(CUserMessageHintText& a, CUserMessageHintText& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageHintText* New() const final {
    return CreateMaybeMessage<CUserMessageHintText>(nullptr);
  }

  CUserMessageHintText* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageHintText>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageHintText& from);
  void MergeFrom(const CUserMessageHintText& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageHintText* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 1;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:CUserMessageHintText)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageKeyHintText :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageKeyHintText) */ {
 public:
  CUserMessageKeyHintText();
  virtual ~CUserMessageKeyHintText();

  CUserMessageKeyHintText(const CUserMessageKeyHintText& from);

  inline CUserMessageKeyHintText& operator=(const CUserMessageKeyHintText& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageKeyHintText(CUserMessageKeyHintText&& from) noexcept
    : CUserMessageKeyHintText() {
    *this = ::std::move(from);
  }

  inline CUserMessageKeyHintText& operator=(CUserMessageKeyHintText&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageKeyHintText& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageKeyHintText* internal_default_instance() {
    return reinterpret_cast<const CUserMessageKeyHintText*>(
               &_CUserMessageKeyHintText_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(CUserMessageKeyHintText* other);
  friend void swap(CUserMessageKeyHintText& a, CUserMessageKeyHintText& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageKeyHintText* New() const final {
    return CreateMaybeMessage<CUserMessageKeyHintText>(nullptr);
  }

  CUserMessageKeyHintText* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageKeyHintText>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageKeyHintText& from);
  void MergeFrom(const CUserMessageKeyHintText& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageKeyHintText* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string messages = 1;
  int messages_size() const;
  void clear_messages();
  static const int kMessagesFieldNumber = 1;
  const ::std::string& messages(int index) const;
  ::std::string* mutable_messages(int index);
  void set_messages(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_messages(int index, ::std::string&& value);
  #endif
  void set_messages(int index, const char* value);
  void set_messages(int index, const char* value, size_t size);
  ::std::string* add_messages();
  void add_messages(const ::std::string& value);
  #if LANG_CXX11
  void add_messages(::std::string&& value);
  #endif
  void add_messages(const char* value);
  void add_messages(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& messages() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_messages();

  // @@protoc_insertion_point(class_scope:CUserMessageKeyHintText)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField<::std::string> messages_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageVoiceSubtitle :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageVoiceSubtitle) */ {
 public:
  CUserMessageVoiceSubtitle();
  virtual ~CUserMessageVoiceSubtitle();

  CUserMessageVoiceSubtitle(const CUserMessageVoiceSubtitle& from);

  inline CUserMessageVoiceSubtitle& operator=(const CUserMessageVoiceSubtitle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageVoiceSubtitle(CUserMessageVoiceSubtitle&& from) noexcept
    : CUserMessageVoiceSubtitle() {
    *this = ::std::move(from);
  }

  inline CUserMessageVoiceSubtitle& operator=(CUserMessageVoiceSubtitle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageVoiceSubtitle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageVoiceSubtitle* internal_default_instance() {
    return reinterpret_cast<const CUserMessageVoiceSubtitle*>(
               &_CUserMessageVoiceSubtitle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(CUserMessageVoiceSubtitle* other);
  friend void swap(CUserMessageVoiceSubtitle& a, CUserMessageVoiceSubtitle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageVoiceSubtitle* New() const final {
    return CreateMaybeMessage<CUserMessageVoiceSubtitle>(nullptr);
  }

  CUserMessageVoiceSubtitle* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageVoiceSubtitle>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageVoiceSubtitle& from);
  void MergeFrom(const CUserMessageVoiceSubtitle& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageVoiceSubtitle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 player = 1;
  bool has_player() const;
  void clear_player();
  static const int kPlayerFieldNumber = 1;
  ::google::protobuf::int32 player() const;
  void set_player(::google::protobuf::int32 value);

  // optional int32 menu = 2;
  bool has_menu() const;
  void clear_menu();
  static const int kMenuFieldNumber = 2;
  ::google::protobuf::int32 menu() const;
  void set_menu(::google::protobuf::int32 value);

  // optional int32 item = 3;
  bool has_item() const;
  void clear_item();
  static const int kItemFieldNumber = 3;
  ::google::protobuf::int32 item() const;
  void set_item(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUserMessageVoiceSubtitle)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 player_;
  ::google::protobuf::int32 menu_;
  ::google::protobuf::int32 item_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageVGUIMenu_Keys :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageVGUIMenu.Keys) */ {
 public:
  CUserMessageVGUIMenu_Keys();
  virtual ~CUserMessageVGUIMenu_Keys();

  CUserMessageVGUIMenu_Keys(const CUserMessageVGUIMenu_Keys& from);

  inline CUserMessageVGUIMenu_Keys& operator=(const CUserMessageVGUIMenu_Keys& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageVGUIMenu_Keys(CUserMessageVGUIMenu_Keys&& from) noexcept
    : CUserMessageVGUIMenu_Keys() {
    *this = ::std::move(from);
  }

  inline CUserMessageVGUIMenu_Keys& operator=(CUserMessageVGUIMenu_Keys&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageVGUIMenu_Keys& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageVGUIMenu_Keys* internal_default_instance() {
    return reinterpret_cast<const CUserMessageVGUIMenu_Keys*>(
               &_CUserMessageVGUIMenu_Keys_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(CUserMessageVGUIMenu_Keys* other);
  friend void swap(CUserMessageVGUIMenu_Keys& a, CUserMessageVGUIMenu_Keys& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageVGUIMenu_Keys* New() const final {
    return CreateMaybeMessage<CUserMessageVGUIMenu_Keys>(nullptr);
  }

  CUserMessageVGUIMenu_Keys* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageVGUIMenu_Keys>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageVGUIMenu_Keys& from);
  void MergeFrom(const CUserMessageVGUIMenu_Keys& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageVGUIMenu_Keys* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:CUserMessageVGUIMenu.Keys)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageVGUIMenu :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageVGUIMenu) */ {
 public:
  CUserMessageVGUIMenu();
  virtual ~CUserMessageVGUIMenu();

  CUserMessageVGUIMenu(const CUserMessageVGUIMenu& from);

  inline CUserMessageVGUIMenu& operator=(const CUserMessageVGUIMenu& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageVGUIMenu(CUserMessageVGUIMenu&& from) noexcept
    : CUserMessageVGUIMenu() {
    *this = ::std::move(from);
  }

  inline CUserMessageVGUIMenu& operator=(CUserMessageVGUIMenu&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageVGUIMenu& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageVGUIMenu* internal_default_instance() {
    return reinterpret_cast<const CUserMessageVGUIMenu*>(
               &_CUserMessageVGUIMenu_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(CUserMessageVGUIMenu* other);
  friend void swap(CUserMessageVGUIMenu& a, CUserMessageVGUIMenu& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageVGUIMenu* New() const final {
    return CreateMaybeMessage<CUserMessageVGUIMenu>(nullptr);
  }

  CUserMessageVGUIMenu* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageVGUIMenu>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageVGUIMenu& from);
  void MergeFrom(const CUserMessageVGUIMenu& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageVGUIMenu* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CUserMessageVGUIMenu_Keys Keys;

  // accessors -------------------------------------------------------

  // repeated .CUserMessageVGUIMenu.Keys keys = 3;
  int keys_size() const;
  void clear_keys();
  static const int kKeysFieldNumber = 3;
  ::CUserMessageVGUIMenu_Keys* mutable_keys(int index);
  ::google::protobuf::RepeatedPtrField< ::CUserMessageVGUIMenu_Keys >*
      mutable_keys();
  const ::CUserMessageVGUIMenu_Keys& keys(int index) const;
  ::CUserMessageVGUIMenu_Keys* add_keys();
  const ::google::protobuf::RepeatedPtrField< ::CUserMessageVGUIMenu_Keys >&
      keys() const;

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional bool show = 2;
  bool has_show() const;
  void clear_show();
  static const int kShowFieldNumber = 2;
  bool show() const;
  void set_show(bool value);

  // @@protoc_insertion_point(class_scope:CUserMessageVGUIMenu)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CUserMessageVGUIMenu_Keys > keys_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  bool show_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageRumble :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageRumble) */ {
 public:
  CUserMessageRumble();
  virtual ~CUserMessageRumble();

  CUserMessageRumble(const CUserMessageRumble& from);

  inline CUserMessageRumble& operator=(const CUserMessageRumble& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageRumble(CUserMessageRumble&& from) noexcept
    : CUserMessageRumble() {
    *this = ::std::move(from);
  }

  inline CUserMessageRumble& operator=(CUserMessageRumble&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageRumble& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageRumble* internal_default_instance() {
    return reinterpret_cast<const CUserMessageRumble*>(
               &_CUserMessageRumble_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(CUserMessageRumble* other);
  friend void swap(CUserMessageRumble& a, CUserMessageRumble& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageRumble* New() const final {
    return CreateMaybeMessage<CUserMessageRumble>(nullptr);
  }

  CUserMessageRumble* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageRumble>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageRumble& from);
  void MergeFrom(const CUserMessageRumble& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageRumble* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 index = 1;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // optional int32 data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  ::google::protobuf::int32 data() const;
  void set_data(::google::protobuf::int32 value);

  // optional int32 flags = 3;
  bool has_flags() const;
  void clear_flags();
  static const int kFlagsFieldNumber = 3;
  ::google::protobuf::int32 flags() const;
  void set_flags(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUserMessageRumble)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 data_;
  ::google::protobuf::int32 flags_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageTrain :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageTrain) */ {
 public:
  CUserMessageTrain();
  virtual ~CUserMessageTrain();

  CUserMessageTrain(const CUserMessageTrain& from);

  inline CUserMessageTrain& operator=(const CUserMessageTrain& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageTrain(CUserMessageTrain&& from) noexcept
    : CUserMessageTrain() {
    *this = ::std::move(from);
  }

  inline CUserMessageTrain& operator=(CUserMessageTrain&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageTrain& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageTrain* internal_default_instance() {
    return reinterpret_cast<const CUserMessageTrain*>(
               &_CUserMessageTrain_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(CUserMessageTrain* other);
  friend void swap(CUserMessageTrain& a, CUserMessageTrain& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageTrain* New() const final {
    return CreateMaybeMessage<CUserMessageTrain>(nullptr);
  }

  CUserMessageTrain* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageTrain>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageTrain& from);
  void MergeFrom(const CUserMessageTrain& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageTrain* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 position = 1;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 1;
  ::google::protobuf::uint32 position() const;
  void set_position(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CUserMessageTrain)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 position_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageSayTextChannel :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageSayTextChannel) */ {
 public:
  CUserMessageSayTextChannel();
  virtual ~CUserMessageSayTextChannel();

  CUserMessageSayTextChannel(const CUserMessageSayTextChannel& from);

  inline CUserMessageSayTextChannel& operator=(const CUserMessageSayTextChannel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageSayTextChannel(CUserMessageSayTextChannel&& from) noexcept
    : CUserMessageSayTextChannel() {
    *this = ::std::move(from);
  }

  inline CUserMessageSayTextChannel& operator=(CUserMessageSayTextChannel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageSayTextChannel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageSayTextChannel* internal_default_instance() {
    return reinterpret_cast<const CUserMessageSayTextChannel*>(
               &_CUserMessageSayTextChannel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(CUserMessageSayTextChannel* other);
  friend void swap(CUserMessageSayTextChannel& a, CUserMessageSayTextChannel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageSayTextChannel* New() const final {
    return CreateMaybeMessage<CUserMessageSayTextChannel>(nullptr);
  }

  CUserMessageSayTextChannel* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageSayTextChannel>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageSayTextChannel& from);
  void MergeFrom(const CUserMessageSayTextChannel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageSayTextChannel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string text = 3;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 3;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // optional int32 player = 1;
  bool has_player() const;
  void clear_player();
  static const int kPlayerFieldNumber = 1;
  ::google::protobuf::int32 player() const;
  void set_player(::google::protobuf::int32 value);

  // optional int32 channel = 2;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 2;
  ::google::protobuf::int32 channel() const;
  void set_channel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUserMessageSayTextChannel)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::int32 player_;
  ::google::protobuf::int32 channel_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageColoredText :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageColoredText) */ {
 public:
  CUserMessageColoredText();
  virtual ~CUserMessageColoredText();

  CUserMessageColoredText(const CUserMessageColoredText& from);

  inline CUserMessageColoredText& operator=(const CUserMessageColoredText& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageColoredText(CUserMessageColoredText&& from) noexcept
    : CUserMessageColoredText() {
    *this = ::std::move(from);
  }

  inline CUserMessageColoredText& operator=(CUserMessageColoredText&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageColoredText& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageColoredText* internal_default_instance() {
    return reinterpret_cast<const CUserMessageColoredText*>(
               &_CUserMessageColoredText_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(CUserMessageColoredText* other);
  friend void swap(CUserMessageColoredText& a, CUserMessageColoredText& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageColoredText* New() const final {
    return CreateMaybeMessage<CUserMessageColoredText>(nullptr);
  }

  CUserMessageColoredText* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageColoredText>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageColoredText& from);
  void MergeFrom(const CUserMessageColoredText& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageColoredText* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string text = 2;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // optional uint32 color = 1;
  bool has_color() const;
  void clear_color();
  static const int kColorFieldNumber = 1;
  ::google::protobuf::uint32 color() const;
  void set_color(::google::protobuf::uint32 value);

  // optional bool reset = 3;
  bool has_reset() const;
  void clear_reset();
  static const int kResetFieldNumber = 3;
  bool reset() const;
  void set_reset(bool value);

  // optional int32 context_player_id = 4;
  bool has_context_player_id() const;
  void clear_context_player_id();
  static const int kContextPlayerIdFieldNumber = 4;
  ::google::protobuf::int32 context_player_id() const;
  void set_context_player_id(::google::protobuf::int32 value);

  // optional int32 context_value = 5;
  bool has_context_value() const;
  void clear_context_value();
  static const int kContextValueFieldNumber = 5;
  ::google::protobuf::int32 context_value() const;
  void set_context_value(::google::protobuf::int32 value);

  // optional int32 context_team_id = 6;
  bool has_context_team_id() const;
  void clear_context_team_id();
  static const int kContextTeamIdFieldNumber = 6;
  ::google::protobuf::int32 context_team_id() const;
  void set_context_team_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUserMessageColoredText)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::uint32 color_;
  bool reset_;
  ::google::protobuf::int32 context_player_id_;
  ::google::protobuf::int32 context_value_;
  ::google::protobuf::int32 context_team_id_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageItemPickup :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageItemPickup) */ {
 public:
  CUserMessageItemPickup();
  virtual ~CUserMessageItemPickup();

  CUserMessageItemPickup(const CUserMessageItemPickup& from);

  inline CUserMessageItemPickup& operator=(const CUserMessageItemPickup& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageItemPickup(CUserMessageItemPickup&& from) noexcept
    : CUserMessageItemPickup() {
    *this = ::std::move(from);
  }

  inline CUserMessageItemPickup& operator=(CUserMessageItemPickup&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageItemPickup& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageItemPickup* internal_default_instance() {
    return reinterpret_cast<const CUserMessageItemPickup*>(
               &_CUserMessageItemPickup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(CUserMessageItemPickup* other);
  friend void swap(CUserMessageItemPickup& a, CUserMessageItemPickup& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageItemPickup* New() const final {
    return CreateMaybeMessage<CUserMessageItemPickup>(nullptr);
  }

  CUserMessageItemPickup* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageItemPickup>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageItemPickup& from);
  void MergeFrom(const CUserMessageItemPickup& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageItemPickup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string itemname = 1;
  bool has_itemname() const;
  void clear_itemname();
  static const int kItemnameFieldNumber = 1;
  const ::std::string& itemname() const;
  void set_itemname(const ::std::string& value);
  #if LANG_CXX11
  void set_itemname(::std::string&& value);
  #endif
  void set_itemname(const char* value);
  void set_itemname(const char* value, size_t size);
  ::std::string* mutable_itemname();
  ::std::string* release_itemname();
  void set_allocated_itemname(::std::string* itemname);

  // @@protoc_insertion_point(class_scope:CUserMessageItemPickup)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr itemname_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageAmmoDenied :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageAmmoDenied) */ {
 public:
  CUserMessageAmmoDenied();
  virtual ~CUserMessageAmmoDenied();

  CUserMessageAmmoDenied(const CUserMessageAmmoDenied& from);

  inline CUserMessageAmmoDenied& operator=(const CUserMessageAmmoDenied& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageAmmoDenied(CUserMessageAmmoDenied&& from) noexcept
    : CUserMessageAmmoDenied() {
    *this = ::std::move(from);
  }

  inline CUserMessageAmmoDenied& operator=(CUserMessageAmmoDenied&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageAmmoDenied& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageAmmoDenied* internal_default_instance() {
    return reinterpret_cast<const CUserMessageAmmoDenied*>(
               &_CUserMessageAmmoDenied_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(CUserMessageAmmoDenied* other);
  friend void swap(CUserMessageAmmoDenied& a, CUserMessageAmmoDenied& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageAmmoDenied* New() const final {
    return CreateMaybeMessage<CUserMessageAmmoDenied>(nullptr);
  }

  CUserMessageAmmoDenied* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageAmmoDenied>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageAmmoDenied& from);
  void MergeFrom(const CUserMessageAmmoDenied& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageAmmoDenied* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ammo_id = 1;
  bool has_ammo_id() const;
  void clear_ammo_id();
  static const int kAmmoIdFieldNumber = 1;
  ::google::protobuf::uint32 ammo_id() const;
  void set_ammo_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CUserMessageAmmoDenied)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 ammo_id_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageCrosshairAngle :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageCrosshairAngle) */ {
 public:
  CUserMessageCrosshairAngle();
  virtual ~CUserMessageCrosshairAngle();

  CUserMessageCrosshairAngle(const CUserMessageCrosshairAngle& from);

  inline CUserMessageCrosshairAngle& operator=(const CUserMessageCrosshairAngle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageCrosshairAngle(CUserMessageCrosshairAngle&& from) noexcept
    : CUserMessageCrosshairAngle() {
    *this = ::std::move(from);
  }

  inline CUserMessageCrosshairAngle& operator=(CUserMessageCrosshairAngle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageCrosshairAngle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageCrosshairAngle* internal_default_instance() {
    return reinterpret_cast<const CUserMessageCrosshairAngle*>(
               &_CUserMessageCrosshairAngle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(CUserMessageCrosshairAngle* other);
  friend void swap(CUserMessageCrosshairAngle& a, CUserMessageCrosshairAngle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageCrosshairAngle* New() const final {
    return CreateMaybeMessage<CUserMessageCrosshairAngle>(nullptr);
  }

  CUserMessageCrosshairAngle* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageCrosshairAngle>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageCrosshairAngle& from);
  void MergeFrom(const CUserMessageCrosshairAngle& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageCrosshairAngle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgQAngle angcrosshair = 1;
  bool has_angcrosshair() const;
  void clear_angcrosshair();
  static const int kAngcrosshairFieldNumber = 1;
  const ::CMsgQAngle& angcrosshair() const;
  ::CMsgQAngle* release_angcrosshair();
  ::CMsgQAngle* mutable_angcrosshair();
  void set_allocated_angcrosshair(::CMsgQAngle* angcrosshair);

  // @@protoc_insertion_point(class_scope:CUserMessageCrosshairAngle)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CMsgQAngle* angcrosshair_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageShowMenu :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageShowMenu) */ {
 public:
  CUserMessageShowMenu();
  virtual ~CUserMessageShowMenu();

  CUserMessageShowMenu(const CUserMessageShowMenu& from);

  inline CUserMessageShowMenu& operator=(const CUserMessageShowMenu& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageShowMenu(CUserMessageShowMenu&& from) noexcept
    : CUserMessageShowMenu() {
    *this = ::std::move(from);
  }

  inline CUserMessageShowMenu& operator=(CUserMessageShowMenu&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageShowMenu& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageShowMenu* internal_default_instance() {
    return reinterpret_cast<const CUserMessageShowMenu*>(
               &_CUserMessageShowMenu_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  void Swap(CUserMessageShowMenu* other);
  friend void swap(CUserMessageShowMenu& a, CUserMessageShowMenu& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageShowMenu* New() const final {
    return CreateMaybeMessage<CUserMessageShowMenu>(nullptr);
  }

  CUserMessageShowMenu* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageShowMenu>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageShowMenu& from);
  void MergeFrom(const CUserMessageShowMenu& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageShowMenu* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string menustring = 4;
  bool has_menustring() const;
  void clear_menustring();
  static const int kMenustringFieldNumber = 4;
  const ::std::string& menustring() const;
  void set_menustring(const ::std::string& value);
  #if LANG_CXX11
  void set_menustring(::std::string&& value);
  #endif
  void set_menustring(const char* value);
  void set_menustring(const char* value, size_t size);
  ::std::string* mutable_menustring();
  ::std::string* release_menustring();
  void set_allocated_menustring(::std::string* menustring);

  // optional uint32 validslots = 1;
  bool has_validslots() const;
  void clear_validslots();
  static const int kValidslotsFieldNumber = 1;
  ::google::protobuf::uint32 validslots() const;
  void set_validslots(::google::protobuf::uint32 value);

  // optional uint32 displaytime = 2;
  bool has_displaytime() const;
  void clear_displaytime();
  static const int kDisplaytimeFieldNumber = 2;
  ::google::protobuf::uint32 displaytime() const;
  void set_displaytime(::google::protobuf::uint32 value);

  // optional bool needmore = 3;
  bool has_needmore() const;
  void clear_needmore();
  static const int kNeedmoreFieldNumber = 3;
  bool needmore() const;
  void set_needmore(bool value);

  // @@protoc_insertion_point(class_scope:CUserMessageShowMenu)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr menustring_;
  ::google::protobuf::uint32 validslots_;
  ::google::protobuf::uint32 displaytime_;
  bool needmore_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageCreditsMsg :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageCreditsMsg) */ {
 public:
  CUserMessageCreditsMsg();
  virtual ~CUserMessageCreditsMsg();

  CUserMessageCreditsMsg(const CUserMessageCreditsMsg& from);

  inline CUserMessageCreditsMsg& operator=(const CUserMessageCreditsMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageCreditsMsg(CUserMessageCreditsMsg&& from) noexcept
    : CUserMessageCreditsMsg() {
    *this = ::std::move(from);
  }

  inline CUserMessageCreditsMsg& operator=(CUserMessageCreditsMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageCreditsMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageCreditsMsg* internal_default_instance() {
    return reinterpret_cast<const CUserMessageCreditsMsg*>(
               &_CUserMessageCreditsMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  void Swap(CUserMessageCreditsMsg* other);
  friend void swap(CUserMessageCreditsMsg& a, CUserMessageCreditsMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageCreditsMsg* New() const final {
    return CreateMaybeMessage<CUserMessageCreditsMsg>(nullptr);
  }

  CUserMessageCreditsMsg* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageCreditsMsg>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageCreditsMsg& from);
  void MergeFrom(const CUserMessageCreditsMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageCreditsMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float logo_length = 2;
  bool has_logo_length() const;
  void clear_logo_length();
  static const int kLogoLengthFieldNumber = 2;
  float logo_length() const;
  void set_logo_length(float value);

  // optional .eRollType rolltype = 1 [default = ROLL_NONE];
  bool has_rolltype() const;
  void clear_rolltype();
  static const int kRolltypeFieldNumber = 1;
  ::eRollType rolltype() const;
  void set_rolltype(::eRollType value);

  // @@protoc_insertion_point(class_scope:CUserMessageCreditsMsg)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float logo_length_;
  int rolltype_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CEntityMessagePlayJingle :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CEntityMessagePlayJingle) */ {
 public:
  CEntityMessagePlayJingle();
  virtual ~CEntityMessagePlayJingle();

  CEntityMessagePlayJingle(const CEntityMessagePlayJingle& from);

  inline CEntityMessagePlayJingle& operator=(const CEntityMessagePlayJingle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CEntityMessagePlayJingle(CEntityMessagePlayJingle&& from) noexcept
    : CEntityMessagePlayJingle() {
    *this = ::std::move(from);
  }

  inline CEntityMessagePlayJingle& operator=(CEntityMessagePlayJingle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CEntityMessagePlayJingle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CEntityMessagePlayJingle* internal_default_instance() {
    return reinterpret_cast<const CEntityMessagePlayJingle*>(
               &_CEntityMessagePlayJingle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  void Swap(CEntityMessagePlayJingle* other);
  friend void swap(CEntityMessagePlayJingle& a, CEntityMessagePlayJingle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CEntityMessagePlayJingle* New() const final {
    return CreateMaybeMessage<CEntityMessagePlayJingle>(nullptr);
  }

  CEntityMessagePlayJingle* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CEntityMessagePlayJingle>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CEntityMessagePlayJingle& from);
  void MergeFrom(const CEntityMessagePlayJingle& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CEntityMessagePlayJingle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CEntityMessagePlayJingle)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CEntityMessageScreenOverlay :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CEntityMessageScreenOverlay) */ {
 public:
  CEntityMessageScreenOverlay();
  virtual ~CEntityMessageScreenOverlay();

  CEntityMessageScreenOverlay(const CEntityMessageScreenOverlay& from);

  inline CEntityMessageScreenOverlay& operator=(const CEntityMessageScreenOverlay& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CEntityMessageScreenOverlay(CEntityMessageScreenOverlay&& from) noexcept
    : CEntityMessageScreenOverlay() {
    *this = ::std::move(from);
  }

  inline CEntityMessageScreenOverlay& operator=(CEntityMessageScreenOverlay&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CEntityMessageScreenOverlay& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CEntityMessageScreenOverlay* internal_default_instance() {
    return reinterpret_cast<const CEntityMessageScreenOverlay*>(
               &_CEntityMessageScreenOverlay_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  void Swap(CEntityMessageScreenOverlay* other);
  friend void swap(CEntityMessageScreenOverlay& a, CEntityMessageScreenOverlay& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CEntityMessageScreenOverlay* New() const final {
    return CreateMaybeMessage<CEntityMessageScreenOverlay>(nullptr);
  }

  CEntityMessageScreenOverlay* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CEntityMessageScreenOverlay>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CEntityMessageScreenOverlay& from);
  void MergeFrom(const CEntityMessageScreenOverlay& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CEntityMessageScreenOverlay* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool start_effect = 1;
  bool has_start_effect() const;
  void clear_start_effect();
  static const int kStartEffectFieldNumber = 1;
  bool start_effect() const;
  void set_start_effect(bool value);

  // @@protoc_insertion_point(class_scope:CEntityMessageScreenOverlay)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool start_effect_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CEntityMessageRemoveAllDecals :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CEntityMessageRemoveAllDecals) */ {
 public:
  CEntityMessageRemoveAllDecals();
  virtual ~CEntityMessageRemoveAllDecals();

  CEntityMessageRemoveAllDecals(const CEntityMessageRemoveAllDecals& from);

  inline CEntityMessageRemoveAllDecals& operator=(const CEntityMessageRemoveAllDecals& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CEntityMessageRemoveAllDecals(CEntityMessageRemoveAllDecals&& from) noexcept
    : CEntityMessageRemoveAllDecals() {
    *this = ::std::move(from);
  }

  inline CEntityMessageRemoveAllDecals& operator=(CEntityMessageRemoveAllDecals&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CEntityMessageRemoveAllDecals& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CEntityMessageRemoveAllDecals* internal_default_instance() {
    return reinterpret_cast<const CEntityMessageRemoveAllDecals*>(
               &_CEntityMessageRemoveAllDecals_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  void Swap(CEntityMessageRemoveAllDecals* other);
  friend void swap(CEntityMessageRemoveAllDecals& a, CEntityMessageRemoveAllDecals& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CEntityMessageRemoveAllDecals* New() const final {
    return CreateMaybeMessage<CEntityMessageRemoveAllDecals>(nullptr);
  }

  CEntityMessageRemoveAllDecals* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CEntityMessageRemoveAllDecals>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CEntityMessageRemoveAllDecals& from);
  void MergeFrom(const CEntityMessageRemoveAllDecals& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CEntityMessageRemoveAllDecals* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool remove_decals = 1;
  bool has_remove_decals() const;
  void clear_remove_decals();
  static const int kRemoveDecalsFieldNumber = 1;
  bool remove_decals() const;
  void set_remove_decals(bool value);

  // @@protoc_insertion_point(class_scope:CEntityMessageRemoveAllDecals)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool remove_decals_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CEntityMessagePropagateForce :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CEntityMessagePropagateForce) */ {
 public:
  CEntityMessagePropagateForce();
  virtual ~CEntityMessagePropagateForce();

  CEntityMessagePropagateForce(const CEntityMessagePropagateForce& from);

  inline CEntityMessagePropagateForce& operator=(const CEntityMessagePropagateForce& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CEntityMessagePropagateForce(CEntityMessagePropagateForce&& from) noexcept
    : CEntityMessagePropagateForce() {
    *this = ::std::move(from);
  }

  inline CEntityMessagePropagateForce& operator=(CEntityMessagePropagateForce&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CEntityMessagePropagateForce& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CEntityMessagePropagateForce* internal_default_instance() {
    return reinterpret_cast<const CEntityMessagePropagateForce*>(
               &_CEntityMessagePropagateForce_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  void Swap(CEntityMessagePropagateForce* other);
  friend void swap(CEntityMessagePropagateForce& a, CEntityMessagePropagateForce& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CEntityMessagePropagateForce* New() const final {
    return CreateMaybeMessage<CEntityMessagePropagateForce>(nullptr);
  }

  CEntityMessagePropagateForce* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CEntityMessagePropagateForce>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CEntityMessagePropagateForce& from);
  void MergeFrom(const CEntityMessagePropagateForce& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CEntityMessagePropagateForce* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgVector impulse = 1;
  bool has_impulse() const;
  void clear_impulse();
  static const int kImpulseFieldNumber = 1;
  const ::CMsgVector& impulse() const;
  ::CMsgVector* release_impulse();
  ::CMsgVector* mutable_impulse();
  void set_allocated_impulse(::CMsgVector* impulse);

  // @@protoc_insertion_point(class_scope:CEntityMessagePropagateForce)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CMsgVector* impulse_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CEntityMessageDoSpark :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CEntityMessageDoSpark) */ {
 public:
  CEntityMessageDoSpark();
  virtual ~CEntityMessageDoSpark();

  CEntityMessageDoSpark(const CEntityMessageDoSpark& from);

  inline CEntityMessageDoSpark& operator=(const CEntityMessageDoSpark& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CEntityMessageDoSpark(CEntityMessageDoSpark&& from) noexcept
    : CEntityMessageDoSpark() {
    *this = ::std::move(from);
  }

  inline CEntityMessageDoSpark& operator=(CEntityMessageDoSpark&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CEntityMessageDoSpark& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CEntityMessageDoSpark* internal_default_instance() {
    return reinterpret_cast<const CEntityMessageDoSpark*>(
               &_CEntityMessageDoSpark_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  void Swap(CEntityMessageDoSpark* other);
  friend void swap(CEntityMessageDoSpark& a, CEntityMessageDoSpark& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CEntityMessageDoSpark* New() const final {
    return CreateMaybeMessage<CEntityMessageDoSpark>(nullptr);
  }

  CEntityMessageDoSpark* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CEntityMessageDoSpark>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CEntityMessageDoSpark& from);
  void MergeFrom(const CEntityMessageDoSpark& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CEntityMessageDoSpark* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgVector origin = 1;
  bool has_origin() const;
  void clear_origin();
  static const int kOriginFieldNumber = 1;
  const ::CMsgVector& origin() const;
  ::CMsgVector* release_origin();
  ::CMsgVector* mutable_origin();
  void set_allocated_origin(::CMsgVector* origin);

  // optional uint32 entityindex = 2;
  bool has_entityindex() const;
  void clear_entityindex();
  static const int kEntityindexFieldNumber = 2;
  ::google::protobuf::uint32 entityindex() const;
  void set_entityindex(::google::protobuf::uint32 value);

  // optional float radius = 3;
  bool has_radius() const;
  void clear_radius();
  static const int kRadiusFieldNumber = 3;
  float radius() const;
  void set_radius(float value);

  // optional fixed32 color = 4;
  bool has_color() const;
  void clear_color();
  static const int kColorFieldNumber = 4;
  ::google::protobuf::uint32 color() const;
  void set_color(::google::protobuf::uint32 value);

  // optional uint32 beams = 5;
  bool has_beams() const;
  void clear_beams();
  static const int kBeamsFieldNumber = 5;
  ::google::protobuf::uint32 beams() const;
  void set_beams(::google::protobuf::uint32 value);

  // optional float thick = 6;
  bool has_thick() const;
  void clear_thick();
  static const int kThickFieldNumber = 6;
  float thick() const;
  void set_thick(float value);

  // optional float duration = 7;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 7;
  float duration() const;
  void set_duration(float value);

  // @@protoc_insertion_point(class_scope:CEntityMessageDoSpark)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CMsgVector* origin_;
  ::google::protobuf::uint32 entityindex_;
  float radius_;
  ::google::protobuf::uint32 color_;
  ::google::protobuf::uint32 beams_;
  float thick_;
  float duration_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CEntityMessageFixAngle :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CEntityMessageFixAngle) */ {
 public:
  CEntityMessageFixAngle();
  virtual ~CEntityMessageFixAngle();

  CEntityMessageFixAngle(const CEntityMessageFixAngle& from);

  inline CEntityMessageFixAngle& operator=(const CEntityMessageFixAngle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CEntityMessageFixAngle(CEntityMessageFixAngle&& from) noexcept
    : CEntityMessageFixAngle() {
    *this = ::std::move(from);
  }

  inline CEntityMessageFixAngle& operator=(CEntityMessageFixAngle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CEntityMessageFixAngle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CEntityMessageFixAngle* internal_default_instance() {
    return reinterpret_cast<const CEntityMessageFixAngle*>(
               &_CEntityMessageFixAngle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  void Swap(CEntityMessageFixAngle* other);
  friend void swap(CEntityMessageFixAngle& a, CEntityMessageFixAngle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CEntityMessageFixAngle* New() const final {
    return CreateMaybeMessage<CEntityMessageFixAngle>(nullptr);
  }

  CEntityMessageFixAngle* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CEntityMessageFixAngle>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CEntityMessageFixAngle& from);
  void MergeFrom(const CEntityMessageFixAngle& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CEntityMessageFixAngle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgQAngle angle = 2;
  bool has_angle() const;
  void clear_angle();
  static const int kAngleFieldNumber = 2;
  const ::CMsgQAngle& angle() const;
  ::CMsgQAngle* release_angle();
  ::CMsgQAngle* mutable_angle();
  void set_allocated_angle(::CMsgQAngle* angle);

  // optional bool relative = 1;
  bool has_relative() const;
  void clear_relative();
  static const int kRelativeFieldNumber = 1;
  bool relative() const;
  void set_relative(bool value);

  // @@protoc_insertion_point(class_scope:CEntityMessageFixAngle)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CMsgQAngle* angle_;
  bool relative_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageCameraTransition_Transition_DataDriven :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageCameraTransition.Transition_DataDriven) */ {
 public:
  CUserMessageCameraTransition_Transition_DataDriven();
  virtual ~CUserMessageCameraTransition_Transition_DataDriven();

  CUserMessageCameraTransition_Transition_DataDriven(const CUserMessageCameraTransition_Transition_DataDriven& from);

  inline CUserMessageCameraTransition_Transition_DataDriven& operator=(const CUserMessageCameraTransition_Transition_DataDriven& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageCameraTransition_Transition_DataDriven(CUserMessageCameraTransition_Transition_DataDriven&& from) noexcept
    : CUserMessageCameraTransition_Transition_DataDriven() {
    *this = ::std::move(from);
  }

  inline CUserMessageCameraTransition_Transition_DataDriven& operator=(CUserMessageCameraTransition_Transition_DataDriven&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageCameraTransition_Transition_DataDriven& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageCameraTransition_Transition_DataDriven* internal_default_instance() {
    return reinterpret_cast<const CUserMessageCameraTransition_Transition_DataDriven*>(
               &_CUserMessageCameraTransition_Transition_DataDriven_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  void Swap(CUserMessageCameraTransition_Transition_DataDriven* other);
  friend void swap(CUserMessageCameraTransition_Transition_DataDriven& a, CUserMessageCameraTransition_Transition_DataDriven& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageCameraTransition_Transition_DataDriven* New() const final {
    return CreateMaybeMessage<CUserMessageCameraTransition_Transition_DataDriven>(nullptr);
  }

  CUserMessageCameraTransition_Transition_DataDriven* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageCameraTransition_Transition_DataDriven>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageCameraTransition_Transition_DataDriven& from);
  void MergeFrom(const CUserMessageCameraTransition_Transition_DataDriven& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageCameraTransition_Transition_DataDriven* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string filename = 1;
  bool has_filename() const;
  void clear_filename();
  static const int kFilenameFieldNumber = 1;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // optional int32 attach_ent_index = 2;
  bool has_attach_ent_index() const;
  void clear_attach_ent_index();
  static const int kAttachEntIndexFieldNumber = 2;
  ::google::protobuf::int32 attach_ent_index() const;
  void set_attach_ent_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUserMessageCameraTransition.Transition_DataDriven)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::int32 attach_ent_index_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageCameraTransition :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageCameraTransition) */ {
 public:
  CUserMessageCameraTransition();
  virtual ~CUserMessageCameraTransition();

  CUserMessageCameraTransition(const CUserMessageCameraTransition& from);

  inline CUserMessageCameraTransition& operator=(const CUserMessageCameraTransition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageCameraTransition(CUserMessageCameraTransition&& from) noexcept
    : CUserMessageCameraTransition() {
    *this = ::std::move(from);
  }

  inline CUserMessageCameraTransition& operator=(CUserMessageCameraTransition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageCameraTransition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageCameraTransition* internal_default_instance() {
    return reinterpret_cast<const CUserMessageCameraTransition*>(
               &_CUserMessageCameraTransition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  void Swap(CUserMessageCameraTransition* other);
  friend void swap(CUserMessageCameraTransition& a, CUserMessageCameraTransition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageCameraTransition* New() const final {
    return CreateMaybeMessage<CUserMessageCameraTransition>(nullptr);
  }

  CUserMessageCameraTransition* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageCameraTransition>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageCameraTransition& from);
  void MergeFrom(const CUserMessageCameraTransition& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageCameraTransition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CUserMessageCameraTransition_Transition_DataDriven Transition_DataDriven;

  // accessors -------------------------------------------------------

  // optional .CUserMessageCameraTransition.Transition_DataDriven params_data_driven = 3;
  bool has_params_data_driven() const;
  void clear_params_data_driven();
  static const int kParamsDataDrivenFieldNumber = 3;
  const ::CUserMessageCameraTransition_Transition_DataDriven& params_data_driven() const;
  ::CUserMessageCameraTransition_Transition_DataDriven* release_params_data_driven();
  ::CUserMessageCameraTransition_Transition_DataDriven* mutable_params_data_driven();
  void set_allocated_params_data_driven(::CUserMessageCameraTransition_Transition_DataDriven* params_data_driven);

  // optional uint32 camera_type = 1;
  bool has_camera_type() const;
  void clear_camera_type();
  static const int kCameraTypeFieldNumber = 1;
  ::google::protobuf::uint32 camera_type() const;
  void set_camera_type(::google::protobuf::uint32 value);

  // optional float duration = 2;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  float duration() const;
  void set_duration(float value);

  // @@protoc_insertion_point(class_scope:CUserMessageCameraTransition)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CUserMessageCameraTransition_Transition_DataDriven* params_data_driven_;
  ::google::protobuf::uint32 camera_type_;
  float duration_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMsg_ParticleManager_ReleaseParticleIndex :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMsg_ParticleManager.ReleaseParticleIndex) */ {
 public:
  CUserMsg_ParticleManager_ReleaseParticleIndex();
  virtual ~CUserMsg_ParticleManager_ReleaseParticleIndex();

  CUserMsg_ParticleManager_ReleaseParticleIndex(const CUserMsg_ParticleManager_ReleaseParticleIndex& from);

  inline CUserMsg_ParticleManager_ReleaseParticleIndex& operator=(const CUserMsg_ParticleManager_ReleaseParticleIndex& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMsg_ParticleManager_ReleaseParticleIndex(CUserMsg_ParticleManager_ReleaseParticleIndex&& from) noexcept
    : CUserMsg_ParticleManager_ReleaseParticleIndex() {
    *this = ::std::move(from);
  }

  inline CUserMsg_ParticleManager_ReleaseParticleIndex& operator=(CUserMsg_ParticleManager_ReleaseParticleIndex&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMsg_ParticleManager_ReleaseParticleIndex& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMsg_ParticleManager_ReleaseParticleIndex* internal_default_instance() {
    return reinterpret_cast<const CUserMsg_ParticleManager_ReleaseParticleIndex*>(
               &_CUserMsg_ParticleManager_ReleaseParticleIndex_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  void Swap(CUserMsg_ParticleManager_ReleaseParticleIndex* other);
  friend void swap(CUserMsg_ParticleManager_ReleaseParticleIndex& a, CUserMsg_ParticleManager_ReleaseParticleIndex& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMsg_ParticleManager_ReleaseParticleIndex* New() const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_ReleaseParticleIndex>(nullptr);
  }

  CUserMsg_ParticleManager_ReleaseParticleIndex* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_ReleaseParticleIndex>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMsg_ParticleManager_ReleaseParticleIndex& from);
  void MergeFrom(const CUserMsg_ParticleManager_ReleaseParticleIndex& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMsg_ParticleManager_ReleaseParticleIndex* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CUserMsg_ParticleManager.ReleaseParticleIndex)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMsg_ParticleManager_CreateParticle :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMsg_ParticleManager.CreateParticle) */ {
 public:
  CUserMsg_ParticleManager_CreateParticle();
  virtual ~CUserMsg_ParticleManager_CreateParticle();

  CUserMsg_ParticleManager_CreateParticle(const CUserMsg_ParticleManager_CreateParticle& from);

  inline CUserMsg_ParticleManager_CreateParticle& operator=(const CUserMsg_ParticleManager_CreateParticle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMsg_ParticleManager_CreateParticle(CUserMsg_ParticleManager_CreateParticle&& from) noexcept
    : CUserMsg_ParticleManager_CreateParticle() {
    *this = ::std::move(from);
  }

  inline CUserMsg_ParticleManager_CreateParticle& operator=(CUserMsg_ParticleManager_CreateParticle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMsg_ParticleManager_CreateParticle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMsg_ParticleManager_CreateParticle* internal_default_instance() {
    return reinterpret_cast<const CUserMsg_ParticleManager_CreateParticle*>(
               &_CUserMsg_ParticleManager_CreateParticle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  void Swap(CUserMsg_ParticleManager_CreateParticle* other);
  friend void swap(CUserMsg_ParticleManager_CreateParticle& a, CUserMsg_ParticleManager_CreateParticle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMsg_ParticleManager_CreateParticle* New() const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_CreateParticle>(nullptr);
  }

  CUserMsg_ParticleManager_CreateParticle* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_CreateParticle>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMsg_ParticleManager_CreateParticle& from);
  void MergeFrom(const CUserMsg_ParticleManager_CreateParticle& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMsg_ParticleManager_CreateParticle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 particle_name_index = 1;
  bool has_particle_name_index() const;
  void clear_particle_name_index();
  static const int kParticleNameIndexFieldNumber = 1;
  ::google::protobuf::uint64 particle_name_index() const;
  void set_particle_name_index(::google::protobuf::uint64 value);

  // optional int32 attach_type = 2;
  bool has_attach_type() const;
  void clear_attach_type();
  static const int kAttachTypeFieldNumber = 2;
  ::google::protobuf::int32 attach_type() const;
  void set_attach_type(::google::protobuf::int32 value);

  // optional int32 entity_handle = 3;
  bool has_entity_handle() const;
  void clear_entity_handle();
  static const int kEntityHandleFieldNumber = 3;
  ::google::protobuf::int32 entity_handle() const;
  void set_entity_handle(::google::protobuf::int32 value);

  // optional int32 entity_handle_for_modifiers = 4;
  bool has_entity_handle_for_modifiers() const;
  void clear_entity_handle_for_modifiers();
  static const int kEntityHandleForModifiersFieldNumber = 4;
  ::google::protobuf::int32 entity_handle_for_modifiers() const;
  void set_entity_handle_for_modifiers(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUserMsg_ParticleManager.CreateParticle)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 particle_name_index_;
  ::google::protobuf::int32 attach_type_;
  ::google::protobuf::int32 entity_handle_;
  ::google::protobuf::int32 entity_handle_for_modifiers_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMsg_ParticleManager_DestroyParticle :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMsg_ParticleManager.DestroyParticle) */ {
 public:
  CUserMsg_ParticleManager_DestroyParticle();
  virtual ~CUserMsg_ParticleManager_DestroyParticle();

  CUserMsg_ParticleManager_DestroyParticle(const CUserMsg_ParticleManager_DestroyParticle& from);

  inline CUserMsg_ParticleManager_DestroyParticle& operator=(const CUserMsg_ParticleManager_DestroyParticle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMsg_ParticleManager_DestroyParticle(CUserMsg_ParticleManager_DestroyParticle&& from) noexcept
    : CUserMsg_ParticleManager_DestroyParticle() {
    *this = ::std::move(from);
  }

  inline CUserMsg_ParticleManager_DestroyParticle& operator=(CUserMsg_ParticleManager_DestroyParticle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMsg_ParticleManager_DestroyParticle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMsg_ParticleManager_DestroyParticle* internal_default_instance() {
    return reinterpret_cast<const CUserMsg_ParticleManager_DestroyParticle*>(
               &_CUserMsg_ParticleManager_DestroyParticle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  void Swap(CUserMsg_ParticleManager_DestroyParticle* other);
  friend void swap(CUserMsg_ParticleManager_DestroyParticle& a, CUserMsg_ParticleManager_DestroyParticle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMsg_ParticleManager_DestroyParticle* New() const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_DestroyParticle>(nullptr);
  }

  CUserMsg_ParticleManager_DestroyParticle* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_DestroyParticle>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMsg_ParticleManager_DestroyParticle& from);
  void MergeFrom(const CUserMsg_ParticleManager_DestroyParticle& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMsg_ParticleManager_DestroyParticle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool destroy_immediately = 1;
  bool has_destroy_immediately() const;
  void clear_destroy_immediately();
  static const int kDestroyImmediatelyFieldNumber = 1;
  bool destroy_immediately() const;
  void set_destroy_immediately(bool value);

  // @@protoc_insertion_point(class_scope:CUserMsg_ParticleManager.DestroyParticle)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool destroy_immediately_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMsg_ParticleManager_DestroyParticleInvolving :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMsg_ParticleManager.DestroyParticleInvolving) */ {
 public:
  CUserMsg_ParticleManager_DestroyParticleInvolving();
  virtual ~CUserMsg_ParticleManager_DestroyParticleInvolving();

  CUserMsg_ParticleManager_DestroyParticleInvolving(const CUserMsg_ParticleManager_DestroyParticleInvolving& from);

  inline CUserMsg_ParticleManager_DestroyParticleInvolving& operator=(const CUserMsg_ParticleManager_DestroyParticleInvolving& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMsg_ParticleManager_DestroyParticleInvolving(CUserMsg_ParticleManager_DestroyParticleInvolving&& from) noexcept
    : CUserMsg_ParticleManager_DestroyParticleInvolving() {
    *this = ::std::move(from);
  }

  inline CUserMsg_ParticleManager_DestroyParticleInvolving& operator=(CUserMsg_ParticleManager_DestroyParticleInvolving&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMsg_ParticleManager_DestroyParticleInvolving& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMsg_ParticleManager_DestroyParticleInvolving* internal_default_instance() {
    return reinterpret_cast<const CUserMsg_ParticleManager_DestroyParticleInvolving*>(
               &_CUserMsg_ParticleManager_DestroyParticleInvolving_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  void Swap(CUserMsg_ParticleManager_DestroyParticleInvolving* other);
  friend void swap(CUserMsg_ParticleManager_DestroyParticleInvolving& a, CUserMsg_ParticleManager_DestroyParticleInvolving& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMsg_ParticleManager_DestroyParticleInvolving* New() const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_DestroyParticleInvolving>(nullptr);
  }

  CUserMsg_ParticleManager_DestroyParticleInvolving* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_DestroyParticleInvolving>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMsg_ParticleManager_DestroyParticleInvolving& from);
  void MergeFrom(const CUserMsg_ParticleManager_DestroyParticleInvolving& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMsg_ParticleManager_DestroyParticleInvolving* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool destroy_immediately = 1;
  bool has_destroy_immediately() const;
  void clear_destroy_immediately();
  static const int kDestroyImmediatelyFieldNumber = 1;
  bool destroy_immediately() const;
  void set_destroy_immediately(bool value);

  // optional int32 entity_handle = 3;
  bool has_entity_handle() const;
  void clear_entity_handle();
  static const int kEntityHandleFieldNumber = 3;
  ::google::protobuf::int32 entity_handle() const;
  void set_entity_handle(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUserMsg_ParticleManager.DestroyParticleInvolving)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool destroy_immediately_;
  ::google::protobuf::int32 entity_handle_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMsg_ParticleManager_UpdateParticle :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMsg_ParticleManager.UpdateParticle) */ {
 public:
  CUserMsg_ParticleManager_UpdateParticle();
  virtual ~CUserMsg_ParticleManager_UpdateParticle();

  CUserMsg_ParticleManager_UpdateParticle(const CUserMsg_ParticleManager_UpdateParticle& from);

  inline CUserMsg_ParticleManager_UpdateParticle& operator=(const CUserMsg_ParticleManager_UpdateParticle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMsg_ParticleManager_UpdateParticle(CUserMsg_ParticleManager_UpdateParticle&& from) noexcept
    : CUserMsg_ParticleManager_UpdateParticle() {
    *this = ::std::move(from);
  }

  inline CUserMsg_ParticleManager_UpdateParticle& operator=(CUserMsg_ParticleManager_UpdateParticle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMsg_ParticleManager_UpdateParticle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMsg_ParticleManager_UpdateParticle* internal_default_instance() {
    return reinterpret_cast<const CUserMsg_ParticleManager_UpdateParticle*>(
               &_CUserMsg_ParticleManager_UpdateParticle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  void Swap(CUserMsg_ParticleManager_UpdateParticle* other);
  friend void swap(CUserMsg_ParticleManager_UpdateParticle& a, CUserMsg_ParticleManager_UpdateParticle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMsg_ParticleManager_UpdateParticle* New() const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_UpdateParticle>(nullptr);
  }

  CUserMsg_ParticleManager_UpdateParticle* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_UpdateParticle>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMsg_ParticleManager_UpdateParticle& from);
  void MergeFrom(const CUserMsg_ParticleManager_UpdateParticle& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMsg_ParticleManager_UpdateParticle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgVector position = 2;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  const ::CMsgVector& position() const;
  ::CMsgVector* release_position();
  ::CMsgVector* mutable_position();
  void set_allocated_position(::CMsgVector* position);

  // optional int32 control_point = 1;
  bool has_control_point() const;
  void clear_control_point();
  static const int kControlPointFieldNumber = 1;
  ::google::protobuf::int32 control_point() const;
  void set_control_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUserMsg_ParticleManager.UpdateParticle)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CMsgVector* position_;
  ::google::protobuf::int32 control_point_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMsg_ParticleManager_UpdateParticleFwd :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMsg_ParticleManager.UpdateParticleFwd) */ {
 public:
  CUserMsg_ParticleManager_UpdateParticleFwd();
  virtual ~CUserMsg_ParticleManager_UpdateParticleFwd();

  CUserMsg_ParticleManager_UpdateParticleFwd(const CUserMsg_ParticleManager_UpdateParticleFwd& from);

  inline CUserMsg_ParticleManager_UpdateParticleFwd& operator=(const CUserMsg_ParticleManager_UpdateParticleFwd& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMsg_ParticleManager_UpdateParticleFwd(CUserMsg_ParticleManager_UpdateParticleFwd&& from) noexcept
    : CUserMsg_ParticleManager_UpdateParticleFwd() {
    *this = ::std::move(from);
  }

  inline CUserMsg_ParticleManager_UpdateParticleFwd& operator=(CUserMsg_ParticleManager_UpdateParticleFwd&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMsg_ParticleManager_UpdateParticleFwd& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMsg_ParticleManager_UpdateParticleFwd* internal_default_instance() {
    return reinterpret_cast<const CUserMsg_ParticleManager_UpdateParticleFwd*>(
               &_CUserMsg_ParticleManager_UpdateParticleFwd_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  void Swap(CUserMsg_ParticleManager_UpdateParticleFwd* other);
  friend void swap(CUserMsg_ParticleManager_UpdateParticleFwd& a, CUserMsg_ParticleManager_UpdateParticleFwd& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMsg_ParticleManager_UpdateParticleFwd* New() const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_UpdateParticleFwd>(nullptr);
  }

  CUserMsg_ParticleManager_UpdateParticleFwd* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_UpdateParticleFwd>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMsg_ParticleManager_UpdateParticleFwd& from);
  void MergeFrom(const CUserMsg_ParticleManager_UpdateParticleFwd& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMsg_ParticleManager_UpdateParticleFwd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgVector forward = 2;
  bool has_forward() const;
  void clear_forward();
  static const int kForwardFieldNumber = 2;
  const ::CMsgVector& forward() const;
  ::CMsgVector* release_forward();
  ::CMsgVector* mutable_forward();
  void set_allocated_forward(::CMsgVector* forward);

  // optional int32 control_point = 1;
  bool has_control_point() const;
  void clear_control_point();
  static const int kControlPointFieldNumber = 1;
  ::google::protobuf::int32 control_point() const;
  void set_control_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUserMsg_ParticleManager.UpdateParticleFwd)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CMsgVector* forward_;
  ::google::protobuf::int32 control_point_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMsg_ParticleManager_UpdateParticleOrient :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMsg_ParticleManager.UpdateParticleOrient) */ {
 public:
  CUserMsg_ParticleManager_UpdateParticleOrient();
  virtual ~CUserMsg_ParticleManager_UpdateParticleOrient();

  CUserMsg_ParticleManager_UpdateParticleOrient(const CUserMsg_ParticleManager_UpdateParticleOrient& from);

  inline CUserMsg_ParticleManager_UpdateParticleOrient& operator=(const CUserMsg_ParticleManager_UpdateParticleOrient& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMsg_ParticleManager_UpdateParticleOrient(CUserMsg_ParticleManager_UpdateParticleOrient&& from) noexcept
    : CUserMsg_ParticleManager_UpdateParticleOrient() {
    *this = ::std::move(from);
  }

  inline CUserMsg_ParticleManager_UpdateParticleOrient& operator=(CUserMsg_ParticleManager_UpdateParticleOrient&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMsg_ParticleManager_UpdateParticleOrient& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMsg_ParticleManager_UpdateParticleOrient* internal_default_instance() {
    return reinterpret_cast<const CUserMsg_ParticleManager_UpdateParticleOrient*>(
               &_CUserMsg_ParticleManager_UpdateParticleOrient_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  void Swap(CUserMsg_ParticleManager_UpdateParticleOrient* other);
  friend void swap(CUserMsg_ParticleManager_UpdateParticleOrient& a, CUserMsg_ParticleManager_UpdateParticleOrient& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMsg_ParticleManager_UpdateParticleOrient* New() const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_UpdateParticleOrient>(nullptr);
  }

  CUserMsg_ParticleManager_UpdateParticleOrient* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_UpdateParticleOrient>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMsg_ParticleManager_UpdateParticleOrient& from);
  void MergeFrom(const CUserMsg_ParticleManager_UpdateParticleOrient& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMsg_ParticleManager_UpdateParticleOrient* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgVector forward = 2;
  bool has_forward() const;
  void clear_forward();
  static const int kForwardFieldNumber = 2;
  const ::CMsgVector& forward() const;
  ::CMsgVector* release_forward();
  ::CMsgVector* mutable_forward();
  void set_allocated_forward(::CMsgVector* forward);

  // optional .CMsgVector right = 3 [deprecated = true];
  PROTOBUF_DEPRECATED bool has_right() const;
  PROTOBUF_DEPRECATED void clear_right();
  PROTOBUF_DEPRECATED static const int kRightFieldNumber = 3;
  PROTOBUF_DEPRECATED const ::CMsgVector& right() const;
  PROTOBUF_DEPRECATED ::CMsgVector* release_right();
  PROTOBUF_DEPRECATED ::CMsgVector* mutable_right();
  PROTOBUF_DEPRECATED void set_allocated_right(::CMsgVector* right);

  // optional .CMsgVector up = 4;
  bool has_up() const;
  void clear_up();
  static const int kUpFieldNumber = 4;
  const ::CMsgVector& up() const;
  ::CMsgVector* release_up();
  ::CMsgVector* mutable_up();
  void set_allocated_up(::CMsgVector* up);

  // optional .CMsgVector left = 5;
  bool has_left() const;
  void clear_left();
  static const int kLeftFieldNumber = 5;
  const ::CMsgVector& left() const;
  ::CMsgVector* release_left();
  ::CMsgVector* mutable_left();
  void set_allocated_left(::CMsgVector* left);

  // optional int32 control_point = 1;
  bool has_control_point() const;
  void clear_control_point();
  static const int kControlPointFieldNumber = 1;
  ::google::protobuf::int32 control_point() const;
  void set_control_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUserMsg_ParticleManager.UpdateParticleOrient)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CMsgVector* forward_;
  ::CMsgVector* right_;
  ::CMsgVector* up_;
  ::CMsgVector* left_;
  ::google::protobuf::int32 control_point_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMsg_ParticleManager_UpdateParticleFallback :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMsg_ParticleManager.UpdateParticleFallback) */ {
 public:
  CUserMsg_ParticleManager_UpdateParticleFallback();
  virtual ~CUserMsg_ParticleManager_UpdateParticleFallback();

  CUserMsg_ParticleManager_UpdateParticleFallback(const CUserMsg_ParticleManager_UpdateParticleFallback& from);

  inline CUserMsg_ParticleManager_UpdateParticleFallback& operator=(const CUserMsg_ParticleManager_UpdateParticleFallback& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMsg_ParticleManager_UpdateParticleFallback(CUserMsg_ParticleManager_UpdateParticleFallback&& from) noexcept
    : CUserMsg_ParticleManager_UpdateParticleFallback() {
    *this = ::std::move(from);
  }

  inline CUserMsg_ParticleManager_UpdateParticleFallback& operator=(CUserMsg_ParticleManager_UpdateParticleFallback&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMsg_ParticleManager_UpdateParticleFallback& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMsg_ParticleManager_UpdateParticleFallback* internal_default_instance() {
    return reinterpret_cast<const CUserMsg_ParticleManager_UpdateParticleFallback*>(
               &_CUserMsg_ParticleManager_UpdateParticleFallback_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  void Swap(CUserMsg_ParticleManager_UpdateParticleFallback* other);
  friend void swap(CUserMsg_ParticleManager_UpdateParticleFallback& a, CUserMsg_ParticleManager_UpdateParticleFallback& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMsg_ParticleManager_UpdateParticleFallback* New() const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_UpdateParticleFallback>(nullptr);
  }

  CUserMsg_ParticleManager_UpdateParticleFallback* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_UpdateParticleFallback>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMsg_ParticleManager_UpdateParticleFallback& from);
  void MergeFrom(const CUserMsg_ParticleManager_UpdateParticleFallback& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMsg_ParticleManager_UpdateParticleFallback* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgVector position = 2;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  const ::CMsgVector& position() const;
  ::CMsgVector* release_position();
  ::CMsgVector* mutable_position();
  void set_allocated_position(::CMsgVector* position);

  // optional int32 control_point = 1;
  bool has_control_point() const;
  void clear_control_point();
  static const int kControlPointFieldNumber = 1;
  ::google::protobuf::int32 control_point() const;
  void set_control_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUserMsg_ParticleManager.UpdateParticleFallback)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CMsgVector* position_;
  ::google::protobuf::int32 control_point_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMsg_ParticleManager_UpdateParticleOffset :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMsg_ParticleManager.UpdateParticleOffset) */ {
 public:
  CUserMsg_ParticleManager_UpdateParticleOffset();
  virtual ~CUserMsg_ParticleManager_UpdateParticleOffset();

  CUserMsg_ParticleManager_UpdateParticleOffset(const CUserMsg_ParticleManager_UpdateParticleOffset& from);

  inline CUserMsg_ParticleManager_UpdateParticleOffset& operator=(const CUserMsg_ParticleManager_UpdateParticleOffset& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMsg_ParticleManager_UpdateParticleOffset(CUserMsg_ParticleManager_UpdateParticleOffset&& from) noexcept
    : CUserMsg_ParticleManager_UpdateParticleOffset() {
    *this = ::std::move(from);
  }

  inline CUserMsg_ParticleManager_UpdateParticleOffset& operator=(CUserMsg_ParticleManager_UpdateParticleOffset&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMsg_ParticleManager_UpdateParticleOffset& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMsg_ParticleManager_UpdateParticleOffset* internal_default_instance() {
    return reinterpret_cast<const CUserMsg_ParticleManager_UpdateParticleOffset*>(
               &_CUserMsg_ParticleManager_UpdateParticleOffset_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  void Swap(CUserMsg_ParticleManager_UpdateParticleOffset* other);
  friend void swap(CUserMsg_ParticleManager_UpdateParticleOffset& a, CUserMsg_ParticleManager_UpdateParticleOffset& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMsg_ParticleManager_UpdateParticleOffset* New() const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_UpdateParticleOffset>(nullptr);
  }

  CUserMsg_ParticleManager_UpdateParticleOffset* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_UpdateParticleOffset>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMsg_ParticleManager_UpdateParticleOffset& from);
  void MergeFrom(const CUserMsg_ParticleManager_UpdateParticleOffset& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMsg_ParticleManager_UpdateParticleOffset* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgVector origin_offset = 2;
  bool has_origin_offset() const;
  void clear_origin_offset();
  static const int kOriginOffsetFieldNumber = 2;
  const ::CMsgVector& origin_offset() const;
  ::CMsgVector* release_origin_offset();
  ::CMsgVector* mutable_origin_offset();
  void set_allocated_origin_offset(::CMsgVector* origin_offset);

  // optional .CMsgQAngle angle_offset = 3;
  bool has_angle_offset() const;
  void clear_angle_offset();
  static const int kAngleOffsetFieldNumber = 3;
  const ::CMsgQAngle& angle_offset() const;
  ::CMsgQAngle* release_angle_offset();
  ::CMsgQAngle* mutable_angle_offset();
  void set_allocated_angle_offset(::CMsgQAngle* angle_offset);

  // optional int32 control_point = 1;
  bool has_control_point() const;
  void clear_control_point();
  static const int kControlPointFieldNumber = 1;
  ::google::protobuf::int32 control_point() const;
  void set_control_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUserMsg_ParticleManager.UpdateParticleOffset)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CMsgVector* origin_offset_;
  ::CMsgQAngle* angle_offset_;
  ::google::protobuf::int32 control_point_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMsg_ParticleManager_UpdateParticleEnt :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMsg_ParticleManager.UpdateParticleEnt) */ {
 public:
  CUserMsg_ParticleManager_UpdateParticleEnt();
  virtual ~CUserMsg_ParticleManager_UpdateParticleEnt();

  CUserMsg_ParticleManager_UpdateParticleEnt(const CUserMsg_ParticleManager_UpdateParticleEnt& from);

  inline CUserMsg_ParticleManager_UpdateParticleEnt& operator=(const CUserMsg_ParticleManager_UpdateParticleEnt& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMsg_ParticleManager_UpdateParticleEnt(CUserMsg_ParticleManager_UpdateParticleEnt&& from) noexcept
    : CUserMsg_ParticleManager_UpdateParticleEnt() {
    *this = ::std::move(from);
  }

  inline CUserMsg_ParticleManager_UpdateParticleEnt& operator=(CUserMsg_ParticleManager_UpdateParticleEnt&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMsg_ParticleManager_UpdateParticleEnt& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMsg_ParticleManager_UpdateParticleEnt* internal_default_instance() {
    return reinterpret_cast<const CUserMsg_ParticleManager_UpdateParticleEnt*>(
               &_CUserMsg_ParticleManager_UpdateParticleEnt_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  void Swap(CUserMsg_ParticleManager_UpdateParticleEnt* other);
  friend void swap(CUserMsg_ParticleManager_UpdateParticleEnt& a, CUserMsg_ParticleManager_UpdateParticleEnt& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMsg_ParticleManager_UpdateParticleEnt* New() const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_UpdateParticleEnt>(nullptr);
  }

  CUserMsg_ParticleManager_UpdateParticleEnt* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_UpdateParticleEnt>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMsg_ParticleManager_UpdateParticleEnt& from);
  void MergeFrom(const CUserMsg_ParticleManager_UpdateParticleEnt& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMsg_ParticleManager_UpdateParticleEnt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgVector fallback_position = 5;
  bool has_fallback_position() const;
  void clear_fallback_position();
  static const int kFallbackPositionFieldNumber = 5;
  const ::CMsgVector& fallback_position() const;
  ::CMsgVector* release_fallback_position();
  ::CMsgVector* mutable_fallback_position();
  void set_allocated_fallback_position(::CMsgVector* fallback_position);

  // optional int32 control_point = 1;
  bool has_control_point() const;
  void clear_control_point();
  static const int kControlPointFieldNumber = 1;
  ::google::protobuf::int32 control_point() const;
  void set_control_point(::google::protobuf::int32 value);

  // optional int32 entity_handle = 2;
  bool has_entity_handle() const;
  void clear_entity_handle();
  static const int kEntityHandleFieldNumber = 2;
  ::google::protobuf::int32 entity_handle() const;
  void set_entity_handle(::google::protobuf::int32 value);

  // optional int32 attach_type = 3;
  bool has_attach_type() const;
  void clear_attach_type();
  static const int kAttachTypeFieldNumber = 3;
  ::google::protobuf::int32 attach_type() const;
  void set_attach_type(::google::protobuf::int32 value);

  // optional int32 attachment = 4;
  bool has_attachment() const;
  void clear_attachment();
  static const int kAttachmentFieldNumber = 4;
  ::google::protobuf::int32 attachment() const;
  void set_attachment(::google::protobuf::int32 value);

  // optional bool include_wearables = 6;
  bool has_include_wearables() const;
  void clear_include_wearables();
  static const int kIncludeWearablesFieldNumber = 6;
  bool include_wearables() const;
  void set_include_wearables(bool value);

  // @@protoc_insertion_point(class_scope:CUserMsg_ParticleManager.UpdateParticleEnt)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CMsgVector* fallback_position_;
  ::google::protobuf::int32 control_point_;
  ::google::protobuf::int32 entity_handle_;
  ::google::protobuf::int32 attach_type_;
  ::google::protobuf::int32 attachment_;
  bool include_wearables_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMsg_ParticleManager_UpdateParticleSetFrozen :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMsg_ParticleManager.UpdateParticleSetFrozen) */ {
 public:
  CUserMsg_ParticleManager_UpdateParticleSetFrozen();
  virtual ~CUserMsg_ParticleManager_UpdateParticleSetFrozen();

  CUserMsg_ParticleManager_UpdateParticleSetFrozen(const CUserMsg_ParticleManager_UpdateParticleSetFrozen& from);

  inline CUserMsg_ParticleManager_UpdateParticleSetFrozen& operator=(const CUserMsg_ParticleManager_UpdateParticleSetFrozen& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMsg_ParticleManager_UpdateParticleSetFrozen(CUserMsg_ParticleManager_UpdateParticleSetFrozen&& from) noexcept
    : CUserMsg_ParticleManager_UpdateParticleSetFrozen() {
    *this = ::std::move(from);
  }

  inline CUserMsg_ParticleManager_UpdateParticleSetFrozen& operator=(CUserMsg_ParticleManager_UpdateParticleSetFrozen&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMsg_ParticleManager_UpdateParticleSetFrozen& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMsg_ParticleManager_UpdateParticleSetFrozen* internal_default_instance() {
    return reinterpret_cast<const CUserMsg_ParticleManager_UpdateParticleSetFrozen*>(
               &_CUserMsg_ParticleManager_UpdateParticleSetFrozen_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  void Swap(CUserMsg_ParticleManager_UpdateParticleSetFrozen* other);
  friend void swap(CUserMsg_ParticleManager_UpdateParticleSetFrozen& a, CUserMsg_ParticleManager_UpdateParticleSetFrozen& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMsg_ParticleManager_UpdateParticleSetFrozen* New() const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_UpdateParticleSetFrozen>(nullptr);
  }

  CUserMsg_ParticleManager_UpdateParticleSetFrozen* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_UpdateParticleSetFrozen>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMsg_ParticleManager_UpdateParticleSetFrozen& from);
  void MergeFrom(const CUserMsg_ParticleManager_UpdateParticleSetFrozen& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMsg_ParticleManager_UpdateParticleSetFrozen* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool set_frozen = 1;
  bool has_set_frozen() const;
  void clear_set_frozen();
  static const int kSetFrozenFieldNumber = 1;
  bool set_frozen() const;
  void set_set_frozen(bool value);

  // @@protoc_insertion_point(class_scope:CUserMsg_ParticleManager.UpdateParticleSetFrozen)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool set_frozen_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMsg_ParticleManager_UpdateParticleShouldDraw :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMsg_ParticleManager.UpdateParticleShouldDraw) */ {
 public:
  CUserMsg_ParticleManager_UpdateParticleShouldDraw();
  virtual ~CUserMsg_ParticleManager_UpdateParticleShouldDraw();

  CUserMsg_ParticleManager_UpdateParticleShouldDraw(const CUserMsg_ParticleManager_UpdateParticleShouldDraw& from);

  inline CUserMsg_ParticleManager_UpdateParticleShouldDraw& operator=(const CUserMsg_ParticleManager_UpdateParticleShouldDraw& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMsg_ParticleManager_UpdateParticleShouldDraw(CUserMsg_ParticleManager_UpdateParticleShouldDraw&& from) noexcept
    : CUserMsg_ParticleManager_UpdateParticleShouldDraw() {
    *this = ::std::move(from);
  }

  inline CUserMsg_ParticleManager_UpdateParticleShouldDraw& operator=(CUserMsg_ParticleManager_UpdateParticleShouldDraw&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMsg_ParticleManager_UpdateParticleShouldDraw& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMsg_ParticleManager_UpdateParticleShouldDraw* internal_default_instance() {
    return reinterpret_cast<const CUserMsg_ParticleManager_UpdateParticleShouldDraw*>(
               &_CUserMsg_ParticleManager_UpdateParticleShouldDraw_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  void Swap(CUserMsg_ParticleManager_UpdateParticleShouldDraw* other);
  friend void swap(CUserMsg_ParticleManager_UpdateParticleShouldDraw& a, CUserMsg_ParticleManager_UpdateParticleShouldDraw& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMsg_ParticleManager_UpdateParticleShouldDraw* New() const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_UpdateParticleShouldDraw>(nullptr);
  }

  CUserMsg_ParticleManager_UpdateParticleShouldDraw* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_UpdateParticleShouldDraw>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMsg_ParticleManager_UpdateParticleShouldDraw& from);
  void MergeFrom(const CUserMsg_ParticleManager_UpdateParticleShouldDraw& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMsg_ParticleManager_UpdateParticleShouldDraw* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool should_draw = 1;
  bool has_should_draw() const;
  void clear_should_draw();
  static const int kShouldDrawFieldNumber = 1;
  bool should_draw() const;
  void set_should_draw(bool value);

  // @@protoc_insertion_point(class_scope:CUserMsg_ParticleManager.UpdateParticleShouldDraw)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool should_draw_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMsg_ParticleManager_ChangeControlPointAttachment :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMsg_ParticleManager.ChangeControlPointAttachment) */ {
 public:
  CUserMsg_ParticleManager_ChangeControlPointAttachment();
  virtual ~CUserMsg_ParticleManager_ChangeControlPointAttachment();

  CUserMsg_ParticleManager_ChangeControlPointAttachment(const CUserMsg_ParticleManager_ChangeControlPointAttachment& from);

  inline CUserMsg_ParticleManager_ChangeControlPointAttachment& operator=(const CUserMsg_ParticleManager_ChangeControlPointAttachment& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMsg_ParticleManager_ChangeControlPointAttachment(CUserMsg_ParticleManager_ChangeControlPointAttachment&& from) noexcept
    : CUserMsg_ParticleManager_ChangeControlPointAttachment() {
    *this = ::std::move(from);
  }

  inline CUserMsg_ParticleManager_ChangeControlPointAttachment& operator=(CUserMsg_ParticleManager_ChangeControlPointAttachment&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMsg_ParticleManager_ChangeControlPointAttachment& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMsg_ParticleManager_ChangeControlPointAttachment* internal_default_instance() {
    return reinterpret_cast<const CUserMsg_ParticleManager_ChangeControlPointAttachment*>(
               &_CUserMsg_ParticleManager_ChangeControlPointAttachment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  void Swap(CUserMsg_ParticleManager_ChangeControlPointAttachment* other);
  friend void swap(CUserMsg_ParticleManager_ChangeControlPointAttachment& a, CUserMsg_ParticleManager_ChangeControlPointAttachment& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMsg_ParticleManager_ChangeControlPointAttachment* New() const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_ChangeControlPointAttachment>(nullptr);
  }

  CUserMsg_ParticleManager_ChangeControlPointAttachment* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_ChangeControlPointAttachment>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMsg_ParticleManager_ChangeControlPointAttachment& from);
  void MergeFrom(const CUserMsg_ParticleManager_ChangeControlPointAttachment& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMsg_ParticleManager_ChangeControlPointAttachment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 attachment_old = 1;
  bool has_attachment_old() const;
  void clear_attachment_old();
  static const int kAttachmentOldFieldNumber = 1;
  ::google::protobuf::int32 attachment_old() const;
  void set_attachment_old(::google::protobuf::int32 value);

  // optional int32 attachment_new = 2;
  bool has_attachment_new() const;
  void clear_attachment_new();
  static const int kAttachmentNewFieldNumber = 2;
  ::google::protobuf::int32 attachment_new() const;
  void set_attachment_new(::google::protobuf::int32 value);

  // optional int32 entity_handle = 3;
  bool has_entity_handle() const;
  void clear_entity_handle();
  static const int kEntityHandleFieldNumber = 3;
  ::google::protobuf::int32 entity_handle() const;
  void set_entity_handle(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUserMsg_ParticleManager.ChangeControlPointAttachment)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 attachment_old_;
  ::google::protobuf::int32 attachment_new_;
  ::google::protobuf::int32 entity_handle_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMsg_ParticleManager_UpdateEntityPosition :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMsg_ParticleManager.UpdateEntityPosition) */ {
 public:
  CUserMsg_ParticleManager_UpdateEntityPosition();
  virtual ~CUserMsg_ParticleManager_UpdateEntityPosition();

  CUserMsg_ParticleManager_UpdateEntityPosition(const CUserMsg_ParticleManager_UpdateEntityPosition& from);

  inline CUserMsg_ParticleManager_UpdateEntityPosition& operator=(const CUserMsg_ParticleManager_UpdateEntityPosition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMsg_ParticleManager_UpdateEntityPosition(CUserMsg_ParticleManager_UpdateEntityPosition&& from) noexcept
    : CUserMsg_ParticleManager_UpdateEntityPosition() {
    *this = ::std::move(from);
  }

  inline CUserMsg_ParticleManager_UpdateEntityPosition& operator=(CUserMsg_ParticleManager_UpdateEntityPosition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMsg_ParticleManager_UpdateEntityPosition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMsg_ParticleManager_UpdateEntityPosition* internal_default_instance() {
    return reinterpret_cast<const CUserMsg_ParticleManager_UpdateEntityPosition*>(
               &_CUserMsg_ParticleManager_UpdateEntityPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  void Swap(CUserMsg_ParticleManager_UpdateEntityPosition* other);
  friend void swap(CUserMsg_ParticleManager_UpdateEntityPosition& a, CUserMsg_ParticleManager_UpdateEntityPosition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMsg_ParticleManager_UpdateEntityPosition* New() const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_UpdateEntityPosition>(nullptr);
  }

  CUserMsg_ParticleManager_UpdateEntityPosition* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_UpdateEntityPosition>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMsg_ParticleManager_UpdateEntityPosition& from);
  void MergeFrom(const CUserMsg_ParticleManager_UpdateEntityPosition& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMsg_ParticleManager_UpdateEntityPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgVector position = 2;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  const ::CMsgVector& position() const;
  ::CMsgVector* release_position();
  ::CMsgVector* mutable_position();
  void set_allocated_position(::CMsgVector* position);

  // optional int32 entity_handle = 1;
  bool has_entity_handle() const;
  void clear_entity_handle();
  static const int kEntityHandleFieldNumber = 1;
  ::google::protobuf::int32 entity_handle() const;
  void set_entity_handle(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUserMsg_ParticleManager.UpdateEntityPosition)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CMsgVector* position_;
  ::google::protobuf::int32 entity_handle_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMsg_ParticleManager_SetParticleFoWProperties :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMsg_ParticleManager.SetParticleFoWProperties) */ {
 public:
  CUserMsg_ParticleManager_SetParticleFoWProperties();
  virtual ~CUserMsg_ParticleManager_SetParticleFoWProperties();

  CUserMsg_ParticleManager_SetParticleFoWProperties(const CUserMsg_ParticleManager_SetParticleFoWProperties& from);

  inline CUserMsg_ParticleManager_SetParticleFoWProperties& operator=(const CUserMsg_ParticleManager_SetParticleFoWProperties& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMsg_ParticleManager_SetParticleFoWProperties(CUserMsg_ParticleManager_SetParticleFoWProperties&& from) noexcept
    : CUserMsg_ParticleManager_SetParticleFoWProperties() {
    *this = ::std::move(from);
  }

  inline CUserMsg_ParticleManager_SetParticleFoWProperties& operator=(CUserMsg_ParticleManager_SetParticleFoWProperties&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMsg_ParticleManager_SetParticleFoWProperties& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMsg_ParticleManager_SetParticleFoWProperties* internal_default_instance() {
    return reinterpret_cast<const CUserMsg_ParticleManager_SetParticleFoWProperties*>(
               &_CUserMsg_ParticleManager_SetParticleFoWProperties_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  void Swap(CUserMsg_ParticleManager_SetParticleFoWProperties* other);
  friend void swap(CUserMsg_ParticleManager_SetParticleFoWProperties& a, CUserMsg_ParticleManager_SetParticleFoWProperties& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMsg_ParticleManager_SetParticleFoWProperties* New() const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_SetParticleFoWProperties>(nullptr);
  }

  CUserMsg_ParticleManager_SetParticleFoWProperties* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_SetParticleFoWProperties>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMsg_ParticleManager_SetParticleFoWProperties& from);
  void MergeFrom(const CUserMsg_ParticleManager_SetParticleFoWProperties& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMsg_ParticleManager_SetParticleFoWProperties* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 fow_control_point = 1;
  bool has_fow_control_point() const;
  void clear_fow_control_point();
  static const int kFowControlPointFieldNumber = 1;
  ::google::protobuf::int32 fow_control_point() const;
  void set_fow_control_point(::google::protobuf::int32 value);

  // optional int32 fow_control_point2 = 2;
  bool has_fow_control_point2() const;
  void clear_fow_control_point2();
  static const int kFowControlPoint2FieldNumber = 2;
  ::google::protobuf::int32 fow_control_point2() const;
  void set_fow_control_point2(::google::protobuf::int32 value);

  // optional float fow_radius = 3;
  bool has_fow_radius() const;
  void clear_fow_radius();
  static const int kFowRadiusFieldNumber = 3;
  float fow_radius() const;
  void set_fow_radius(float value);

  // @@protoc_insertion_point(class_scope:CUserMsg_ParticleManager.SetParticleFoWProperties)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 fow_control_point_;
  ::google::protobuf::int32 fow_control_point2_;
  float fow_radius_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMsg_ParticleManager_SetParticleShouldCheckFoW :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMsg_ParticleManager.SetParticleShouldCheckFoW) */ {
 public:
  CUserMsg_ParticleManager_SetParticleShouldCheckFoW();
  virtual ~CUserMsg_ParticleManager_SetParticleShouldCheckFoW();

  CUserMsg_ParticleManager_SetParticleShouldCheckFoW(const CUserMsg_ParticleManager_SetParticleShouldCheckFoW& from);

  inline CUserMsg_ParticleManager_SetParticleShouldCheckFoW& operator=(const CUserMsg_ParticleManager_SetParticleShouldCheckFoW& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMsg_ParticleManager_SetParticleShouldCheckFoW(CUserMsg_ParticleManager_SetParticleShouldCheckFoW&& from) noexcept
    : CUserMsg_ParticleManager_SetParticleShouldCheckFoW() {
    *this = ::std::move(from);
  }

  inline CUserMsg_ParticleManager_SetParticleShouldCheckFoW& operator=(CUserMsg_ParticleManager_SetParticleShouldCheckFoW&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMsg_ParticleManager_SetParticleShouldCheckFoW& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMsg_ParticleManager_SetParticleShouldCheckFoW* internal_default_instance() {
    return reinterpret_cast<const CUserMsg_ParticleManager_SetParticleShouldCheckFoW*>(
               &_CUserMsg_ParticleManager_SetParticleShouldCheckFoW_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  void Swap(CUserMsg_ParticleManager_SetParticleShouldCheckFoW* other);
  friend void swap(CUserMsg_ParticleManager_SetParticleShouldCheckFoW& a, CUserMsg_ParticleManager_SetParticleShouldCheckFoW& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMsg_ParticleManager_SetParticleShouldCheckFoW* New() const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_SetParticleShouldCheckFoW>(nullptr);
  }

  CUserMsg_ParticleManager_SetParticleShouldCheckFoW* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_SetParticleShouldCheckFoW>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMsg_ParticleManager_SetParticleShouldCheckFoW& from);
  void MergeFrom(const CUserMsg_ParticleManager_SetParticleShouldCheckFoW& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMsg_ParticleManager_SetParticleShouldCheckFoW* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool check_fow = 1;
  bool has_check_fow() const;
  void clear_check_fow();
  static const int kCheckFowFieldNumber = 1;
  bool check_fow() const;
  void set_check_fow(bool value);

  // @@protoc_insertion_point(class_scope:CUserMsg_ParticleManager.SetParticleShouldCheckFoW)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool check_fow_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMsg_ParticleManager_SetParticleText :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMsg_ParticleManager.SetParticleText) */ {
 public:
  CUserMsg_ParticleManager_SetParticleText();
  virtual ~CUserMsg_ParticleManager_SetParticleText();

  CUserMsg_ParticleManager_SetParticleText(const CUserMsg_ParticleManager_SetParticleText& from);

  inline CUserMsg_ParticleManager_SetParticleText& operator=(const CUserMsg_ParticleManager_SetParticleText& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMsg_ParticleManager_SetParticleText(CUserMsg_ParticleManager_SetParticleText&& from) noexcept
    : CUserMsg_ParticleManager_SetParticleText() {
    *this = ::std::move(from);
  }

  inline CUserMsg_ParticleManager_SetParticleText& operator=(CUserMsg_ParticleManager_SetParticleText&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMsg_ParticleManager_SetParticleText& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMsg_ParticleManager_SetParticleText* internal_default_instance() {
    return reinterpret_cast<const CUserMsg_ParticleManager_SetParticleText*>(
               &_CUserMsg_ParticleManager_SetParticleText_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  void Swap(CUserMsg_ParticleManager_SetParticleText* other);
  friend void swap(CUserMsg_ParticleManager_SetParticleText& a, CUserMsg_ParticleManager_SetParticleText& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMsg_ParticleManager_SetParticleText* New() const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_SetParticleText>(nullptr);
  }

  CUserMsg_ParticleManager_SetParticleText* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager_SetParticleText>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMsg_ParticleManager_SetParticleText& from);
  void MergeFrom(const CUserMsg_ParticleManager_SetParticleText& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMsg_ParticleManager_SetParticleText* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string text = 1;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 1;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:CUserMsg_ParticleManager.SetParticleText)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMsg_ParticleManager :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMsg_ParticleManager) */ {
 public:
  CUserMsg_ParticleManager();
  virtual ~CUserMsg_ParticleManager();

  CUserMsg_ParticleManager(const CUserMsg_ParticleManager& from);

  inline CUserMsg_ParticleManager& operator=(const CUserMsg_ParticleManager& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMsg_ParticleManager(CUserMsg_ParticleManager&& from) noexcept
    : CUserMsg_ParticleManager() {
    *this = ::std::move(from);
  }

  inline CUserMsg_ParticleManager& operator=(CUserMsg_ParticleManager&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMsg_ParticleManager& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMsg_ParticleManager* internal_default_instance() {
    return reinterpret_cast<const CUserMsg_ParticleManager*>(
               &_CUserMsg_ParticleManager_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  void Swap(CUserMsg_ParticleManager* other);
  friend void swap(CUserMsg_ParticleManager& a, CUserMsg_ParticleManager& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMsg_ParticleManager* New() const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager>(nullptr);
  }

  CUserMsg_ParticleManager* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMsg_ParticleManager>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMsg_ParticleManager& from);
  void MergeFrom(const CUserMsg_ParticleManager& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMsg_ParticleManager* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CUserMsg_ParticleManager_ReleaseParticleIndex ReleaseParticleIndex;
  typedef CUserMsg_ParticleManager_CreateParticle CreateParticle;
  typedef CUserMsg_ParticleManager_DestroyParticle DestroyParticle;
  typedef CUserMsg_ParticleManager_DestroyParticleInvolving DestroyParticleInvolving;
  typedef CUserMsg_ParticleManager_UpdateParticle UpdateParticle;
  typedef CUserMsg_ParticleManager_UpdateParticleFwd UpdateParticleFwd;
  typedef CUserMsg_ParticleManager_UpdateParticleOrient UpdateParticleOrient;
  typedef CUserMsg_ParticleManager_UpdateParticleFallback UpdateParticleFallback;
  typedef CUserMsg_ParticleManager_UpdateParticleOffset UpdateParticleOffset;
  typedef CUserMsg_ParticleManager_UpdateParticleEnt UpdateParticleEnt;
  typedef CUserMsg_ParticleManager_UpdateParticleSetFrozen UpdateParticleSetFrozen;
  typedef CUserMsg_ParticleManager_UpdateParticleShouldDraw UpdateParticleShouldDraw;
  typedef CUserMsg_ParticleManager_ChangeControlPointAttachment ChangeControlPointAttachment;
  typedef CUserMsg_ParticleManager_UpdateEntityPosition UpdateEntityPosition;
  typedef CUserMsg_ParticleManager_SetParticleFoWProperties SetParticleFoWProperties;
  typedef CUserMsg_ParticleManager_SetParticleShouldCheckFoW SetParticleShouldCheckFoW;
  typedef CUserMsg_ParticleManager_SetParticleText SetParticleText;

  // accessors -------------------------------------------------------

  // optional .CUserMsg_ParticleManager.ReleaseParticleIndex release_particle_index = 3;
  bool has_release_particle_index() const;
  void clear_release_particle_index();
  static const int kReleaseParticleIndexFieldNumber = 3;
  const ::CUserMsg_ParticleManager_ReleaseParticleIndex& release_particle_index() const;
  ::CUserMsg_ParticleManager_ReleaseParticleIndex* release_release_particle_index();
  ::CUserMsg_ParticleManager_ReleaseParticleIndex* mutable_release_particle_index();
  void set_allocated_release_particle_index(::CUserMsg_ParticleManager_ReleaseParticleIndex* release_particle_index);

  // optional .CUserMsg_ParticleManager.CreateParticle create_particle = 4;
  bool has_create_particle() const;
  void clear_create_particle();
  static const int kCreateParticleFieldNumber = 4;
  const ::CUserMsg_ParticleManager_CreateParticle& create_particle() const;
  ::CUserMsg_ParticleManager_CreateParticle* release_create_particle();
  ::CUserMsg_ParticleManager_CreateParticle* mutable_create_particle();
  void set_allocated_create_particle(::CUserMsg_ParticleManager_CreateParticle* create_particle);

  // optional .CUserMsg_ParticleManager.DestroyParticle destroy_particle = 5;
  bool has_destroy_particle() const;
  void clear_destroy_particle();
  static const int kDestroyParticleFieldNumber = 5;
  const ::CUserMsg_ParticleManager_DestroyParticle& destroy_particle() const;
  ::CUserMsg_ParticleManager_DestroyParticle* release_destroy_particle();
  ::CUserMsg_ParticleManager_DestroyParticle* mutable_destroy_particle();
  void set_allocated_destroy_particle(::CUserMsg_ParticleManager_DestroyParticle* destroy_particle);

  // optional .CUserMsg_ParticleManager.DestroyParticleInvolving destroy_particle_involving = 6;
  bool has_destroy_particle_involving() const;
  void clear_destroy_particle_involving();
  static const int kDestroyParticleInvolvingFieldNumber = 6;
  const ::CUserMsg_ParticleManager_DestroyParticleInvolving& destroy_particle_involving() const;
  ::CUserMsg_ParticleManager_DestroyParticleInvolving* release_destroy_particle_involving();
  ::CUserMsg_ParticleManager_DestroyParticleInvolving* mutable_destroy_particle_involving();
  void set_allocated_destroy_particle_involving(::CUserMsg_ParticleManager_DestroyParticleInvolving* destroy_particle_involving);

  // optional .CUserMsg_ParticleManager.UpdateParticle update_particle = 7;
  bool has_update_particle() const;
  void clear_update_particle();
  static const int kUpdateParticleFieldNumber = 7;
  const ::CUserMsg_ParticleManager_UpdateParticle& update_particle() const;
  ::CUserMsg_ParticleManager_UpdateParticle* release_update_particle();
  ::CUserMsg_ParticleManager_UpdateParticle* mutable_update_particle();
  void set_allocated_update_particle(::CUserMsg_ParticleManager_UpdateParticle* update_particle);

  // optional .CUserMsg_ParticleManager.UpdateParticleFwd update_particle_fwd = 8;
  bool has_update_particle_fwd() const;
  void clear_update_particle_fwd();
  static const int kUpdateParticleFwdFieldNumber = 8;
  const ::CUserMsg_ParticleManager_UpdateParticleFwd& update_particle_fwd() const;
  ::CUserMsg_ParticleManager_UpdateParticleFwd* release_update_particle_fwd();
  ::CUserMsg_ParticleManager_UpdateParticleFwd* mutable_update_particle_fwd();
  void set_allocated_update_particle_fwd(::CUserMsg_ParticleManager_UpdateParticleFwd* update_particle_fwd);

  // optional .CUserMsg_ParticleManager.UpdateParticleOrient update_particle_orient = 9;
  bool has_update_particle_orient() const;
  void clear_update_particle_orient();
  static const int kUpdateParticleOrientFieldNumber = 9;
  const ::CUserMsg_ParticleManager_UpdateParticleOrient& update_particle_orient() const;
  ::CUserMsg_ParticleManager_UpdateParticleOrient* release_update_particle_orient();
  ::CUserMsg_ParticleManager_UpdateParticleOrient* mutable_update_particle_orient();
  void set_allocated_update_particle_orient(::CUserMsg_ParticleManager_UpdateParticleOrient* update_particle_orient);

  // optional .CUserMsg_ParticleManager.UpdateParticleFallback update_particle_fallback = 10;
  bool has_update_particle_fallback() const;
  void clear_update_particle_fallback();
  static const int kUpdateParticleFallbackFieldNumber = 10;
  const ::CUserMsg_ParticleManager_UpdateParticleFallback& update_particle_fallback() const;
  ::CUserMsg_ParticleManager_UpdateParticleFallback* release_update_particle_fallback();
  ::CUserMsg_ParticleManager_UpdateParticleFallback* mutable_update_particle_fallback();
  void set_allocated_update_particle_fallback(::CUserMsg_ParticleManager_UpdateParticleFallback* update_particle_fallback);

  // optional .CUserMsg_ParticleManager.UpdateParticleOffset update_particle_offset = 11;
  bool has_update_particle_offset() const;
  void clear_update_particle_offset();
  static const int kUpdateParticleOffsetFieldNumber = 11;
  const ::CUserMsg_ParticleManager_UpdateParticleOffset& update_particle_offset() const;
  ::CUserMsg_ParticleManager_UpdateParticleOffset* release_update_particle_offset();
  ::CUserMsg_ParticleManager_UpdateParticleOffset* mutable_update_particle_offset();
  void set_allocated_update_particle_offset(::CUserMsg_ParticleManager_UpdateParticleOffset* update_particle_offset);

  // optional .CUserMsg_ParticleManager.UpdateParticleEnt update_particle_ent = 12;
  bool has_update_particle_ent() const;
  void clear_update_particle_ent();
  static const int kUpdateParticleEntFieldNumber = 12;
  const ::CUserMsg_ParticleManager_UpdateParticleEnt& update_particle_ent() const;
  ::CUserMsg_ParticleManager_UpdateParticleEnt* release_update_particle_ent();
  ::CUserMsg_ParticleManager_UpdateParticleEnt* mutable_update_particle_ent();
  void set_allocated_update_particle_ent(::CUserMsg_ParticleManager_UpdateParticleEnt* update_particle_ent);

  // optional .CUserMsg_ParticleManager.UpdateParticleShouldDraw update_particle_should_draw = 14;
  bool has_update_particle_should_draw() const;
  void clear_update_particle_should_draw();
  static const int kUpdateParticleShouldDrawFieldNumber = 14;
  const ::CUserMsg_ParticleManager_UpdateParticleShouldDraw& update_particle_should_draw() const;
  ::CUserMsg_ParticleManager_UpdateParticleShouldDraw* release_update_particle_should_draw();
  ::CUserMsg_ParticleManager_UpdateParticleShouldDraw* mutable_update_particle_should_draw();
  void set_allocated_update_particle_should_draw(::CUserMsg_ParticleManager_UpdateParticleShouldDraw* update_particle_should_draw);

  // optional .CUserMsg_ParticleManager.UpdateParticleSetFrozen update_particle_set_frozen = 15;
  bool has_update_particle_set_frozen() const;
  void clear_update_particle_set_frozen();
  static const int kUpdateParticleSetFrozenFieldNumber = 15;
  const ::CUserMsg_ParticleManager_UpdateParticleSetFrozen& update_particle_set_frozen() const;
  ::CUserMsg_ParticleManager_UpdateParticleSetFrozen* release_update_particle_set_frozen();
  ::CUserMsg_ParticleManager_UpdateParticleSetFrozen* mutable_update_particle_set_frozen();
  void set_allocated_update_particle_set_frozen(::CUserMsg_ParticleManager_UpdateParticleSetFrozen* update_particle_set_frozen);

  // optional .CUserMsg_ParticleManager.ChangeControlPointAttachment change_control_point_attachment = 16;
  bool has_change_control_point_attachment() const;
  void clear_change_control_point_attachment();
  static const int kChangeControlPointAttachmentFieldNumber = 16;
  const ::CUserMsg_ParticleManager_ChangeControlPointAttachment& change_control_point_attachment() const;
  ::CUserMsg_ParticleManager_ChangeControlPointAttachment* release_change_control_point_attachment();
  ::CUserMsg_ParticleManager_ChangeControlPointAttachment* mutable_change_control_point_attachment();
  void set_allocated_change_control_point_attachment(::CUserMsg_ParticleManager_ChangeControlPointAttachment* change_control_point_attachment);

  // optional .CUserMsg_ParticleManager.UpdateEntityPosition update_entity_position = 17;
  bool has_update_entity_position() const;
  void clear_update_entity_position();
  static const int kUpdateEntityPositionFieldNumber = 17;
  const ::CUserMsg_ParticleManager_UpdateEntityPosition& update_entity_position() const;
  ::CUserMsg_ParticleManager_UpdateEntityPosition* release_update_entity_position();
  ::CUserMsg_ParticleManager_UpdateEntityPosition* mutable_update_entity_position();
  void set_allocated_update_entity_position(::CUserMsg_ParticleManager_UpdateEntityPosition* update_entity_position);

  // optional .CUserMsg_ParticleManager.SetParticleFoWProperties set_particle_fow_properties = 18;
  bool has_set_particle_fow_properties() const;
  void clear_set_particle_fow_properties();
  static const int kSetParticleFowPropertiesFieldNumber = 18;
  const ::CUserMsg_ParticleManager_SetParticleFoWProperties& set_particle_fow_properties() const;
  ::CUserMsg_ParticleManager_SetParticleFoWProperties* release_set_particle_fow_properties();
  ::CUserMsg_ParticleManager_SetParticleFoWProperties* mutable_set_particle_fow_properties();
  void set_allocated_set_particle_fow_properties(::CUserMsg_ParticleManager_SetParticleFoWProperties* set_particle_fow_properties);

  // optional .CUserMsg_ParticleManager.SetParticleText set_particle_text = 19;
  bool has_set_particle_text() const;
  void clear_set_particle_text();
  static const int kSetParticleTextFieldNumber = 19;
  const ::CUserMsg_ParticleManager_SetParticleText& set_particle_text() const;
  ::CUserMsg_ParticleManager_SetParticleText* release_set_particle_text();
  ::CUserMsg_ParticleManager_SetParticleText* mutable_set_particle_text();
  void set_allocated_set_particle_text(::CUserMsg_ParticleManager_SetParticleText* set_particle_text);

  // optional .CUserMsg_ParticleManager.SetParticleShouldCheckFoW set_particle_should_check_fow = 20;
  bool has_set_particle_should_check_fow() const;
  void clear_set_particle_should_check_fow();
  static const int kSetParticleShouldCheckFowFieldNumber = 20;
  const ::CUserMsg_ParticleManager_SetParticleShouldCheckFoW& set_particle_should_check_fow() const;
  ::CUserMsg_ParticleManager_SetParticleShouldCheckFoW* release_set_particle_should_check_fow();
  ::CUserMsg_ParticleManager_SetParticleShouldCheckFoW* mutable_set_particle_should_check_fow();
  void set_allocated_set_particle_should_check_fow(::CUserMsg_ParticleManager_SetParticleShouldCheckFoW* set_particle_should_check_fow);

  // required .PARTICLE_MESSAGE type = 1 [default = GAME_PARTICLE_MANAGER_EVENT_CREATE];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::PARTICLE_MESSAGE type() const;
  void set_type(::PARTICLE_MESSAGE value);

  // required uint32 index = 2;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CUserMsg_ParticleManager)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CUserMsg_ParticleManager_ReleaseParticleIndex* release_particle_index_;
  ::CUserMsg_ParticleManager_CreateParticle* create_particle_;
  ::CUserMsg_ParticleManager_DestroyParticle* destroy_particle_;
  ::CUserMsg_ParticleManager_DestroyParticleInvolving* destroy_particle_involving_;
  ::CUserMsg_ParticleManager_UpdateParticle* update_particle_;
  ::CUserMsg_ParticleManager_UpdateParticleFwd* update_particle_fwd_;
  ::CUserMsg_ParticleManager_UpdateParticleOrient* update_particle_orient_;
  ::CUserMsg_ParticleManager_UpdateParticleFallback* update_particle_fallback_;
  ::CUserMsg_ParticleManager_UpdateParticleOffset* update_particle_offset_;
  ::CUserMsg_ParticleManager_UpdateParticleEnt* update_particle_ent_;
  ::CUserMsg_ParticleManager_UpdateParticleShouldDraw* update_particle_should_draw_;
  ::CUserMsg_ParticleManager_UpdateParticleSetFrozen* update_particle_set_frozen_;
  ::CUserMsg_ParticleManager_ChangeControlPointAttachment* change_control_point_attachment_;
  ::CUserMsg_ParticleManager_UpdateEntityPosition* update_entity_position_;
  ::CUserMsg_ParticleManager_SetParticleFoWProperties* set_particle_fow_properties_;
  ::CUserMsg_ParticleManager_SetParticleText* set_particle_text_;
  ::CUserMsg_ParticleManager_SetParticleShouldCheckFoW* set_particle_should_check_fow_;
  int type_;
  ::google::protobuf::uint32 index_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMsg_HudError :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMsg_HudError) */ {
 public:
  CUserMsg_HudError();
  virtual ~CUserMsg_HudError();

  CUserMsg_HudError(const CUserMsg_HudError& from);

  inline CUserMsg_HudError& operator=(const CUserMsg_HudError& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMsg_HudError(CUserMsg_HudError&& from) noexcept
    : CUserMsg_HudError() {
    *this = ::std::move(from);
  }

  inline CUserMsg_HudError& operator=(CUserMsg_HudError&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMsg_HudError& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMsg_HudError* internal_default_instance() {
    return reinterpret_cast<const CUserMsg_HudError*>(
               &_CUserMsg_HudError_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  void Swap(CUserMsg_HudError* other);
  friend void swap(CUserMsg_HudError& a, CUserMsg_HudError& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMsg_HudError* New() const final {
    return CreateMaybeMessage<CUserMsg_HudError>(nullptr);
  }

  CUserMsg_HudError* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMsg_HudError>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMsg_HudError& from);
  void MergeFrom(const CUserMsg_HudError& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMsg_HudError* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 order_id = 1;
  bool has_order_id() const;
  void clear_order_id();
  static const int kOrderIdFieldNumber = 1;
  ::google::protobuf::int32 order_id() const;
  void set_order_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUserMsg_HudError)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 order_id_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMsg_CustomGameEvent :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMsg_CustomGameEvent) */ {
 public:
  CUserMsg_CustomGameEvent();
  virtual ~CUserMsg_CustomGameEvent();

  CUserMsg_CustomGameEvent(const CUserMsg_CustomGameEvent& from);

  inline CUserMsg_CustomGameEvent& operator=(const CUserMsg_CustomGameEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMsg_CustomGameEvent(CUserMsg_CustomGameEvent&& from) noexcept
    : CUserMsg_CustomGameEvent() {
    *this = ::std::move(from);
  }

  inline CUserMsg_CustomGameEvent& operator=(CUserMsg_CustomGameEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMsg_CustomGameEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMsg_CustomGameEvent* internal_default_instance() {
    return reinterpret_cast<const CUserMsg_CustomGameEvent*>(
               &_CUserMsg_CustomGameEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  void Swap(CUserMsg_CustomGameEvent* other);
  friend void swap(CUserMsg_CustomGameEvent& a, CUserMsg_CustomGameEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMsg_CustomGameEvent* New() const final {
    return CreateMaybeMessage<CUserMsg_CustomGameEvent>(nullptr);
  }

  CUserMsg_CustomGameEvent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMsg_CustomGameEvent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMsg_CustomGameEvent& from);
  void MergeFrom(const CUserMsg_CustomGameEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMsg_CustomGameEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string event_name = 1;
  bool has_event_name() const;
  void clear_event_name();
  static const int kEventNameFieldNumber = 1;
  const ::std::string& event_name() const;
  void set_event_name(const ::std::string& value);
  #if LANG_CXX11
  void set_event_name(::std::string&& value);
  #endif
  void set_event_name(const char* value);
  void set_event_name(const char* value, size_t size);
  ::std::string* mutable_event_name();
  ::std::string* release_event_name();
  void set_allocated_event_name(::std::string* event_name);

  // optional bytes data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:CUserMsg_CustomGameEvent)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr event_name_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageHapticPulse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageHapticPulse) */ {
 public:
  CUserMessageHapticPulse();
  virtual ~CUserMessageHapticPulse();

  CUserMessageHapticPulse(const CUserMessageHapticPulse& from);

  inline CUserMessageHapticPulse& operator=(const CUserMessageHapticPulse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageHapticPulse(CUserMessageHapticPulse&& from) noexcept
    : CUserMessageHapticPulse() {
    *this = ::std::move(from);
  }

  inline CUserMessageHapticPulse& operator=(CUserMessageHapticPulse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageHapticPulse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageHapticPulse* internal_default_instance() {
    return reinterpret_cast<const CUserMessageHapticPulse*>(
               &_CUserMessageHapticPulse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  void Swap(CUserMessageHapticPulse* other);
  friend void swap(CUserMessageHapticPulse& a, CUserMessageHapticPulse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageHapticPulse* New() const final {
    return CreateMaybeMessage<CUserMessageHapticPulse>(nullptr);
  }

  CUserMessageHapticPulse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageHapticPulse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageHapticPulse& from);
  void MergeFrom(const CUserMessageHapticPulse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageHapticPulse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 hand_id = 1;
  bool has_hand_id() const;
  void clear_hand_id();
  static const int kHandIdFieldNumber = 1;
  ::google::protobuf::int32 hand_id() const;
  void set_hand_id(::google::protobuf::int32 value);

  // optional .EHapticPulseType pulse_type = 2 [default = VR_HAND_HAPTIC_PULSE_LIGHT];
  bool has_pulse_type() const;
  void clear_pulse_type();
  static const int kPulseTypeFieldNumber = 2;
  ::EHapticPulseType pulse_type() const;
  void set_pulse_type(::EHapticPulseType value);

  // @@protoc_insertion_point(class_scope:CUserMessageHapticPulse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 hand_id_;
  int pulse_type_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageHapticPulsePrecise :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageHapticPulsePrecise) */ {
 public:
  CUserMessageHapticPulsePrecise();
  virtual ~CUserMessageHapticPulsePrecise();

  CUserMessageHapticPulsePrecise(const CUserMessageHapticPulsePrecise& from);

  inline CUserMessageHapticPulsePrecise& operator=(const CUserMessageHapticPulsePrecise& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageHapticPulsePrecise(CUserMessageHapticPulsePrecise&& from) noexcept
    : CUserMessageHapticPulsePrecise() {
    *this = ::std::move(from);
  }

  inline CUserMessageHapticPulsePrecise& operator=(CUserMessageHapticPulsePrecise&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageHapticPulsePrecise& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageHapticPulsePrecise* internal_default_instance() {
    return reinterpret_cast<const CUserMessageHapticPulsePrecise*>(
               &_CUserMessageHapticPulsePrecise_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  void Swap(CUserMessageHapticPulsePrecise* other);
  friend void swap(CUserMessageHapticPulsePrecise& a, CUserMessageHapticPulsePrecise& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageHapticPulsePrecise* New() const final {
    return CreateMaybeMessage<CUserMessageHapticPulsePrecise>(nullptr);
  }

  CUserMessageHapticPulsePrecise* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageHapticPulsePrecise>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageHapticPulsePrecise& from);
  void MergeFrom(const CUserMessageHapticPulsePrecise& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageHapticPulsePrecise* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 hand_id = 1;
  bool has_hand_id() const;
  void clear_hand_id();
  static const int kHandIdFieldNumber = 1;
  ::google::protobuf::int32 hand_id() const;
  void set_hand_id(::google::protobuf::int32 value);

  // optional int32 pulse_duration = 2;
  bool has_pulse_duration() const;
  void clear_pulse_duration();
  static const int kPulseDurationFieldNumber = 2;
  ::google::protobuf::int32 pulse_duration() const;
  void set_pulse_duration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUserMessageHapticPulsePrecise)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 hand_id_;
  ::google::protobuf::int32 pulse_duration_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// -------------------------------------------------------------------

class CUserMessageAnimStateGraphState :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CUserMessageAnimStateGraphState) */ {
 public:
  CUserMessageAnimStateGraphState();
  virtual ~CUserMessageAnimStateGraphState();

  CUserMessageAnimStateGraphState(const CUserMessageAnimStateGraphState& from);

  inline CUserMessageAnimStateGraphState& operator=(const CUserMessageAnimStateGraphState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CUserMessageAnimStateGraphState(CUserMessageAnimStateGraphState&& from) noexcept
    : CUserMessageAnimStateGraphState() {
    *this = ::std::move(from);
  }

  inline CUserMessageAnimStateGraphState& operator=(CUserMessageAnimStateGraphState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CUserMessageAnimStateGraphState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUserMessageAnimStateGraphState* internal_default_instance() {
    return reinterpret_cast<const CUserMessageAnimStateGraphState*>(
               &_CUserMessageAnimStateGraphState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  void Swap(CUserMessageAnimStateGraphState* other);
  friend void swap(CUserMessageAnimStateGraphState& a, CUserMessageAnimStateGraphState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CUserMessageAnimStateGraphState* New() const final {
    return CreateMaybeMessage<CUserMessageAnimStateGraphState>(nullptr);
  }

  CUserMessageAnimStateGraphState* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CUserMessageAnimStateGraphState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CUserMessageAnimStateGraphState& from);
  void MergeFrom(const CUserMessageAnimStateGraphState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUserMessageAnimStateGraphState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional int32 entity_index = 1;
  bool has_entity_index() const;
  void clear_entity_index();
  static const int kEntityIndexFieldNumber = 1;
  ::google::protobuf::int32 entity_index() const;
  void set_entity_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CUserMessageAnimStateGraphState)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::int32 entity_index_;
  friend struct ::TableStruct_usermessages_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CUserMessageAchievementEvent

// optional uint32 achievement = 1;
inline bool CUserMessageAchievementEvent::has_achievement() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageAchievementEvent::clear_achievement() {
  achievement_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CUserMessageAchievementEvent::achievement() const {
  // @@protoc_insertion_point(field_get:CUserMessageAchievementEvent.achievement)
  return achievement_;
}
inline void CUserMessageAchievementEvent::set_achievement(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  achievement_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageAchievementEvent.achievement)
}

// -------------------------------------------------------------------

// CUserMessageCloseCaption

// optional fixed32 hash = 1;
inline bool CUserMessageCloseCaption::has_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageCloseCaption::clear_hash() {
  hash_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CUserMessageCloseCaption::hash() const {
  // @@protoc_insertion_point(field_get:CUserMessageCloseCaption.hash)
  return hash_;
}
inline void CUserMessageCloseCaption::set_hash(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  hash_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageCloseCaption.hash)
}

// optional float duration = 2;
inline bool CUserMessageCloseCaption::has_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMessageCloseCaption::clear_duration() {
  duration_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CUserMessageCloseCaption::duration() const {
  // @@protoc_insertion_point(field_get:CUserMessageCloseCaption.duration)
  return duration_;
}
inline void CUserMessageCloseCaption::set_duration(float value) {
  _has_bits_[0] |= 0x00000002u;
  duration_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageCloseCaption.duration)
}

// optional bool from_player = 3;
inline bool CUserMessageCloseCaption::has_from_player() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMessageCloseCaption::clear_from_player() {
  from_player_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CUserMessageCloseCaption::from_player() const {
  // @@protoc_insertion_point(field_get:CUserMessageCloseCaption.from_player)
  return from_player_;
}
inline void CUserMessageCloseCaption::set_from_player(bool value) {
  _has_bits_[0] |= 0x00000004u;
  from_player_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageCloseCaption.from_player)
}

// optional int32 ent_index = 4;
inline bool CUserMessageCloseCaption::has_ent_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUserMessageCloseCaption::clear_ent_index() {
  ent_index_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 CUserMessageCloseCaption::ent_index() const {
  // @@protoc_insertion_point(field_get:CUserMessageCloseCaption.ent_index)
  return ent_index_;
}
inline void CUserMessageCloseCaption::set_ent_index(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  ent_index_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageCloseCaption.ent_index)
}

// -------------------------------------------------------------------

// CUserMessageCloseCaptionDirect

// optional fixed32 hash = 1;
inline bool CUserMessageCloseCaptionDirect::has_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageCloseCaptionDirect::clear_hash() {
  hash_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CUserMessageCloseCaptionDirect::hash() const {
  // @@protoc_insertion_point(field_get:CUserMessageCloseCaptionDirect.hash)
  return hash_;
}
inline void CUserMessageCloseCaptionDirect::set_hash(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  hash_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageCloseCaptionDirect.hash)
}

// optional float duration = 2;
inline bool CUserMessageCloseCaptionDirect::has_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMessageCloseCaptionDirect::clear_duration() {
  duration_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CUserMessageCloseCaptionDirect::duration() const {
  // @@protoc_insertion_point(field_get:CUserMessageCloseCaptionDirect.duration)
  return duration_;
}
inline void CUserMessageCloseCaptionDirect::set_duration(float value) {
  _has_bits_[0] |= 0x00000002u;
  duration_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageCloseCaptionDirect.duration)
}

// optional bool from_player = 3;
inline bool CUserMessageCloseCaptionDirect::has_from_player() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMessageCloseCaptionDirect::clear_from_player() {
  from_player_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CUserMessageCloseCaptionDirect::from_player() const {
  // @@protoc_insertion_point(field_get:CUserMessageCloseCaptionDirect.from_player)
  return from_player_;
}
inline void CUserMessageCloseCaptionDirect::set_from_player(bool value) {
  _has_bits_[0] |= 0x00000004u;
  from_player_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageCloseCaptionDirect.from_player)
}

// optional int32 ent_index = 4;
inline bool CUserMessageCloseCaptionDirect::has_ent_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUserMessageCloseCaptionDirect::clear_ent_index() {
  ent_index_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 CUserMessageCloseCaptionDirect::ent_index() const {
  // @@protoc_insertion_point(field_get:CUserMessageCloseCaptionDirect.ent_index)
  return ent_index_;
}
inline void CUserMessageCloseCaptionDirect::set_ent_index(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  ent_index_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageCloseCaptionDirect.ent_index)
}

// -------------------------------------------------------------------

// CUserMessageCloseCaptionPlaceholder

// optional string string = 1;
inline bool CUserMessageCloseCaptionPlaceholder::has_string() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageCloseCaptionPlaceholder::clear_string() {
  string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CUserMessageCloseCaptionPlaceholder::string() const {
  // @@protoc_insertion_point(field_get:CUserMessageCloseCaptionPlaceholder.string)
  return string_.GetNoArena();
}
inline void CUserMessageCloseCaptionPlaceholder::set_string(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CUserMessageCloseCaptionPlaceholder.string)
}
#if LANG_CXX11
inline void CUserMessageCloseCaptionPlaceholder::set_string(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CUserMessageCloseCaptionPlaceholder.string)
}
#endif
inline void CUserMessageCloseCaptionPlaceholder::set_string(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CUserMessageCloseCaptionPlaceholder.string)
}
inline void CUserMessageCloseCaptionPlaceholder::set_string(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CUserMessageCloseCaptionPlaceholder.string)
}
inline ::std::string* CUserMessageCloseCaptionPlaceholder::mutable_string() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:CUserMessageCloseCaptionPlaceholder.string)
  return string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CUserMessageCloseCaptionPlaceholder::release_string() {
  // @@protoc_insertion_point(field_release:CUserMessageCloseCaptionPlaceholder.string)
  if (!has_string()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return string_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CUserMessageCloseCaptionPlaceholder::set_allocated_string(::std::string* string) {
  if (string != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string);
  // @@protoc_insertion_point(field_set_allocated:CUserMessageCloseCaptionPlaceholder.string)
}

// optional float duration = 2;
inline bool CUserMessageCloseCaptionPlaceholder::has_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMessageCloseCaptionPlaceholder::clear_duration() {
  duration_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CUserMessageCloseCaptionPlaceholder::duration() const {
  // @@protoc_insertion_point(field_get:CUserMessageCloseCaptionPlaceholder.duration)
  return duration_;
}
inline void CUserMessageCloseCaptionPlaceholder::set_duration(float value) {
  _has_bits_[0] |= 0x00000002u;
  duration_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageCloseCaptionPlaceholder.duration)
}

// optional bool from_player = 3;
inline bool CUserMessageCloseCaptionPlaceholder::has_from_player() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMessageCloseCaptionPlaceholder::clear_from_player() {
  from_player_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CUserMessageCloseCaptionPlaceholder::from_player() const {
  // @@protoc_insertion_point(field_get:CUserMessageCloseCaptionPlaceholder.from_player)
  return from_player_;
}
inline void CUserMessageCloseCaptionPlaceholder::set_from_player(bool value) {
  _has_bits_[0] |= 0x00000004u;
  from_player_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageCloseCaptionPlaceholder.from_player)
}

// optional int32 ent_index = 4;
inline bool CUserMessageCloseCaptionPlaceholder::has_ent_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUserMessageCloseCaptionPlaceholder::clear_ent_index() {
  ent_index_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 CUserMessageCloseCaptionPlaceholder::ent_index() const {
  // @@protoc_insertion_point(field_get:CUserMessageCloseCaptionPlaceholder.ent_index)
  return ent_index_;
}
inline void CUserMessageCloseCaptionPlaceholder::set_ent_index(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  ent_index_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageCloseCaptionPlaceholder.ent_index)
}

// -------------------------------------------------------------------

// CUserMessageCurrentTimescale

// optional float current = 1;
inline bool CUserMessageCurrentTimescale::has_current() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageCurrentTimescale::clear_current() {
  current_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float CUserMessageCurrentTimescale::current() const {
  // @@protoc_insertion_point(field_get:CUserMessageCurrentTimescale.current)
  return current_;
}
inline void CUserMessageCurrentTimescale::set_current(float value) {
  _has_bits_[0] |= 0x00000001u;
  current_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageCurrentTimescale.current)
}

// -------------------------------------------------------------------

// CUserMessageDesiredTimescale

// optional float desired = 1;
inline bool CUserMessageDesiredTimescale::has_desired() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageDesiredTimescale::clear_desired() {
  desired_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float CUserMessageDesiredTimescale::desired() const {
  // @@protoc_insertion_point(field_get:CUserMessageDesiredTimescale.desired)
  return desired_;
}
inline void CUserMessageDesiredTimescale::set_desired(float value) {
  _has_bits_[0] |= 0x00000001u;
  desired_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageDesiredTimescale.desired)
}

// optional float acceleration = 2;
inline bool CUserMessageDesiredTimescale::has_acceleration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMessageDesiredTimescale::clear_acceleration() {
  acceleration_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CUserMessageDesiredTimescale::acceleration() const {
  // @@protoc_insertion_point(field_get:CUserMessageDesiredTimescale.acceleration)
  return acceleration_;
}
inline void CUserMessageDesiredTimescale::set_acceleration(float value) {
  _has_bits_[0] |= 0x00000002u;
  acceleration_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageDesiredTimescale.acceleration)
}

// optional float minblendrate = 3;
inline bool CUserMessageDesiredTimescale::has_minblendrate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMessageDesiredTimescale::clear_minblendrate() {
  minblendrate_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CUserMessageDesiredTimescale::minblendrate() const {
  // @@protoc_insertion_point(field_get:CUserMessageDesiredTimescale.minblendrate)
  return minblendrate_;
}
inline void CUserMessageDesiredTimescale::set_minblendrate(float value) {
  _has_bits_[0] |= 0x00000004u;
  minblendrate_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageDesiredTimescale.minblendrate)
}

// optional float blenddeltamultiplier = 4;
inline bool CUserMessageDesiredTimescale::has_blenddeltamultiplier() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUserMessageDesiredTimescale::clear_blenddeltamultiplier() {
  blenddeltamultiplier_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float CUserMessageDesiredTimescale::blenddeltamultiplier() const {
  // @@protoc_insertion_point(field_get:CUserMessageDesiredTimescale.blenddeltamultiplier)
  return blenddeltamultiplier_;
}
inline void CUserMessageDesiredTimescale::set_blenddeltamultiplier(float value) {
  _has_bits_[0] |= 0x00000008u;
  blenddeltamultiplier_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageDesiredTimescale.blenddeltamultiplier)
}

// -------------------------------------------------------------------

// CUserMessageFade

// optional uint32 duration = 1;
inline bool CUserMessageFade::has_duration() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageFade::clear_duration() {
  duration_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CUserMessageFade::duration() const {
  // @@protoc_insertion_point(field_get:CUserMessageFade.duration)
  return duration_;
}
inline void CUserMessageFade::set_duration(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  duration_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageFade.duration)
}

// optional uint32 hold_time = 2;
inline bool CUserMessageFade::has_hold_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMessageFade::clear_hold_time() {
  hold_time_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CUserMessageFade::hold_time() const {
  // @@protoc_insertion_point(field_get:CUserMessageFade.hold_time)
  return hold_time_;
}
inline void CUserMessageFade::set_hold_time(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  hold_time_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageFade.hold_time)
}

// optional uint32 flags = 3;
inline bool CUserMessageFade::has_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMessageFade::clear_flags() {
  flags_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CUserMessageFade::flags() const {
  // @@protoc_insertion_point(field_get:CUserMessageFade.flags)
  return flags_;
}
inline void CUserMessageFade::set_flags(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  flags_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageFade.flags)
}

// optional fixed32 color = 4;
inline bool CUserMessageFade::has_color() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUserMessageFade::clear_color() {
  color_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CUserMessageFade::color() const {
  // @@protoc_insertion_point(field_get:CUserMessageFade.color)
  return color_;
}
inline void CUserMessageFade::set_color(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  color_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageFade.color)
}

// -------------------------------------------------------------------

// CUserMessageShake

// optional uint32 command = 1;
inline bool CUserMessageShake::has_command() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageShake::clear_command() {
  command_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CUserMessageShake::command() const {
  // @@protoc_insertion_point(field_get:CUserMessageShake.command)
  return command_;
}
inline void CUserMessageShake::set_command(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  command_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageShake.command)
}

// optional float amplitude = 2;
inline bool CUserMessageShake::has_amplitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMessageShake::clear_amplitude() {
  amplitude_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CUserMessageShake::amplitude() const {
  // @@protoc_insertion_point(field_get:CUserMessageShake.amplitude)
  return amplitude_;
}
inline void CUserMessageShake::set_amplitude(float value) {
  _has_bits_[0] |= 0x00000002u;
  amplitude_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageShake.amplitude)
}

// optional float frequency = 3;
inline bool CUserMessageShake::has_frequency() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMessageShake::clear_frequency() {
  frequency_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CUserMessageShake::frequency() const {
  // @@protoc_insertion_point(field_get:CUserMessageShake.frequency)
  return frequency_;
}
inline void CUserMessageShake::set_frequency(float value) {
  _has_bits_[0] |= 0x00000004u;
  frequency_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageShake.frequency)
}

// optional float duration = 4;
inline bool CUserMessageShake::has_duration() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUserMessageShake::clear_duration() {
  duration_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float CUserMessageShake::duration() const {
  // @@protoc_insertion_point(field_get:CUserMessageShake.duration)
  return duration_;
}
inline void CUserMessageShake::set_duration(float value) {
  _has_bits_[0] |= 0x00000008u;
  duration_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageShake.duration)
}

// -------------------------------------------------------------------

// CUserMessageShakeDir

// optional .CUserMessageShake shake = 1;
inline bool CUserMessageShakeDir::has_shake() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageShakeDir::clear_shake() {
  if (shake_ != nullptr) shake_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CUserMessageShake& CUserMessageShakeDir::shake() const {
  const ::CUserMessageShake* p = shake_;
  // @@protoc_insertion_point(field_get:CUserMessageShakeDir.shake)
  return p != nullptr ? *p : *reinterpret_cast<const ::CUserMessageShake*>(
      &::_CUserMessageShake_default_instance_);
}
inline ::CUserMessageShake* CUserMessageShakeDir::release_shake() {
  // @@protoc_insertion_point(field_release:CUserMessageShakeDir.shake)
  _has_bits_[0] &= ~0x00000001u;
  ::CUserMessageShake* temp = shake_;
  shake_ = nullptr;
  return temp;
}
inline ::CUserMessageShake* CUserMessageShakeDir::mutable_shake() {
  _has_bits_[0] |= 0x00000001u;
  if (shake_ == nullptr) {
    auto* p = CreateMaybeMessage<::CUserMessageShake>(GetArenaNoVirtual());
    shake_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMessageShakeDir.shake)
  return shake_;
}
inline void CUserMessageShakeDir::set_allocated_shake(::CUserMessageShake* shake) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete shake_;
  }
  if (shake) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      shake = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, shake, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  shake_ = shake;
  // @@protoc_insertion_point(field_set_allocated:CUserMessageShakeDir.shake)
}

// optional .CMsgVector direction = 2;
inline bool CUserMessageShakeDir::has_direction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline const ::CMsgVector& CUserMessageShakeDir::direction() const {
  const ::CMsgVector* p = direction_;
  // @@protoc_insertion_point(field_get:CUserMessageShakeDir.direction)
  return p != nullptr ? *p : *reinterpret_cast<const ::CMsgVector*>(
      &::_CMsgVector_default_instance_);
}
inline ::CMsgVector* CUserMessageShakeDir::release_direction() {
  // @@protoc_insertion_point(field_release:CUserMessageShakeDir.direction)
  _has_bits_[0] &= ~0x00000002u;
  ::CMsgVector* temp = direction_;
  direction_ = nullptr;
  return temp;
}
inline ::CMsgVector* CUserMessageShakeDir::mutable_direction() {
  _has_bits_[0] |= 0x00000002u;
  if (direction_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArenaNoVirtual());
    direction_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMessageShakeDir.direction)
  return direction_;
}
inline void CUserMessageShakeDir::set_allocated_direction(::CMsgVector* direction) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(direction_);
  }
  if (direction) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      direction = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, direction, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  direction_ = direction;
  // @@protoc_insertion_point(field_set_allocated:CUserMessageShakeDir.direction)
}

// -------------------------------------------------------------------

// CUserMessageScreenTilt

// optional uint32 command = 1;
inline bool CUserMessageScreenTilt::has_command() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMessageScreenTilt::clear_command() {
  command_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CUserMessageScreenTilt::command() const {
  // @@protoc_insertion_point(field_get:CUserMessageScreenTilt.command)
  return command_;
}
inline void CUserMessageScreenTilt::set_command(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  command_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageScreenTilt.command)
}

// optional bool ease_in_out = 2;
inline bool CUserMessageScreenTilt::has_ease_in_out() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMessageScreenTilt::clear_ease_in_out() {
  ease_in_out_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CUserMessageScreenTilt::ease_in_out() const {
  // @@protoc_insertion_point(field_get:CUserMessageScreenTilt.ease_in_out)
  return ease_in_out_;
}
inline void CUserMessageScreenTilt::set_ease_in_out(bool value) {
  _has_bits_[0] |= 0x00000004u;
  ease_in_out_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageScreenTilt.ease_in_out)
}

// optional .CMsgVector angle = 3;
inline bool CUserMessageScreenTilt::has_angle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::CMsgVector& CUserMessageScreenTilt::angle() const {
  const ::CMsgVector* p = angle_;
  // @@protoc_insertion_point(field_get:CUserMessageScreenTilt.angle)
  return p != nullptr ? *p : *reinterpret_cast<const ::CMsgVector*>(
      &::_CMsgVector_default_instance_);
}
inline ::CMsgVector* CUserMessageScreenTilt::release_angle() {
  // @@protoc_insertion_point(field_release:CUserMessageScreenTilt.angle)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = angle_;
  angle_ = nullptr;
  return temp;
}
inline ::CMsgVector* CUserMessageScreenTilt::mutable_angle() {
  _has_bits_[0] |= 0x00000001u;
  if (angle_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArenaNoVirtual());
    angle_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMessageScreenTilt.angle)
  return angle_;
}
inline void CUserMessageScreenTilt::set_allocated_angle(::CMsgVector* angle) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(angle_);
  }
  if (angle) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      angle = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, angle, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  angle_ = angle;
  // @@protoc_insertion_point(field_set_allocated:CUserMessageScreenTilt.angle)
}

// optional float duration = 4;
inline bool CUserMessageScreenTilt::has_duration() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUserMessageScreenTilt::clear_duration() {
  duration_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float CUserMessageScreenTilt::duration() const {
  // @@protoc_insertion_point(field_get:CUserMessageScreenTilt.duration)
  return duration_;
}
inline void CUserMessageScreenTilt::set_duration(float value) {
  _has_bits_[0] |= 0x00000008u;
  duration_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageScreenTilt.duration)
}

// optional float time = 5;
inline bool CUserMessageScreenTilt::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CUserMessageScreenTilt::clear_time() {
  time_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline float CUserMessageScreenTilt::time() const {
  // @@protoc_insertion_point(field_get:CUserMessageScreenTilt.time)
  return time_;
}
inline void CUserMessageScreenTilt::set_time(float value) {
  _has_bits_[0] |= 0x00000010u;
  time_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageScreenTilt.time)
}

// -------------------------------------------------------------------

// CUserMessageSayText

// optional uint32 playerindex = 1;
inline bool CUserMessageSayText::has_playerindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMessageSayText::clear_playerindex() {
  playerindex_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CUserMessageSayText::playerindex() const {
  // @@protoc_insertion_point(field_get:CUserMessageSayText.playerindex)
  return playerindex_;
}
inline void CUserMessageSayText::set_playerindex(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  playerindex_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageSayText.playerindex)
}

// optional string text = 2;
inline bool CUserMessageSayText::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageSayText::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CUserMessageSayText::text() const {
  // @@protoc_insertion_point(field_get:CUserMessageSayText.text)
  return text_.GetNoArena();
}
inline void CUserMessageSayText::set_text(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CUserMessageSayText.text)
}
#if LANG_CXX11
inline void CUserMessageSayText::set_text(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CUserMessageSayText.text)
}
#endif
inline void CUserMessageSayText::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CUserMessageSayText.text)
}
inline void CUserMessageSayText::set_text(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CUserMessageSayText.text)
}
inline ::std::string* CUserMessageSayText::mutable_text() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:CUserMessageSayText.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CUserMessageSayText::release_text() {
  // @@protoc_insertion_point(field_release:CUserMessageSayText.text)
  if (!has_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return text_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CUserMessageSayText::set_allocated_text(::std::string* text) {
  if (text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:CUserMessageSayText.text)
}

// optional bool chat = 3;
inline bool CUserMessageSayText::has_chat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMessageSayText::clear_chat() {
  chat_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CUserMessageSayText::chat() const {
  // @@protoc_insertion_point(field_get:CUserMessageSayText.chat)
  return chat_;
}
inline void CUserMessageSayText::set_chat(bool value) {
  _has_bits_[0] |= 0x00000004u;
  chat_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageSayText.chat)
}

// -------------------------------------------------------------------

// CUserMessageSayText2

// optional uint32 entityindex = 1;
inline bool CUserMessageSayText2::has_entityindex() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CUserMessageSayText2::clear_entityindex() {
  entityindex_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CUserMessageSayText2::entityindex() const {
  // @@protoc_insertion_point(field_get:CUserMessageSayText2.entityindex)
  return entityindex_;
}
inline void CUserMessageSayText2::set_entityindex(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  entityindex_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageSayText2.entityindex)
}

// optional bool chat = 2;
inline bool CUserMessageSayText2::has_chat() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CUserMessageSayText2::clear_chat() {
  chat_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CUserMessageSayText2::chat() const {
  // @@protoc_insertion_point(field_get:CUserMessageSayText2.chat)
  return chat_;
}
inline void CUserMessageSayText2::set_chat(bool value) {
  _has_bits_[0] |= 0x00000040u;
  chat_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageSayText2.chat)
}

// optional string messagename = 3;
inline bool CUserMessageSayText2::has_messagename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageSayText2::clear_messagename() {
  messagename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CUserMessageSayText2::messagename() const {
  // @@protoc_insertion_point(field_get:CUserMessageSayText2.messagename)
  return messagename_.GetNoArena();
}
inline void CUserMessageSayText2::set_messagename(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  messagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CUserMessageSayText2.messagename)
}
#if LANG_CXX11
inline void CUserMessageSayText2::set_messagename(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  messagename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CUserMessageSayText2.messagename)
}
#endif
inline void CUserMessageSayText2::set_messagename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  messagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CUserMessageSayText2.messagename)
}
inline void CUserMessageSayText2::set_messagename(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  messagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CUserMessageSayText2.messagename)
}
inline ::std::string* CUserMessageSayText2::mutable_messagename() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:CUserMessageSayText2.messagename)
  return messagename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CUserMessageSayText2::release_messagename() {
  // @@protoc_insertion_point(field_release:CUserMessageSayText2.messagename)
  if (!has_messagename()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return messagename_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CUserMessageSayText2::set_allocated_messagename(::std::string* messagename) {
  if (messagename != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  messagename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), messagename);
  // @@protoc_insertion_point(field_set_allocated:CUserMessageSayText2.messagename)
}

// optional string param1 = 4;
inline bool CUserMessageSayText2::has_param1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMessageSayText2::clear_param1() {
  param1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CUserMessageSayText2::param1() const {
  // @@protoc_insertion_point(field_get:CUserMessageSayText2.param1)
  return param1_.GetNoArena();
}
inline void CUserMessageSayText2::set_param1(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  param1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CUserMessageSayText2.param1)
}
#if LANG_CXX11
inline void CUserMessageSayText2::set_param1(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  param1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CUserMessageSayText2.param1)
}
#endif
inline void CUserMessageSayText2::set_param1(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  param1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CUserMessageSayText2.param1)
}
inline void CUserMessageSayText2::set_param1(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  param1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CUserMessageSayText2.param1)
}
inline ::std::string* CUserMessageSayText2::mutable_param1() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:CUserMessageSayText2.param1)
  return param1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CUserMessageSayText2::release_param1() {
  // @@protoc_insertion_point(field_release:CUserMessageSayText2.param1)
  if (!has_param1()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return param1_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CUserMessageSayText2::set_allocated_param1(::std::string* param1) {
  if (param1 != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  param1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param1);
  // @@protoc_insertion_point(field_set_allocated:CUserMessageSayText2.param1)
}

// optional string param2 = 5;
inline bool CUserMessageSayText2::has_param2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMessageSayText2::clear_param2() {
  param2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& CUserMessageSayText2::param2() const {
  // @@protoc_insertion_point(field_get:CUserMessageSayText2.param2)
  return param2_.GetNoArena();
}
inline void CUserMessageSayText2::set_param2(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  param2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CUserMessageSayText2.param2)
}
#if LANG_CXX11
inline void CUserMessageSayText2::set_param2(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  param2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CUserMessageSayText2.param2)
}
#endif
inline void CUserMessageSayText2::set_param2(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  param2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CUserMessageSayText2.param2)
}
inline void CUserMessageSayText2::set_param2(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  param2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CUserMessageSayText2.param2)
}
inline ::std::string* CUserMessageSayText2::mutable_param2() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:CUserMessageSayText2.param2)
  return param2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CUserMessageSayText2::release_param2() {
  // @@protoc_insertion_point(field_release:CUserMessageSayText2.param2)
  if (!has_param2()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return param2_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CUserMessageSayText2::set_allocated_param2(::std::string* param2) {
  if (param2 != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  param2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param2);
  // @@protoc_insertion_point(field_set_allocated:CUserMessageSayText2.param2)
}

// optional string param3 = 6;
inline bool CUserMessageSayText2::has_param3() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUserMessageSayText2::clear_param3() {
  param3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::std::string& CUserMessageSayText2::param3() const {
  // @@protoc_insertion_point(field_get:CUserMessageSayText2.param3)
  return param3_.GetNoArena();
}
inline void CUserMessageSayText2::set_param3(const ::std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  param3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CUserMessageSayText2.param3)
}
#if LANG_CXX11
inline void CUserMessageSayText2::set_param3(::std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  param3_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CUserMessageSayText2.param3)
}
#endif
inline void CUserMessageSayText2::set_param3(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  param3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CUserMessageSayText2.param3)
}
inline void CUserMessageSayText2::set_param3(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  param3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CUserMessageSayText2.param3)
}
inline ::std::string* CUserMessageSayText2::mutable_param3() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:CUserMessageSayText2.param3)
  return param3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CUserMessageSayText2::release_param3() {
  // @@protoc_insertion_point(field_release:CUserMessageSayText2.param3)
  if (!has_param3()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return param3_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CUserMessageSayText2::set_allocated_param3(::std::string* param3) {
  if (param3 != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  param3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param3);
  // @@protoc_insertion_point(field_set_allocated:CUserMessageSayText2.param3)
}

// optional string param4 = 7;
inline bool CUserMessageSayText2::has_param4() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CUserMessageSayText2::clear_param4() {
  param4_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::std::string& CUserMessageSayText2::param4() const {
  // @@protoc_insertion_point(field_get:CUserMessageSayText2.param4)
  return param4_.GetNoArena();
}
inline void CUserMessageSayText2::set_param4(const ::std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  param4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CUserMessageSayText2.param4)
}
#if LANG_CXX11
inline void CUserMessageSayText2::set_param4(::std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  param4_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CUserMessageSayText2.param4)
}
#endif
inline void CUserMessageSayText2::set_param4(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  param4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CUserMessageSayText2.param4)
}
inline void CUserMessageSayText2::set_param4(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000010u;
  param4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CUserMessageSayText2.param4)
}
inline ::std::string* CUserMessageSayText2::mutable_param4() {
  _has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_mutable:CUserMessageSayText2.param4)
  return param4_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CUserMessageSayText2::release_param4() {
  // @@protoc_insertion_point(field_release:CUserMessageSayText2.param4)
  if (!has_param4()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return param4_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CUserMessageSayText2::set_allocated_param4(::std::string* param4) {
  if (param4 != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  param4_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param4);
  // @@protoc_insertion_point(field_set_allocated:CUserMessageSayText2.param4)
}

// -------------------------------------------------------------------

// CUserMessageHudMsg

// optional uint32 channel = 1;
inline bool CUserMessageHudMsg::has_channel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMessageHudMsg::clear_channel() {
  channel_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CUserMessageHudMsg::channel() const {
  // @@protoc_insertion_point(field_get:CUserMessageHudMsg.channel)
  return channel_;
}
inline void CUserMessageHudMsg::set_channel(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  channel_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageHudMsg.channel)
}

// optional float x = 2;
inline bool CUserMessageHudMsg::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMessageHudMsg::clear_x() {
  x_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CUserMessageHudMsg::x() const {
  // @@protoc_insertion_point(field_get:CUserMessageHudMsg.x)
  return x_;
}
inline void CUserMessageHudMsg::set_x(float value) {
  _has_bits_[0] |= 0x00000004u;
  x_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageHudMsg.x)
}

// optional float y = 3;
inline bool CUserMessageHudMsg::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUserMessageHudMsg::clear_y() {
  y_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float CUserMessageHudMsg::y() const {
  // @@protoc_insertion_point(field_get:CUserMessageHudMsg.y)
  return y_;
}
inline void CUserMessageHudMsg::set_y(float value) {
  _has_bits_[0] |= 0x00000008u;
  y_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageHudMsg.y)
}

// optional fixed32 color1 = 4;
inline bool CUserMessageHudMsg::has_color1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CUserMessageHudMsg::clear_color1() {
  color1_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CUserMessageHudMsg::color1() const {
  // @@protoc_insertion_point(field_get:CUserMessageHudMsg.color1)
  return color1_;
}
inline void CUserMessageHudMsg::set_color1(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  color1_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageHudMsg.color1)
}

// optional fixed32 color2 = 5;
inline bool CUserMessageHudMsg::has_color2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CUserMessageHudMsg::clear_color2() {
  color2_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CUserMessageHudMsg::color2() const {
  // @@protoc_insertion_point(field_get:CUserMessageHudMsg.color2)
  return color2_;
}
inline void CUserMessageHudMsg::set_color2(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  color2_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageHudMsg.color2)
}

// optional uint32 effect = 6;
inline bool CUserMessageHudMsg::has_effect() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CUserMessageHudMsg::clear_effect() {
  effect_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CUserMessageHudMsg::effect() const {
  // @@protoc_insertion_point(field_get:CUserMessageHudMsg.effect)
  return effect_;
}
inline void CUserMessageHudMsg::set_effect(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  effect_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageHudMsg.effect)
}

// optional float fade_in_time = 7;
inline bool CUserMessageHudMsg::has_fade_in_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CUserMessageHudMsg::clear_fade_in_time() {
  fade_in_time_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline float CUserMessageHudMsg::fade_in_time() const {
  // @@protoc_insertion_point(field_get:CUserMessageHudMsg.fade_in_time)
  return fade_in_time_;
}
inline void CUserMessageHudMsg::set_fade_in_time(float value) {
  _has_bits_[0] |= 0x00000080u;
  fade_in_time_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageHudMsg.fade_in_time)
}

// optional float fade_out_time = 8;
inline bool CUserMessageHudMsg::has_fade_out_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CUserMessageHudMsg::clear_fade_out_time() {
  fade_out_time_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline float CUserMessageHudMsg::fade_out_time() const {
  // @@protoc_insertion_point(field_get:CUserMessageHudMsg.fade_out_time)
  return fade_out_time_;
}
inline void CUserMessageHudMsg::set_fade_out_time(float value) {
  _has_bits_[0] |= 0x00000100u;
  fade_out_time_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageHudMsg.fade_out_time)
}

// optional float hold_time = 9;
inline bool CUserMessageHudMsg::has_hold_time() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CUserMessageHudMsg::clear_hold_time() {
  hold_time_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline float CUserMessageHudMsg::hold_time() const {
  // @@protoc_insertion_point(field_get:CUserMessageHudMsg.hold_time)
  return hold_time_;
}
inline void CUserMessageHudMsg::set_hold_time(float value) {
  _has_bits_[0] |= 0x00000200u;
  hold_time_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageHudMsg.hold_time)
}

// optional float fx_time = 10;
inline bool CUserMessageHudMsg::has_fx_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CUserMessageHudMsg::clear_fx_time() {
  fx_time_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline float CUserMessageHudMsg::fx_time() const {
  // @@protoc_insertion_point(field_get:CUserMessageHudMsg.fx_time)
  return fx_time_;
}
inline void CUserMessageHudMsg::set_fx_time(float value) {
  _has_bits_[0] |= 0x00000400u;
  fx_time_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageHudMsg.fx_time)
}

// optional string message = 11;
inline bool CUserMessageHudMsg::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageHudMsg::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CUserMessageHudMsg::message() const {
  // @@protoc_insertion_point(field_get:CUserMessageHudMsg.message)
  return message_.GetNoArena();
}
inline void CUserMessageHudMsg::set_message(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CUserMessageHudMsg.message)
}
#if LANG_CXX11
inline void CUserMessageHudMsg::set_message(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CUserMessageHudMsg.message)
}
#endif
inline void CUserMessageHudMsg::set_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CUserMessageHudMsg.message)
}
inline void CUserMessageHudMsg::set_message(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CUserMessageHudMsg.message)
}
inline ::std::string* CUserMessageHudMsg::mutable_message() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:CUserMessageHudMsg.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CUserMessageHudMsg::release_message() {
  // @@protoc_insertion_point(field_release:CUserMessageHudMsg.message)
  if (!has_message()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return message_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CUserMessageHudMsg::set_allocated_message(::std::string* message) {
  if (message != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CUserMessageHudMsg.message)
}

// -------------------------------------------------------------------

// CUserMessageHudText

// optional string message = 1;
inline bool CUserMessageHudText::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageHudText::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CUserMessageHudText::message() const {
  // @@protoc_insertion_point(field_get:CUserMessageHudText.message)
  return message_.GetNoArena();
}
inline void CUserMessageHudText::set_message(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CUserMessageHudText.message)
}
#if LANG_CXX11
inline void CUserMessageHudText::set_message(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CUserMessageHudText.message)
}
#endif
inline void CUserMessageHudText::set_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CUserMessageHudText.message)
}
inline void CUserMessageHudText::set_message(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CUserMessageHudText.message)
}
inline ::std::string* CUserMessageHudText::mutable_message() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:CUserMessageHudText.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CUserMessageHudText::release_message() {
  // @@protoc_insertion_point(field_release:CUserMessageHudText.message)
  if (!has_message()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return message_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CUserMessageHudText::set_allocated_message(::std::string* message) {
  if (message != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CUserMessageHudText.message)
}

// -------------------------------------------------------------------

// CUserMessageTextMsg

// optional uint32 dest = 1;
inline bool CUserMessageTextMsg::has_dest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageTextMsg::clear_dest() {
  dest_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CUserMessageTextMsg::dest() const {
  // @@protoc_insertion_point(field_get:CUserMessageTextMsg.dest)
  return dest_;
}
inline void CUserMessageTextMsg::set_dest(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  dest_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageTextMsg.dest)
}

// repeated string param = 2;
inline int CUserMessageTextMsg::param_size() const {
  return param_.size();
}
inline void CUserMessageTextMsg::clear_param() {
  param_.Clear();
}
inline const ::std::string& CUserMessageTextMsg::param(int index) const {
  // @@protoc_insertion_point(field_get:CUserMessageTextMsg.param)
  return param_.Get(index);
}
inline ::std::string* CUserMessageTextMsg::mutable_param(int index) {
  // @@protoc_insertion_point(field_mutable:CUserMessageTextMsg.param)
  return param_.Mutable(index);
}
inline void CUserMessageTextMsg::set_param(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CUserMessageTextMsg.param)
  param_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CUserMessageTextMsg::set_param(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:CUserMessageTextMsg.param)
  param_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CUserMessageTextMsg::set_param(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  param_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CUserMessageTextMsg.param)
}
inline void CUserMessageTextMsg::set_param(int index, const char* value, size_t size) {
  param_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CUserMessageTextMsg.param)
}
inline ::std::string* CUserMessageTextMsg::add_param() {
  // @@protoc_insertion_point(field_add_mutable:CUserMessageTextMsg.param)
  return param_.Add();
}
inline void CUserMessageTextMsg::add_param(const ::std::string& value) {
  param_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CUserMessageTextMsg.param)
}
#if LANG_CXX11
inline void CUserMessageTextMsg::add_param(::std::string&& value) {
  param_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CUserMessageTextMsg.param)
}
#endif
inline void CUserMessageTextMsg::add_param(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  param_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CUserMessageTextMsg.param)
}
inline void CUserMessageTextMsg::add_param(const char* value, size_t size) {
  param_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CUserMessageTextMsg.param)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
CUserMessageTextMsg::param() const {
  // @@protoc_insertion_point(field_list:CUserMessageTextMsg.param)
  return param_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
CUserMessageTextMsg::mutable_param() {
  // @@protoc_insertion_point(field_mutable_list:CUserMessageTextMsg.param)
  return &param_;
}

// -------------------------------------------------------------------

// CUserMessageGameTitle

// -------------------------------------------------------------------

// CUserMessageResetHUD

// -------------------------------------------------------------------

// CUserMessageSendAudio

// optional string soundname = 1;
inline bool CUserMessageSendAudio::has_soundname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageSendAudio::clear_soundname() {
  soundname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CUserMessageSendAudio::soundname() const {
  // @@protoc_insertion_point(field_get:CUserMessageSendAudio.soundname)
  return soundname_.GetNoArena();
}
inline void CUserMessageSendAudio::set_soundname(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  soundname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CUserMessageSendAudio.soundname)
}
#if LANG_CXX11
inline void CUserMessageSendAudio::set_soundname(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  soundname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CUserMessageSendAudio.soundname)
}
#endif
inline void CUserMessageSendAudio::set_soundname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  soundname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CUserMessageSendAudio.soundname)
}
inline void CUserMessageSendAudio::set_soundname(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  soundname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CUserMessageSendAudio.soundname)
}
inline ::std::string* CUserMessageSendAudio::mutable_soundname() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:CUserMessageSendAudio.soundname)
  return soundname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CUserMessageSendAudio::release_soundname() {
  // @@protoc_insertion_point(field_release:CUserMessageSendAudio.soundname)
  if (!has_soundname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return soundname_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CUserMessageSendAudio::set_allocated_soundname(::std::string* soundname) {
  if (soundname != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  soundname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), soundname);
  // @@protoc_insertion_point(field_set_allocated:CUserMessageSendAudio.soundname)
}

// optional bool stop = 2;
inline bool CUserMessageSendAudio::has_stop() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMessageSendAudio::clear_stop() {
  stop_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CUserMessageSendAudio::stop() const {
  // @@protoc_insertion_point(field_get:CUserMessageSendAudio.stop)
  return stop_;
}
inline void CUserMessageSendAudio::set_stop(bool value) {
  _has_bits_[0] |= 0x00000002u;
  stop_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageSendAudio.stop)
}

// -------------------------------------------------------------------

// CUserMessageAudioParameter

// optional uint32 parameter_type = 1;
inline bool CUserMessageAudioParameter::has_parameter_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageAudioParameter::clear_parameter_type() {
  parameter_type_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CUserMessageAudioParameter::parameter_type() const {
  // @@protoc_insertion_point(field_get:CUserMessageAudioParameter.parameter_type)
  return parameter_type_;
}
inline void CUserMessageAudioParameter::set_parameter_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  parameter_type_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageAudioParameter.parameter_type)
}

// optional uint32 name_hash_code = 2;
inline bool CUserMessageAudioParameter::has_name_hash_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMessageAudioParameter::clear_name_hash_code() {
  name_hash_code_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CUserMessageAudioParameter::name_hash_code() const {
  // @@protoc_insertion_point(field_get:CUserMessageAudioParameter.name_hash_code)
  return name_hash_code_;
}
inline void CUserMessageAudioParameter::set_name_hash_code(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  name_hash_code_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageAudioParameter.name_hash_code)
}

// optional float value = 3;
inline bool CUserMessageAudioParameter::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMessageAudioParameter::clear_value() {
  value_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CUserMessageAudioParameter::value() const {
  // @@protoc_insertion_point(field_get:CUserMessageAudioParameter.value)
  return value_;
}
inline void CUserMessageAudioParameter::set_value(float value) {
  _has_bits_[0] |= 0x00000004u;
  value_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageAudioParameter.value)
}

// optional uint32 int_value = 4;
inline bool CUserMessageAudioParameter::has_int_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUserMessageAudioParameter::clear_int_value() {
  int_value_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CUserMessageAudioParameter::int_value() const {
  // @@protoc_insertion_point(field_get:CUserMessageAudioParameter.int_value)
  return int_value_;
}
inline void CUserMessageAudioParameter::set_int_value(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  int_value_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageAudioParameter.int_value)
}

// -------------------------------------------------------------------

// CUserMessageVoiceMask

// repeated uint32 gamerules_masks = 1;
inline int CUserMessageVoiceMask::gamerules_masks_size() const {
  return gamerules_masks_.size();
}
inline void CUserMessageVoiceMask::clear_gamerules_masks() {
  gamerules_masks_.Clear();
}
inline ::google::protobuf::uint32 CUserMessageVoiceMask::gamerules_masks(int index) const {
  // @@protoc_insertion_point(field_get:CUserMessageVoiceMask.gamerules_masks)
  return gamerules_masks_.Get(index);
}
inline void CUserMessageVoiceMask::set_gamerules_masks(int index, ::google::protobuf::uint32 value) {
  gamerules_masks_.Set(index, value);
  // @@protoc_insertion_point(field_set:CUserMessageVoiceMask.gamerules_masks)
}
inline void CUserMessageVoiceMask::add_gamerules_masks(::google::protobuf::uint32 value) {
  gamerules_masks_.Add(value);
  // @@protoc_insertion_point(field_add:CUserMessageVoiceMask.gamerules_masks)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CUserMessageVoiceMask::gamerules_masks() const {
  // @@protoc_insertion_point(field_list:CUserMessageVoiceMask.gamerules_masks)
  return gamerules_masks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CUserMessageVoiceMask::mutable_gamerules_masks() {
  // @@protoc_insertion_point(field_mutable_list:CUserMessageVoiceMask.gamerules_masks)
  return &gamerules_masks_;
}

// repeated uint32 ban_masks = 2;
inline int CUserMessageVoiceMask::ban_masks_size() const {
  return ban_masks_.size();
}
inline void CUserMessageVoiceMask::clear_ban_masks() {
  ban_masks_.Clear();
}
inline ::google::protobuf::uint32 CUserMessageVoiceMask::ban_masks(int index) const {
  // @@protoc_insertion_point(field_get:CUserMessageVoiceMask.ban_masks)
  return ban_masks_.Get(index);
}
inline void CUserMessageVoiceMask::set_ban_masks(int index, ::google::protobuf::uint32 value) {
  ban_masks_.Set(index, value);
  // @@protoc_insertion_point(field_set:CUserMessageVoiceMask.ban_masks)
}
inline void CUserMessageVoiceMask::add_ban_masks(::google::protobuf::uint32 value) {
  ban_masks_.Add(value);
  // @@protoc_insertion_point(field_add:CUserMessageVoiceMask.ban_masks)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CUserMessageVoiceMask::ban_masks() const {
  // @@protoc_insertion_point(field_list:CUserMessageVoiceMask.ban_masks)
  return ban_masks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CUserMessageVoiceMask::mutable_ban_masks() {
  // @@protoc_insertion_point(field_mutable_list:CUserMessageVoiceMask.ban_masks)
  return &ban_masks_;
}

// optional bool mod_enable = 3;
inline bool CUserMessageVoiceMask::has_mod_enable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageVoiceMask::clear_mod_enable() {
  mod_enable_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CUserMessageVoiceMask::mod_enable() const {
  // @@protoc_insertion_point(field_get:CUserMessageVoiceMask.mod_enable)
  return mod_enable_;
}
inline void CUserMessageVoiceMask::set_mod_enable(bool value) {
  _has_bits_[0] |= 0x00000001u;
  mod_enable_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageVoiceMask.mod_enable)
}

// -------------------------------------------------------------------

// CUserMessageRequestState

// -------------------------------------------------------------------

// CUserMessageHintText

// optional string message = 1;
inline bool CUserMessageHintText::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageHintText::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CUserMessageHintText::message() const {
  // @@protoc_insertion_point(field_get:CUserMessageHintText.message)
  return message_.GetNoArena();
}
inline void CUserMessageHintText::set_message(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CUserMessageHintText.message)
}
#if LANG_CXX11
inline void CUserMessageHintText::set_message(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CUserMessageHintText.message)
}
#endif
inline void CUserMessageHintText::set_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CUserMessageHintText.message)
}
inline void CUserMessageHintText::set_message(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CUserMessageHintText.message)
}
inline ::std::string* CUserMessageHintText::mutable_message() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:CUserMessageHintText.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CUserMessageHintText::release_message() {
  // @@protoc_insertion_point(field_release:CUserMessageHintText.message)
  if (!has_message()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return message_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CUserMessageHintText::set_allocated_message(::std::string* message) {
  if (message != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CUserMessageHintText.message)
}

// -------------------------------------------------------------------

// CUserMessageKeyHintText

// repeated string messages = 1;
inline int CUserMessageKeyHintText::messages_size() const {
  return messages_.size();
}
inline void CUserMessageKeyHintText::clear_messages() {
  messages_.Clear();
}
inline const ::std::string& CUserMessageKeyHintText::messages(int index) const {
  // @@protoc_insertion_point(field_get:CUserMessageKeyHintText.messages)
  return messages_.Get(index);
}
inline ::std::string* CUserMessageKeyHintText::mutable_messages(int index) {
  // @@protoc_insertion_point(field_mutable:CUserMessageKeyHintText.messages)
  return messages_.Mutable(index);
}
inline void CUserMessageKeyHintText::set_messages(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CUserMessageKeyHintText.messages)
  messages_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CUserMessageKeyHintText::set_messages(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:CUserMessageKeyHintText.messages)
  messages_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CUserMessageKeyHintText::set_messages(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  messages_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CUserMessageKeyHintText.messages)
}
inline void CUserMessageKeyHintText::set_messages(int index, const char* value, size_t size) {
  messages_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CUserMessageKeyHintText.messages)
}
inline ::std::string* CUserMessageKeyHintText::add_messages() {
  // @@protoc_insertion_point(field_add_mutable:CUserMessageKeyHintText.messages)
  return messages_.Add();
}
inline void CUserMessageKeyHintText::add_messages(const ::std::string& value) {
  messages_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CUserMessageKeyHintText.messages)
}
#if LANG_CXX11
inline void CUserMessageKeyHintText::add_messages(::std::string&& value) {
  messages_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CUserMessageKeyHintText.messages)
}
#endif
inline void CUserMessageKeyHintText::add_messages(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  messages_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CUserMessageKeyHintText.messages)
}
inline void CUserMessageKeyHintText::add_messages(const char* value, size_t size) {
  messages_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CUserMessageKeyHintText.messages)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
CUserMessageKeyHintText::messages() const {
  // @@protoc_insertion_point(field_list:CUserMessageKeyHintText.messages)
  return messages_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
CUserMessageKeyHintText::mutable_messages() {
  // @@protoc_insertion_point(field_mutable_list:CUserMessageKeyHintText.messages)
  return &messages_;
}

// -------------------------------------------------------------------

// CUserMessageVoiceSubtitle

// optional int32 player = 1;
inline bool CUserMessageVoiceSubtitle::has_player() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageVoiceSubtitle::clear_player() {
  player_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 CUserMessageVoiceSubtitle::player() const {
  // @@protoc_insertion_point(field_get:CUserMessageVoiceSubtitle.player)
  return player_;
}
inline void CUserMessageVoiceSubtitle::set_player(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageVoiceSubtitle.player)
}

// optional int32 menu = 2;
inline bool CUserMessageVoiceSubtitle::has_menu() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMessageVoiceSubtitle::clear_menu() {
  menu_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CUserMessageVoiceSubtitle::menu() const {
  // @@protoc_insertion_point(field_get:CUserMessageVoiceSubtitle.menu)
  return menu_;
}
inline void CUserMessageVoiceSubtitle::set_menu(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  menu_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageVoiceSubtitle.menu)
}

// optional int32 item = 3;
inline bool CUserMessageVoiceSubtitle::has_item() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMessageVoiceSubtitle::clear_item() {
  item_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CUserMessageVoiceSubtitle::item() const {
  // @@protoc_insertion_point(field_get:CUserMessageVoiceSubtitle.item)
  return item_;
}
inline void CUserMessageVoiceSubtitle::set_item(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  item_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageVoiceSubtitle.item)
}

// -------------------------------------------------------------------

// CUserMessageVGUIMenu_Keys

// optional string name = 1;
inline bool CUserMessageVGUIMenu_Keys::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageVGUIMenu_Keys::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CUserMessageVGUIMenu_Keys::name() const {
  // @@protoc_insertion_point(field_get:CUserMessageVGUIMenu.Keys.name)
  return name_.GetNoArena();
}
inline void CUserMessageVGUIMenu_Keys::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CUserMessageVGUIMenu.Keys.name)
}
#if LANG_CXX11
inline void CUserMessageVGUIMenu_Keys::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CUserMessageVGUIMenu.Keys.name)
}
#endif
inline void CUserMessageVGUIMenu_Keys::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CUserMessageVGUIMenu.Keys.name)
}
inline void CUserMessageVGUIMenu_Keys::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CUserMessageVGUIMenu.Keys.name)
}
inline ::std::string* CUserMessageVGUIMenu_Keys::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:CUserMessageVGUIMenu.Keys.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CUserMessageVGUIMenu_Keys::release_name() {
  // @@protoc_insertion_point(field_release:CUserMessageVGUIMenu.Keys.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CUserMessageVGUIMenu_Keys::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CUserMessageVGUIMenu.Keys.name)
}

// optional string value = 2;
inline bool CUserMessageVGUIMenu_Keys::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMessageVGUIMenu_Keys::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CUserMessageVGUIMenu_Keys::value() const {
  // @@protoc_insertion_point(field_get:CUserMessageVGUIMenu.Keys.value)
  return value_.GetNoArena();
}
inline void CUserMessageVGUIMenu_Keys::set_value(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CUserMessageVGUIMenu.Keys.value)
}
#if LANG_CXX11
inline void CUserMessageVGUIMenu_Keys::set_value(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CUserMessageVGUIMenu.Keys.value)
}
#endif
inline void CUserMessageVGUIMenu_Keys::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CUserMessageVGUIMenu.Keys.value)
}
inline void CUserMessageVGUIMenu_Keys::set_value(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CUserMessageVGUIMenu.Keys.value)
}
inline ::std::string* CUserMessageVGUIMenu_Keys::mutable_value() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:CUserMessageVGUIMenu.Keys.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CUserMessageVGUIMenu_Keys::release_value() {
  // @@protoc_insertion_point(field_release:CUserMessageVGUIMenu.Keys.value)
  if (!has_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CUserMessageVGUIMenu_Keys::set_allocated_value(::std::string* value) {
  if (value != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:CUserMessageVGUIMenu.Keys.value)
}

// -------------------------------------------------------------------

// CUserMessageVGUIMenu

// optional string name = 1;
inline bool CUserMessageVGUIMenu::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageVGUIMenu::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CUserMessageVGUIMenu::name() const {
  // @@protoc_insertion_point(field_get:CUserMessageVGUIMenu.name)
  return name_.GetNoArena();
}
inline void CUserMessageVGUIMenu::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CUserMessageVGUIMenu.name)
}
#if LANG_CXX11
inline void CUserMessageVGUIMenu::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CUserMessageVGUIMenu.name)
}
#endif
inline void CUserMessageVGUIMenu::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CUserMessageVGUIMenu.name)
}
inline void CUserMessageVGUIMenu::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CUserMessageVGUIMenu.name)
}
inline ::std::string* CUserMessageVGUIMenu::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:CUserMessageVGUIMenu.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CUserMessageVGUIMenu::release_name() {
  // @@protoc_insertion_point(field_release:CUserMessageVGUIMenu.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CUserMessageVGUIMenu::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CUserMessageVGUIMenu.name)
}

// optional bool show = 2;
inline bool CUserMessageVGUIMenu::has_show() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMessageVGUIMenu::clear_show() {
  show_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CUserMessageVGUIMenu::show() const {
  // @@protoc_insertion_point(field_get:CUserMessageVGUIMenu.show)
  return show_;
}
inline void CUserMessageVGUIMenu::set_show(bool value) {
  _has_bits_[0] |= 0x00000002u;
  show_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageVGUIMenu.show)
}

// repeated .CUserMessageVGUIMenu.Keys keys = 3;
inline int CUserMessageVGUIMenu::keys_size() const {
  return keys_.size();
}
inline void CUserMessageVGUIMenu::clear_keys() {
  keys_.Clear();
}
inline ::CUserMessageVGUIMenu_Keys* CUserMessageVGUIMenu::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:CUserMessageVGUIMenu.keys)
  return keys_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CUserMessageVGUIMenu_Keys >*
CUserMessageVGUIMenu::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:CUserMessageVGUIMenu.keys)
  return &keys_;
}
inline const ::CUserMessageVGUIMenu_Keys& CUserMessageVGUIMenu::keys(int index) const {
  // @@protoc_insertion_point(field_get:CUserMessageVGUIMenu.keys)
  return keys_.Get(index);
}
inline ::CUserMessageVGUIMenu_Keys* CUserMessageVGUIMenu::add_keys() {
  // @@protoc_insertion_point(field_add:CUserMessageVGUIMenu.keys)
  return keys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CUserMessageVGUIMenu_Keys >&
CUserMessageVGUIMenu::keys() const {
  // @@protoc_insertion_point(field_list:CUserMessageVGUIMenu.keys)
  return keys_;
}

// -------------------------------------------------------------------

// CUserMessageRumble

// optional int32 index = 1;
inline bool CUserMessageRumble::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageRumble::clear_index() {
  index_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 CUserMessageRumble::index() const {
  // @@protoc_insertion_point(field_get:CUserMessageRumble.index)
  return index_;
}
inline void CUserMessageRumble::set_index(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  index_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageRumble.index)
}

// optional int32 data = 2;
inline bool CUserMessageRumble::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMessageRumble::clear_data() {
  data_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CUserMessageRumble::data() const {
  // @@protoc_insertion_point(field_get:CUserMessageRumble.data)
  return data_;
}
inline void CUserMessageRumble::set_data(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  data_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageRumble.data)
}

// optional int32 flags = 3;
inline bool CUserMessageRumble::has_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMessageRumble::clear_flags() {
  flags_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CUserMessageRumble::flags() const {
  // @@protoc_insertion_point(field_get:CUserMessageRumble.flags)
  return flags_;
}
inline void CUserMessageRumble::set_flags(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  flags_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageRumble.flags)
}

// -------------------------------------------------------------------

// CUserMessageTrain

// optional uint32 position = 1;
inline bool CUserMessageTrain::has_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageTrain::clear_position() {
  position_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CUserMessageTrain::position() const {
  // @@protoc_insertion_point(field_get:CUserMessageTrain.position)
  return position_;
}
inline void CUserMessageTrain::set_position(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  position_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageTrain.position)
}

// -------------------------------------------------------------------

// CUserMessageSayTextChannel

// optional int32 player = 1;
inline bool CUserMessageSayTextChannel::has_player() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMessageSayTextChannel::clear_player() {
  player_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CUserMessageSayTextChannel::player() const {
  // @@protoc_insertion_point(field_get:CUserMessageSayTextChannel.player)
  return player_;
}
inline void CUserMessageSayTextChannel::set_player(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  player_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageSayTextChannel.player)
}

// optional int32 channel = 2;
inline bool CUserMessageSayTextChannel::has_channel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMessageSayTextChannel::clear_channel() {
  channel_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CUserMessageSayTextChannel::channel() const {
  // @@protoc_insertion_point(field_get:CUserMessageSayTextChannel.channel)
  return channel_;
}
inline void CUserMessageSayTextChannel::set_channel(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  channel_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageSayTextChannel.channel)
}

// optional string text = 3;
inline bool CUserMessageSayTextChannel::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageSayTextChannel::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CUserMessageSayTextChannel::text() const {
  // @@protoc_insertion_point(field_get:CUserMessageSayTextChannel.text)
  return text_.GetNoArena();
}
inline void CUserMessageSayTextChannel::set_text(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CUserMessageSayTextChannel.text)
}
#if LANG_CXX11
inline void CUserMessageSayTextChannel::set_text(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CUserMessageSayTextChannel.text)
}
#endif
inline void CUserMessageSayTextChannel::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CUserMessageSayTextChannel.text)
}
inline void CUserMessageSayTextChannel::set_text(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CUserMessageSayTextChannel.text)
}
inline ::std::string* CUserMessageSayTextChannel::mutable_text() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:CUserMessageSayTextChannel.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CUserMessageSayTextChannel::release_text() {
  // @@protoc_insertion_point(field_release:CUserMessageSayTextChannel.text)
  if (!has_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return text_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CUserMessageSayTextChannel::set_allocated_text(::std::string* text) {
  if (text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:CUserMessageSayTextChannel.text)
}

// -------------------------------------------------------------------

// CUserMessageColoredText

// optional uint32 color = 1;
inline bool CUserMessageColoredText::has_color() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMessageColoredText::clear_color() {
  color_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CUserMessageColoredText::color() const {
  // @@protoc_insertion_point(field_get:CUserMessageColoredText.color)
  return color_;
}
inline void CUserMessageColoredText::set_color(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  color_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageColoredText.color)
}

// optional string text = 2;
inline bool CUserMessageColoredText::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageColoredText::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CUserMessageColoredText::text() const {
  // @@protoc_insertion_point(field_get:CUserMessageColoredText.text)
  return text_.GetNoArena();
}
inline void CUserMessageColoredText::set_text(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CUserMessageColoredText.text)
}
#if LANG_CXX11
inline void CUserMessageColoredText::set_text(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CUserMessageColoredText.text)
}
#endif
inline void CUserMessageColoredText::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CUserMessageColoredText.text)
}
inline void CUserMessageColoredText::set_text(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CUserMessageColoredText.text)
}
inline ::std::string* CUserMessageColoredText::mutable_text() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:CUserMessageColoredText.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CUserMessageColoredText::release_text() {
  // @@protoc_insertion_point(field_release:CUserMessageColoredText.text)
  if (!has_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return text_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CUserMessageColoredText::set_allocated_text(::std::string* text) {
  if (text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:CUserMessageColoredText.text)
}

// optional bool reset = 3;
inline bool CUserMessageColoredText::has_reset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMessageColoredText::clear_reset() {
  reset_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CUserMessageColoredText::reset() const {
  // @@protoc_insertion_point(field_get:CUserMessageColoredText.reset)
  return reset_;
}
inline void CUserMessageColoredText::set_reset(bool value) {
  _has_bits_[0] |= 0x00000004u;
  reset_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageColoredText.reset)
}

// optional int32 context_player_id = 4;
inline bool CUserMessageColoredText::has_context_player_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUserMessageColoredText::clear_context_player_id() {
  context_player_id_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 CUserMessageColoredText::context_player_id() const {
  // @@protoc_insertion_point(field_get:CUserMessageColoredText.context_player_id)
  return context_player_id_;
}
inline void CUserMessageColoredText::set_context_player_id(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  context_player_id_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageColoredText.context_player_id)
}

// optional int32 context_value = 5;
inline bool CUserMessageColoredText::has_context_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CUserMessageColoredText::clear_context_value() {
  context_value_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::int32 CUserMessageColoredText::context_value() const {
  // @@protoc_insertion_point(field_get:CUserMessageColoredText.context_value)
  return context_value_;
}
inline void CUserMessageColoredText::set_context_value(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  context_value_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageColoredText.context_value)
}

// optional int32 context_team_id = 6;
inline bool CUserMessageColoredText::has_context_team_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CUserMessageColoredText::clear_context_team_id() {
  context_team_id_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::int32 CUserMessageColoredText::context_team_id() const {
  // @@protoc_insertion_point(field_get:CUserMessageColoredText.context_team_id)
  return context_team_id_;
}
inline void CUserMessageColoredText::set_context_team_id(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  context_team_id_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageColoredText.context_team_id)
}

// -------------------------------------------------------------------

// CUserMessageItemPickup

// optional string itemname = 1;
inline bool CUserMessageItemPickup::has_itemname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageItemPickup::clear_itemname() {
  itemname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CUserMessageItemPickup::itemname() const {
  // @@protoc_insertion_point(field_get:CUserMessageItemPickup.itemname)
  return itemname_.GetNoArena();
}
inline void CUserMessageItemPickup::set_itemname(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  itemname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CUserMessageItemPickup.itemname)
}
#if LANG_CXX11
inline void CUserMessageItemPickup::set_itemname(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  itemname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CUserMessageItemPickup.itemname)
}
#endif
inline void CUserMessageItemPickup::set_itemname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  itemname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CUserMessageItemPickup.itemname)
}
inline void CUserMessageItemPickup::set_itemname(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  itemname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CUserMessageItemPickup.itemname)
}
inline ::std::string* CUserMessageItemPickup::mutable_itemname() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:CUserMessageItemPickup.itemname)
  return itemname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CUserMessageItemPickup::release_itemname() {
  // @@protoc_insertion_point(field_release:CUserMessageItemPickup.itemname)
  if (!has_itemname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return itemname_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CUserMessageItemPickup::set_allocated_itemname(::std::string* itemname) {
  if (itemname != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  itemname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), itemname);
  // @@protoc_insertion_point(field_set_allocated:CUserMessageItemPickup.itemname)
}

// -------------------------------------------------------------------

// CUserMessageAmmoDenied

// optional uint32 ammo_id = 1;
inline bool CUserMessageAmmoDenied::has_ammo_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageAmmoDenied::clear_ammo_id() {
  ammo_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CUserMessageAmmoDenied::ammo_id() const {
  // @@protoc_insertion_point(field_get:CUserMessageAmmoDenied.ammo_id)
  return ammo_id_;
}
inline void CUserMessageAmmoDenied::set_ammo_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  ammo_id_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageAmmoDenied.ammo_id)
}

// -------------------------------------------------------------------

// CUserMessageCrosshairAngle

// optional .CMsgQAngle angcrosshair = 1;
inline bool CUserMessageCrosshairAngle::has_angcrosshair() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::CMsgQAngle& CUserMessageCrosshairAngle::angcrosshair() const {
  const ::CMsgQAngle* p = angcrosshair_;
  // @@protoc_insertion_point(field_get:CUserMessageCrosshairAngle.angcrosshair)
  return p != nullptr ? *p : *reinterpret_cast<const ::CMsgQAngle*>(
      &::_CMsgQAngle_default_instance_);
}
inline ::CMsgQAngle* CUserMessageCrosshairAngle::release_angcrosshair() {
  // @@protoc_insertion_point(field_release:CUserMessageCrosshairAngle.angcrosshair)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgQAngle* temp = angcrosshair_;
  angcrosshair_ = nullptr;
  return temp;
}
inline ::CMsgQAngle* CUserMessageCrosshairAngle::mutable_angcrosshair() {
  _has_bits_[0] |= 0x00000001u;
  if (angcrosshair_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgQAngle>(GetArenaNoVirtual());
    angcrosshair_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMessageCrosshairAngle.angcrosshair)
  return angcrosshair_;
}
inline void CUserMessageCrosshairAngle::set_allocated_angcrosshair(::CMsgQAngle* angcrosshair) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(angcrosshair_);
  }
  if (angcrosshair) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      angcrosshair = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, angcrosshair, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  angcrosshair_ = angcrosshair;
  // @@protoc_insertion_point(field_set_allocated:CUserMessageCrosshairAngle.angcrosshair)
}

// -------------------------------------------------------------------

// CUserMessageShowMenu

// optional uint32 validslots = 1;
inline bool CUserMessageShowMenu::has_validslots() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMessageShowMenu::clear_validslots() {
  validslots_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CUserMessageShowMenu::validslots() const {
  // @@protoc_insertion_point(field_get:CUserMessageShowMenu.validslots)
  return validslots_;
}
inline void CUserMessageShowMenu::set_validslots(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  validslots_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageShowMenu.validslots)
}

// optional uint32 displaytime = 2;
inline bool CUserMessageShowMenu::has_displaytime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMessageShowMenu::clear_displaytime() {
  displaytime_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CUserMessageShowMenu::displaytime() const {
  // @@protoc_insertion_point(field_get:CUserMessageShowMenu.displaytime)
  return displaytime_;
}
inline void CUserMessageShowMenu::set_displaytime(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  displaytime_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageShowMenu.displaytime)
}

// optional bool needmore = 3;
inline bool CUserMessageShowMenu::has_needmore() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUserMessageShowMenu::clear_needmore() {
  needmore_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CUserMessageShowMenu::needmore() const {
  // @@protoc_insertion_point(field_get:CUserMessageShowMenu.needmore)
  return needmore_;
}
inline void CUserMessageShowMenu::set_needmore(bool value) {
  _has_bits_[0] |= 0x00000008u;
  needmore_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageShowMenu.needmore)
}

// optional string menustring = 4;
inline bool CUserMessageShowMenu::has_menustring() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageShowMenu::clear_menustring() {
  menustring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CUserMessageShowMenu::menustring() const {
  // @@protoc_insertion_point(field_get:CUserMessageShowMenu.menustring)
  return menustring_.GetNoArena();
}
inline void CUserMessageShowMenu::set_menustring(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  menustring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CUserMessageShowMenu.menustring)
}
#if LANG_CXX11
inline void CUserMessageShowMenu::set_menustring(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  menustring_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CUserMessageShowMenu.menustring)
}
#endif
inline void CUserMessageShowMenu::set_menustring(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  menustring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CUserMessageShowMenu.menustring)
}
inline void CUserMessageShowMenu::set_menustring(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  menustring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CUserMessageShowMenu.menustring)
}
inline ::std::string* CUserMessageShowMenu::mutable_menustring() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:CUserMessageShowMenu.menustring)
  return menustring_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CUserMessageShowMenu::release_menustring() {
  // @@protoc_insertion_point(field_release:CUserMessageShowMenu.menustring)
  if (!has_menustring()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return menustring_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CUserMessageShowMenu::set_allocated_menustring(::std::string* menustring) {
  if (menustring != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  menustring_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), menustring);
  // @@protoc_insertion_point(field_set_allocated:CUserMessageShowMenu.menustring)
}

// -------------------------------------------------------------------

// CUserMessageCreditsMsg

// optional .eRollType rolltype = 1 [default = ROLL_NONE];
inline bool CUserMessageCreditsMsg::has_rolltype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMessageCreditsMsg::clear_rolltype() {
  rolltype_ = -1;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::eRollType CUserMessageCreditsMsg::rolltype() const {
  // @@protoc_insertion_point(field_get:CUserMessageCreditsMsg.rolltype)
  return static_cast< ::eRollType >(rolltype_);
}
inline void CUserMessageCreditsMsg::set_rolltype(::eRollType value) {
  assert(::eRollType_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  rolltype_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageCreditsMsg.rolltype)
}

// optional float logo_length = 2;
inline bool CUserMessageCreditsMsg::has_logo_length() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageCreditsMsg::clear_logo_length() {
  logo_length_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float CUserMessageCreditsMsg::logo_length() const {
  // @@protoc_insertion_point(field_get:CUserMessageCreditsMsg.logo_length)
  return logo_length_;
}
inline void CUserMessageCreditsMsg::set_logo_length(float value) {
  _has_bits_[0] |= 0x00000001u;
  logo_length_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageCreditsMsg.logo_length)
}

// -------------------------------------------------------------------

// CEntityMessagePlayJingle

// -------------------------------------------------------------------

// CEntityMessageScreenOverlay

// optional bool start_effect = 1;
inline bool CEntityMessageScreenOverlay::has_start_effect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CEntityMessageScreenOverlay::clear_start_effect() {
  start_effect_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CEntityMessageScreenOverlay::start_effect() const {
  // @@protoc_insertion_point(field_get:CEntityMessageScreenOverlay.start_effect)
  return start_effect_;
}
inline void CEntityMessageScreenOverlay::set_start_effect(bool value) {
  _has_bits_[0] |= 0x00000001u;
  start_effect_ = value;
  // @@protoc_insertion_point(field_set:CEntityMessageScreenOverlay.start_effect)
}

// -------------------------------------------------------------------

// CEntityMessageRemoveAllDecals

// optional bool remove_decals = 1;
inline bool CEntityMessageRemoveAllDecals::has_remove_decals() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CEntityMessageRemoveAllDecals::clear_remove_decals() {
  remove_decals_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CEntityMessageRemoveAllDecals::remove_decals() const {
  // @@protoc_insertion_point(field_get:CEntityMessageRemoveAllDecals.remove_decals)
  return remove_decals_;
}
inline void CEntityMessageRemoveAllDecals::set_remove_decals(bool value) {
  _has_bits_[0] |= 0x00000001u;
  remove_decals_ = value;
  // @@protoc_insertion_point(field_set:CEntityMessageRemoveAllDecals.remove_decals)
}

// -------------------------------------------------------------------

// CEntityMessagePropagateForce

// optional .CMsgVector impulse = 1;
inline bool CEntityMessagePropagateForce::has_impulse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::CMsgVector& CEntityMessagePropagateForce::impulse() const {
  const ::CMsgVector* p = impulse_;
  // @@protoc_insertion_point(field_get:CEntityMessagePropagateForce.impulse)
  return p != nullptr ? *p : *reinterpret_cast<const ::CMsgVector*>(
      &::_CMsgVector_default_instance_);
}
inline ::CMsgVector* CEntityMessagePropagateForce::release_impulse() {
  // @@protoc_insertion_point(field_release:CEntityMessagePropagateForce.impulse)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = impulse_;
  impulse_ = nullptr;
  return temp;
}
inline ::CMsgVector* CEntityMessagePropagateForce::mutable_impulse() {
  _has_bits_[0] |= 0x00000001u;
  if (impulse_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArenaNoVirtual());
    impulse_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CEntityMessagePropagateForce.impulse)
  return impulse_;
}
inline void CEntityMessagePropagateForce::set_allocated_impulse(::CMsgVector* impulse) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(impulse_);
  }
  if (impulse) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      impulse = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, impulse, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  impulse_ = impulse;
  // @@protoc_insertion_point(field_set_allocated:CEntityMessagePropagateForce.impulse)
}

// -------------------------------------------------------------------

// CEntityMessageDoSpark

// optional .CMsgVector origin = 1;
inline bool CEntityMessageDoSpark::has_origin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::CMsgVector& CEntityMessageDoSpark::origin() const {
  const ::CMsgVector* p = origin_;
  // @@protoc_insertion_point(field_get:CEntityMessageDoSpark.origin)
  return p != nullptr ? *p : *reinterpret_cast<const ::CMsgVector*>(
      &::_CMsgVector_default_instance_);
}
inline ::CMsgVector* CEntityMessageDoSpark::release_origin() {
  // @@protoc_insertion_point(field_release:CEntityMessageDoSpark.origin)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = origin_;
  origin_ = nullptr;
  return temp;
}
inline ::CMsgVector* CEntityMessageDoSpark::mutable_origin() {
  _has_bits_[0] |= 0x00000001u;
  if (origin_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArenaNoVirtual());
    origin_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CEntityMessageDoSpark.origin)
  return origin_;
}
inline void CEntityMessageDoSpark::set_allocated_origin(::CMsgVector* origin) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(origin_);
  }
  if (origin) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      origin = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, origin, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  origin_ = origin;
  // @@protoc_insertion_point(field_set_allocated:CEntityMessageDoSpark.origin)
}

// optional uint32 entityindex = 2;
inline bool CEntityMessageDoSpark::has_entityindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CEntityMessageDoSpark::clear_entityindex() {
  entityindex_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CEntityMessageDoSpark::entityindex() const {
  // @@protoc_insertion_point(field_get:CEntityMessageDoSpark.entityindex)
  return entityindex_;
}
inline void CEntityMessageDoSpark::set_entityindex(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  entityindex_ = value;
  // @@protoc_insertion_point(field_set:CEntityMessageDoSpark.entityindex)
}

// optional float radius = 3;
inline bool CEntityMessageDoSpark::has_radius() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CEntityMessageDoSpark::clear_radius() {
  radius_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CEntityMessageDoSpark::radius() const {
  // @@protoc_insertion_point(field_get:CEntityMessageDoSpark.radius)
  return radius_;
}
inline void CEntityMessageDoSpark::set_radius(float value) {
  _has_bits_[0] |= 0x00000004u;
  radius_ = value;
  // @@protoc_insertion_point(field_set:CEntityMessageDoSpark.radius)
}

// optional fixed32 color = 4;
inline bool CEntityMessageDoSpark::has_color() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CEntityMessageDoSpark::clear_color() {
  color_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CEntityMessageDoSpark::color() const {
  // @@protoc_insertion_point(field_get:CEntityMessageDoSpark.color)
  return color_;
}
inline void CEntityMessageDoSpark::set_color(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  color_ = value;
  // @@protoc_insertion_point(field_set:CEntityMessageDoSpark.color)
}

// optional uint32 beams = 5;
inline bool CEntityMessageDoSpark::has_beams() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CEntityMessageDoSpark::clear_beams() {
  beams_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CEntityMessageDoSpark::beams() const {
  // @@protoc_insertion_point(field_get:CEntityMessageDoSpark.beams)
  return beams_;
}
inline void CEntityMessageDoSpark::set_beams(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  beams_ = value;
  // @@protoc_insertion_point(field_set:CEntityMessageDoSpark.beams)
}

// optional float thick = 6;
inline bool CEntityMessageDoSpark::has_thick() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CEntityMessageDoSpark::clear_thick() {
  thick_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline float CEntityMessageDoSpark::thick() const {
  // @@protoc_insertion_point(field_get:CEntityMessageDoSpark.thick)
  return thick_;
}
inline void CEntityMessageDoSpark::set_thick(float value) {
  _has_bits_[0] |= 0x00000020u;
  thick_ = value;
  // @@protoc_insertion_point(field_set:CEntityMessageDoSpark.thick)
}

// optional float duration = 7;
inline bool CEntityMessageDoSpark::has_duration() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CEntityMessageDoSpark::clear_duration() {
  duration_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline float CEntityMessageDoSpark::duration() const {
  // @@protoc_insertion_point(field_get:CEntityMessageDoSpark.duration)
  return duration_;
}
inline void CEntityMessageDoSpark::set_duration(float value) {
  _has_bits_[0] |= 0x00000040u;
  duration_ = value;
  // @@protoc_insertion_point(field_set:CEntityMessageDoSpark.duration)
}

// -------------------------------------------------------------------

// CEntityMessageFixAngle

// optional bool relative = 1;
inline bool CEntityMessageFixAngle::has_relative() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CEntityMessageFixAngle::clear_relative() {
  relative_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CEntityMessageFixAngle::relative() const {
  // @@protoc_insertion_point(field_get:CEntityMessageFixAngle.relative)
  return relative_;
}
inline void CEntityMessageFixAngle::set_relative(bool value) {
  _has_bits_[0] |= 0x00000002u;
  relative_ = value;
  // @@protoc_insertion_point(field_set:CEntityMessageFixAngle.relative)
}

// optional .CMsgQAngle angle = 2;
inline bool CEntityMessageFixAngle::has_angle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::CMsgQAngle& CEntityMessageFixAngle::angle() const {
  const ::CMsgQAngle* p = angle_;
  // @@protoc_insertion_point(field_get:CEntityMessageFixAngle.angle)
  return p != nullptr ? *p : *reinterpret_cast<const ::CMsgQAngle*>(
      &::_CMsgQAngle_default_instance_);
}
inline ::CMsgQAngle* CEntityMessageFixAngle::release_angle() {
  // @@protoc_insertion_point(field_release:CEntityMessageFixAngle.angle)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgQAngle* temp = angle_;
  angle_ = nullptr;
  return temp;
}
inline ::CMsgQAngle* CEntityMessageFixAngle::mutable_angle() {
  _has_bits_[0] |= 0x00000001u;
  if (angle_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgQAngle>(GetArenaNoVirtual());
    angle_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CEntityMessageFixAngle.angle)
  return angle_;
}
inline void CEntityMessageFixAngle::set_allocated_angle(::CMsgQAngle* angle) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(angle_);
  }
  if (angle) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      angle = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, angle, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  angle_ = angle;
  // @@protoc_insertion_point(field_set_allocated:CEntityMessageFixAngle.angle)
}

// -------------------------------------------------------------------

// CUserMessageCameraTransition_Transition_DataDriven

// optional string filename = 1;
inline bool CUserMessageCameraTransition_Transition_DataDriven::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageCameraTransition_Transition_DataDriven::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CUserMessageCameraTransition_Transition_DataDriven::filename() const {
  // @@protoc_insertion_point(field_get:CUserMessageCameraTransition.Transition_DataDriven.filename)
  return filename_.GetNoArena();
}
inline void CUserMessageCameraTransition_Transition_DataDriven::set_filename(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CUserMessageCameraTransition.Transition_DataDriven.filename)
}
#if LANG_CXX11
inline void CUserMessageCameraTransition_Transition_DataDriven::set_filename(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CUserMessageCameraTransition.Transition_DataDriven.filename)
}
#endif
inline void CUserMessageCameraTransition_Transition_DataDriven::set_filename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CUserMessageCameraTransition.Transition_DataDriven.filename)
}
inline void CUserMessageCameraTransition_Transition_DataDriven::set_filename(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CUserMessageCameraTransition.Transition_DataDriven.filename)
}
inline ::std::string* CUserMessageCameraTransition_Transition_DataDriven::mutable_filename() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:CUserMessageCameraTransition.Transition_DataDriven.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CUserMessageCameraTransition_Transition_DataDriven::release_filename() {
  // @@protoc_insertion_point(field_release:CUserMessageCameraTransition.Transition_DataDriven.filename)
  if (!has_filename()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return filename_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CUserMessageCameraTransition_Transition_DataDriven::set_allocated_filename(::std::string* filename) {
  if (filename != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:CUserMessageCameraTransition.Transition_DataDriven.filename)
}

// optional int32 attach_ent_index = 2;
inline bool CUserMessageCameraTransition_Transition_DataDriven::has_attach_ent_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMessageCameraTransition_Transition_DataDriven::clear_attach_ent_index() {
  attach_ent_index_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CUserMessageCameraTransition_Transition_DataDriven::attach_ent_index() const {
  // @@protoc_insertion_point(field_get:CUserMessageCameraTransition.Transition_DataDriven.attach_ent_index)
  return attach_ent_index_;
}
inline void CUserMessageCameraTransition_Transition_DataDriven::set_attach_ent_index(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  attach_ent_index_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageCameraTransition.Transition_DataDriven.attach_ent_index)
}

// -------------------------------------------------------------------

// CUserMessageCameraTransition

// optional uint32 camera_type = 1;
inline bool CUserMessageCameraTransition::has_camera_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMessageCameraTransition::clear_camera_type() {
  camera_type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CUserMessageCameraTransition::camera_type() const {
  // @@protoc_insertion_point(field_get:CUserMessageCameraTransition.camera_type)
  return camera_type_;
}
inline void CUserMessageCameraTransition::set_camera_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  camera_type_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageCameraTransition.camera_type)
}

// optional float duration = 2;
inline bool CUserMessageCameraTransition::has_duration() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMessageCameraTransition::clear_duration() {
  duration_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CUserMessageCameraTransition::duration() const {
  // @@protoc_insertion_point(field_get:CUserMessageCameraTransition.duration)
  return duration_;
}
inline void CUserMessageCameraTransition::set_duration(float value) {
  _has_bits_[0] |= 0x00000004u;
  duration_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageCameraTransition.duration)
}

// optional .CUserMessageCameraTransition.Transition_DataDriven params_data_driven = 3;
inline bool CUserMessageCameraTransition::has_params_data_driven() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageCameraTransition::clear_params_data_driven() {
  if (params_data_driven_ != nullptr) params_data_driven_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CUserMessageCameraTransition_Transition_DataDriven& CUserMessageCameraTransition::params_data_driven() const {
  const ::CUserMessageCameraTransition_Transition_DataDriven* p = params_data_driven_;
  // @@protoc_insertion_point(field_get:CUserMessageCameraTransition.params_data_driven)
  return p != nullptr ? *p : *reinterpret_cast<const ::CUserMessageCameraTransition_Transition_DataDriven*>(
      &::_CUserMessageCameraTransition_Transition_DataDriven_default_instance_);
}
inline ::CUserMessageCameraTransition_Transition_DataDriven* CUserMessageCameraTransition::release_params_data_driven() {
  // @@protoc_insertion_point(field_release:CUserMessageCameraTransition.params_data_driven)
  _has_bits_[0] &= ~0x00000001u;
  ::CUserMessageCameraTransition_Transition_DataDriven* temp = params_data_driven_;
  params_data_driven_ = nullptr;
  return temp;
}
inline ::CUserMessageCameraTransition_Transition_DataDriven* CUserMessageCameraTransition::mutable_params_data_driven() {
  _has_bits_[0] |= 0x00000001u;
  if (params_data_driven_ == nullptr) {
    auto* p = CreateMaybeMessage<::CUserMessageCameraTransition_Transition_DataDriven>(GetArenaNoVirtual());
    params_data_driven_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMessageCameraTransition.params_data_driven)
  return params_data_driven_;
}
inline void CUserMessageCameraTransition::set_allocated_params_data_driven(::CUserMessageCameraTransition_Transition_DataDriven* params_data_driven) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete params_data_driven_;
  }
  if (params_data_driven) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      params_data_driven = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, params_data_driven, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  params_data_driven_ = params_data_driven;
  // @@protoc_insertion_point(field_set_allocated:CUserMessageCameraTransition.params_data_driven)
}

// -------------------------------------------------------------------

// CUserMsg_ParticleManager_ReleaseParticleIndex

// -------------------------------------------------------------------

// CUserMsg_ParticleManager_CreateParticle

// optional fixed64 particle_name_index = 1;
inline bool CUserMsg_ParticleManager_CreateParticle::has_particle_name_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_ParticleManager_CreateParticle::clear_particle_name_index() {
  particle_name_index_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CUserMsg_ParticleManager_CreateParticle::particle_name_index() const {
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.CreateParticle.particle_name_index)
  return particle_name_index_;
}
inline void CUserMsg_ParticleManager_CreateParticle::set_particle_name_index(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  particle_name_index_ = value;
  // @@protoc_insertion_point(field_set:CUserMsg_ParticleManager.CreateParticle.particle_name_index)
}

// optional int32 attach_type = 2;
inline bool CUserMsg_ParticleManager_CreateParticle::has_attach_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMsg_ParticleManager_CreateParticle::clear_attach_type() {
  attach_type_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CUserMsg_ParticleManager_CreateParticle::attach_type() const {
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.CreateParticle.attach_type)
  return attach_type_;
}
inline void CUserMsg_ParticleManager_CreateParticle::set_attach_type(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  attach_type_ = value;
  // @@protoc_insertion_point(field_set:CUserMsg_ParticleManager.CreateParticle.attach_type)
}

// optional int32 entity_handle = 3;
inline bool CUserMsg_ParticleManager_CreateParticle::has_entity_handle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMsg_ParticleManager_CreateParticle::clear_entity_handle() {
  entity_handle_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CUserMsg_ParticleManager_CreateParticle::entity_handle() const {
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.CreateParticle.entity_handle)
  return entity_handle_;
}
inline void CUserMsg_ParticleManager_CreateParticle::set_entity_handle(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  entity_handle_ = value;
  // @@protoc_insertion_point(field_set:CUserMsg_ParticleManager.CreateParticle.entity_handle)
}

// optional int32 entity_handle_for_modifiers = 4;
inline bool CUserMsg_ParticleManager_CreateParticle::has_entity_handle_for_modifiers() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUserMsg_ParticleManager_CreateParticle::clear_entity_handle_for_modifiers() {
  entity_handle_for_modifiers_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 CUserMsg_ParticleManager_CreateParticle::entity_handle_for_modifiers() const {
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.CreateParticle.entity_handle_for_modifiers)
  return entity_handle_for_modifiers_;
}
inline void CUserMsg_ParticleManager_CreateParticle::set_entity_handle_for_modifiers(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  entity_handle_for_modifiers_ = value;
  // @@protoc_insertion_point(field_set:CUserMsg_ParticleManager.CreateParticle.entity_handle_for_modifiers)
}

// -------------------------------------------------------------------

// CUserMsg_ParticleManager_DestroyParticle

// optional bool destroy_immediately = 1;
inline bool CUserMsg_ParticleManager_DestroyParticle::has_destroy_immediately() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_ParticleManager_DestroyParticle::clear_destroy_immediately() {
  destroy_immediately_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CUserMsg_ParticleManager_DestroyParticle::destroy_immediately() const {
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.DestroyParticle.destroy_immediately)
  return destroy_immediately_;
}
inline void CUserMsg_ParticleManager_DestroyParticle::set_destroy_immediately(bool value) {
  _has_bits_[0] |= 0x00000001u;
  destroy_immediately_ = value;
  // @@protoc_insertion_point(field_set:CUserMsg_ParticleManager.DestroyParticle.destroy_immediately)
}

// -------------------------------------------------------------------

// CUserMsg_ParticleManager_DestroyParticleInvolving

// optional bool destroy_immediately = 1;
inline bool CUserMsg_ParticleManager_DestroyParticleInvolving::has_destroy_immediately() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_ParticleManager_DestroyParticleInvolving::clear_destroy_immediately() {
  destroy_immediately_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CUserMsg_ParticleManager_DestroyParticleInvolving::destroy_immediately() const {
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.DestroyParticleInvolving.destroy_immediately)
  return destroy_immediately_;
}
inline void CUserMsg_ParticleManager_DestroyParticleInvolving::set_destroy_immediately(bool value) {
  _has_bits_[0] |= 0x00000001u;
  destroy_immediately_ = value;
  // @@protoc_insertion_point(field_set:CUserMsg_ParticleManager.DestroyParticleInvolving.destroy_immediately)
}

// optional int32 entity_handle = 3;
inline bool CUserMsg_ParticleManager_DestroyParticleInvolving::has_entity_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMsg_ParticleManager_DestroyParticleInvolving::clear_entity_handle() {
  entity_handle_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CUserMsg_ParticleManager_DestroyParticleInvolving::entity_handle() const {
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.DestroyParticleInvolving.entity_handle)
  return entity_handle_;
}
inline void CUserMsg_ParticleManager_DestroyParticleInvolving::set_entity_handle(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  entity_handle_ = value;
  // @@protoc_insertion_point(field_set:CUserMsg_ParticleManager.DestroyParticleInvolving.entity_handle)
}

// -------------------------------------------------------------------

// CUserMsg_ParticleManager_UpdateParticle

// optional int32 control_point = 1;
inline bool CUserMsg_ParticleManager_UpdateParticle::has_control_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMsg_ParticleManager_UpdateParticle::clear_control_point() {
  control_point_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CUserMsg_ParticleManager_UpdateParticle::control_point() const {
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.UpdateParticle.control_point)
  return control_point_;
}
inline void CUserMsg_ParticleManager_UpdateParticle::set_control_point(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  control_point_ = value;
  // @@protoc_insertion_point(field_set:CUserMsg_ParticleManager.UpdateParticle.control_point)
}

// optional .CMsgVector position = 2;
inline bool CUserMsg_ParticleManager_UpdateParticle::has_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::CMsgVector& CUserMsg_ParticleManager_UpdateParticle::position() const {
  const ::CMsgVector* p = position_;
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.UpdateParticle.position)
  return p != nullptr ? *p : *reinterpret_cast<const ::CMsgVector*>(
      &::_CMsgVector_default_instance_);
}
inline ::CMsgVector* CUserMsg_ParticleManager_UpdateParticle::release_position() {
  // @@protoc_insertion_point(field_release:CUserMsg_ParticleManager.UpdateParticle.position)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = position_;
  position_ = nullptr;
  return temp;
}
inline ::CMsgVector* CUserMsg_ParticleManager_UpdateParticle::mutable_position() {
  _has_bits_[0] |= 0x00000001u;
  if (position_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArenaNoVirtual());
    position_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMsg_ParticleManager.UpdateParticle.position)
  return position_;
}
inline void CUserMsg_ParticleManager_UpdateParticle::set_allocated_position(::CMsgVector* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(position_);
  }
  if (position) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:CUserMsg_ParticleManager.UpdateParticle.position)
}

// -------------------------------------------------------------------

// CUserMsg_ParticleManager_UpdateParticleFwd

// optional int32 control_point = 1;
inline bool CUserMsg_ParticleManager_UpdateParticleFwd::has_control_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMsg_ParticleManager_UpdateParticleFwd::clear_control_point() {
  control_point_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CUserMsg_ParticleManager_UpdateParticleFwd::control_point() const {
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.UpdateParticleFwd.control_point)
  return control_point_;
}
inline void CUserMsg_ParticleManager_UpdateParticleFwd::set_control_point(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  control_point_ = value;
  // @@protoc_insertion_point(field_set:CUserMsg_ParticleManager.UpdateParticleFwd.control_point)
}

// optional .CMsgVector forward = 2;
inline bool CUserMsg_ParticleManager_UpdateParticleFwd::has_forward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::CMsgVector& CUserMsg_ParticleManager_UpdateParticleFwd::forward() const {
  const ::CMsgVector* p = forward_;
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.UpdateParticleFwd.forward)
  return p != nullptr ? *p : *reinterpret_cast<const ::CMsgVector*>(
      &::_CMsgVector_default_instance_);
}
inline ::CMsgVector* CUserMsg_ParticleManager_UpdateParticleFwd::release_forward() {
  // @@protoc_insertion_point(field_release:CUserMsg_ParticleManager.UpdateParticleFwd.forward)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = forward_;
  forward_ = nullptr;
  return temp;
}
inline ::CMsgVector* CUserMsg_ParticleManager_UpdateParticleFwd::mutable_forward() {
  _has_bits_[0] |= 0x00000001u;
  if (forward_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArenaNoVirtual());
    forward_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMsg_ParticleManager.UpdateParticleFwd.forward)
  return forward_;
}
inline void CUserMsg_ParticleManager_UpdateParticleFwd::set_allocated_forward(::CMsgVector* forward) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(forward_);
  }
  if (forward) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      forward = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, forward, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  forward_ = forward;
  // @@protoc_insertion_point(field_set_allocated:CUserMsg_ParticleManager.UpdateParticleFwd.forward)
}

// -------------------------------------------------------------------

// CUserMsg_ParticleManager_UpdateParticleOrient

// optional int32 control_point = 1;
inline bool CUserMsg_ParticleManager_UpdateParticleOrient::has_control_point() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CUserMsg_ParticleManager_UpdateParticleOrient::clear_control_point() {
  control_point_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::int32 CUserMsg_ParticleManager_UpdateParticleOrient::control_point() const {
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.UpdateParticleOrient.control_point)
  return control_point_;
}
inline void CUserMsg_ParticleManager_UpdateParticleOrient::set_control_point(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  control_point_ = value;
  // @@protoc_insertion_point(field_set:CUserMsg_ParticleManager.UpdateParticleOrient.control_point)
}

// optional .CMsgVector forward = 2;
inline bool CUserMsg_ParticleManager_UpdateParticleOrient::has_forward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::CMsgVector& CUserMsg_ParticleManager_UpdateParticleOrient::forward() const {
  const ::CMsgVector* p = forward_;
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.UpdateParticleOrient.forward)
  return p != nullptr ? *p : *reinterpret_cast<const ::CMsgVector*>(
      &::_CMsgVector_default_instance_);
}
inline ::CMsgVector* CUserMsg_ParticleManager_UpdateParticleOrient::release_forward() {
  // @@protoc_insertion_point(field_release:CUserMsg_ParticleManager.UpdateParticleOrient.forward)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = forward_;
  forward_ = nullptr;
  return temp;
}
inline ::CMsgVector* CUserMsg_ParticleManager_UpdateParticleOrient::mutable_forward() {
  _has_bits_[0] |= 0x00000001u;
  if (forward_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArenaNoVirtual());
    forward_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMsg_ParticleManager.UpdateParticleOrient.forward)
  return forward_;
}
inline void CUserMsg_ParticleManager_UpdateParticleOrient::set_allocated_forward(::CMsgVector* forward) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(forward_);
  }
  if (forward) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      forward = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, forward, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  forward_ = forward;
  // @@protoc_insertion_point(field_set_allocated:CUserMsg_ParticleManager.UpdateParticleOrient.forward)
}

// optional .CMsgVector right = 3 [deprecated = true];
inline bool CUserMsg_ParticleManager_UpdateParticleOrient::has_right() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline const ::CMsgVector& CUserMsg_ParticleManager_UpdateParticleOrient::right() const {
  const ::CMsgVector* p = right_;
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.UpdateParticleOrient.right)
  return p != nullptr ? *p : *reinterpret_cast<const ::CMsgVector*>(
      &::_CMsgVector_default_instance_);
}
inline ::CMsgVector* CUserMsg_ParticleManager_UpdateParticleOrient::release_right() {
  // @@protoc_insertion_point(field_release:CUserMsg_ParticleManager.UpdateParticleOrient.right)
  _has_bits_[0] &= ~0x00000002u;
  ::CMsgVector* temp = right_;
  right_ = nullptr;
  return temp;
}
inline ::CMsgVector* CUserMsg_ParticleManager_UpdateParticleOrient::mutable_right() {
  _has_bits_[0] |= 0x00000002u;
  if (right_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArenaNoVirtual());
    right_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMsg_ParticleManager.UpdateParticleOrient.right)
  return right_;
}
inline void CUserMsg_ParticleManager_UpdateParticleOrient::set_allocated_right(::CMsgVector* right) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(right_);
  }
  if (right) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      right = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, right, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  right_ = right;
  // @@protoc_insertion_point(field_set_allocated:CUserMsg_ParticleManager.UpdateParticleOrient.right)
}

// optional .CMsgVector up = 4;
inline bool CUserMsg_ParticleManager_UpdateParticleOrient::has_up() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline const ::CMsgVector& CUserMsg_ParticleManager_UpdateParticleOrient::up() const {
  const ::CMsgVector* p = up_;
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.UpdateParticleOrient.up)
  return p != nullptr ? *p : *reinterpret_cast<const ::CMsgVector*>(
      &::_CMsgVector_default_instance_);
}
inline ::CMsgVector* CUserMsg_ParticleManager_UpdateParticleOrient::release_up() {
  // @@protoc_insertion_point(field_release:CUserMsg_ParticleManager.UpdateParticleOrient.up)
  _has_bits_[0] &= ~0x00000004u;
  ::CMsgVector* temp = up_;
  up_ = nullptr;
  return temp;
}
inline ::CMsgVector* CUserMsg_ParticleManager_UpdateParticleOrient::mutable_up() {
  _has_bits_[0] |= 0x00000004u;
  if (up_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArenaNoVirtual());
    up_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMsg_ParticleManager.UpdateParticleOrient.up)
  return up_;
}
inline void CUserMsg_ParticleManager_UpdateParticleOrient::set_allocated_up(::CMsgVector* up) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(up_);
  }
  if (up) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      up = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, up, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  up_ = up;
  // @@protoc_insertion_point(field_set_allocated:CUserMsg_ParticleManager.UpdateParticleOrient.up)
}

// optional .CMsgVector left = 5;
inline bool CUserMsg_ParticleManager_UpdateParticleOrient::has_left() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline const ::CMsgVector& CUserMsg_ParticleManager_UpdateParticleOrient::left() const {
  const ::CMsgVector* p = left_;
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.UpdateParticleOrient.left)
  return p != nullptr ? *p : *reinterpret_cast<const ::CMsgVector*>(
      &::_CMsgVector_default_instance_);
}
inline ::CMsgVector* CUserMsg_ParticleManager_UpdateParticleOrient::release_left() {
  // @@protoc_insertion_point(field_release:CUserMsg_ParticleManager.UpdateParticleOrient.left)
  _has_bits_[0] &= ~0x00000008u;
  ::CMsgVector* temp = left_;
  left_ = nullptr;
  return temp;
}
inline ::CMsgVector* CUserMsg_ParticleManager_UpdateParticleOrient::mutable_left() {
  _has_bits_[0] |= 0x00000008u;
  if (left_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArenaNoVirtual());
    left_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMsg_ParticleManager.UpdateParticleOrient.left)
  return left_;
}
inline void CUserMsg_ParticleManager_UpdateParticleOrient::set_allocated_left(::CMsgVector* left) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(left_);
  }
  if (left) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      left = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, left, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  left_ = left;
  // @@protoc_insertion_point(field_set_allocated:CUserMsg_ParticleManager.UpdateParticleOrient.left)
}

// -------------------------------------------------------------------

// CUserMsg_ParticleManager_UpdateParticleFallback

// optional int32 control_point = 1;
inline bool CUserMsg_ParticleManager_UpdateParticleFallback::has_control_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMsg_ParticleManager_UpdateParticleFallback::clear_control_point() {
  control_point_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CUserMsg_ParticleManager_UpdateParticleFallback::control_point() const {
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.UpdateParticleFallback.control_point)
  return control_point_;
}
inline void CUserMsg_ParticleManager_UpdateParticleFallback::set_control_point(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  control_point_ = value;
  // @@protoc_insertion_point(field_set:CUserMsg_ParticleManager.UpdateParticleFallback.control_point)
}

// optional .CMsgVector position = 2;
inline bool CUserMsg_ParticleManager_UpdateParticleFallback::has_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::CMsgVector& CUserMsg_ParticleManager_UpdateParticleFallback::position() const {
  const ::CMsgVector* p = position_;
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.UpdateParticleFallback.position)
  return p != nullptr ? *p : *reinterpret_cast<const ::CMsgVector*>(
      &::_CMsgVector_default_instance_);
}
inline ::CMsgVector* CUserMsg_ParticleManager_UpdateParticleFallback::release_position() {
  // @@protoc_insertion_point(field_release:CUserMsg_ParticleManager.UpdateParticleFallback.position)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = position_;
  position_ = nullptr;
  return temp;
}
inline ::CMsgVector* CUserMsg_ParticleManager_UpdateParticleFallback::mutable_position() {
  _has_bits_[0] |= 0x00000001u;
  if (position_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArenaNoVirtual());
    position_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMsg_ParticleManager.UpdateParticleFallback.position)
  return position_;
}
inline void CUserMsg_ParticleManager_UpdateParticleFallback::set_allocated_position(::CMsgVector* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(position_);
  }
  if (position) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:CUserMsg_ParticleManager.UpdateParticleFallback.position)
}

// -------------------------------------------------------------------

// CUserMsg_ParticleManager_UpdateParticleOffset

// optional int32 control_point = 1;
inline bool CUserMsg_ParticleManager_UpdateParticleOffset::has_control_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMsg_ParticleManager_UpdateParticleOffset::clear_control_point() {
  control_point_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CUserMsg_ParticleManager_UpdateParticleOffset::control_point() const {
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.UpdateParticleOffset.control_point)
  return control_point_;
}
inline void CUserMsg_ParticleManager_UpdateParticleOffset::set_control_point(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  control_point_ = value;
  // @@protoc_insertion_point(field_set:CUserMsg_ParticleManager.UpdateParticleOffset.control_point)
}

// optional .CMsgVector origin_offset = 2;
inline bool CUserMsg_ParticleManager_UpdateParticleOffset::has_origin_offset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::CMsgVector& CUserMsg_ParticleManager_UpdateParticleOffset::origin_offset() const {
  const ::CMsgVector* p = origin_offset_;
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.UpdateParticleOffset.origin_offset)
  return p != nullptr ? *p : *reinterpret_cast<const ::CMsgVector*>(
      &::_CMsgVector_default_instance_);
}
inline ::CMsgVector* CUserMsg_ParticleManager_UpdateParticleOffset::release_origin_offset() {
  // @@protoc_insertion_point(field_release:CUserMsg_ParticleManager.UpdateParticleOffset.origin_offset)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = origin_offset_;
  origin_offset_ = nullptr;
  return temp;
}
inline ::CMsgVector* CUserMsg_ParticleManager_UpdateParticleOffset::mutable_origin_offset() {
  _has_bits_[0] |= 0x00000001u;
  if (origin_offset_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArenaNoVirtual());
    origin_offset_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMsg_ParticleManager.UpdateParticleOffset.origin_offset)
  return origin_offset_;
}
inline void CUserMsg_ParticleManager_UpdateParticleOffset::set_allocated_origin_offset(::CMsgVector* origin_offset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(origin_offset_);
  }
  if (origin_offset) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      origin_offset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, origin_offset, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  origin_offset_ = origin_offset;
  // @@protoc_insertion_point(field_set_allocated:CUserMsg_ParticleManager.UpdateParticleOffset.origin_offset)
}

// optional .CMsgQAngle angle_offset = 3;
inline bool CUserMsg_ParticleManager_UpdateParticleOffset::has_angle_offset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline const ::CMsgQAngle& CUserMsg_ParticleManager_UpdateParticleOffset::angle_offset() const {
  const ::CMsgQAngle* p = angle_offset_;
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.UpdateParticleOffset.angle_offset)
  return p != nullptr ? *p : *reinterpret_cast<const ::CMsgQAngle*>(
      &::_CMsgQAngle_default_instance_);
}
inline ::CMsgQAngle* CUserMsg_ParticleManager_UpdateParticleOffset::release_angle_offset() {
  // @@protoc_insertion_point(field_release:CUserMsg_ParticleManager.UpdateParticleOffset.angle_offset)
  _has_bits_[0] &= ~0x00000002u;
  ::CMsgQAngle* temp = angle_offset_;
  angle_offset_ = nullptr;
  return temp;
}
inline ::CMsgQAngle* CUserMsg_ParticleManager_UpdateParticleOffset::mutable_angle_offset() {
  _has_bits_[0] |= 0x00000002u;
  if (angle_offset_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgQAngle>(GetArenaNoVirtual());
    angle_offset_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMsg_ParticleManager.UpdateParticleOffset.angle_offset)
  return angle_offset_;
}
inline void CUserMsg_ParticleManager_UpdateParticleOffset::set_allocated_angle_offset(::CMsgQAngle* angle_offset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(angle_offset_);
  }
  if (angle_offset) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      angle_offset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, angle_offset, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  angle_offset_ = angle_offset;
  // @@protoc_insertion_point(field_set_allocated:CUserMsg_ParticleManager.UpdateParticleOffset.angle_offset)
}

// -------------------------------------------------------------------

// CUserMsg_ParticleManager_UpdateParticleEnt

// optional int32 control_point = 1;
inline bool CUserMsg_ParticleManager_UpdateParticleEnt::has_control_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMsg_ParticleManager_UpdateParticleEnt::clear_control_point() {
  control_point_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CUserMsg_ParticleManager_UpdateParticleEnt::control_point() const {
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.UpdateParticleEnt.control_point)
  return control_point_;
}
inline void CUserMsg_ParticleManager_UpdateParticleEnt::set_control_point(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  control_point_ = value;
  // @@protoc_insertion_point(field_set:CUserMsg_ParticleManager.UpdateParticleEnt.control_point)
}

// optional int32 entity_handle = 2;
inline bool CUserMsg_ParticleManager_UpdateParticleEnt::has_entity_handle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMsg_ParticleManager_UpdateParticleEnt::clear_entity_handle() {
  entity_handle_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CUserMsg_ParticleManager_UpdateParticleEnt::entity_handle() const {
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.UpdateParticleEnt.entity_handle)
  return entity_handle_;
}
inline void CUserMsg_ParticleManager_UpdateParticleEnt::set_entity_handle(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  entity_handle_ = value;
  // @@protoc_insertion_point(field_set:CUserMsg_ParticleManager.UpdateParticleEnt.entity_handle)
}

// optional int32 attach_type = 3;
inline bool CUserMsg_ParticleManager_UpdateParticleEnt::has_attach_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUserMsg_ParticleManager_UpdateParticleEnt::clear_attach_type() {
  attach_type_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 CUserMsg_ParticleManager_UpdateParticleEnt::attach_type() const {
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.UpdateParticleEnt.attach_type)
  return attach_type_;
}
inline void CUserMsg_ParticleManager_UpdateParticleEnt::set_attach_type(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  attach_type_ = value;
  // @@protoc_insertion_point(field_set:CUserMsg_ParticleManager.UpdateParticleEnt.attach_type)
}

// optional int32 attachment = 4;
inline bool CUserMsg_ParticleManager_UpdateParticleEnt::has_attachment() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CUserMsg_ParticleManager_UpdateParticleEnt::clear_attachment() {
  attachment_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::int32 CUserMsg_ParticleManager_UpdateParticleEnt::attachment() const {
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.UpdateParticleEnt.attachment)
  return attachment_;
}
inline void CUserMsg_ParticleManager_UpdateParticleEnt::set_attachment(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  attachment_ = value;
  // @@protoc_insertion_point(field_set:CUserMsg_ParticleManager.UpdateParticleEnt.attachment)
}

// optional .CMsgVector fallback_position = 5;
inline bool CUserMsg_ParticleManager_UpdateParticleEnt::has_fallback_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::CMsgVector& CUserMsg_ParticleManager_UpdateParticleEnt::fallback_position() const {
  const ::CMsgVector* p = fallback_position_;
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.UpdateParticleEnt.fallback_position)
  return p != nullptr ? *p : *reinterpret_cast<const ::CMsgVector*>(
      &::_CMsgVector_default_instance_);
}
inline ::CMsgVector* CUserMsg_ParticleManager_UpdateParticleEnt::release_fallback_position() {
  // @@protoc_insertion_point(field_release:CUserMsg_ParticleManager.UpdateParticleEnt.fallback_position)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = fallback_position_;
  fallback_position_ = nullptr;
  return temp;
}
inline ::CMsgVector* CUserMsg_ParticleManager_UpdateParticleEnt::mutable_fallback_position() {
  _has_bits_[0] |= 0x00000001u;
  if (fallback_position_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArenaNoVirtual());
    fallback_position_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMsg_ParticleManager.UpdateParticleEnt.fallback_position)
  return fallback_position_;
}
inline void CUserMsg_ParticleManager_UpdateParticleEnt::set_allocated_fallback_position(::CMsgVector* fallback_position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(fallback_position_);
  }
  if (fallback_position) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      fallback_position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fallback_position, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  fallback_position_ = fallback_position;
  // @@protoc_insertion_point(field_set_allocated:CUserMsg_ParticleManager.UpdateParticleEnt.fallback_position)
}

// optional bool include_wearables = 6;
inline bool CUserMsg_ParticleManager_UpdateParticleEnt::has_include_wearables() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CUserMsg_ParticleManager_UpdateParticleEnt::clear_include_wearables() {
  include_wearables_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CUserMsg_ParticleManager_UpdateParticleEnt::include_wearables() const {
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.UpdateParticleEnt.include_wearables)
  return include_wearables_;
}
inline void CUserMsg_ParticleManager_UpdateParticleEnt::set_include_wearables(bool value) {
  _has_bits_[0] |= 0x00000020u;
  include_wearables_ = value;
  // @@protoc_insertion_point(field_set:CUserMsg_ParticleManager.UpdateParticleEnt.include_wearables)
}

// -------------------------------------------------------------------

// CUserMsg_ParticleManager_UpdateParticleSetFrozen

// optional bool set_frozen = 1;
inline bool CUserMsg_ParticleManager_UpdateParticleSetFrozen::has_set_frozen() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_ParticleManager_UpdateParticleSetFrozen::clear_set_frozen() {
  set_frozen_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CUserMsg_ParticleManager_UpdateParticleSetFrozen::set_frozen() const {
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.UpdateParticleSetFrozen.set_frozen)
  return set_frozen_;
}
inline void CUserMsg_ParticleManager_UpdateParticleSetFrozen::set_set_frozen(bool value) {
  _has_bits_[0] |= 0x00000001u;
  set_frozen_ = value;
  // @@protoc_insertion_point(field_set:CUserMsg_ParticleManager.UpdateParticleSetFrozen.set_frozen)
}

// -------------------------------------------------------------------

// CUserMsg_ParticleManager_UpdateParticleShouldDraw

// optional bool should_draw = 1;
inline bool CUserMsg_ParticleManager_UpdateParticleShouldDraw::has_should_draw() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_ParticleManager_UpdateParticleShouldDraw::clear_should_draw() {
  should_draw_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CUserMsg_ParticleManager_UpdateParticleShouldDraw::should_draw() const {
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.UpdateParticleShouldDraw.should_draw)
  return should_draw_;
}
inline void CUserMsg_ParticleManager_UpdateParticleShouldDraw::set_should_draw(bool value) {
  _has_bits_[0] |= 0x00000001u;
  should_draw_ = value;
  // @@protoc_insertion_point(field_set:CUserMsg_ParticleManager.UpdateParticleShouldDraw.should_draw)
}

// -------------------------------------------------------------------

// CUserMsg_ParticleManager_ChangeControlPointAttachment

// optional int32 attachment_old = 1;
inline bool CUserMsg_ParticleManager_ChangeControlPointAttachment::has_attachment_old() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_ParticleManager_ChangeControlPointAttachment::clear_attachment_old() {
  attachment_old_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 CUserMsg_ParticleManager_ChangeControlPointAttachment::attachment_old() const {
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.ChangeControlPointAttachment.attachment_old)
  return attachment_old_;
}
inline void CUserMsg_ParticleManager_ChangeControlPointAttachment::set_attachment_old(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  attachment_old_ = value;
  // @@protoc_insertion_point(field_set:CUserMsg_ParticleManager.ChangeControlPointAttachment.attachment_old)
}

// optional int32 attachment_new = 2;
inline bool CUserMsg_ParticleManager_ChangeControlPointAttachment::has_attachment_new() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMsg_ParticleManager_ChangeControlPointAttachment::clear_attachment_new() {
  attachment_new_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CUserMsg_ParticleManager_ChangeControlPointAttachment::attachment_new() const {
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.ChangeControlPointAttachment.attachment_new)
  return attachment_new_;
}
inline void CUserMsg_ParticleManager_ChangeControlPointAttachment::set_attachment_new(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  attachment_new_ = value;
  // @@protoc_insertion_point(field_set:CUserMsg_ParticleManager.ChangeControlPointAttachment.attachment_new)
}

// optional int32 entity_handle = 3;
inline bool CUserMsg_ParticleManager_ChangeControlPointAttachment::has_entity_handle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMsg_ParticleManager_ChangeControlPointAttachment::clear_entity_handle() {
  entity_handle_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CUserMsg_ParticleManager_ChangeControlPointAttachment::entity_handle() const {
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.ChangeControlPointAttachment.entity_handle)
  return entity_handle_;
}
inline void CUserMsg_ParticleManager_ChangeControlPointAttachment::set_entity_handle(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  entity_handle_ = value;
  // @@protoc_insertion_point(field_set:CUserMsg_ParticleManager.ChangeControlPointAttachment.entity_handle)
}

// -------------------------------------------------------------------

// CUserMsg_ParticleManager_UpdateEntityPosition

// optional int32 entity_handle = 1;
inline bool CUserMsg_ParticleManager_UpdateEntityPosition::has_entity_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMsg_ParticleManager_UpdateEntityPosition::clear_entity_handle() {
  entity_handle_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CUserMsg_ParticleManager_UpdateEntityPosition::entity_handle() const {
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.UpdateEntityPosition.entity_handle)
  return entity_handle_;
}
inline void CUserMsg_ParticleManager_UpdateEntityPosition::set_entity_handle(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  entity_handle_ = value;
  // @@protoc_insertion_point(field_set:CUserMsg_ParticleManager.UpdateEntityPosition.entity_handle)
}

// optional .CMsgVector position = 2;
inline bool CUserMsg_ParticleManager_UpdateEntityPosition::has_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::CMsgVector& CUserMsg_ParticleManager_UpdateEntityPosition::position() const {
  const ::CMsgVector* p = position_;
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.UpdateEntityPosition.position)
  return p != nullptr ? *p : *reinterpret_cast<const ::CMsgVector*>(
      &::_CMsgVector_default_instance_);
}
inline ::CMsgVector* CUserMsg_ParticleManager_UpdateEntityPosition::release_position() {
  // @@protoc_insertion_point(field_release:CUserMsg_ParticleManager.UpdateEntityPosition.position)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = position_;
  position_ = nullptr;
  return temp;
}
inline ::CMsgVector* CUserMsg_ParticleManager_UpdateEntityPosition::mutable_position() {
  _has_bits_[0] |= 0x00000001u;
  if (position_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArenaNoVirtual());
    position_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMsg_ParticleManager.UpdateEntityPosition.position)
  return position_;
}
inline void CUserMsg_ParticleManager_UpdateEntityPosition::set_allocated_position(::CMsgVector* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(position_);
  }
  if (position) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:CUserMsg_ParticleManager.UpdateEntityPosition.position)
}

// -------------------------------------------------------------------

// CUserMsg_ParticleManager_SetParticleFoWProperties

// optional int32 fow_control_point = 1;
inline bool CUserMsg_ParticleManager_SetParticleFoWProperties::has_fow_control_point() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_ParticleManager_SetParticleFoWProperties::clear_fow_control_point() {
  fow_control_point_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 CUserMsg_ParticleManager_SetParticleFoWProperties::fow_control_point() const {
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.SetParticleFoWProperties.fow_control_point)
  return fow_control_point_;
}
inline void CUserMsg_ParticleManager_SetParticleFoWProperties::set_fow_control_point(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  fow_control_point_ = value;
  // @@protoc_insertion_point(field_set:CUserMsg_ParticleManager.SetParticleFoWProperties.fow_control_point)
}

// optional int32 fow_control_point2 = 2;
inline bool CUserMsg_ParticleManager_SetParticleFoWProperties::has_fow_control_point2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMsg_ParticleManager_SetParticleFoWProperties::clear_fow_control_point2() {
  fow_control_point2_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CUserMsg_ParticleManager_SetParticleFoWProperties::fow_control_point2() const {
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.SetParticleFoWProperties.fow_control_point2)
  return fow_control_point2_;
}
inline void CUserMsg_ParticleManager_SetParticleFoWProperties::set_fow_control_point2(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  fow_control_point2_ = value;
  // @@protoc_insertion_point(field_set:CUserMsg_ParticleManager.SetParticleFoWProperties.fow_control_point2)
}

// optional float fow_radius = 3;
inline bool CUserMsg_ParticleManager_SetParticleFoWProperties::has_fow_radius() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMsg_ParticleManager_SetParticleFoWProperties::clear_fow_radius() {
  fow_radius_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CUserMsg_ParticleManager_SetParticleFoWProperties::fow_radius() const {
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.SetParticleFoWProperties.fow_radius)
  return fow_radius_;
}
inline void CUserMsg_ParticleManager_SetParticleFoWProperties::set_fow_radius(float value) {
  _has_bits_[0] |= 0x00000004u;
  fow_radius_ = value;
  // @@protoc_insertion_point(field_set:CUserMsg_ParticleManager.SetParticleFoWProperties.fow_radius)
}

// -------------------------------------------------------------------

// CUserMsg_ParticleManager_SetParticleShouldCheckFoW

// optional bool check_fow = 1;
inline bool CUserMsg_ParticleManager_SetParticleShouldCheckFoW::has_check_fow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_ParticleManager_SetParticleShouldCheckFoW::clear_check_fow() {
  check_fow_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CUserMsg_ParticleManager_SetParticleShouldCheckFoW::check_fow() const {
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.SetParticleShouldCheckFoW.check_fow)
  return check_fow_;
}
inline void CUserMsg_ParticleManager_SetParticleShouldCheckFoW::set_check_fow(bool value) {
  _has_bits_[0] |= 0x00000001u;
  check_fow_ = value;
  // @@protoc_insertion_point(field_set:CUserMsg_ParticleManager.SetParticleShouldCheckFoW.check_fow)
}

// -------------------------------------------------------------------

// CUserMsg_ParticleManager_SetParticleText

// optional string text = 1;
inline bool CUserMsg_ParticleManager_SetParticleText::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_ParticleManager_SetParticleText::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CUserMsg_ParticleManager_SetParticleText::text() const {
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.SetParticleText.text)
  return text_.GetNoArena();
}
inline void CUserMsg_ParticleManager_SetParticleText::set_text(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CUserMsg_ParticleManager.SetParticleText.text)
}
#if LANG_CXX11
inline void CUserMsg_ParticleManager_SetParticleText::set_text(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CUserMsg_ParticleManager.SetParticleText.text)
}
#endif
inline void CUserMsg_ParticleManager_SetParticleText::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CUserMsg_ParticleManager.SetParticleText.text)
}
inline void CUserMsg_ParticleManager_SetParticleText::set_text(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CUserMsg_ParticleManager.SetParticleText.text)
}
inline ::std::string* CUserMsg_ParticleManager_SetParticleText::mutable_text() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:CUserMsg_ParticleManager.SetParticleText.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CUserMsg_ParticleManager_SetParticleText::release_text() {
  // @@protoc_insertion_point(field_release:CUserMsg_ParticleManager.SetParticleText.text)
  if (!has_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return text_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CUserMsg_ParticleManager_SetParticleText::set_allocated_text(::std::string* text) {
  if (text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:CUserMsg_ParticleManager.SetParticleText.text)
}

// -------------------------------------------------------------------

// CUserMsg_ParticleManager

// required .PARTICLE_MESSAGE type = 1 [default = GAME_PARTICLE_MANAGER_EVENT_CREATE];
inline bool CUserMsg_ParticleManager::has_type() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CUserMsg_ParticleManager::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::PARTICLE_MESSAGE CUserMsg_ParticleManager::type() const {
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.type)
  return static_cast< ::PARTICLE_MESSAGE >(type_);
}
inline void CUserMsg_ParticleManager::set_type(::PARTICLE_MESSAGE value) {
  assert(::PARTICLE_MESSAGE_IsValid(value));
  _has_bits_[0] |= 0x00020000u;
  type_ = value;
  // @@protoc_insertion_point(field_set:CUserMsg_ParticleManager.type)
}

// required uint32 index = 2;
inline bool CUserMsg_ParticleManager::has_index() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CUserMsg_ParticleManager::clear_index() {
  index_ = 0u;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::google::protobuf::uint32 CUserMsg_ParticleManager::index() const {
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.index)
  return index_;
}
inline void CUserMsg_ParticleManager::set_index(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00040000u;
  index_ = value;
  // @@protoc_insertion_point(field_set:CUserMsg_ParticleManager.index)
}

// optional .CUserMsg_ParticleManager.ReleaseParticleIndex release_particle_index = 3;
inline bool CUserMsg_ParticleManager::has_release_particle_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_ParticleManager::clear_release_particle_index() {
  if (release_particle_index_ != nullptr) release_particle_index_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CUserMsg_ParticleManager_ReleaseParticleIndex& CUserMsg_ParticleManager::release_particle_index() const {
  const ::CUserMsg_ParticleManager_ReleaseParticleIndex* p = release_particle_index_;
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.release_particle_index)
  return p != nullptr ? *p : *reinterpret_cast<const ::CUserMsg_ParticleManager_ReleaseParticleIndex*>(
      &::_CUserMsg_ParticleManager_ReleaseParticleIndex_default_instance_);
}
inline ::CUserMsg_ParticleManager_ReleaseParticleIndex* CUserMsg_ParticleManager::release_release_particle_index() {
  // @@protoc_insertion_point(field_release:CUserMsg_ParticleManager.release_particle_index)
  _has_bits_[0] &= ~0x00000001u;
  ::CUserMsg_ParticleManager_ReleaseParticleIndex* temp = release_particle_index_;
  release_particle_index_ = nullptr;
  return temp;
}
inline ::CUserMsg_ParticleManager_ReleaseParticleIndex* CUserMsg_ParticleManager::mutable_release_particle_index() {
  _has_bits_[0] |= 0x00000001u;
  if (release_particle_index_ == nullptr) {
    auto* p = CreateMaybeMessage<::CUserMsg_ParticleManager_ReleaseParticleIndex>(GetArenaNoVirtual());
    release_particle_index_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMsg_ParticleManager.release_particle_index)
  return release_particle_index_;
}
inline void CUserMsg_ParticleManager::set_allocated_release_particle_index(::CUserMsg_ParticleManager_ReleaseParticleIndex* release_particle_index) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete release_particle_index_;
  }
  if (release_particle_index) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      release_particle_index = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, release_particle_index, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  release_particle_index_ = release_particle_index;
  // @@protoc_insertion_point(field_set_allocated:CUserMsg_ParticleManager.release_particle_index)
}

// optional .CUserMsg_ParticleManager.CreateParticle create_particle = 4;
inline bool CUserMsg_ParticleManager::has_create_particle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMsg_ParticleManager::clear_create_particle() {
  if (create_particle_ != nullptr) create_particle_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::CUserMsg_ParticleManager_CreateParticle& CUserMsg_ParticleManager::create_particle() const {
  const ::CUserMsg_ParticleManager_CreateParticle* p = create_particle_;
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.create_particle)
  return p != nullptr ? *p : *reinterpret_cast<const ::CUserMsg_ParticleManager_CreateParticle*>(
      &::_CUserMsg_ParticleManager_CreateParticle_default_instance_);
}
inline ::CUserMsg_ParticleManager_CreateParticle* CUserMsg_ParticleManager::release_create_particle() {
  // @@protoc_insertion_point(field_release:CUserMsg_ParticleManager.create_particle)
  _has_bits_[0] &= ~0x00000002u;
  ::CUserMsg_ParticleManager_CreateParticle* temp = create_particle_;
  create_particle_ = nullptr;
  return temp;
}
inline ::CUserMsg_ParticleManager_CreateParticle* CUserMsg_ParticleManager::mutable_create_particle() {
  _has_bits_[0] |= 0x00000002u;
  if (create_particle_ == nullptr) {
    auto* p = CreateMaybeMessage<::CUserMsg_ParticleManager_CreateParticle>(GetArenaNoVirtual());
    create_particle_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMsg_ParticleManager.create_particle)
  return create_particle_;
}
inline void CUserMsg_ParticleManager::set_allocated_create_particle(::CUserMsg_ParticleManager_CreateParticle* create_particle) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete create_particle_;
  }
  if (create_particle) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      create_particle = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, create_particle, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  create_particle_ = create_particle;
  // @@protoc_insertion_point(field_set_allocated:CUserMsg_ParticleManager.create_particle)
}

// optional .CUserMsg_ParticleManager.DestroyParticle destroy_particle = 5;
inline bool CUserMsg_ParticleManager::has_destroy_particle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMsg_ParticleManager::clear_destroy_particle() {
  if (destroy_particle_ != nullptr) destroy_particle_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::CUserMsg_ParticleManager_DestroyParticle& CUserMsg_ParticleManager::destroy_particle() const {
  const ::CUserMsg_ParticleManager_DestroyParticle* p = destroy_particle_;
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.destroy_particle)
  return p != nullptr ? *p : *reinterpret_cast<const ::CUserMsg_ParticleManager_DestroyParticle*>(
      &::_CUserMsg_ParticleManager_DestroyParticle_default_instance_);
}
inline ::CUserMsg_ParticleManager_DestroyParticle* CUserMsg_ParticleManager::release_destroy_particle() {
  // @@protoc_insertion_point(field_release:CUserMsg_ParticleManager.destroy_particle)
  _has_bits_[0] &= ~0x00000004u;
  ::CUserMsg_ParticleManager_DestroyParticle* temp = destroy_particle_;
  destroy_particle_ = nullptr;
  return temp;
}
inline ::CUserMsg_ParticleManager_DestroyParticle* CUserMsg_ParticleManager::mutable_destroy_particle() {
  _has_bits_[0] |= 0x00000004u;
  if (destroy_particle_ == nullptr) {
    auto* p = CreateMaybeMessage<::CUserMsg_ParticleManager_DestroyParticle>(GetArenaNoVirtual());
    destroy_particle_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMsg_ParticleManager.destroy_particle)
  return destroy_particle_;
}
inline void CUserMsg_ParticleManager::set_allocated_destroy_particle(::CUserMsg_ParticleManager_DestroyParticle* destroy_particle) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete destroy_particle_;
  }
  if (destroy_particle) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      destroy_particle = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, destroy_particle, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  destroy_particle_ = destroy_particle;
  // @@protoc_insertion_point(field_set_allocated:CUserMsg_ParticleManager.destroy_particle)
}

// optional .CUserMsg_ParticleManager.DestroyParticleInvolving destroy_particle_involving = 6;
inline bool CUserMsg_ParticleManager::has_destroy_particle_involving() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUserMsg_ParticleManager::clear_destroy_particle_involving() {
  if (destroy_particle_involving_ != nullptr) destroy_particle_involving_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::CUserMsg_ParticleManager_DestroyParticleInvolving& CUserMsg_ParticleManager::destroy_particle_involving() const {
  const ::CUserMsg_ParticleManager_DestroyParticleInvolving* p = destroy_particle_involving_;
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.destroy_particle_involving)
  return p != nullptr ? *p : *reinterpret_cast<const ::CUserMsg_ParticleManager_DestroyParticleInvolving*>(
      &::_CUserMsg_ParticleManager_DestroyParticleInvolving_default_instance_);
}
inline ::CUserMsg_ParticleManager_DestroyParticleInvolving* CUserMsg_ParticleManager::release_destroy_particle_involving() {
  // @@protoc_insertion_point(field_release:CUserMsg_ParticleManager.destroy_particle_involving)
  _has_bits_[0] &= ~0x00000008u;
  ::CUserMsg_ParticleManager_DestroyParticleInvolving* temp = destroy_particle_involving_;
  destroy_particle_involving_ = nullptr;
  return temp;
}
inline ::CUserMsg_ParticleManager_DestroyParticleInvolving* CUserMsg_ParticleManager::mutable_destroy_particle_involving() {
  _has_bits_[0] |= 0x00000008u;
  if (destroy_particle_involving_ == nullptr) {
    auto* p = CreateMaybeMessage<::CUserMsg_ParticleManager_DestroyParticleInvolving>(GetArenaNoVirtual());
    destroy_particle_involving_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMsg_ParticleManager.destroy_particle_involving)
  return destroy_particle_involving_;
}
inline void CUserMsg_ParticleManager::set_allocated_destroy_particle_involving(::CUserMsg_ParticleManager_DestroyParticleInvolving* destroy_particle_involving) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete destroy_particle_involving_;
  }
  if (destroy_particle_involving) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      destroy_particle_involving = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, destroy_particle_involving, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  destroy_particle_involving_ = destroy_particle_involving;
  // @@protoc_insertion_point(field_set_allocated:CUserMsg_ParticleManager.destroy_particle_involving)
}

// optional .CUserMsg_ParticleManager.UpdateParticle update_particle = 7;
inline bool CUserMsg_ParticleManager::has_update_particle() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CUserMsg_ParticleManager::clear_update_particle() {
  if (update_particle_ != nullptr) update_particle_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::CUserMsg_ParticleManager_UpdateParticle& CUserMsg_ParticleManager::update_particle() const {
  const ::CUserMsg_ParticleManager_UpdateParticle* p = update_particle_;
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.update_particle)
  return p != nullptr ? *p : *reinterpret_cast<const ::CUserMsg_ParticleManager_UpdateParticle*>(
      &::_CUserMsg_ParticleManager_UpdateParticle_default_instance_);
}
inline ::CUserMsg_ParticleManager_UpdateParticle* CUserMsg_ParticleManager::release_update_particle() {
  // @@protoc_insertion_point(field_release:CUserMsg_ParticleManager.update_particle)
  _has_bits_[0] &= ~0x00000010u;
  ::CUserMsg_ParticleManager_UpdateParticle* temp = update_particle_;
  update_particle_ = nullptr;
  return temp;
}
inline ::CUserMsg_ParticleManager_UpdateParticle* CUserMsg_ParticleManager::mutable_update_particle() {
  _has_bits_[0] |= 0x00000010u;
  if (update_particle_ == nullptr) {
    auto* p = CreateMaybeMessage<::CUserMsg_ParticleManager_UpdateParticle>(GetArenaNoVirtual());
    update_particle_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMsg_ParticleManager.update_particle)
  return update_particle_;
}
inline void CUserMsg_ParticleManager::set_allocated_update_particle(::CUserMsg_ParticleManager_UpdateParticle* update_particle) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete update_particle_;
  }
  if (update_particle) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      update_particle = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_particle, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  update_particle_ = update_particle;
  // @@protoc_insertion_point(field_set_allocated:CUserMsg_ParticleManager.update_particle)
}

// optional .CUserMsg_ParticleManager.UpdateParticleFwd update_particle_fwd = 8;
inline bool CUserMsg_ParticleManager::has_update_particle_fwd() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CUserMsg_ParticleManager::clear_update_particle_fwd() {
  if (update_particle_fwd_ != nullptr) update_particle_fwd_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
inline const ::CUserMsg_ParticleManager_UpdateParticleFwd& CUserMsg_ParticleManager::update_particle_fwd() const {
  const ::CUserMsg_ParticleManager_UpdateParticleFwd* p = update_particle_fwd_;
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.update_particle_fwd)
  return p != nullptr ? *p : *reinterpret_cast<const ::CUserMsg_ParticleManager_UpdateParticleFwd*>(
      &::_CUserMsg_ParticleManager_UpdateParticleFwd_default_instance_);
}
inline ::CUserMsg_ParticleManager_UpdateParticleFwd* CUserMsg_ParticleManager::release_update_particle_fwd() {
  // @@protoc_insertion_point(field_release:CUserMsg_ParticleManager.update_particle_fwd)
  _has_bits_[0] &= ~0x00000020u;
  ::CUserMsg_ParticleManager_UpdateParticleFwd* temp = update_particle_fwd_;
  update_particle_fwd_ = nullptr;
  return temp;
}
inline ::CUserMsg_ParticleManager_UpdateParticleFwd* CUserMsg_ParticleManager::mutable_update_particle_fwd() {
  _has_bits_[0] |= 0x00000020u;
  if (update_particle_fwd_ == nullptr) {
    auto* p = CreateMaybeMessage<::CUserMsg_ParticleManager_UpdateParticleFwd>(GetArenaNoVirtual());
    update_particle_fwd_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMsg_ParticleManager.update_particle_fwd)
  return update_particle_fwd_;
}
inline void CUserMsg_ParticleManager::set_allocated_update_particle_fwd(::CUserMsg_ParticleManager_UpdateParticleFwd* update_particle_fwd) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete update_particle_fwd_;
  }
  if (update_particle_fwd) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      update_particle_fwd = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_particle_fwd, submessage_arena);
    }
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  update_particle_fwd_ = update_particle_fwd;
  // @@protoc_insertion_point(field_set_allocated:CUserMsg_ParticleManager.update_particle_fwd)
}

// optional .CUserMsg_ParticleManager.UpdateParticleOrient update_particle_orient = 9;
inline bool CUserMsg_ParticleManager::has_update_particle_orient() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CUserMsg_ParticleManager::clear_update_particle_orient() {
  if (update_particle_orient_ != nullptr) update_particle_orient_->Clear();
  _has_bits_[0] &= ~0x00000040u;
}
inline const ::CUserMsg_ParticleManager_UpdateParticleOrient& CUserMsg_ParticleManager::update_particle_orient() const {
  const ::CUserMsg_ParticleManager_UpdateParticleOrient* p = update_particle_orient_;
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.update_particle_orient)
  return p != nullptr ? *p : *reinterpret_cast<const ::CUserMsg_ParticleManager_UpdateParticleOrient*>(
      &::_CUserMsg_ParticleManager_UpdateParticleOrient_default_instance_);
}
inline ::CUserMsg_ParticleManager_UpdateParticleOrient* CUserMsg_ParticleManager::release_update_particle_orient() {
  // @@protoc_insertion_point(field_release:CUserMsg_ParticleManager.update_particle_orient)
  _has_bits_[0] &= ~0x00000040u;
  ::CUserMsg_ParticleManager_UpdateParticleOrient* temp = update_particle_orient_;
  update_particle_orient_ = nullptr;
  return temp;
}
inline ::CUserMsg_ParticleManager_UpdateParticleOrient* CUserMsg_ParticleManager::mutable_update_particle_orient() {
  _has_bits_[0] |= 0x00000040u;
  if (update_particle_orient_ == nullptr) {
    auto* p = CreateMaybeMessage<::CUserMsg_ParticleManager_UpdateParticleOrient>(GetArenaNoVirtual());
    update_particle_orient_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMsg_ParticleManager.update_particle_orient)
  return update_particle_orient_;
}
inline void CUserMsg_ParticleManager::set_allocated_update_particle_orient(::CUserMsg_ParticleManager_UpdateParticleOrient* update_particle_orient) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete update_particle_orient_;
  }
  if (update_particle_orient) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      update_particle_orient = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_particle_orient, submessage_arena);
    }
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  update_particle_orient_ = update_particle_orient;
  // @@protoc_insertion_point(field_set_allocated:CUserMsg_ParticleManager.update_particle_orient)
}

// optional .CUserMsg_ParticleManager.UpdateParticleFallback update_particle_fallback = 10;
inline bool CUserMsg_ParticleManager::has_update_particle_fallback() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CUserMsg_ParticleManager::clear_update_particle_fallback() {
  if (update_particle_fallback_ != nullptr) update_particle_fallback_->Clear();
  _has_bits_[0] &= ~0x00000080u;
}
inline const ::CUserMsg_ParticleManager_UpdateParticleFallback& CUserMsg_ParticleManager::update_particle_fallback() const {
  const ::CUserMsg_ParticleManager_UpdateParticleFallback* p = update_particle_fallback_;
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.update_particle_fallback)
  return p != nullptr ? *p : *reinterpret_cast<const ::CUserMsg_ParticleManager_UpdateParticleFallback*>(
      &::_CUserMsg_ParticleManager_UpdateParticleFallback_default_instance_);
}
inline ::CUserMsg_ParticleManager_UpdateParticleFallback* CUserMsg_ParticleManager::release_update_particle_fallback() {
  // @@protoc_insertion_point(field_release:CUserMsg_ParticleManager.update_particle_fallback)
  _has_bits_[0] &= ~0x00000080u;
  ::CUserMsg_ParticleManager_UpdateParticleFallback* temp = update_particle_fallback_;
  update_particle_fallback_ = nullptr;
  return temp;
}
inline ::CUserMsg_ParticleManager_UpdateParticleFallback* CUserMsg_ParticleManager::mutable_update_particle_fallback() {
  _has_bits_[0] |= 0x00000080u;
  if (update_particle_fallback_ == nullptr) {
    auto* p = CreateMaybeMessage<::CUserMsg_ParticleManager_UpdateParticleFallback>(GetArenaNoVirtual());
    update_particle_fallback_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMsg_ParticleManager.update_particle_fallback)
  return update_particle_fallback_;
}
inline void CUserMsg_ParticleManager::set_allocated_update_particle_fallback(::CUserMsg_ParticleManager_UpdateParticleFallback* update_particle_fallback) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete update_particle_fallback_;
  }
  if (update_particle_fallback) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      update_particle_fallback = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_particle_fallback, submessage_arena);
    }
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  update_particle_fallback_ = update_particle_fallback;
  // @@protoc_insertion_point(field_set_allocated:CUserMsg_ParticleManager.update_particle_fallback)
}

// optional .CUserMsg_ParticleManager.UpdateParticleOffset update_particle_offset = 11;
inline bool CUserMsg_ParticleManager::has_update_particle_offset() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CUserMsg_ParticleManager::clear_update_particle_offset() {
  if (update_particle_offset_ != nullptr) update_particle_offset_->Clear();
  _has_bits_[0] &= ~0x00000100u;
}
inline const ::CUserMsg_ParticleManager_UpdateParticleOffset& CUserMsg_ParticleManager::update_particle_offset() const {
  const ::CUserMsg_ParticleManager_UpdateParticleOffset* p = update_particle_offset_;
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.update_particle_offset)
  return p != nullptr ? *p : *reinterpret_cast<const ::CUserMsg_ParticleManager_UpdateParticleOffset*>(
      &::_CUserMsg_ParticleManager_UpdateParticleOffset_default_instance_);
}
inline ::CUserMsg_ParticleManager_UpdateParticleOffset* CUserMsg_ParticleManager::release_update_particle_offset() {
  // @@protoc_insertion_point(field_release:CUserMsg_ParticleManager.update_particle_offset)
  _has_bits_[0] &= ~0x00000100u;
  ::CUserMsg_ParticleManager_UpdateParticleOffset* temp = update_particle_offset_;
  update_particle_offset_ = nullptr;
  return temp;
}
inline ::CUserMsg_ParticleManager_UpdateParticleOffset* CUserMsg_ParticleManager::mutable_update_particle_offset() {
  _has_bits_[0] |= 0x00000100u;
  if (update_particle_offset_ == nullptr) {
    auto* p = CreateMaybeMessage<::CUserMsg_ParticleManager_UpdateParticleOffset>(GetArenaNoVirtual());
    update_particle_offset_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMsg_ParticleManager.update_particle_offset)
  return update_particle_offset_;
}
inline void CUserMsg_ParticleManager::set_allocated_update_particle_offset(::CUserMsg_ParticleManager_UpdateParticleOffset* update_particle_offset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete update_particle_offset_;
  }
  if (update_particle_offset) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      update_particle_offset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_particle_offset, submessage_arena);
    }
    _has_bits_[0] |= 0x00000100u;
  } else {
    _has_bits_[0] &= ~0x00000100u;
  }
  update_particle_offset_ = update_particle_offset;
  // @@protoc_insertion_point(field_set_allocated:CUserMsg_ParticleManager.update_particle_offset)
}

// optional .CUserMsg_ParticleManager.UpdateParticleEnt update_particle_ent = 12;
inline bool CUserMsg_ParticleManager::has_update_particle_ent() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CUserMsg_ParticleManager::clear_update_particle_ent() {
  if (update_particle_ent_ != nullptr) update_particle_ent_->Clear();
  _has_bits_[0] &= ~0x00000200u;
}
inline const ::CUserMsg_ParticleManager_UpdateParticleEnt& CUserMsg_ParticleManager::update_particle_ent() const {
  const ::CUserMsg_ParticleManager_UpdateParticleEnt* p = update_particle_ent_;
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.update_particle_ent)
  return p != nullptr ? *p : *reinterpret_cast<const ::CUserMsg_ParticleManager_UpdateParticleEnt*>(
      &::_CUserMsg_ParticleManager_UpdateParticleEnt_default_instance_);
}
inline ::CUserMsg_ParticleManager_UpdateParticleEnt* CUserMsg_ParticleManager::release_update_particle_ent() {
  // @@protoc_insertion_point(field_release:CUserMsg_ParticleManager.update_particle_ent)
  _has_bits_[0] &= ~0x00000200u;
  ::CUserMsg_ParticleManager_UpdateParticleEnt* temp = update_particle_ent_;
  update_particle_ent_ = nullptr;
  return temp;
}
inline ::CUserMsg_ParticleManager_UpdateParticleEnt* CUserMsg_ParticleManager::mutable_update_particle_ent() {
  _has_bits_[0] |= 0x00000200u;
  if (update_particle_ent_ == nullptr) {
    auto* p = CreateMaybeMessage<::CUserMsg_ParticleManager_UpdateParticleEnt>(GetArenaNoVirtual());
    update_particle_ent_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMsg_ParticleManager.update_particle_ent)
  return update_particle_ent_;
}
inline void CUserMsg_ParticleManager::set_allocated_update_particle_ent(::CUserMsg_ParticleManager_UpdateParticleEnt* update_particle_ent) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete update_particle_ent_;
  }
  if (update_particle_ent) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      update_particle_ent = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_particle_ent, submessage_arena);
    }
    _has_bits_[0] |= 0x00000200u;
  } else {
    _has_bits_[0] &= ~0x00000200u;
  }
  update_particle_ent_ = update_particle_ent;
  // @@protoc_insertion_point(field_set_allocated:CUserMsg_ParticleManager.update_particle_ent)
}

// optional .CUserMsg_ParticleManager.UpdateParticleShouldDraw update_particle_should_draw = 14;
inline bool CUserMsg_ParticleManager::has_update_particle_should_draw() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CUserMsg_ParticleManager::clear_update_particle_should_draw() {
  if (update_particle_should_draw_ != nullptr) update_particle_should_draw_->Clear();
  _has_bits_[0] &= ~0x00000400u;
}
inline const ::CUserMsg_ParticleManager_UpdateParticleShouldDraw& CUserMsg_ParticleManager::update_particle_should_draw() const {
  const ::CUserMsg_ParticleManager_UpdateParticleShouldDraw* p = update_particle_should_draw_;
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.update_particle_should_draw)
  return p != nullptr ? *p : *reinterpret_cast<const ::CUserMsg_ParticleManager_UpdateParticleShouldDraw*>(
      &::_CUserMsg_ParticleManager_UpdateParticleShouldDraw_default_instance_);
}
inline ::CUserMsg_ParticleManager_UpdateParticleShouldDraw* CUserMsg_ParticleManager::release_update_particle_should_draw() {
  // @@protoc_insertion_point(field_release:CUserMsg_ParticleManager.update_particle_should_draw)
  _has_bits_[0] &= ~0x00000400u;
  ::CUserMsg_ParticleManager_UpdateParticleShouldDraw* temp = update_particle_should_draw_;
  update_particle_should_draw_ = nullptr;
  return temp;
}
inline ::CUserMsg_ParticleManager_UpdateParticleShouldDraw* CUserMsg_ParticleManager::mutable_update_particle_should_draw() {
  _has_bits_[0] |= 0x00000400u;
  if (update_particle_should_draw_ == nullptr) {
    auto* p = CreateMaybeMessage<::CUserMsg_ParticleManager_UpdateParticleShouldDraw>(GetArenaNoVirtual());
    update_particle_should_draw_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMsg_ParticleManager.update_particle_should_draw)
  return update_particle_should_draw_;
}
inline void CUserMsg_ParticleManager::set_allocated_update_particle_should_draw(::CUserMsg_ParticleManager_UpdateParticleShouldDraw* update_particle_should_draw) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete update_particle_should_draw_;
  }
  if (update_particle_should_draw) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      update_particle_should_draw = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_particle_should_draw, submessage_arena);
    }
    _has_bits_[0] |= 0x00000400u;
  } else {
    _has_bits_[0] &= ~0x00000400u;
  }
  update_particle_should_draw_ = update_particle_should_draw;
  // @@protoc_insertion_point(field_set_allocated:CUserMsg_ParticleManager.update_particle_should_draw)
}

// optional .CUserMsg_ParticleManager.UpdateParticleSetFrozen update_particle_set_frozen = 15;
inline bool CUserMsg_ParticleManager::has_update_particle_set_frozen() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CUserMsg_ParticleManager::clear_update_particle_set_frozen() {
  if (update_particle_set_frozen_ != nullptr) update_particle_set_frozen_->Clear();
  _has_bits_[0] &= ~0x00000800u;
}
inline const ::CUserMsg_ParticleManager_UpdateParticleSetFrozen& CUserMsg_ParticleManager::update_particle_set_frozen() const {
  const ::CUserMsg_ParticleManager_UpdateParticleSetFrozen* p = update_particle_set_frozen_;
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.update_particle_set_frozen)
  return p != nullptr ? *p : *reinterpret_cast<const ::CUserMsg_ParticleManager_UpdateParticleSetFrozen*>(
      &::_CUserMsg_ParticleManager_UpdateParticleSetFrozen_default_instance_);
}
inline ::CUserMsg_ParticleManager_UpdateParticleSetFrozen* CUserMsg_ParticleManager::release_update_particle_set_frozen() {
  // @@protoc_insertion_point(field_release:CUserMsg_ParticleManager.update_particle_set_frozen)
  _has_bits_[0] &= ~0x00000800u;
  ::CUserMsg_ParticleManager_UpdateParticleSetFrozen* temp = update_particle_set_frozen_;
  update_particle_set_frozen_ = nullptr;
  return temp;
}
inline ::CUserMsg_ParticleManager_UpdateParticleSetFrozen* CUserMsg_ParticleManager::mutable_update_particle_set_frozen() {
  _has_bits_[0] |= 0x00000800u;
  if (update_particle_set_frozen_ == nullptr) {
    auto* p = CreateMaybeMessage<::CUserMsg_ParticleManager_UpdateParticleSetFrozen>(GetArenaNoVirtual());
    update_particle_set_frozen_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMsg_ParticleManager.update_particle_set_frozen)
  return update_particle_set_frozen_;
}
inline void CUserMsg_ParticleManager::set_allocated_update_particle_set_frozen(::CUserMsg_ParticleManager_UpdateParticleSetFrozen* update_particle_set_frozen) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete update_particle_set_frozen_;
  }
  if (update_particle_set_frozen) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      update_particle_set_frozen = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_particle_set_frozen, submessage_arena);
    }
    _has_bits_[0] |= 0x00000800u;
  } else {
    _has_bits_[0] &= ~0x00000800u;
  }
  update_particle_set_frozen_ = update_particle_set_frozen;
  // @@protoc_insertion_point(field_set_allocated:CUserMsg_ParticleManager.update_particle_set_frozen)
}

// optional .CUserMsg_ParticleManager.ChangeControlPointAttachment change_control_point_attachment = 16;
inline bool CUserMsg_ParticleManager::has_change_control_point_attachment() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CUserMsg_ParticleManager::clear_change_control_point_attachment() {
  if (change_control_point_attachment_ != nullptr) change_control_point_attachment_->Clear();
  _has_bits_[0] &= ~0x00001000u;
}
inline const ::CUserMsg_ParticleManager_ChangeControlPointAttachment& CUserMsg_ParticleManager::change_control_point_attachment() const {
  const ::CUserMsg_ParticleManager_ChangeControlPointAttachment* p = change_control_point_attachment_;
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.change_control_point_attachment)
  return p != nullptr ? *p : *reinterpret_cast<const ::CUserMsg_ParticleManager_ChangeControlPointAttachment*>(
      &::_CUserMsg_ParticleManager_ChangeControlPointAttachment_default_instance_);
}
inline ::CUserMsg_ParticleManager_ChangeControlPointAttachment* CUserMsg_ParticleManager::release_change_control_point_attachment() {
  // @@protoc_insertion_point(field_release:CUserMsg_ParticleManager.change_control_point_attachment)
  _has_bits_[0] &= ~0x00001000u;
  ::CUserMsg_ParticleManager_ChangeControlPointAttachment* temp = change_control_point_attachment_;
  change_control_point_attachment_ = nullptr;
  return temp;
}
inline ::CUserMsg_ParticleManager_ChangeControlPointAttachment* CUserMsg_ParticleManager::mutable_change_control_point_attachment() {
  _has_bits_[0] |= 0x00001000u;
  if (change_control_point_attachment_ == nullptr) {
    auto* p = CreateMaybeMessage<::CUserMsg_ParticleManager_ChangeControlPointAttachment>(GetArenaNoVirtual());
    change_control_point_attachment_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMsg_ParticleManager.change_control_point_attachment)
  return change_control_point_attachment_;
}
inline void CUserMsg_ParticleManager::set_allocated_change_control_point_attachment(::CUserMsg_ParticleManager_ChangeControlPointAttachment* change_control_point_attachment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete change_control_point_attachment_;
  }
  if (change_control_point_attachment) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      change_control_point_attachment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, change_control_point_attachment, submessage_arena);
    }
    _has_bits_[0] |= 0x00001000u;
  } else {
    _has_bits_[0] &= ~0x00001000u;
  }
  change_control_point_attachment_ = change_control_point_attachment;
  // @@protoc_insertion_point(field_set_allocated:CUserMsg_ParticleManager.change_control_point_attachment)
}

// optional .CUserMsg_ParticleManager.UpdateEntityPosition update_entity_position = 17;
inline bool CUserMsg_ParticleManager::has_update_entity_position() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CUserMsg_ParticleManager::clear_update_entity_position() {
  if (update_entity_position_ != nullptr) update_entity_position_->Clear();
  _has_bits_[0] &= ~0x00002000u;
}
inline const ::CUserMsg_ParticleManager_UpdateEntityPosition& CUserMsg_ParticleManager::update_entity_position() const {
  const ::CUserMsg_ParticleManager_UpdateEntityPosition* p = update_entity_position_;
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.update_entity_position)
  return p != nullptr ? *p : *reinterpret_cast<const ::CUserMsg_ParticleManager_UpdateEntityPosition*>(
      &::_CUserMsg_ParticleManager_UpdateEntityPosition_default_instance_);
}
inline ::CUserMsg_ParticleManager_UpdateEntityPosition* CUserMsg_ParticleManager::release_update_entity_position() {
  // @@protoc_insertion_point(field_release:CUserMsg_ParticleManager.update_entity_position)
  _has_bits_[0] &= ~0x00002000u;
  ::CUserMsg_ParticleManager_UpdateEntityPosition* temp = update_entity_position_;
  update_entity_position_ = nullptr;
  return temp;
}
inline ::CUserMsg_ParticleManager_UpdateEntityPosition* CUserMsg_ParticleManager::mutable_update_entity_position() {
  _has_bits_[0] |= 0x00002000u;
  if (update_entity_position_ == nullptr) {
    auto* p = CreateMaybeMessage<::CUserMsg_ParticleManager_UpdateEntityPosition>(GetArenaNoVirtual());
    update_entity_position_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMsg_ParticleManager.update_entity_position)
  return update_entity_position_;
}
inline void CUserMsg_ParticleManager::set_allocated_update_entity_position(::CUserMsg_ParticleManager_UpdateEntityPosition* update_entity_position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete update_entity_position_;
  }
  if (update_entity_position) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      update_entity_position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_entity_position, submessage_arena);
    }
    _has_bits_[0] |= 0x00002000u;
  } else {
    _has_bits_[0] &= ~0x00002000u;
  }
  update_entity_position_ = update_entity_position;
  // @@protoc_insertion_point(field_set_allocated:CUserMsg_ParticleManager.update_entity_position)
}

// optional .CUserMsg_ParticleManager.SetParticleFoWProperties set_particle_fow_properties = 18;
inline bool CUserMsg_ParticleManager::has_set_particle_fow_properties() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CUserMsg_ParticleManager::clear_set_particle_fow_properties() {
  if (set_particle_fow_properties_ != nullptr) set_particle_fow_properties_->Clear();
  _has_bits_[0] &= ~0x00004000u;
}
inline const ::CUserMsg_ParticleManager_SetParticleFoWProperties& CUserMsg_ParticleManager::set_particle_fow_properties() const {
  const ::CUserMsg_ParticleManager_SetParticleFoWProperties* p = set_particle_fow_properties_;
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.set_particle_fow_properties)
  return p != nullptr ? *p : *reinterpret_cast<const ::CUserMsg_ParticleManager_SetParticleFoWProperties*>(
      &::_CUserMsg_ParticleManager_SetParticleFoWProperties_default_instance_);
}
inline ::CUserMsg_ParticleManager_SetParticleFoWProperties* CUserMsg_ParticleManager::release_set_particle_fow_properties() {
  // @@protoc_insertion_point(field_release:CUserMsg_ParticleManager.set_particle_fow_properties)
  _has_bits_[0] &= ~0x00004000u;
  ::CUserMsg_ParticleManager_SetParticleFoWProperties* temp = set_particle_fow_properties_;
  set_particle_fow_properties_ = nullptr;
  return temp;
}
inline ::CUserMsg_ParticleManager_SetParticleFoWProperties* CUserMsg_ParticleManager::mutable_set_particle_fow_properties() {
  _has_bits_[0] |= 0x00004000u;
  if (set_particle_fow_properties_ == nullptr) {
    auto* p = CreateMaybeMessage<::CUserMsg_ParticleManager_SetParticleFoWProperties>(GetArenaNoVirtual());
    set_particle_fow_properties_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMsg_ParticleManager.set_particle_fow_properties)
  return set_particle_fow_properties_;
}
inline void CUserMsg_ParticleManager::set_allocated_set_particle_fow_properties(::CUserMsg_ParticleManager_SetParticleFoWProperties* set_particle_fow_properties) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete set_particle_fow_properties_;
  }
  if (set_particle_fow_properties) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      set_particle_fow_properties = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, set_particle_fow_properties, submessage_arena);
    }
    _has_bits_[0] |= 0x00004000u;
  } else {
    _has_bits_[0] &= ~0x00004000u;
  }
  set_particle_fow_properties_ = set_particle_fow_properties;
  // @@protoc_insertion_point(field_set_allocated:CUserMsg_ParticleManager.set_particle_fow_properties)
}

// optional .CUserMsg_ParticleManager.SetParticleText set_particle_text = 19;
inline bool CUserMsg_ParticleManager::has_set_particle_text() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CUserMsg_ParticleManager::clear_set_particle_text() {
  if (set_particle_text_ != nullptr) set_particle_text_->Clear();
  _has_bits_[0] &= ~0x00008000u;
}
inline const ::CUserMsg_ParticleManager_SetParticleText& CUserMsg_ParticleManager::set_particle_text() const {
  const ::CUserMsg_ParticleManager_SetParticleText* p = set_particle_text_;
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.set_particle_text)
  return p != nullptr ? *p : *reinterpret_cast<const ::CUserMsg_ParticleManager_SetParticleText*>(
      &::_CUserMsg_ParticleManager_SetParticleText_default_instance_);
}
inline ::CUserMsg_ParticleManager_SetParticleText* CUserMsg_ParticleManager::release_set_particle_text() {
  // @@protoc_insertion_point(field_release:CUserMsg_ParticleManager.set_particle_text)
  _has_bits_[0] &= ~0x00008000u;
  ::CUserMsg_ParticleManager_SetParticleText* temp = set_particle_text_;
  set_particle_text_ = nullptr;
  return temp;
}
inline ::CUserMsg_ParticleManager_SetParticleText* CUserMsg_ParticleManager::mutable_set_particle_text() {
  _has_bits_[0] |= 0x00008000u;
  if (set_particle_text_ == nullptr) {
    auto* p = CreateMaybeMessage<::CUserMsg_ParticleManager_SetParticleText>(GetArenaNoVirtual());
    set_particle_text_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMsg_ParticleManager.set_particle_text)
  return set_particle_text_;
}
inline void CUserMsg_ParticleManager::set_allocated_set_particle_text(::CUserMsg_ParticleManager_SetParticleText* set_particle_text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete set_particle_text_;
  }
  if (set_particle_text) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      set_particle_text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, set_particle_text, submessage_arena);
    }
    _has_bits_[0] |= 0x00008000u;
  } else {
    _has_bits_[0] &= ~0x00008000u;
  }
  set_particle_text_ = set_particle_text;
  // @@protoc_insertion_point(field_set_allocated:CUserMsg_ParticleManager.set_particle_text)
}

// optional .CUserMsg_ParticleManager.SetParticleShouldCheckFoW set_particle_should_check_fow = 20;
inline bool CUserMsg_ParticleManager::has_set_particle_should_check_fow() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CUserMsg_ParticleManager::clear_set_particle_should_check_fow() {
  if (set_particle_should_check_fow_ != nullptr) set_particle_should_check_fow_->Clear();
  _has_bits_[0] &= ~0x00010000u;
}
inline const ::CUserMsg_ParticleManager_SetParticleShouldCheckFoW& CUserMsg_ParticleManager::set_particle_should_check_fow() const {
  const ::CUserMsg_ParticleManager_SetParticleShouldCheckFoW* p = set_particle_should_check_fow_;
  // @@protoc_insertion_point(field_get:CUserMsg_ParticleManager.set_particle_should_check_fow)
  return p != nullptr ? *p : *reinterpret_cast<const ::CUserMsg_ParticleManager_SetParticleShouldCheckFoW*>(
      &::_CUserMsg_ParticleManager_SetParticleShouldCheckFoW_default_instance_);
}
inline ::CUserMsg_ParticleManager_SetParticleShouldCheckFoW* CUserMsg_ParticleManager::release_set_particle_should_check_fow() {
  // @@protoc_insertion_point(field_release:CUserMsg_ParticleManager.set_particle_should_check_fow)
  _has_bits_[0] &= ~0x00010000u;
  ::CUserMsg_ParticleManager_SetParticleShouldCheckFoW* temp = set_particle_should_check_fow_;
  set_particle_should_check_fow_ = nullptr;
  return temp;
}
inline ::CUserMsg_ParticleManager_SetParticleShouldCheckFoW* CUserMsg_ParticleManager::mutable_set_particle_should_check_fow() {
  _has_bits_[0] |= 0x00010000u;
  if (set_particle_should_check_fow_ == nullptr) {
    auto* p = CreateMaybeMessage<::CUserMsg_ParticleManager_SetParticleShouldCheckFoW>(GetArenaNoVirtual());
    set_particle_should_check_fow_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CUserMsg_ParticleManager.set_particle_should_check_fow)
  return set_particle_should_check_fow_;
}
inline void CUserMsg_ParticleManager::set_allocated_set_particle_should_check_fow(::CUserMsg_ParticleManager_SetParticleShouldCheckFoW* set_particle_should_check_fow) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete set_particle_should_check_fow_;
  }
  if (set_particle_should_check_fow) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      set_particle_should_check_fow = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, set_particle_should_check_fow, submessage_arena);
    }
    _has_bits_[0] |= 0x00010000u;
  } else {
    _has_bits_[0] &= ~0x00010000u;
  }
  set_particle_should_check_fow_ = set_particle_should_check_fow;
  // @@protoc_insertion_point(field_set_allocated:CUserMsg_ParticleManager.set_particle_should_check_fow)
}

// -------------------------------------------------------------------

// CUserMsg_HudError

// optional int32 order_id = 1;
inline bool CUserMsg_HudError::has_order_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_HudError::clear_order_id() {
  order_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 CUserMsg_HudError::order_id() const {
  // @@protoc_insertion_point(field_get:CUserMsg_HudError.order_id)
  return order_id_;
}
inline void CUserMsg_HudError::set_order_id(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  order_id_ = value;
  // @@protoc_insertion_point(field_set:CUserMsg_HudError.order_id)
}

// -------------------------------------------------------------------

// CUserMsg_CustomGameEvent

// optional string event_name = 1;
inline bool CUserMsg_CustomGameEvent::has_event_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_CustomGameEvent::clear_event_name() {
  event_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CUserMsg_CustomGameEvent::event_name() const {
  // @@protoc_insertion_point(field_get:CUserMsg_CustomGameEvent.event_name)
  return event_name_.GetNoArena();
}
inline void CUserMsg_CustomGameEvent::set_event_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  event_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CUserMsg_CustomGameEvent.event_name)
}
#if LANG_CXX11
inline void CUserMsg_CustomGameEvent::set_event_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  event_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CUserMsg_CustomGameEvent.event_name)
}
#endif
inline void CUserMsg_CustomGameEvent::set_event_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  event_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CUserMsg_CustomGameEvent.event_name)
}
inline void CUserMsg_CustomGameEvent::set_event_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  event_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CUserMsg_CustomGameEvent.event_name)
}
inline ::std::string* CUserMsg_CustomGameEvent::mutable_event_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:CUserMsg_CustomGameEvent.event_name)
  return event_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CUserMsg_CustomGameEvent::release_event_name() {
  // @@protoc_insertion_point(field_release:CUserMsg_CustomGameEvent.event_name)
  if (!has_event_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return event_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CUserMsg_CustomGameEvent::set_allocated_event_name(::std::string* event_name) {
  if (event_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  event_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), event_name);
  // @@protoc_insertion_point(field_set_allocated:CUserMsg_CustomGameEvent.event_name)
}

// optional bytes data = 2;
inline bool CUserMsg_CustomGameEvent::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMsg_CustomGameEvent::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CUserMsg_CustomGameEvent::data() const {
  // @@protoc_insertion_point(field_get:CUserMsg_CustomGameEvent.data)
  return data_.GetNoArena();
}
inline void CUserMsg_CustomGameEvent::set_data(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CUserMsg_CustomGameEvent.data)
}
#if LANG_CXX11
inline void CUserMsg_CustomGameEvent::set_data(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CUserMsg_CustomGameEvent.data)
}
#endif
inline void CUserMsg_CustomGameEvent::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CUserMsg_CustomGameEvent.data)
}
inline void CUserMsg_CustomGameEvent::set_data(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CUserMsg_CustomGameEvent.data)
}
inline ::std::string* CUserMsg_CustomGameEvent::mutable_data() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:CUserMsg_CustomGameEvent.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CUserMsg_CustomGameEvent::release_data() {
  // @@protoc_insertion_point(field_release:CUserMsg_CustomGameEvent.data)
  if (!has_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CUserMsg_CustomGameEvent::set_allocated_data(::std::string* data) {
  if (data != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:CUserMsg_CustomGameEvent.data)
}

// -------------------------------------------------------------------

// CUserMessageHapticPulse

// optional int32 hand_id = 1;
inline bool CUserMessageHapticPulse::has_hand_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageHapticPulse::clear_hand_id() {
  hand_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 CUserMessageHapticPulse::hand_id() const {
  // @@protoc_insertion_point(field_get:CUserMessageHapticPulse.hand_id)
  return hand_id_;
}
inline void CUserMessageHapticPulse::set_hand_id(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  hand_id_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageHapticPulse.hand_id)
}

// optional .EHapticPulseType pulse_type = 2 [default = VR_HAND_HAPTIC_PULSE_LIGHT];
inline bool CUserMessageHapticPulse::has_pulse_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMessageHapticPulse::clear_pulse_type() {
  pulse_type_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::EHapticPulseType CUserMessageHapticPulse::pulse_type() const {
  // @@protoc_insertion_point(field_get:CUserMessageHapticPulse.pulse_type)
  return static_cast< ::EHapticPulseType >(pulse_type_);
}
inline void CUserMessageHapticPulse::set_pulse_type(::EHapticPulseType value) {
  assert(::EHapticPulseType_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  pulse_type_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageHapticPulse.pulse_type)
}

// -------------------------------------------------------------------

// CUserMessageHapticPulsePrecise

// optional int32 hand_id = 1;
inline bool CUserMessageHapticPulsePrecise::has_hand_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageHapticPulsePrecise::clear_hand_id() {
  hand_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 CUserMessageHapticPulsePrecise::hand_id() const {
  // @@protoc_insertion_point(field_get:CUserMessageHapticPulsePrecise.hand_id)
  return hand_id_;
}
inline void CUserMessageHapticPulsePrecise::set_hand_id(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  hand_id_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageHapticPulsePrecise.hand_id)
}

// optional int32 pulse_duration = 2;
inline bool CUserMessageHapticPulsePrecise::has_pulse_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMessageHapticPulsePrecise::clear_pulse_duration() {
  pulse_duration_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CUserMessageHapticPulsePrecise::pulse_duration() const {
  // @@protoc_insertion_point(field_get:CUserMessageHapticPulsePrecise.pulse_duration)
  return pulse_duration_;
}
inline void CUserMessageHapticPulsePrecise::set_pulse_duration(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  pulse_duration_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageHapticPulsePrecise.pulse_duration)
}

// -------------------------------------------------------------------

// CUserMessageAnimStateGraphState

// optional int32 entity_index = 1;
inline bool CUserMessageAnimStateGraphState::has_entity_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMessageAnimStateGraphState::clear_entity_index() {
  entity_index_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CUserMessageAnimStateGraphState::entity_index() const {
  // @@protoc_insertion_point(field_get:CUserMessageAnimStateGraphState.entity_index)
  return entity_index_;
}
inline void CUserMessageAnimStateGraphState::set_entity_index(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  entity_index_ = value;
  // @@protoc_insertion_point(field_set:CUserMessageAnimStateGraphState.entity_index)
}

// optional bytes data = 2;
inline bool CUserMessageAnimStateGraphState::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMessageAnimStateGraphState::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CUserMessageAnimStateGraphState::data() const {
  // @@protoc_insertion_point(field_get:CUserMessageAnimStateGraphState.data)
  return data_.GetNoArena();
}
inline void CUserMessageAnimStateGraphState::set_data(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CUserMessageAnimStateGraphState.data)
}
#if LANG_CXX11
inline void CUserMessageAnimStateGraphState::set_data(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CUserMessageAnimStateGraphState.data)
}
#endif
inline void CUserMessageAnimStateGraphState::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CUserMessageAnimStateGraphState.data)
}
inline void CUserMessageAnimStateGraphState::set_data(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CUserMessageAnimStateGraphState.data)
}
inline ::std::string* CUserMessageAnimStateGraphState::mutable_data() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:CUserMessageAnimStateGraphState.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CUserMessageAnimStateGraphState::release_data() {
  // @@protoc_insertion_point(field_release:CUserMessageAnimStateGraphState.data)
  if (!has_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CUserMessageAnimStateGraphState::set_allocated_data(::std::string* data) {
  if (data != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:CUserMessageAnimStateGraphState.data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::EBaseUserMessages> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EBaseUserMessages>() {
  return ::EBaseUserMessages_descriptor();
}
template <> struct is_proto_enum< ::EBaseEntityMessages> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EBaseEntityMessages>() {
  return ::EBaseEntityMessages_descriptor();
}
template <> struct is_proto_enum< ::eRollType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eRollType>() {
  return ::eRollType_descriptor();
}
template <> struct is_proto_enum< ::PARTICLE_MESSAGE> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PARTICLE_MESSAGE>() {
  return ::PARTICLE_MESSAGE_descriptor();
}
template <> struct is_proto_enum< ::EHapticPulseType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EHapticPulseType>() {
  return ::EHapticPulseType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_usermessages_2eproto
