// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: usermessages.proto

#include "usermessages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_networkbasetypes_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_networkbasetypes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgQAngle;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_networkbasetypes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgVector;
}  // namespace protobuf_networkbasetypes_2eproto
namespace protobuf_usermessages_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_usermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageCameraTransition_Transition_DataDriven;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_usermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageShake;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_usermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageVGUIMenu_Keys;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_usermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CUserMsg_ParticleManager_ChangeControlPointAttachment;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_usermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CUserMsg_ParticleManager_CreateParticle;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_usermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CUserMsg_ParticleManager_DestroyParticle;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_usermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CUserMsg_ParticleManager_DestroyParticleInvolving;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_usermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CUserMsg_ParticleManager_ReleaseParticleIndex;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_usermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CUserMsg_ParticleManager_SetParticleFoWProperties;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_usermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CUserMsg_ParticleManager_SetParticleShouldCheckFoW;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_usermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CUserMsg_ParticleManager_SetParticleText;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_usermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CUserMsg_ParticleManager_UpdateParticleSetFrozen;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_usermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CUserMsg_ParticleManager_UpdateParticleShouldDraw;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_usermessages_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CUserMsg_ParticleManager_UpdateEntityPosition;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_usermessages_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CUserMsg_ParticleManager_UpdateParticle;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_usermessages_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CUserMsg_ParticleManager_UpdateParticleEnt;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_usermessages_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CUserMsg_ParticleManager_UpdateParticleFallback;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_usermessages_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CUserMsg_ParticleManager_UpdateParticleFwd;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_usermessages_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CUserMsg_ParticleManager_UpdateParticleOrient;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_usermessages_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_CUserMsg_ParticleManager_UpdateParticleOffset;
}  // namespace protobuf_usermessages_2eproto
class CUserMessageAchievementEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageAchievementEvent>
      _instance;
} _CUserMessageAchievementEvent_default_instance_;
class CUserMessageCloseCaptionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageCloseCaption>
      _instance;
} _CUserMessageCloseCaption_default_instance_;
class CUserMessageCloseCaptionDirectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageCloseCaptionDirect>
      _instance;
} _CUserMessageCloseCaptionDirect_default_instance_;
class CUserMessageCloseCaptionPlaceholderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageCloseCaptionPlaceholder>
      _instance;
} _CUserMessageCloseCaptionPlaceholder_default_instance_;
class CUserMessageCurrentTimescaleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageCurrentTimescale>
      _instance;
} _CUserMessageCurrentTimescale_default_instance_;
class CUserMessageDesiredTimescaleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageDesiredTimescale>
      _instance;
} _CUserMessageDesiredTimescale_default_instance_;
class CUserMessageFadeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageFade>
      _instance;
} _CUserMessageFade_default_instance_;
class CUserMessageShakeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageShake>
      _instance;
} _CUserMessageShake_default_instance_;
class CUserMessageShakeDirDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageShakeDir>
      _instance;
} _CUserMessageShakeDir_default_instance_;
class CUserMessageScreenTiltDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageScreenTilt>
      _instance;
} _CUserMessageScreenTilt_default_instance_;
class CUserMessageSayTextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageSayText>
      _instance;
} _CUserMessageSayText_default_instance_;
class CUserMessageSayText2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageSayText2>
      _instance;
} _CUserMessageSayText2_default_instance_;
class CUserMessageHudMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageHudMsg>
      _instance;
} _CUserMessageHudMsg_default_instance_;
class CUserMessageHudTextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageHudText>
      _instance;
} _CUserMessageHudText_default_instance_;
class CUserMessageTextMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageTextMsg>
      _instance;
} _CUserMessageTextMsg_default_instance_;
class CUserMessageGameTitleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageGameTitle>
      _instance;
} _CUserMessageGameTitle_default_instance_;
class CUserMessageResetHUDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageResetHUD>
      _instance;
} _CUserMessageResetHUD_default_instance_;
class CUserMessageSendAudioDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageSendAudio>
      _instance;
} _CUserMessageSendAudio_default_instance_;
class CUserMessageAudioParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageAudioParameter>
      _instance;
} _CUserMessageAudioParameter_default_instance_;
class CUserMessageVoiceMaskDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageVoiceMask>
      _instance;
} _CUserMessageVoiceMask_default_instance_;
class CUserMessageRequestStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageRequestState>
      _instance;
} _CUserMessageRequestState_default_instance_;
class CUserMessageHintTextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageHintText>
      _instance;
} _CUserMessageHintText_default_instance_;
class CUserMessageKeyHintTextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageKeyHintText>
      _instance;
} _CUserMessageKeyHintText_default_instance_;
class CUserMessageVoiceSubtitleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageVoiceSubtitle>
      _instance;
} _CUserMessageVoiceSubtitle_default_instance_;
class CUserMessageVGUIMenu_KeysDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageVGUIMenu_Keys>
      _instance;
} _CUserMessageVGUIMenu_Keys_default_instance_;
class CUserMessageVGUIMenuDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageVGUIMenu>
      _instance;
} _CUserMessageVGUIMenu_default_instance_;
class CUserMessageRumbleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageRumble>
      _instance;
} _CUserMessageRumble_default_instance_;
class CUserMessageTrainDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageTrain>
      _instance;
} _CUserMessageTrain_default_instance_;
class CUserMessageSayTextChannelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageSayTextChannel>
      _instance;
} _CUserMessageSayTextChannel_default_instance_;
class CUserMessageColoredTextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageColoredText>
      _instance;
} _CUserMessageColoredText_default_instance_;
class CUserMessageItemPickupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageItemPickup>
      _instance;
} _CUserMessageItemPickup_default_instance_;
class CUserMessageAmmoDeniedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageAmmoDenied>
      _instance;
} _CUserMessageAmmoDenied_default_instance_;
class CUserMessageCrosshairAngleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageCrosshairAngle>
      _instance;
} _CUserMessageCrosshairAngle_default_instance_;
class CUserMessageShowMenuDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageShowMenu>
      _instance;
} _CUserMessageShowMenu_default_instance_;
class CUserMessageCreditsMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageCreditsMsg>
      _instance;
} _CUserMessageCreditsMsg_default_instance_;
class CEntityMessagePlayJingleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CEntityMessagePlayJingle>
      _instance;
} _CEntityMessagePlayJingle_default_instance_;
class CEntityMessageScreenOverlayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CEntityMessageScreenOverlay>
      _instance;
} _CEntityMessageScreenOverlay_default_instance_;
class CEntityMessageRemoveAllDecalsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CEntityMessageRemoveAllDecals>
      _instance;
} _CEntityMessageRemoveAllDecals_default_instance_;
class CEntityMessagePropagateForceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CEntityMessagePropagateForce>
      _instance;
} _CEntityMessagePropagateForce_default_instance_;
class CEntityMessageDoSparkDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CEntityMessageDoSpark>
      _instance;
} _CEntityMessageDoSpark_default_instance_;
class CEntityMessageFixAngleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CEntityMessageFixAngle>
      _instance;
} _CEntityMessageFixAngle_default_instance_;
class CUserMessageCameraTransition_Transition_DataDrivenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageCameraTransition_Transition_DataDriven>
      _instance;
} _CUserMessageCameraTransition_Transition_DataDriven_default_instance_;
class CUserMessageCameraTransitionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageCameraTransition>
      _instance;
} _CUserMessageCameraTransition_default_instance_;
class CUserMsg_ParticleManager_ReleaseParticleIndexDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMsg_ParticleManager_ReleaseParticleIndex>
      _instance;
} _CUserMsg_ParticleManager_ReleaseParticleIndex_default_instance_;
class CUserMsg_ParticleManager_CreateParticleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMsg_ParticleManager_CreateParticle>
      _instance;
} _CUserMsg_ParticleManager_CreateParticle_default_instance_;
class CUserMsg_ParticleManager_DestroyParticleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMsg_ParticleManager_DestroyParticle>
      _instance;
} _CUserMsg_ParticleManager_DestroyParticle_default_instance_;
class CUserMsg_ParticleManager_DestroyParticleInvolvingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMsg_ParticleManager_DestroyParticleInvolving>
      _instance;
} _CUserMsg_ParticleManager_DestroyParticleInvolving_default_instance_;
class CUserMsg_ParticleManager_UpdateParticleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMsg_ParticleManager_UpdateParticle>
      _instance;
} _CUserMsg_ParticleManager_UpdateParticle_default_instance_;
class CUserMsg_ParticleManager_UpdateParticleFwdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMsg_ParticleManager_UpdateParticleFwd>
      _instance;
} _CUserMsg_ParticleManager_UpdateParticleFwd_default_instance_;
class CUserMsg_ParticleManager_UpdateParticleOrientDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMsg_ParticleManager_UpdateParticleOrient>
      _instance;
} _CUserMsg_ParticleManager_UpdateParticleOrient_default_instance_;
class CUserMsg_ParticleManager_UpdateParticleFallbackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMsg_ParticleManager_UpdateParticleFallback>
      _instance;
} _CUserMsg_ParticleManager_UpdateParticleFallback_default_instance_;
class CUserMsg_ParticleManager_UpdateParticleOffsetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMsg_ParticleManager_UpdateParticleOffset>
      _instance;
} _CUserMsg_ParticleManager_UpdateParticleOffset_default_instance_;
class CUserMsg_ParticleManager_UpdateParticleEntDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMsg_ParticleManager_UpdateParticleEnt>
      _instance;
} _CUserMsg_ParticleManager_UpdateParticleEnt_default_instance_;
class CUserMsg_ParticleManager_UpdateParticleSetFrozenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMsg_ParticleManager_UpdateParticleSetFrozen>
      _instance;
} _CUserMsg_ParticleManager_UpdateParticleSetFrozen_default_instance_;
class CUserMsg_ParticleManager_UpdateParticleShouldDrawDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMsg_ParticleManager_UpdateParticleShouldDraw>
      _instance;
} _CUserMsg_ParticleManager_UpdateParticleShouldDraw_default_instance_;
class CUserMsg_ParticleManager_ChangeControlPointAttachmentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMsg_ParticleManager_ChangeControlPointAttachment>
      _instance;
} _CUserMsg_ParticleManager_ChangeControlPointAttachment_default_instance_;
class CUserMsg_ParticleManager_UpdateEntityPositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMsg_ParticleManager_UpdateEntityPosition>
      _instance;
} _CUserMsg_ParticleManager_UpdateEntityPosition_default_instance_;
class CUserMsg_ParticleManager_SetParticleFoWPropertiesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMsg_ParticleManager_SetParticleFoWProperties>
      _instance;
} _CUserMsg_ParticleManager_SetParticleFoWProperties_default_instance_;
class CUserMsg_ParticleManager_SetParticleShouldCheckFoWDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMsg_ParticleManager_SetParticleShouldCheckFoW>
      _instance;
} _CUserMsg_ParticleManager_SetParticleShouldCheckFoW_default_instance_;
class CUserMsg_ParticleManager_SetParticleTextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMsg_ParticleManager_SetParticleText>
      _instance;
} _CUserMsg_ParticleManager_SetParticleText_default_instance_;
class CUserMsg_ParticleManagerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMsg_ParticleManager>
      _instance;
} _CUserMsg_ParticleManager_default_instance_;
class CUserMsg_HudErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMsg_HudError>
      _instance;
} _CUserMsg_HudError_default_instance_;
class CUserMsg_CustomGameEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMsg_CustomGameEvent>
      _instance;
} _CUserMsg_CustomGameEvent_default_instance_;
class CUserMessageHapticPulseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageHapticPulse>
      _instance;
} _CUserMessageHapticPulse_default_instance_;
class CUserMessageHapticPulsePreciseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageHapticPulsePrecise>
      _instance;
} _CUserMessageHapticPulsePrecise_default_instance_;
class CUserMessageAnimStateGraphStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CUserMessageAnimStateGraphState>
      _instance;
} _CUserMessageAnimStateGraphState_default_instance_;
namespace protobuf_usermessages_2eproto {
static void InitDefaultsCUserMessageAchievementEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageAchievementEvent_default_instance_;
    new (ptr) ::CUserMessageAchievementEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageAchievementEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageAchievementEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageAchievementEvent}, {}};

static void InitDefaultsCUserMessageCloseCaption() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageCloseCaption_default_instance_;
    new (ptr) ::CUserMessageCloseCaption();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageCloseCaption::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageCloseCaption =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageCloseCaption}, {}};

static void InitDefaultsCUserMessageCloseCaptionDirect() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageCloseCaptionDirect_default_instance_;
    new (ptr) ::CUserMessageCloseCaptionDirect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageCloseCaptionDirect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageCloseCaptionDirect =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageCloseCaptionDirect}, {}};

static void InitDefaultsCUserMessageCloseCaptionPlaceholder() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageCloseCaptionPlaceholder_default_instance_;
    new (ptr) ::CUserMessageCloseCaptionPlaceholder();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageCloseCaptionPlaceholder::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageCloseCaptionPlaceholder =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageCloseCaptionPlaceholder}, {}};

static void InitDefaultsCUserMessageCurrentTimescale() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageCurrentTimescale_default_instance_;
    new (ptr) ::CUserMessageCurrentTimescale();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageCurrentTimescale::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageCurrentTimescale =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageCurrentTimescale}, {}};

static void InitDefaultsCUserMessageDesiredTimescale() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageDesiredTimescale_default_instance_;
    new (ptr) ::CUserMessageDesiredTimescale();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageDesiredTimescale::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageDesiredTimescale =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageDesiredTimescale}, {}};

static void InitDefaultsCUserMessageFade() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageFade_default_instance_;
    new (ptr) ::CUserMessageFade();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageFade::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageFade =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageFade}, {}};

static void InitDefaultsCUserMessageShake() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageShake_default_instance_;
    new (ptr) ::CUserMessageShake();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageShake::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageShake =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageShake}, {}};

static void InitDefaultsCUserMessageShakeDir() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageShakeDir_default_instance_;
    new (ptr) ::CUserMessageShakeDir();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageShakeDir::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CUserMessageShakeDir =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCUserMessageShakeDir}, {
      &protobuf_usermessages_2eproto::scc_info_CUserMessageShake.base,
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgVector.base,}};

static void InitDefaultsCUserMessageScreenTilt() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageScreenTilt_default_instance_;
    new (ptr) ::CUserMessageScreenTilt();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageScreenTilt::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CUserMessageScreenTilt =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCUserMessageScreenTilt}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgVector.base,}};

static void InitDefaultsCUserMessageSayText() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageSayText_default_instance_;
    new (ptr) ::CUserMessageSayText();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageSayText::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageSayText =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageSayText}, {}};

static void InitDefaultsCUserMessageSayText2() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageSayText2_default_instance_;
    new (ptr) ::CUserMessageSayText2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageSayText2::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageSayText2 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageSayText2}, {}};

static void InitDefaultsCUserMessageHudMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageHudMsg_default_instance_;
    new (ptr) ::CUserMessageHudMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageHudMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageHudMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageHudMsg}, {}};

static void InitDefaultsCUserMessageHudText() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageHudText_default_instance_;
    new (ptr) ::CUserMessageHudText();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageHudText::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageHudText =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageHudText}, {}};

static void InitDefaultsCUserMessageTextMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageTextMsg_default_instance_;
    new (ptr) ::CUserMessageTextMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageTextMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageTextMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageTextMsg}, {}};

static void InitDefaultsCUserMessageGameTitle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageGameTitle_default_instance_;
    new (ptr) ::CUserMessageGameTitle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageGameTitle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageGameTitle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageGameTitle}, {}};

static void InitDefaultsCUserMessageResetHUD() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageResetHUD_default_instance_;
    new (ptr) ::CUserMessageResetHUD();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageResetHUD::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageResetHUD =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageResetHUD}, {}};

static void InitDefaultsCUserMessageSendAudio() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageSendAudio_default_instance_;
    new (ptr) ::CUserMessageSendAudio();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageSendAudio::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageSendAudio =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageSendAudio}, {}};

static void InitDefaultsCUserMessageAudioParameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageAudioParameter_default_instance_;
    new (ptr) ::CUserMessageAudioParameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageAudioParameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageAudioParameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageAudioParameter}, {}};

static void InitDefaultsCUserMessageVoiceMask() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageVoiceMask_default_instance_;
    new (ptr) ::CUserMessageVoiceMask();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageVoiceMask::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageVoiceMask =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageVoiceMask}, {}};

static void InitDefaultsCUserMessageRequestState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageRequestState_default_instance_;
    new (ptr) ::CUserMessageRequestState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageRequestState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageRequestState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageRequestState}, {}};

static void InitDefaultsCUserMessageHintText() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageHintText_default_instance_;
    new (ptr) ::CUserMessageHintText();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageHintText::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageHintText =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageHintText}, {}};

static void InitDefaultsCUserMessageKeyHintText() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageKeyHintText_default_instance_;
    new (ptr) ::CUserMessageKeyHintText();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageKeyHintText::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageKeyHintText =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageKeyHintText}, {}};

static void InitDefaultsCUserMessageVoiceSubtitle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageVoiceSubtitle_default_instance_;
    new (ptr) ::CUserMessageVoiceSubtitle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageVoiceSubtitle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageVoiceSubtitle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageVoiceSubtitle}, {}};

static void InitDefaultsCUserMessageVGUIMenu_Keys() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageVGUIMenu_Keys_default_instance_;
    new (ptr) ::CUserMessageVGUIMenu_Keys();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageVGUIMenu_Keys::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageVGUIMenu_Keys =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageVGUIMenu_Keys}, {}};

static void InitDefaultsCUserMessageVGUIMenu() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageVGUIMenu_default_instance_;
    new (ptr) ::CUserMessageVGUIMenu();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageVGUIMenu::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CUserMessageVGUIMenu =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCUserMessageVGUIMenu}, {
      &protobuf_usermessages_2eproto::scc_info_CUserMessageVGUIMenu_Keys.base,}};

static void InitDefaultsCUserMessageRumble() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageRumble_default_instance_;
    new (ptr) ::CUserMessageRumble();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageRumble::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageRumble =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageRumble}, {}};

static void InitDefaultsCUserMessageTrain() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageTrain_default_instance_;
    new (ptr) ::CUserMessageTrain();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageTrain::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageTrain =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageTrain}, {}};

static void InitDefaultsCUserMessageSayTextChannel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageSayTextChannel_default_instance_;
    new (ptr) ::CUserMessageSayTextChannel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageSayTextChannel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageSayTextChannel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageSayTextChannel}, {}};

static void InitDefaultsCUserMessageColoredText() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageColoredText_default_instance_;
    new (ptr) ::CUserMessageColoredText();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageColoredText::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageColoredText =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageColoredText}, {}};

static void InitDefaultsCUserMessageItemPickup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageItemPickup_default_instance_;
    new (ptr) ::CUserMessageItemPickup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageItemPickup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageItemPickup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageItemPickup}, {}};

static void InitDefaultsCUserMessageAmmoDenied() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageAmmoDenied_default_instance_;
    new (ptr) ::CUserMessageAmmoDenied();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageAmmoDenied::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageAmmoDenied =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageAmmoDenied}, {}};

static void InitDefaultsCUserMessageCrosshairAngle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageCrosshairAngle_default_instance_;
    new (ptr) ::CUserMessageCrosshairAngle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageCrosshairAngle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CUserMessageCrosshairAngle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCUserMessageCrosshairAngle}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgQAngle.base,}};

static void InitDefaultsCUserMessageShowMenu() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageShowMenu_default_instance_;
    new (ptr) ::CUserMessageShowMenu();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageShowMenu::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageShowMenu =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageShowMenu}, {}};

static void InitDefaultsCUserMessageCreditsMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageCreditsMsg_default_instance_;
    new (ptr) ::CUserMessageCreditsMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageCreditsMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageCreditsMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageCreditsMsg}, {}};

static void InitDefaultsCEntityMessagePlayJingle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CEntityMessagePlayJingle_default_instance_;
    new (ptr) ::CEntityMessagePlayJingle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CEntityMessagePlayJingle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CEntityMessagePlayJingle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCEntityMessagePlayJingle}, {}};

static void InitDefaultsCEntityMessageScreenOverlay() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CEntityMessageScreenOverlay_default_instance_;
    new (ptr) ::CEntityMessageScreenOverlay();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CEntityMessageScreenOverlay::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CEntityMessageScreenOverlay =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCEntityMessageScreenOverlay}, {}};

static void InitDefaultsCEntityMessageRemoveAllDecals() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CEntityMessageRemoveAllDecals_default_instance_;
    new (ptr) ::CEntityMessageRemoveAllDecals();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CEntityMessageRemoveAllDecals::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CEntityMessageRemoveAllDecals =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCEntityMessageRemoveAllDecals}, {}};

static void InitDefaultsCEntityMessagePropagateForce() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CEntityMessagePropagateForce_default_instance_;
    new (ptr) ::CEntityMessagePropagateForce();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CEntityMessagePropagateForce::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CEntityMessagePropagateForce =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCEntityMessagePropagateForce}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgVector.base,}};

static void InitDefaultsCEntityMessageDoSpark() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CEntityMessageDoSpark_default_instance_;
    new (ptr) ::CEntityMessageDoSpark();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CEntityMessageDoSpark::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CEntityMessageDoSpark =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCEntityMessageDoSpark}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgVector.base,}};

static void InitDefaultsCEntityMessageFixAngle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CEntityMessageFixAngle_default_instance_;
    new (ptr) ::CEntityMessageFixAngle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CEntityMessageFixAngle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CEntityMessageFixAngle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCEntityMessageFixAngle}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgQAngle.base,}};

static void InitDefaultsCUserMessageCameraTransition_Transition_DataDriven() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageCameraTransition_Transition_DataDriven_default_instance_;
    new (ptr) ::CUserMessageCameraTransition_Transition_DataDriven();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageCameraTransition_Transition_DataDriven::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageCameraTransition_Transition_DataDriven =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageCameraTransition_Transition_DataDriven}, {}};

static void InitDefaultsCUserMessageCameraTransition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageCameraTransition_default_instance_;
    new (ptr) ::CUserMessageCameraTransition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageCameraTransition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CUserMessageCameraTransition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCUserMessageCameraTransition}, {
      &protobuf_usermessages_2eproto::scc_info_CUserMessageCameraTransition_Transition_DataDriven.base,}};

static void InitDefaultsCUserMsg_ParticleManager_ReleaseParticleIndex() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMsg_ParticleManager_ReleaseParticleIndex_default_instance_;
    new (ptr) ::CUserMsg_ParticleManager_ReleaseParticleIndex();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMsg_ParticleManager_ReleaseParticleIndex::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMsg_ParticleManager_ReleaseParticleIndex =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMsg_ParticleManager_ReleaseParticleIndex}, {}};

static void InitDefaultsCUserMsg_ParticleManager_CreateParticle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMsg_ParticleManager_CreateParticle_default_instance_;
    new (ptr) ::CUserMsg_ParticleManager_CreateParticle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMsg_ParticleManager_CreateParticle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMsg_ParticleManager_CreateParticle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMsg_ParticleManager_CreateParticle}, {}};

static void InitDefaultsCUserMsg_ParticleManager_DestroyParticle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMsg_ParticleManager_DestroyParticle_default_instance_;
    new (ptr) ::CUserMsg_ParticleManager_DestroyParticle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMsg_ParticleManager_DestroyParticle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMsg_ParticleManager_DestroyParticle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMsg_ParticleManager_DestroyParticle}, {}};

static void InitDefaultsCUserMsg_ParticleManager_DestroyParticleInvolving() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMsg_ParticleManager_DestroyParticleInvolving_default_instance_;
    new (ptr) ::CUserMsg_ParticleManager_DestroyParticleInvolving();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMsg_ParticleManager_DestroyParticleInvolving::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMsg_ParticleManager_DestroyParticleInvolving =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMsg_ParticleManager_DestroyParticleInvolving}, {}};

static void InitDefaultsCUserMsg_ParticleManager_UpdateParticle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMsg_ParticleManager_UpdateParticle_default_instance_;
    new (ptr) ::CUserMsg_ParticleManager_UpdateParticle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMsg_ParticleManager_UpdateParticle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CUserMsg_ParticleManager_UpdateParticle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCUserMsg_ParticleManager_UpdateParticle}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgVector.base,}};

static void InitDefaultsCUserMsg_ParticleManager_UpdateParticleFwd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMsg_ParticleManager_UpdateParticleFwd_default_instance_;
    new (ptr) ::CUserMsg_ParticleManager_UpdateParticleFwd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMsg_ParticleManager_UpdateParticleFwd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CUserMsg_ParticleManager_UpdateParticleFwd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCUserMsg_ParticleManager_UpdateParticleFwd}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgVector.base,}};

static void InitDefaultsCUserMsg_ParticleManager_UpdateParticleOrient() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMsg_ParticleManager_UpdateParticleOrient_default_instance_;
    new (ptr) ::CUserMsg_ParticleManager_UpdateParticleOrient();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMsg_ParticleManager_UpdateParticleOrient::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CUserMsg_ParticleManager_UpdateParticleOrient =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCUserMsg_ParticleManager_UpdateParticleOrient}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgVector.base,}};

static void InitDefaultsCUserMsg_ParticleManager_UpdateParticleFallback() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMsg_ParticleManager_UpdateParticleFallback_default_instance_;
    new (ptr) ::CUserMsg_ParticleManager_UpdateParticleFallback();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMsg_ParticleManager_UpdateParticleFallback::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CUserMsg_ParticleManager_UpdateParticleFallback =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCUserMsg_ParticleManager_UpdateParticleFallback}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgVector.base,}};

static void InitDefaultsCUserMsg_ParticleManager_UpdateParticleOffset() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMsg_ParticleManager_UpdateParticleOffset_default_instance_;
    new (ptr) ::CUserMsg_ParticleManager_UpdateParticleOffset();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMsg_ParticleManager_UpdateParticleOffset::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CUserMsg_ParticleManager_UpdateParticleOffset =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCUserMsg_ParticleManager_UpdateParticleOffset}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgVector.base,
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgQAngle.base,}};

static void InitDefaultsCUserMsg_ParticleManager_UpdateParticleEnt() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMsg_ParticleManager_UpdateParticleEnt_default_instance_;
    new (ptr) ::CUserMsg_ParticleManager_UpdateParticleEnt();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMsg_ParticleManager_UpdateParticleEnt::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CUserMsg_ParticleManager_UpdateParticleEnt =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCUserMsg_ParticleManager_UpdateParticleEnt}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgVector.base,}};

static void InitDefaultsCUserMsg_ParticleManager_UpdateParticleSetFrozen() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMsg_ParticleManager_UpdateParticleSetFrozen_default_instance_;
    new (ptr) ::CUserMsg_ParticleManager_UpdateParticleSetFrozen();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMsg_ParticleManager_UpdateParticleSetFrozen::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMsg_ParticleManager_UpdateParticleSetFrozen =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMsg_ParticleManager_UpdateParticleSetFrozen}, {}};

static void InitDefaultsCUserMsg_ParticleManager_UpdateParticleShouldDraw() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMsg_ParticleManager_UpdateParticleShouldDraw_default_instance_;
    new (ptr) ::CUserMsg_ParticleManager_UpdateParticleShouldDraw();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMsg_ParticleManager_UpdateParticleShouldDraw::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMsg_ParticleManager_UpdateParticleShouldDraw =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMsg_ParticleManager_UpdateParticleShouldDraw}, {}};

static void InitDefaultsCUserMsg_ParticleManager_ChangeControlPointAttachment() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMsg_ParticleManager_ChangeControlPointAttachment_default_instance_;
    new (ptr) ::CUserMsg_ParticleManager_ChangeControlPointAttachment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMsg_ParticleManager_ChangeControlPointAttachment::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMsg_ParticleManager_ChangeControlPointAttachment =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMsg_ParticleManager_ChangeControlPointAttachment}, {}};

static void InitDefaultsCUserMsg_ParticleManager_UpdateEntityPosition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMsg_ParticleManager_UpdateEntityPosition_default_instance_;
    new (ptr) ::CUserMsg_ParticleManager_UpdateEntityPosition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMsg_ParticleManager_UpdateEntityPosition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CUserMsg_ParticleManager_UpdateEntityPosition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCUserMsg_ParticleManager_UpdateEntityPosition}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgVector.base,}};

static void InitDefaultsCUserMsg_ParticleManager_SetParticleFoWProperties() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMsg_ParticleManager_SetParticleFoWProperties_default_instance_;
    new (ptr) ::CUserMsg_ParticleManager_SetParticleFoWProperties();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMsg_ParticleManager_SetParticleFoWProperties::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMsg_ParticleManager_SetParticleFoWProperties =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMsg_ParticleManager_SetParticleFoWProperties}, {}};

static void InitDefaultsCUserMsg_ParticleManager_SetParticleShouldCheckFoW() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMsg_ParticleManager_SetParticleShouldCheckFoW_default_instance_;
    new (ptr) ::CUserMsg_ParticleManager_SetParticleShouldCheckFoW();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMsg_ParticleManager_SetParticleShouldCheckFoW::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMsg_ParticleManager_SetParticleShouldCheckFoW =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMsg_ParticleManager_SetParticleShouldCheckFoW}, {}};

static void InitDefaultsCUserMsg_ParticleManager_SetParticleText() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMsg_ParticleManager_SetParticleText_default_instance_;
    new (ptr) ::CUserMsg_ParticleManager_SetParticleText();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMsg_ParticleManager_SetParticleText::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMsg_ParticleManager_SetParticleText =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMsg_ParticleManager_SetParticleText}, {}};

static void InitDefaultsCUserMsg_ParticleManager() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMsg_ParticleManager_default_instance_;
    new (ptr) ::CUserMsg_ParticleManager();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMsg_ParticleManager::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<17> scc_info_CUserMsg_ParticleManager =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 17, InitDefaultsCUserMsg_ParticleManager}, {
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_ReleaseParticleIndex.base,
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_CreateParticle.base,
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_DestroyParticle.base,
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_DestroyParticleInvolving.base,
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_UpdateParticle.base,
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_UpdateParticleFwd.base,
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_UpdateParticleOrient.base,
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_UpdateParticleFallback.base,
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_UpdateParticleOffset.base,
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_UpdateParticleEnt.base,
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_UpdateParticleShouldDraw.base,
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_UpdateParticleSetFrozen.base,
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_ChangeControlPointAttachment.base,
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_UpdateEntityPosition.base,
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_SetParticleFoWProperties.base,
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_SetParticleText.base,
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_SetParticleShouldCheckFoW.base,}};

static void InitDefaultsCUserMsg_HudError() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMsg_HudError_default_instance_;
    new (ptr) ::CUserMsg_HudError();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMsg_HudError::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMsg_HudError =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMsg_HudError}, {}};

static void InitDefaultsCUserMsg_CustomGameEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMsg_CustomGameEvent_default_instance_;
    new (ptr) ::CUserMsg_CustomGameEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMsg_CustomGameEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMsg_CustomGameEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMsg_CustomGameEvent}, {}};

static void InitDefaultsCUserMessageHapticPulse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageHapticPulse_default_instance_;
    new (ptr) ::CUserMessageHapticPulse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageHapticPulse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageHapticPulse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageHapticPulse}, {}};

static void InitDefaultsCUserMessageHapticPulsePrecise() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageHapticPulsePrecise_default_instance_;
    new (ptr) ::CUserMessageHapticPulsePrecise();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageHapticPulsePrecise::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageHapticPulsePrecise =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageHapticPulsePrecise}, {}};

static void InitDefaultsCUserMessageAnimStateGraphState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CUserMessageAnimStateGraphState_default_instance_;
    new (ptr) ::CUserMessageAnimStateGraphState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CUserMessageAnimStateGraphState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CUserMessageAnimStateGraphState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCUserMessageAnimStateGraphState}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageAchievementEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageCloseCaption.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageCloseCaptionDirect.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageCloseCaptionPlaceholder.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageCurrentTimescale.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageDesiredTimescale.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageFade.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageShake.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageShakeDir.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageScreenTilt.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageSayText.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageSayText2.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageHudMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageHudText.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageTextMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageGameTitle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageResetHUD.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageSendAudio.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageAudioParameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageVoiceMask.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageRequestState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageHintText.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageKeyHintText.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageVoiceSubtitle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageVGUIMenu_Keys.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageVGUIMenu.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageRumble.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageTrain.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageSayTextChannel.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageColoredText.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageItemPickup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageAmmoDenied.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageCrosshairAngle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageShowMenu.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageCreditsMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CEntityMessagePlayJingle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CEntityMessageScreenOverlay.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CEntityMessageRemoveAllDecals.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CEntityMessagePropagateForce.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CEntityMessageDoSpark.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CEntityMessageFixAngle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageCameraTransition_Transition_DataDriven.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageCameraTransition.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMsg_ParticleManager_ReleaseParticleIndex.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMsg_ParticleManager_CreateParticle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMsg_ParticleManager_DestroyParticle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMsg_ParticleManager_DestroyParticleInvolving.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMsg_ParticleManager_UpdateParticle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMsg_ParticleManager_UpdateParticleFwd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMsg_ParticleManager_UpdateParticleOrient.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMsg_ParticleManager_UpdateParticleFallback.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMsg_ParticleManager_UpdateParticleOffset.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMsg_ParticleManager_UpdateParticleEnt.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMsg_ParticleManager_UpdateParticleSetFrozen.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMsg_ParticleManager_UpdateParticleShouldDraw.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMsg_ParticleManager_ChangeControlPointAttachment.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMsg_ParticleManager_UpdateEntityPosition.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMsg_ParticleManager_SetParticleFoWProperties.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMsg_ParticleManager_SetParticleShouldCheckFoW.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMsg_ParticleManager_SetParticleText.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMsg_ParticleManager.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMsg_HudError.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMsg_CustomGameEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageHapticPulse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageHapticPulsePrecise.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CUserMessageAnimStateGraphState.base);
}

::google::protobuf::Metadata file_level_metadata[66];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageAchievementEvent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageAchievementEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageAchievementEvent, achievement_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCloseCaption, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCloseCaption, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCloseCaption, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCloseCaption, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCloseCaption, from_player_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCloseCaption, ent_index_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCloseCaptionDirect, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCloseCaptionDirect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCloseCaptionDirect, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCloseCaptionDirect, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCloseCaptionDirect, from_player_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCloseCaptionDirect, ent_index_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCloseCaptionPlaceholder, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCloseCaptionPlaceholder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCloseCaptionPlaceholder, string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCloseCaptionPlaceholder, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCloseCaptionPlaceholder, from_player_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCloseCaptionPlaceholder, ent_index_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCurrentTimescale, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCurrentTimescale, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCurrentTimescale, current_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageDesiredTimescale, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageDesiredTimescale, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageDesiredTimescale, desired_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageDesiredTimescale, acceleration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageDesiredTimescale, minblendrate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageDesiredTimescale, blenddeltamultiplier_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageFade, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageFade, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageFade, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageFade, hold_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageFade, flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageFade, color_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageShake, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageShake, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageShake, command_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageShake, amplitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageShake, frequency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageShake, duration_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageShakeDir, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageShakeDir, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageShakeDir, shake_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageShakeDir, direction_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageScreenTilt, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageScreenTilt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageScreenTilt, command_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageScreenTilt, ease_in_out_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageScreenTilt, angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageScreenTilt, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageScreenTilt, time_),
  1,
  2,
  0,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageSayText, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageSayText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageSayText, playerindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageSayText, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageSayText, chat_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageSayText2, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageSayText2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageSayText2, entityindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageSayText2, chat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageSayText2, messagename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageSayText2, param1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageSayText2, param2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageSayText2, param3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageSayText2, param4_),
  5,
  6,
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageHudMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageHudMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageHudMsg, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageHudMsg, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageHudMsg, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageHudMsg, color1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageHudMsg, color2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageHudMsg, effect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageHudMsg, fade_in_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageHudMsg, fade_out_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageHudMsg, hold_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageHudMsg, fx_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageHudMsg, message_),
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageHudText, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageHudText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageHudText, message_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageTextMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageTextMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageTextMsg, dest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageTextMsg, param_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageGameTitle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageGameTitle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageResetHUD, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageResetHUD, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageSendAudio, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageSendAudio, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageSendAudio, soundname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageSendAudio, stop_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageAudioParameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageAudioParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageAudioParameter, parameter_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageAudioParameter, name_hash_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageAudioParameter, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageAudioParameter, int_value_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageVoiceMask, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageVoiceMask, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageVoiceMask, gamerules_masks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageVoiceMask, ban_masks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageVoiceMask, mod_enable_),
  ~0u,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageRequestState, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageRequestState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageHintText, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageHintText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageHintText, message_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageKeyHintText, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageKeyHintText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageKeyHintText, messages_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageVoiceSubtitle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageVoiceSubtitle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageVoiceSubtitle, player_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageVoiceSubtitle, menu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageVoiceSubtitle, item_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageVGUIMenu_Keys, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageVGUIMenu_Keys, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageVGUIMenu_Keys, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageVGUIMenu_Keys, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageVGUIMenu, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageVGUIMenu, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageVGUIMenu, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageVGUIMenu, show_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageVGUIMenu, keys_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageRumble, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageRumble, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageRumble, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageRumble, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageRumble, flags_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageTrain, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageTrain, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageTrain, position_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageSayTextChannel, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageSayTextChannel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageSayTextChannel, player_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageSayTextChannel, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageSayTextChannel, text_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageColoredText, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageColoredText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageColoredText, color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageColoredText, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageColoredText, reset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageColoredText, context_player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageColoredText, context_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageColoredText, context_team_id_),
  1,
  0,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageItemPickup, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageItemPickup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageItemPickup, itemname_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageAmmoDenied, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageAmmoDenied, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageAmmoDenied, ammo_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCrosshairAngle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCrosshairAngle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCrosshairAngle, angcrosshair_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageShowMenu, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageShowMenu, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageShowMenu, validslots_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageShowMenu, displaytime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageShowMenu, needmore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageShowMenu, menustring_),
  1,
  2,
  3,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCreditsMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCreditsMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCreditsMsg, rolltype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCreditsMsg, logo_length_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEntityMessagePlayJingle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEntityMessagePlayJingle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEntityMessageScreenOverlay, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEntityMessageScreenOverlay, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEntityMessageScreenOverlay, start_effect_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEntityMessageRemoveAllDecals, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEntityMessageRemoveAllDecals, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEntityMessageRemoveAllDecals, remove_decals_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEntityMessagePropagateForce, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEntityMessagePropagateForce, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEntityMessagePropagateForce, impulse_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEntityMessageDoSpark, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEntityMessageDoSpark, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEntityMessageDoSpark, origin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEntityMessageDoSpark, entityindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEntityMessageDoSpark, radius_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEntityMessageDoSpark, color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEntityMessageDoSpark, beams_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEntityMessageDoSpark, thick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEntityMessageDoSpark, duration_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEntityMessageFixAngle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEntityMessageFixAngle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEntityMessageFixAngle, relative_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEntityMessageFixAngle, angle_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCameraTransition_Transition_DataDriven, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCameraTransition_Transition_DataDriven, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCameraTransition_Transition_DataDriven, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCameraTransition_Transition_DataDriven, attach_ent_index_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCameraTransition, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCameraTransition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCameraTransition, camera_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCameraTransition, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageCameraTransition, params_data_driven_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_ReleaseParticleIndex, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_ReleaseParticleIndex, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_CreateParticle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_CreateParticle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_CreateParticle, particle_name_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_CreateParticle, attach_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_CreateParticle, entity_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_CreateParticle, entity_handle_for_modifiers_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_DestroyParticle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_DestroyParticle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_DestroyParticle, destroy_immediately_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_DestroyParticleInvolving, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_DestroyParticleInvolving, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_DestroyParticleInvolving, destroy_immediately_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_DestroyParticleInvolving, entity_handle_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticle, control_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticle, position_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleFwd, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleFwd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleFwd, control_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleFwd, forward_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleOrient, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleOrient, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleOrient, control_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleOrient, forward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleOrient, right_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleOrient, up_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleOrient, left_),
  4,
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleFallback, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleFallback, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleFallback, control_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleFallback, position_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleOffset, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleOffset, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleOffset, control_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleOffset, origin_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleOffset, angle_offset_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleEnt, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleEnt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleEnt, control_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleEnt, entity_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleEnt, attach_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleEnt, attachment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleEnt, fallback_position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleEnt, include_wearables_),
  1,
  2,
  3,
  4,
  0,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleSetFrozen, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleSetFrozen, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleSetFrozen, set_frozen_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleShouldDraw, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleShouldDraw, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateParticleShouldDraw, should_draw_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_ChangeControlPointAttachment, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_ChangeControlPointAttachment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_ChangeControlPointAttachment, attachment_old_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_ChangeControlPointAttachment, attachment_new_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_ChangeControlPointAttachment, entity_handle_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateEntityPosition, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateEntityPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateEntityPosition, entity_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_UpdateEntityPosition, position_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_SetParticleFoWProperties, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_SetParticleFoWProperties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_SetParticleFoWProperties, fow_control_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_SetParticleFoWProperties, fow_control_point2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_SetParticleFoWProperties, fow_radius_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_SetParticleShouldCheckFoW, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_SetParticleShouldCheckFoW, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_SetParticleShouldCheckFoW, check_fow_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_SetParticleText, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_SetParticleText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager_SetParticleText, text_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager, release_particle_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager, create_particle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager, destroy_particle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager, destroy_particle_involving_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager, update_particle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager, update_particle_fwd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager, update_particle_orient_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager, update_particle_fallback_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager, update_particle_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager, update_particle_ent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager, update_particle_should_draw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager, update_particle_set_frozen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager, change_control_point_attachment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager, update_entity_position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager, set_particle_fow_properties_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager, set_particle_text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_ParticleManager, set_particle_should_check_fow_),
  17,
  18,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_HudError, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_HudError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_HudError, order_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_CustomGameEvent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_CustomGameEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_CustomGameEvent, event_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMsg_CustomGameEvent, data_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageHapticPulse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageHapticPulse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageHapticPulse, hand_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageHapticPulse, pulse_type_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageHapticPulsePrecise, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageHapticPulsePrecise, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageHapticPulsePrecise, hand_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageHapticPulsePrecise, pulse_duration_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageAnimStateGraphState, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageAnimStateGraphState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageAnimStateGraphState, entity_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CUserMessageAnimStateGraphState, data_),
  1,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::CUserMessageAchievementEvent)},
  { 7, 16, sizeof(::CUserMessageCloseCaption)},
  { 20, 29, sizeof(::CUserMessageCloseCaptionDirect)},
  { 33, 42, sizeof(::CUserMessageCloseCaptionPlaceholder)},
  { 46, 52, sizeof(::CUserMessageCurrentTimescale)},
  { 53, 62, sizeof(::CUserMessageDesiredTimescale)},
  { 66, 75, sizeof(::CUserMessageFade)},
  { 79, 88, sizeof(::CUserMessageShake)},
  { 92, 99, sizeof(::CUserMessageShakeDir)},
  { 101, 111, sizeof(::CUserMessageScreenTilt)},
  { 116, 124, sizeof(::CUserMessageSayText)},
  { 127, 139, sizeof(::CUserMessageSayText2)},
  { 146, 162, sizeof(::CUserMessageHudMsg)},
  { 173, 179, sizeof(::CUserMessageHudText)},
  { 180, 187, sizeof(::CUserMessageTextMsg)},
  { 189, 194, sizeof(::CUserMessageGameTitle)},
  { 194, 199, sizeof(::CUserMessageResetHUD)},
  { 199, 206, sizeof(::CUserMessageSendAudio)},
  { 208, 217, sizeof(::CUserMessageAudioParameter)},
  { 221, 229, sizeof(::CUserMessageVoiceMask)},
  { 232, 237, sizeof(::CUserMessageRequestState)},
  { 237, 243, sizeof(::CUserMessageHintText)},
  { 244, 250, sizeof(::CUserMessageKeyHintText)},
  { 251, 259, sizeof(::CUserMessageVoiceSubtitle)},
  { 262, 269, sizeof(::CUserMessageVGUIMenu_Keys)},
  { 271, 279, sizeof(::CUserMessageVGUIMenu)},
  { 282, 290, sizeof(::CUserMessageRumble)},
  { 293, 299, sizeof(::CUserMessageTrain)},
  { 300, 308, sizeof(::CUserMessageSayTextChannel)},
  { 311, 322, sizeof(::CUserMessageColoredText)},
  { 328, 334, sizeof(::CUserMessageItemPickup)},
  { 335, 341, sizeof(::CUserMessageAmmoDenied)},
  { 342, 348, sizeof(::CUserMessageCrosshairAngle)},
  { 349, 358, sizeof(::CUserMessageShowMenu)},
  { 362, 369, sizeof(::CUserMessageCreditsMsg)},
  { 371, 376, sizeof(::CEntityMessagePlayJingle)},
  { 376, 382, sizeof(::CEntityMessageScreenOverlay)},
  { 383, 389, sizeof(::CEntityMessageRemoveAllDecals)},
  { 390, 396, sizeof(::CEntityMessagePropagateForce)},
  { 397, 409, sizeof(::CEntityMessageDoSpark)},
  { 416, 423, sizeof(::CEntityMessageFixAngle)},
  { 425, 432, sizeof(::CUserMessageCameraTransition_Transition_DataDriven)},
  { 434, 442, sizeof(::CUserMessageCameraTransition)},
  { 445, 450, sizeof(::CUserMsg_ParticleManager_ReleaseParticleIndex)},
  { 450, 459, sizeof(::CUserMsg_ParticleManager_CreateParticle)},
  { 463, 469, sizeof(::CUserMsg_ParticleManager_DestroyParticle)},
  { 470, 477, sizeof(::CUserMsg_ParticleManager_DestroyParticleInvolving)},
  { 479, 486, sizeof(::CUserMsg_ParticleManager_UpdateParticle)},
  { 488, 495, sizeof(::CUserMsg_ParticleManager_UpdateParticleFwd)},
  { 497, 507, sizeof(::CUserMsg_ParticleManager_UpdateParticleOrient)},
  { 512, 519, sizeof(::CUserMsg_ParticleManager_UpdateParticleFallback)},
  { 521, 529, sizeof(::CUserMsg_ParticleManager_UpdateParticleOffset)},
  { 532, 543, sizeof(::CUserMsg_ParticleManager_UpdateParticleEnt)},
  { 549, 555, sizeof(::CUserMsg_ParticleManager_UpdateParticleSetFrozen)},
  { 556, 562, sizeof(::CUserMsg_ParticleManager_UpdateParticleShouldDraw)},
  { 563, 571, sizeof(::CUserMsg_ParticleManager_ChangeControlPointAttachment)},
  { 574, 581, sizeof(::CUserMsg_ParticleManager_UpdateEntityPosition)},
  { 583, 591, sizeof(::CUserMsg_ParticleManager_SetParticleFoWProperties)},
  { 594, 600, sizeof(::CUserMsg_ParticleManager_SetParticleShouldCheckFoW)},
  { 601, 607, sizeof(::CUserMsg_ParticleManager_SetParticleText)},
  { 608, 632, sizeof(::CUserMsg_ParticleManager)},
  { 651, 657, sizeof(::CUserMsg_HudError)},
  { 658, 665, sizeof(::CUserMsg_CustomGameEvent)},
  { 667, 674, sizeof(::CUserMessageHapticPulse)},
  { 676, 683, sizeof(::CUserMessageHapticPulsePrecise)},
  { 685, 692, sizeof(::CUserMessageAnimStateGraphState)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageAchievementEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageCloseCaption_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageCloseCaptionDirect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageCloseCaptionPlaceholder_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageCurrentTimescale_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageDesiredTimescale_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageFade_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageShake_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageShakeDir_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageScreenTilt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageSayText_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageSayText2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageHudMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageHudText_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageTextMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageGameTitle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageResetHUD_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageSendAudio_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageAudioParameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageVoiceMask_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageRequestState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageHintText_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageKeyHintText_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageVoiceSubtitle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageVGUIMenu_Keys_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageVGUIMenu_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageRumble_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageTrain_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageSayTextChannel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageColoredText_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageItemPickup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageAmmoDenied_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageCrosshairAngle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageShowMenu_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageCreditsMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CEntityMessagePlayJingle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CEntityMessageScreenOverlay_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CEntityMessageRemoveAllDecals_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CEntityMessagePropagateForce_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CEntityMessageDoSpark_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CEntityMessageFixAngle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageCameraTransition_Transition_DataDriven_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageCameraTransition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMsg_ParticleManager_ReleaseParticleIndex_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMsg_ParticleManager_CreateParticle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMsg_ParticleManager_DestroyParticle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMsg_ParticleManager_DestroyParticleInvolving_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMsg_ParticleManager_UpdateParticle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMsg_ParticleManager_UpdateParticleFwd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMsg_ParticleManager_UpdateParticleOrient_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMsg_ParticleManager_UpdateParticleFallback_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMsg_ParticleManager_UpdateParticleOffset_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMsg_ParticleManager_UpdateParticleEnt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMsg_ParticleManager_UpdateParticleSetFrozen_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMsg_ParticleManager_UpdateParticleShouldDraw_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMsg_ParticleManager_ChangeControlPointAttachment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMsg_ParticleManager_UpdateEntityPosition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMsg_ParticleManager_SetParticleFoWProperties_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMsg_ParticleManager_SetParticleShouldCheckFoW_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMsg_ParticleManager_SetParticleText_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMsg_ParticleManager_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMsg_HudError_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMsg_CustomGameEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageHapticPulse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageHapticPulsePrecise_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CUserMessageAnimStateGraphState_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "usermessages.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 66);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022usermessages.proto\032\026networkbasetypes.p"
      "roto\"3\n\034CUserMessageAchievementEvent\022\023\n\013"
      "achievement\030\001 \001(\r\"b\n\030CUserMessageCloseCa"
      "ption\022\014\n\004hash\030\001 \001(\007\022\020\n\010duration\030\002 \001(\002\022\023\n"
      "\013from_player\030\003 \001(\010\022\021\n\tent_index\030\004 \001(\005\"h\n"
      "\036CUserMessageCloseCaptionDirect\022\014\n\004hash\030"
      "\001 \001(\007\022\020\n\010duration\030\002 \001(\002\022\023\n\013from_player\030\003"
      " \001(\010\022\021\n\tent_index\030\004 \001(\005\"o\n#CUserMessageC"
      "loseCaptionPlaceholder\022\016\n\006string\030\001 \001(\t\022\020"
      "\n\010duration\030\002 \001(\002\022\023\n\013from_player\030\003 \001(\010\022\021\n"
      "\tent_index\030\004 \001(\005\"/\n\034CUserMessageCurrentT"
      "imescale\022\017\n\007current\030\001 \001(\002\"y\n\034CUserMessag"
      "eDesiredTimescale\022\017\n\007desired\030\001 \001(\002\022\024\n\014ac"
      "celeration\030\002 \001(\002\022\024\n\014minblendrate\030\003 \001(\002\022\034"
      "\n\024blenddeltamultiplier\030\004 \001(\002\"U\n\020CUserMes"
      "sageFade\022\020\n\010duration\030\001 \001(\r\022\021\n\thold_time\030"
      "\002 \001(\r\022\r\n\005flags\030\003 \001(\r\022\r\n\005color\030\004 \001(\007\"\\\n\021C"
      "UserMessageShake\022\017\n\007command\030\001 \001(\r\022\021\n\tamp"
      "litude\030\002 \001(\002\022\021\n\tfrequency\030\003 \001(\002\022\020\n\010durat"
      "ion\030\004 \001(\002\"Y\n\024CUserMessageShakeDir\022!\n\005sha"
      "ke\030\001 \001(\0132\022.CUserMessageShake\022\036\n\tdirectio"
      "n\030\002 \001(\0132\013.CMsgVector\"z\n\026CUserMessageScre"
      "enTilt\022\017\n\007command\030\001 \001(\r\022\023\n\013ease_in_out\030\002"
      " \001(\010\022\032\n\005angle\030\003 \001(\0132\013.CMsgVector\022\020\n\010dura"
      "tion\030\004 \001(\002\022\014\n\004time\030\005 \001(\002\"F\n\023CUserMessage"
      "SayText\022\023\n\013playerindex\030\001 \001(\r\022\014\n\004text\030\002 \001"
      "(\t\022\014\n\004chat\030\003 \001(\010\"\216\001\n\024CUserMessageSayText"
      "2\022\023\n\013entityindex\030\001 \001(\r\022\014\n\004chat\030\002 \001(\010\022\023\n\013"
      "messagename\030\003 \001(\t\022\016\n\006param1\030\004 \001(\t\022\016\n\006par"
      "am2\030\005 \001(\t\022\016\n\006param3\030\006 \001(\t\022\016\n\006param4\030\007 \001("
      "\t\"\315\001\n\022CUserMessageHudMsg\022\017\n\007channel\030\001 \001("
      "\r\022\t\n\001x\030\002 \001(\002\022\t\n\001y\030\003 \001(\002\022\016\n\006color1\030\004 \001(\007\022"
      "\016\n\006color2\030\005 \001(\007\022\016\n\006effect\030\006 \001(\r\022\024\n\014fade_"
      "in_time\030\007 \001(\002\022\025\n\rfade_out_time\030\010 \001(\002\022\021\n\t"
      "hold_time\030\t \001(\002\022\017\n\007fx_time\030\n \001(\002\022\017\n\007mess"
      "age\030\013 \001(\t\"&\n\023CUserMessageHudText\022\017\n\007mess"
      "age\030\001 \001(\t\"2\n\023CUserMessageTextMsg\022\014\n\004dest"
      "\030\001 \001(\r\022\r\n\005param\030\002 \003(\t\"\027\n\025CUserMessageGam"
      "eTitle\"\026\n\024CUserMessageResetHUD\"8\n\025CUserM"
      "essageSendAudio\022\021\n\tsoundname\030\001 \001(\t\022\014\n\004st"
      "op\030\002 \001(\010\"n\n\032CUserMessageAudioParameter\022\026"
      "\n\016parameter_type\030\001 \001(\r\022\026\n\016name_hash_code"
      "\030\002 \001(\r\022\r\n\005value\030\003 \001(\002\022\021\n\tint_value\030\004 \001(\r"
      "\"W\n\025CUserMessageVoiceMask\022\027\n\017gamerules_m"
      "asks\030\001 \003(\r\022\021\n\tban_masks\030\002 \003(\r\022\022\n\nmod_ena"
      "ble\030\003 \001(\010\"\032\n\030CUserMessageRequestState\"\'\n"
      "\024CUserMessageHintText\022\017\n\007message\030\001 \001(\t\"+"
      "\n\027CUserMessageKeyHintText\022\020\n\010messages\030\001 "
      "\003(\t\"G\n\031CUserMessageVoiceSubtitle\022\016\n\006play"
      "er\030\001 \001(\005\022\014\n\004menu\030\002 \001(\005\022\014\n\004item\030\003 \001(\005\"\201\001\n"
      "\024CUserMessageVGUIMenu\022\014\n\004name\030\001 \001(\t\022\014\n\004s"
      "how\030\002 \001(\010\022(\n\004keys\030\003 \003(\0132\032.CUserMessageVG"
      "UIMenu.Keys\032#\n\004Keys\022\014\n\004name\030\001 \001(\t\022\r\n\005val"
      "ue\030\002 \001(\t\"@\n\022CUserMessageRumble\022\r\n\005index\030"
      "\001 \001(\005\022\014\n\004data\030\002 \001(\005\022\r\n\005flags\030\003 \001(\005\"%\n\021CU"
      "serMessageTrain\022\020\n\010position\030\001 \001(\r\"K\n\032CUs"
      "erMessageSayTextChannel\022\016\n\006player\030\001 \001(\005\022"
      "\017\n\007channel\030\002 \001(\005\022\014\n\004text\030\003 \001(\t\"\220\001\n\027CUser"
      "MessageColoredText\022\r\n\005color\030\001 \001(\r\022\014\n\004tex"
      "t\030\002 \001(\t\022\r\n\005reset\030\003 \001(\010\022\031\n\021context_player"
      "_id\030\004 \001(\005\022\025\n\rcontext_value\030\005 \001(\005\022\027\n\017cont"
      "ext_team_id\030\006 \001(\005\"*\n\026CUserMessageItemPic"
      "kup\022\020\n\010itemname\030\001 \001(\t\")\n\026CUserMessageAmm"
      "oDenied\022\017\n\007ammo_id\030\001 \001(\r\"\?\n\032CUserMessage"
      "CrosshairAngle\022!\n\014angcrosshair\030\001 \001(\0132\013.C"
      "MsgQAngle\"e\n\024CUserMessageShowMenu\022\022\n\nval"
      "idslots\030\001 \001(\r\022\023\n\013displaytime\030\002 \001(\r\022\020\n\010ne"
      "edmore\030\003 \001(\010\022\022\n\nmenustring\030\004 \001(\t\"V\n\026CUse"
      "rMessageCreditsMsg\022\'\n\010rolltype\030\001 \001(\0162\n.e"
      "RollType:\tROLL_NONE\022\023\n\013logo_length\030\002 \001(\002"
      "\"\032\n\030CEntityMessagePlayJingle\"3\n\033CEntityM"
      "essageScreenOverlay\022\024\n\014start_effect\030\001 \001("
      "\010\"6\n\035CEntityMessageRemoveAllDecals\022\025\n\rre"
      "move_decals\030\001 \001(\010\"<\n\034CEntityMessagePropa"
      "gateForce\022\034\n\007impulse\030\001 \001(\0132\013.CMsgVector\""
      "\230\001\n\025CEntityMessageDoSpark\022\033\n\006origin\030\001 \001("
      "\0132\013.CMsgVector\022\023\n\013entityindex\030\002 \001(\r\022\016\n\006r"
      "adius\030\003 \001(\002\022\r\n\005color\030\004 \001(\007\022\r\n\005beams\030\005 \001("
      "\r\022\r\n\005thick\030\006 \001(\002\022\020\n\010duration\030\007 \001(\002\"F\n\026CE"
      "ntityMessageFixAngle\022\020\n\010relative\030\001 \001(\010\022\032"
      "\n\005angle\030\002 \001(\0132\013.CMsgQAngle\"\333\001\n\034CUserMess"
      "ageCameraTransition\022\023\n\013camera_type\030\001 \001(\r"
      "\022\020\n\010duration\030\002 \001(\002\022O\n\022params_data_driven"
      "\030\003 \001(\01323.CUserMessageCameraTransition.Tr"
      "ansition_DataDriven\032C\n\025Transition_DataDr"
      "iven\022\020\n\010filename\030\001 \001(\t\022\030\n\020attach_ent_ind"
      "ex\030\002 \001(\005\"\324\026\n\030CUserMsg_ParticleManager\022C\n"
      "\004type\030\001 \002(\0162\021.PARTICLE_MESSAGE:\"GAME_PAR"
      "TICLE_MANAGER_EVENT_CREATE\022\r\n\005index\030\002 \002("
      "\r\022N\n\026release_particle_index\030\003 \001(\0132..CUse"
      "rMsg_ParticleManager.ReleaseParticleInde"
      "x\022A\n\017create_particle\030\004 \001(\0132(.CUserMsg_Pa"
      "rticleManager.CreateParticle\022C\n\020destroy_"
      "particle\030\005 \001(\0132).CUserMsg_ParticleManage"
      "r.DestroyParticle\022V\n\032destroy_particle_in"
      "volving\030\006 \001(\01322.CUserMsg_ParticleManager"
      ".DestroyParticleInvolving\022A\n\017update_part"
      "icle\030\007 \001(\0132(.CUserMsg_ParticleManager.Up"
      "dateParticle\022H\n\023update_particle_fwd\030\010 \001("
      "\0132+.CUserMsg_ParticleManager.UpdateParti"
      "cleFwd\022N\n\026update_particle_orient\030\t \001(\0132."
      ".CUserMsg_ParticleManager.UpdateParticle"
      "Orient\022R\n\030update_particle_fallback\030\n \001(\013"
      "20.CUserMsg_ParticleManager.UpdatePartic"
      "leFallback\022N\n\026update_particle_offset\030\013 \001"
      "(\0132..CUserMsg_ParticleManager.UpdatePart"
      "icleOffset\022H\n\023update_particle_ent\030\014 \001(\0132"
      "+.CUserMsg_ParticleManager.UpdateParticl"
      "eEnt\022W\n\033update_particle_should_draw\030\016 \001("
      "\01322.CUserMsg_ParticleManager.UpdateParti"
      "cleShouldDraw\022U\n\032update_particle_set_fro"
      "zen\030\017 \001(\01321.CUserMsg_ParticleManager.Upd"
      "ateParticleSetFrozen\022_\n\037change_control_p"
      "oint_attachment\030\020 \001(\01326.CUserMsg_Particl"
      "eManager.ChangeControlPointAttachment\022N\n"
      "\026update_entity_position\030\021 \001(\0132..CUserMsg"
      "_ParticleManager.UpdateEntityPosition\022W\n"
      "\033set_particle_fow_properties\030\022 \001(\01322.CUs"
      "erMsg_ParticleManager.SetParticleFoWProp"
      "erties\022D\n\021set_particle_text\030\023 \001(\0132).CUse"
      "rMsg_ParticleManager.SetParticleText\022Z\n\035"
      "set_particle_should_check_fow\030\024 \001(\01323.CU"
      "serMsg_ParticleManager.SetParticleShould"
      "CheckFoW\032\026\n\024ReleaseParticleIndex\032~\n\016Crea"
      "teParticle\022\033\n\023particle_name_index\030\001 \001(\006\022"
      "\023\n\013attach_type\030\002 \001(\005\022\025\n\rentity_handle\030\003 "
      "\001(\005\022#\n\033entity_handle_for_modifiers\030\004 \001(\005"
      "\032.\n\017DestroyParticle\022\033\n\023destroy_immediate"
      "ly\030\001 \001(\010\032N\n\030DestroyParticleInvolving\022\033\n\023"
      "destroy_immediately\030\001 \001(\010\022\025\n\rentity_hand"
      "le\030\003 \001(\005\032F\n\016UpdateParticle\022\025\n\rcontrol_po"
      "int\030\001 \001(\005\022\035\n\010position\030\002 \001(\0132\013.CMsgVector"
      "\032H\n\021UpdateParticleFwd\022\025\n\rcontrol_point\030\001"
      " \001(\005\022\034\n\007forward\030\002 \001(\0132\013.CMsgVector\032\237\001\n\024U"
      "pdateParticleOrient\022\025\n\rcontrol_point\030\001 \001"
      "(\005\022\034\n\007forward\030\002 \001(\0132\013.CMsgVector\022\036\n\005righ"
      "t\030\003 \001(\0132\013.CMsgVectorB\002\030\001\022\027\n\002up\030\004 \001(\0132\013.C"
      "MsgVector\022\031\n\004left\030\005 \001(\0132\013.CMsgVector\032N\n\026"
      "UpdateParticleFallback\022\025\n\rcontrol_point\030"
      "\001 \001(\005\022\035\n\010position\030\002 \001(\0132\013.CMsgVector\032t\n\024"
      "UpdateParticleOffset\022\025\n\rcontrol_point\030\001 "
      "\001(\005\022\"\n\rorigin_offset\030\002 \001(\0132\013.CMsgVector\022"
      "!\n\014angle_offset\030\003 \001(\0132\013.CMsgQAngle\032\255\001\n\021U"
      "pdateParticleEnt\022\025\n\rcontrol_point\030\001 \001(\005\022"
      "\025\n\rentity_handle\030\002 \001(\005\022\023\n\013attach_type\030\003 "
      "\001(\005\022\022\n\nattachment\030\004 \001(\005\022&\n\021fallback_posi"
      "tion\030\005 \001(\0132\013.CMsgVector\022\031\n\021include_weara"
      "bles\030\006 \001(\010\032-\n\027UpdateParticleSetFrozen\022\022\n"
      "\nset_frozen\030\001 \001(\010\032/\n\030UpdateParticleShoul"
      "dDraw\022\023\n\013should_draw\030\001 \001(\010\032e\n\034ChangeCont"
      "rolPointAttachment\022\026\n\016attachment_old\030\001 \001"
      "(\005\022\026\n\016attachment_new\030\002 \001(\005\022\025\n\rentity_han"
      "dle\030\003 \001(\005\032L\n\024UpdateEntityPosition\022\025\n\rent"
      "ity_handle\030\001 \001(\005\022\035\n\010position\030\002 \001(\0132\013.CMs"
      "gVector\032e\n\030SetParticleFoWProperties\022\031\n\021f"
      "ow_control_point\030\001 \001(\005\022\032\n\022fow_control_po"
      "int2\030\002 \001(\005\022\022\n\nfow_radius\030\003 \001(\002\032.\n\031SetPar"
      "ticleShouldCheckFoW\022\021\n\tcheck_fow\030\001 \001(\010\032\037"
      "\n\017SetParticleText\022\014\n\004text\030\001 \001(\t\"%\n\021CUser"
      "Msg_HudError\022\020\n\010order_id\030\001 \001(\005\"<\n\030CUserM"
      "sg_CustomGameEvent\022\022\n\nevent_name\030\001 \001(\t\022\014"
      "\n\004data\030\002 \001(\014\"m\n\027CUserMessageHapticPulse\022"
      "\017\n\007hand_id\030\001 \001(\005\022A\n\npulse_type\030\002 \001(\0162\021.E"
      "HapticPulseType:\032VR_HAND_HAPTIC_PULSE_LI"
      "GHT\"I\n\036CUserMessageHapticPulsePrecise\022\017\n"
      "\007hand_id\030\001 \001(\005\022\026\n\016pulse_duration\030\002 \001(\005\"E"
      "\n\037CUserMessageAnimStateGraphState\022\024\n\014ent"
      "ity_index\030\001 \001(\005\022\014\n\004data\030\002 \001(\014*\361\006\n\021EBaseU"
      "serMessages\022\027\n\023UM_AchievementEvent\020e\022\023\n\017"
      "UM_CloseCaption\020f\022\031\n\025UM_CloseCaptionDire"
      "ct\020g\022\027\n\023UM_CurrentTimescale\020h\022\027\n\023UM_Desi"
      "redTimescale\020i\022\013\n\007UM_Fade\020j\022\020\n\014UM_GameTi"
      "tle\020k\022\017\n\013UM_HintText\020m\022\r\n\tUM_HudMsg\020n\022\016\n"
      "\nUM_HudText\020o\022\022\n\016UM_KeyHintText\020p\022\022\n\016UM_"
      "ColoredText\020q\022\023\n\017UM_RequestState\020r\022\017\n\013UM"
      "_ResetHUD\020s\022\r\n\tUM_Rumble\020t\022\016\n\nUM_SayText"
      "\020u\022\017\n\013UM_SayText2\020v\022\025\n\021UM_SayTextChannel"
      "\020w\022\014\n\010UM_Shake\020x\022\017\n\013UM_ShakeDir\020y\022\016\n\nUM_"
      "TextMsg\020|\022\021\n\rUM_ScreenTilt\020}\022\014\n\010UM_Train"
      "\020~\022\017\n\013UM_VGUIMenu\020\177\022\021\n\014UM_VoiceMask\020\200\001\022\025"
      "\n\020UM_VoiceSubtitle\020\201\001\022\021\n\014UM_SendAudio\020\202\001"
      "\022\022\n\rUM_ItemPickup\020\203\001\022\022\n\rUM_AmmoDenied\020\204\001"
      "\022\026\n\021UM_CrosshairAngle\020\205\001\022\020\n\013UM_ShowMenu\020"
      "\206\001\022\022\n\rUM_CreditsMsg\020\207\001\022\037\n\032UM_CloseCaptio"
      "nPlaceholder\020\216\001\022\030\n\023UM_CameraTransition\020\217"
      "\001\022\026\n\021UM_AudioParameter\020\220\001\022\027\n\022UM_Particle"
      "Manager\020\221\001\022\020\n\013UM_HudError\020\222\001\022\027\n\022UM_Custo"
      "mGameEvent\020\224\001\022\027\n\022UM_HandHapticPulse\020\225\001\022\027"
      "\n\022UM_AnimGraphUpdate\020\226\001\022\036\n\031UM_HandHaptic"
      "PulsePrecise\020\227\001\022\020\n\013UM_MAX_BASE\020\310\001*\224\001\n\023EB"
      "aseEntityMessages\022\022\n\rEM_PlayJingle\020\210\001\022\025\n"
      "\020EM_ScreenOverlay\020\211\001\022\027\n\022EM_RemoveAllDeca"
      "ls\020\212\001\022\026\n\021EM_PropagateForce\020\213\001\022\017\n\nEM_DoSp"
      "ark\020\214\001\022\020\n\013EM_FixAngle\020\215\001*o\n\teRollType\022\026\n"
      "\tROLL_NONE\020\377\377\377\377\377\377\377\377\377\001\022\016\n\nROLL_STATS\020\000\022\020\n"
      "\014ROLL_CREDITS\020\001\022\027\n\023ROLL_LATE_JOIN_LOGO\020\002"
      "\022\017\n\013ROLL_OUTTRO\020\003*\342\006\n\020PARTICLE_MESSAGE\022&"
      "\n\"GAME_PARTICLE_MANAGER_EVENT_CREATE\020\000\022&"
      "\n\"GAME_PARTICLE_MANAGER_EVENT_UPDATE\020\001\022."
      "\n*GAME_PARTICLE_MANAGER_EVENT_UPDATE_FOR"
      "WARD\020\002\0222\n.GAME_PARTICLE_MANAGER_EVENT_UP"
      "DATE_ORIENTATION\020\003\022/\n+GAME_PARTICLE_MANA"
      "GER_EVENT_UPDATE_FALLBACK\020\004\022*\n&GAME_PART"
      "ICLE_MANAGER_EVENT_UPDATE_ENT\020\005\022-\n)GAME_"
      "PARTICLE_MANAGER_EVENT_UPDATE_OFFSET\020\006\022\'"
      "\n#GAME_PARTICLE_MANAGER_EVENT_DESTROY\020\007\022"
      "1\n-GAME_PARTICLE_MANAGER_EVENT_DESTROY_I"
      "NVOLVING\020\010\022\'\n#GAME_PARTICLE_MANAGER_EVEN"
      "T_RELEASE\020\t\022\'\n#GAME_PARTICLE_MANAGER_EVE"
      "NT_LATENCY\020\n\022+\n\'GAME_PARTICLE_MANAGER_EV"
      "ENT_SHOULD_DRAW\020\013\022&\n\"GAME_PARTICLE_MANAG"
      "ER_EVENT_FROZEN\020\014\022\?\n;GAME_PARTICLE_MANAG"
      "ER_EVENT_CHANGE_CONTROL_POINT_ATTACHMENT"
      "\020\r\0226\n2GAME_PARTICLE_MANAGER_EVENT_UPDATE"
      "_ENTITY_POSITION\020\016\0222\n.GAME_PARTICLE_MANA"
      "GER_EVENT_SET_FOW_PROPERTIES\020\017\022(\n$GAME_P"
      "ARTICLE_MANAGER_EVENT_SET_TEXT\020\020\0224\n0GAME"
      "_PARTICLE_MANAGER_EVENT_SET_SHOULD_CHECK"
      "_FOW\020\021*t\n\020EHapticPulseType\022\036\n\032VR_HAND_HA"
      "PTIC_PULSE_LIGHT\020\000\022\037\n\033VR_HAND_HAPTIC_PUL"
      "SE_MEDIUM\020\001\022\037\n\033VR_HAND_HAPTIC_PULSE_STRO"
      "NG\020\002B\005H\001\200\001\000"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 8851);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "usermessages.proto", &protobuf_RegisterTypes);
  ::protobuf_networkbasetypes_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_usermessages_2eproto
const ::google::protobuf::EnumDescriptor* EBaseUserMessages_descriptor() {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_usermessages_2eproto::file_level_enum_descriptors[0];
}
bool EBaseUserMessages_IsValid(int value) {
  switch (value) {
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 124:
    case 125:
    case 126:
    case 127:
    case 128:
    case 129:
    case 130:
    case 131:
    case 132:
    case 133:
    case 134:
    case 135:
    case 142:
    case 143:
    case 144:
    case 145:
    case 146:
    case 148:
    case 149:
    case 150:
    case 151:
    case 200:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EBaseEntityMessages_descriptor() {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_usermessages_2eproto::file_level_enum_descriptors[1];
}
bool EBaseEntityMessages_IsValid(int value) {
  switch (value) {
    case 136:
    case 137:
    case 138:
    case 139:
    case 140:
    case 141:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eRollType_descriptor() {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_usermessages_2eproto::file_level_enum_descriptors[2];
}
bool eRollType_IsValid(int value) {
  switch (value) {
    case -1:
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PARTICLE_MESSAGE_descriptor() {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_usermessages_2eproto::file_level_enum_descriptors[3];
}
bool PARTICLE_MESSAGE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EHapticPulseType_descriptor() {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_usermessages_2eproto::file_level_enum_descriptors[4];
}
bool EHapticPulseType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CUserMessageAchievementEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageAchievementEvent::kAchievementFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageAchievementEvent::CUserMessageAchievementEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageAchievementEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageAchievementEvent)
}
CUserMessageAchievementEvent::CUserMessageAchievementEvent(const CUserMessageAchievementEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  achievement_ = from.achievement_;
  // @@protoc_insertion_point(copy_constructor:CUserMessageAchievementEvent)
}

void CUserMessageAchievementEvent::SharedCtor() {
  achievement_ = 0u;
}

CUserMessageAchievementEvent::~CUserMessageAchievementEvent() {
  // @@protoc_insertion_point(destructor:CUserMessageAchievementEvent)
  SharedDtor();
}

void CUserMessageAchievementEvent::SharedDtor() {
}

void CUserMessageAchievementEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageAchievementEvent::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageAchievementEvent& CUserMessageAchievementEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageAchievementEvent.base);
  return *internal_default_instance();
}


void CUserMessageAchievementEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageAchievementEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  achievement_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageAchievementEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageAchievementEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 achievement = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_achievement();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &achievement_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageAchievementEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageAchievementEvent)
  return false;
#undef DO_
}

void CUserMessageAchievementEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageAchievementEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 achievement = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->achievement(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageAchievementEvent)
}

::google::protobuf::uint8* CUserMessageAchievementEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageAchievementEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 achievement = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->achievement(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageAchievementEvent)
  return target;
}

size_t CUserMessageAchievementEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageAchievementEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 achievement = 1;
  if (has_achievement()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->achievement());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageAchievementEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageAchievementEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageAchievementEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageAchievementEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageAchievementEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageAchievementEvent)
    MergeFrom(*source);
  }
}

void CUserMessageAchievementEvent::MergeFrom(const CUserMessageAchievementEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageAchievementEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_achievement()) {
    set_achievement(from.achievement());
  }
}

void CUserMessageAchievementEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageAchievementEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageAchievementEvent::CopyFrom(const CUserMessageAchievementEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageAchievementEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageAchievementEvent::IsInitialized() const {
  return true;
}

void CUserMessageAchievementEvent::Swap(CUserMessageAchievementEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageAchievementEvent::InternalSwap(CUserMessageAchievementEvent* other) {
  using std::swap;
  swap(achievement_, other->achievement_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageAchievementEvent::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageCloseCaption::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageCloseCaption::kHashFieldNumber;
const int CUserMessageCloseCaption::kDurationFieldNumber;
const int CUserMessageCloseCaption::kFromPlayerFieldNumber;
const int CUserMessageCloseCaption::kEntIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageCloseCaption::CUserMessageCloseCaption()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageCloseCaption.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageCloseCaption)
}
CUserMessageCloseCaption::CUserMessageCloseCaption(const CUserMessageCloseCaption& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hash_, &from.hash_,
    static_cast<size_t>(reinterpret_cast<char*>(&ent_index_) -
    reinterpret_cast<char*>(&hash_)) + sizeof(ent_index_));
  // @@protoc_insertion_point(copy_constructor:CUserMessageCloseCaption)
}

void CUserMessageCloseCaption::SharedCtor() {
  ::memset(&hash_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ent_index_) -
      reinterpret_cast<char*>(&hash_)) + sizeof(ent_index_));
}

CUserMessageCloseCaption::~CUserMessageCloseCaption() {
  // @@protoc_insertion_point(destructor:CUserMessageCloseCaption)
  SharedDtor();
}

void CUserMessageCloseCaption::SharedDtor() {
}

void CUserMessageCloseCaption::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageCloseCaption::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageCloseCaption& CUserMessageCloseCaption::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageCloseCaption.base);
  return *internal_default_instance();
}


void CUserMessageCloseCaption::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageCloseCaption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&hash_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ent_index_) -
        reinterpret_cast<char*>(&hash_)) + sizeof(ent_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageCloseCaption::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageCloseCaption)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed32 hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_hash();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float duration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool from_player = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_from_player();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &from_player_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ent_index = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_ent_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ent_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageCloseCaption)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageCloseCaption)
  return false;
#undef DO_
}

void CUserMessageCloseCaption::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageCloseCaption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 hash = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->hash(), output);
  }

  // optional float duration = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->duration(), output);
  }

  // optional bool from_player = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->from_player(), output);
  }

  // optional int32 ent_index = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->ent_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageCloseCaption)
}

::google::protobuf::uint8* CUserMessageCloseCaption::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageCloseCaption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 hash = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->hash(), target);
  }

  // optional float duration = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->duration(), target);
  }

  // optional bool from_player = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->from_player(), target);
  }

  // optional int32 ent_index = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->ent_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageCloseCaption)
  return target;
}

size_t CUserMessageCloseCaption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageCloseCaption)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional fixed32 hash = 1;
    if (has_hash()) {
      total_size += 1 + 4;
    }

    // optional float duration = 2;
    if (has_duration()) {
      total_size += 1 + 4;
    }

    // optional bool from_player = 3;
    if (has_from_player()) {
      total_size += 1 + 1;
    }

    // optional int32 ent_index = 4;
    if (has_ent_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ent_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageCloseCaption::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageCloseCaption)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageCloseCaption* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageCloseCaption>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageCloseCaption)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageCloseCaption)
    MergeFrom(*source);
  }
}

void CUserMessageCloseCaption::MergeFrom(const CUserMessageCloseCaption& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageCloseCaption)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      hash_ = from.hash_;
    }
    if (cached_has_bits & 0x00000002u) {
      duration_ = from.duration_;
    }
    if (cached_has_bits & 0x00000004u) {
      from_player_ = from.from_player_;
    }
    if (cached_has_bits & 0x00000008u) {
      ent_index_ = from.ent_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMessageCloseCaption::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageCloseCaption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageCloseCaption::CopyFrom(const CUserMessageCloseCaption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageCloseCaption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageCloseCaption::IsInitialized() const {
  return true;
}

void CUserMessageCloseCaption::Swap(CUserMessageCloseCaption* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageCloseCaption::InternalSwap(CUserMessageCloseCaption* other) {
  using std::swap;
  swap(hash_, other->hash_);
  swap(duration_, other->duration_);
  swap(from_player_, other->from_player_);
  swap(ent_index_, other->ent_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageCloseCaption::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageCloseCaptionDirect::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageCloseCaptionDirect::kHashFieldNumber;
const int CUserMessageCloseCaptionDirect::kDurationFieldNumber;
const int CUserMessageCloseCaptionDirect::kFromPlayerFieldNumber;
const int CUserMessageCloseCaptionDirect::kEntIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageCloseCaptionDirect::CUserMessageCloseCaptionDirect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageCloseCaptionDirect.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageCloseCaptionDirect)
}
CUserMessageCloseCaptionDirect::CUserMessageCloseCaptionDirect(const CUserMessageCloseCaptionDirect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hash_, &from.hash_,
    static_cast<size_t>(reinterpret_cast<char*>(&ent_index_) -
    reinterpret_cast<char*>(&hash_)) + sizeof(ent_index_));
  // @@protoc_insertion_point(copy_constructor:CUserMessageCloseCaptionDirect)
}

void CUserMessageCloseCaptionDirect::SharedCtor() {
  ::memset(&hash_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ent_index_) -
      reinterpret_cast<char*>(&hash_)) + sizeof(ent_index_));
}

CUserMessageCloseCaptionDirect::~CUserMessageCloseCaptionDirect() {
  // @@protoc_insertion_point(destructor:CUserMessageCloseCaptionDirect)
  SharedDtor();
}

void CUserMessageCloseCaptionDirect::SharedDtor() {
}

void CUserMessageCloseCaptionDirect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageCloseCaptionDirect::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageCloseCaptionDirect& CUserMessageCloseCaptionDirect::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageCloseCaptionDirect.base);
  return *internal_default_instance();
}


void CUserMessageCloseCaptionDirect::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageCloseCaptionDirect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&hash_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ent_index_) -
        reinterpret_cast<char*>(&hash_)) + sizeof(ent_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageCloseCaptionDirect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageCloseCaptionDirect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed32 hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_hash();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float duration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool from_player = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_from_player();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &from_player_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ent_index = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_ent_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ent_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageCloseCaptionDirect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageCloseCaptionDirect)
  return false;
#undef DO_
}

void CUserMessageCloseCaptionDirect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageCloseCaptionDirect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 hash = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->hash(), output);
  }

  // optional float duration = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->duration(), output);
  }

  // optional bool from_player = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->from_player(), output);
  }

  // optional int32 ent_index = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->ent_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageCloseCaptionDirect)
}

::google::protobuf::uint8* CUserMessageCloseCaptionDirect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageCloseCaptionDirect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 hash = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->hash(), target);
  }

  // optional float duration = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->duration(), target);
  }

  // optional bool from_player = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->from_player(), target);
  }

  // optional int32 ent_index = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->ent_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageCloseCaptionDirect)
  return target;
}

size_t CUserMessageCloseCaptionDirect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageCloseCaptionDirect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional fixed32 hash = 1;
    if (has_hash()) {
      total_size += 1 + 4;
    }

    // optional float duration = 2;
    if (has_duration()) {
      total_size += 1 + 4;
    }

    // optional bool from_player = 3;
    if (has_from_player()) {
      total_size += 1 + 1;
    }

    // optional int32 ent_index = 4;
    if (has_ent_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ent_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageCloseCaptionDirect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageCloseCaptionDirect)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageCloseCaptionDirect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageCloseCaptionDirect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageCloseCaptionDirect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageCloseCaptionDirect)
    MergeFrom(*source);
  }
}

void CUserMessageCloseCaptionDirect::MergeFrom(const CUserMessageCloseCaptionDirect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageCloseCaptionDirect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      hash_ = from.hash_;
    }
    if (cached_has_bits & 0x00000002u) {
      duration_ = from.duration_;
    }
    if (cached_has_bits & 0x00000004u) {
      from_player_ = from.from_player_;
    }
    if (cached_has_bits & 0x00000008u) {
      ent_index_ = from.ent_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMessageCloseCaptionDirect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageCloseCaptionDirect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageCloseCaptionDirect::CopyFrom(const CUserMessageCloseCaptionDirect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageCloseCaptionDirect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageCloseCaptionDirect::IsInitialized() const {
  return true;
}

void CUserMessageCloseCaptionDirect::Swap(CUserMessageCloseCaptionDirect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageCloseCaptionDirect::InternalSwap(CUserMessageCloseCaptionDirect* other) {
  using std::swap;
  swap(hash_, other->hash_);
  swap(duration_, other->duration_);
  swap(from_player_, other->from_player_);
  swap(ent_index_, other->ent_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageCloseCaptionDirect::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageCloseCaptionPlaceholder::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageCloseCaptionPlaceholder::kStringFieldNumber;
const int CUserMessageCloseCaptionPlaceholder::kDurationFieldNumber;
const int CUserMessageCloseCaptionPlaceholder::kFromPlayerFieldNumber;
const int CUserMessageCloseCaptionPlaceholder::kEntIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageCloseCaptionPlaceholder::CUserMessageCloseCaptionPlaceholder()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageCloseCaptionPlaceholder.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageCloseCaptionPlaceholder)
}
CUserMessageCloseCaptionPlaceholder::CUserMessageCloseCaptionPlaceholder(const CUserMessageCloseCaptionPlaceholder& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_string()) {
    string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_);
  }
  ::memcpy(&duration_, &from.duration_,
    static_cast<size_t>(reinterpret_cast<char*>(&ent_index_) -
    reinterpret_cast<char*>(&duration_)) + sizeof(ent_index_));
  // @@protoc_insertion_point(copy_constructor:CUserMessageCloseCaptionPlaceholder)
}

void CUserMessageCloseCaptionPlaceholder::SharedCtor() {
  string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&duration_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ent_index_) -
      reinterpret_cast<char*>(&duration_)) + sizeof(ent_index_));
}

CUserMessageCloseCaptionPlaceholder::~CUserMessageCloseCaptionPlaceholder() {
  // @@protoc_insertion_point(destructor:CUserMessageCloseCaptionPlaceholder)
  SharedDtor();
}

void CUserMessageCloseCaptionPlaceholder::SharedDtor() {
  string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CUserMessageCloseCaptionPlaceholder::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageCloseCaptionPlaceholder::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageCloseCaptionPlaceholder& CUserMessageCloseCaptionPlaceholder::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageCloseCaptionPlaceholder.base);
  return *internal_default_instance();
}


void CUserMessageCloseCaptionPlaceholder::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageCloseCaptionPlaceholder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    string_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&duration_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ent_index_) -
        reinterpret_cast<char*>(&duration_)) + sizeof(ent_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageCloseCaptionPlaceholder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageCloseCaptionPlaceholder)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string string = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->string().data(), static_cast<int>(this->string().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CUserMessageCloseCaptionPlaceholder.string");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float duration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool from_player = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_from_player();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &from_player_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ent_index = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_ent_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ent_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageCloseCaptionPlaceholder)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageCloseCaptionPlaceholder)
  return false;
#undef DO_
}

void CUserMessageCloseCaptionPlaceholder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageCloseCaptionPlaceholder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string string = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string().data(), static_cast<int>(this->string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageCloseCaptionPlaceholder.string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->string(), output);
  }

  // optional float duration = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->duration(), output);
  }

  // optional bool from_player = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->from_player(), output);
  }

  // optional int32 ent_index = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->ent_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageCloseCaptionPlaceholder)
}

::google::protobuf::uint8* CUserMessageCloseCaptionPlaceholder::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageCloseCaptionPlaceholder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string string = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string().data(), static_cast<int>(this->string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageCloseCaptionPlaceholder.string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->string(), target);
  }

  // optional float duration = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->duration(), target);
  }

  // optional bool from_player = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->from_player(), target);
  }

  // optional int32 ent_index = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->ent_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageCloseCaptionPlaceholder)
  return target;
}

size_t CUserMessageCloseCaptionPlaceholder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageCloseCaptionPlaceholder)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string string = 1;
    if (has_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string());
    }

    // optional float duration = 2;
    if (has_duration()) {
      total_size += 1 + 4;
    }

    // optional bool from_player = 3;
    if (has_from_player()) {
      total_size += 1 + 1;
    }

    // optional int32 ent_index = 4;
    if (has_ent_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ent_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageCloseCaptionPlaceholder::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageCloseCaptionPlaceholder)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageCloseCaptionPlaceholder* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageCloseCaptionPlaceholder>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageCloseCaptionPlaceholder)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageCloseCaptionPlaceholder)
    MergeFrom(*source);
  }
}

void CUserMessageCloseCaptionPlaceholder::MergeFrom(const CUserMessageCloseCaptionPlaceholder& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageCloseCaptionPlaceholder)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_string();
      string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_);
    }
    if (cached_has_bits & 0x00000002u) {
      duration_ = from.duration_;
    }
    if (cached_has_bits & 0x00000004u) {
      from_player_ = from.from_player_;
    }
    if (cached_has_bits & 0x00000008u) {
      ent_index_ = from.ent_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMessageCloseCaptionPlaceholder::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageCloseCaptionPlaceholder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageCloseCaptionPlaceholder::CopyFrom(const CUserMessageCloseCaptionPlaceholder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageCloseCaptionPlaceholder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageCloseCaptionPlaceholder::IsInitialized() const {
  return true;
}

void CUserMessageCloseCaptionPlaceholder::Swap(CUserMessageCloseCaptionPlaceholder* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageCloseCaptionPlaceholder::InternalSwap(CUserMessageCloseCaptionPlaceholder* other) {
  using std::swap;
  string_.Swap(&other->string_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(duration_, other->duration_);
  swap(from_player_, other->from_player_);
  swap(ent_index_, other->ent_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageCloseCaptionPlaceholder::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageCurrentTimescale::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageCurrentTimescale::kCurrentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageCurrentTimescale::CUserMessageCurrentTimescale()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageCurrentTimescale.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageCurrentTimescale)
}
CUserMessageCurrentTimescale::CUserMessageCurrentTimescale(const CUserMessageCurrentTimescale& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  current_ = from.current_;
  // @@protoc_insertion_point(copy_constructor:CUserMessageCurrentTimescale)
}

void CUserMessageCurrentTimescale::SharedCtor() {
  current_ = 0;
}

CUserMessageCurrentTimescale::~CUserMessageCurrentTimescale() {
  // @@protoc_insertion_point(destructor:CUserMessageCurrentTimescale)
  SharedDtor();
}

void CUserMessageCurrentTimescale::SharedDtor() {
}

void CUserMessageCurrentTimescale::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageCurrentTimescale::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageCurrentTimescale& CUserMessageCurrentTimescale::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageCurrentTimescale.base);
  return *internal_default_instance();
}


void CUserMessageCurrentTimescale::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageCurrentTimescale)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  current_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageCurrentTimescale::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageCurrentTimescale)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float current = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_current();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &current_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageCurrentTimescale)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageCurrentTimescale)
  return false;
#undef DO_
}

void CUserMessageCurrentTimescale::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageCurrentTimescale)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float current = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->current(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageCurrentTimescale)
}

::google::protobuf::uint8* CUserMessageCurrentTimescale::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageCurrentTimescale)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float current = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->current(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageCurrentTimescale)
  return target;
}

size_t CUserMessageCurrentTimescale::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageCurrentTimescale)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional float current = 1;
  if (has_current()) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageCurrentTimescale::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageCurrentTimescale)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageCurrentTimescale* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageCurrentTimescale>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageCurrentTimescale)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageCurrentTimescale)
    MergeFrom(*source);
  }
}

void CUserMessageCurrentTimescale::MergeFrom(const CUserMessageCurrentTimescale& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageCurrentTimescale)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_current()) {
    set_current(from.current());
  }
}

void CUserMessageCurrentTimescale::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageCurrentTimescale)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageCurrentTimescale::CopyFrom(const CUserMessageCurrentTimescale& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageCurrentTimescale)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageCurrentTimescale::IsInitialized() const {
  return true;
}

void CUserMessageCurrentTimescale::Swap(CUserMessageCurrentTimescale* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageCurrentTimescale::InternalSwap(CUserMessageCurrentTimescale* other) {
  using std::swap;
  swap(current_, other->current_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageCurrentTimescale::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageDesiredTimescale::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageDesiredTimescale::kDesiredFieldNumber;
const int CUserMessageDesiredTimescale::kAccelerationFieldNumber;
const int CUserMessageDesiredTimescale::kMinblendrateFieldNumber;
const int CUserMessageDesiredTimescale::kBlenddeltamultiplierFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageDesiredTimescale::CUserMessageDesiredTimescale()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageDesiredTimescale.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageDesiredTimescale)
}
CUserMessageDesiredTimescale::CUserMessageDesiredTimescale(const CUserMessageDesiredTimescale& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&desired_, &from.desired_,
    static_cast<size_t>(reinterpret_cast<char*>(&blenddeltamultiplier_) -
    reinterpret_cast<char*>(&desired_)) + sizeof(blenddeltamultiplier_));
  // @@protoc_insertion_point(copy_constructor:CUserMessageDesiredTimescale)
}

void CUserMessageDesiredTimescale::SharedCtor() {
  ::memset(&desired_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&blenddeltamultiplier_) -
      reinterpret_cast<char*>(&desired_)) + sizeof(blenddeltamultiplier_));
}

CUserMessageDesiredTimescale::~CUserMessageDesiredTimescale() {
  // @@protoc_insertion_point(destructor:CUserMessageDesiredTimescale)
  SharedDtor();
}

void CUserMessageDesiredTimescale::SharedDtor() {
}

void CUserMessageDesiredTimescale::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageDesiredTimescale::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageDesiredTimescale& CUserMessageDesiredTimescale::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageDesiredTimescale.base);
  return *internal_default_instance();
}


void CUserMessageDesiredTimescale::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageDesiredTimescale)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&desired_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&blenddeltamultiplier_) -
        reinterpret_cast<char*>(&desired_)) + sizeof(blenddeltamultiplier_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageDesiredTimescale::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageDesiredTimescale)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float desired = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_desired();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &desired_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float acceleration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_acceleration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &acceleration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float minblendrate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_minblendrate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &minblendrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float blenddeltamultiplier = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_blenddeltamultiplier();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &blenddeltamultiplier_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageDesiredTimescale)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageDesiredTimescale)
  return false;
#undef DO_
}

void CUserMessageDesiredTimescale::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageDesiredTimescale)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float desired = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->desired(), output);
  }

  // optional float acceleration = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->acceleration(), output);
  }

  // optional float minblendrate = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->minblendrate(), output);
  }

  // optional float blenddeltamultiplier = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->blenddeltamultiplier(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageDesiredTimescale)
}

::google::protobuf::uint8* CUserMessageDesiredTimescale::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageDesiredTimescale)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float desired = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->desired(), target);
  }

  // optional float acceleration = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->acceleration(), target);
  }

  // optional float minblendrate = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->minblendrate(), target);
  }

  // optional float blenddeltamultiplier = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->blenddeltamultiplier(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageDesiredTimescale)
  return target;
}

size_t CUserMessageDesiredTimescale::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageDesiredTimescale)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional float desired = 1;
    if (has_desired()) {
      total_size += 1 + 4;
    }

    // optional float acceleration = 2;
    if (has_acceleration()) {
      total_size += 1 + 4;
    }

    // optional float minblendrate = 3;
    if (has_minblendrate()) {
      total_size += 1 + 4;
    }

    // optional float blenddeltamultiplier = 4;
    if (has_blenddeltamultiplier()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageDesiredTimescale::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageDesiredTimescale)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageDesiredTimescale* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageDesiredTimescale>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageDesiredTimescale)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageDesiredTimescale)
    MergeFrom(*source);
  }
}

void CUserMessageDesiredTimescale::MergeFrom(const CUserMessageDesiredTimescale& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageDesiredTimescale)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      desired_ = from.desired_;
    }
    if (cached_has_bits & 0x00000002u) {
      acceleration_ = from.acceleration_;
    }
    if (cached_has_bits & 0x00000004u) {
      minblendrate_ = from.minblendrate_;
    }
    if (cached_has_bits & 0x00000008u) {
      blenddeltamultiplier_ = from.blenddeltamultiplier_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMessageDesiredTimescale::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageDesiredTimescale)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageDesiredTimescale::CopyFrom(const CUserMessageDesiredTimescale& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageDesiredTimescale)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageDesiredTimescale::IsInitialized() const {
  return true;
}

void CUserMessageDesiredTimescale::Swap(CUserMessageDesiredTimescale* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageDesiredTimescale::InternalSwap(CUserMessageDesiredTimescale* other) {
  using std::swap;
  swap(desired_, other->desired_);
  swap(acceleration_, other->acceleration_);
  swap(minblendrate_, other->minblendrate_);
  swap(blenddeltamultiplier_, other->blenddeltamultiplier_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageDesiredTimescale::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageFade::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageFade::kDurationFieldNumber;
const int CUserMessageFade::kHoldTimeFieldNumber;
const int CUserMessageFade::kFlagsFieldNumber;
const int CUserMessageFade::kColorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageFade::CUserMessageFade()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageFade.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageFade)
}
CUserMessageFade::CUserMessageFade(const CUserMessageFade& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&duration_, &from.duration_,
    static_cast<size_t>(reinterpret_cast<char*>(&color_) -
    reinterpret_cast<char*>(&duration_)) + sizeof(color_));
  // @@protoc_insertion_point(copy_constructor:CUserMessageFade)
}

void CUserMessageFade::SharedCtor() {
  ::memset(&duration_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&color_) -
      reinterpret_cast<char*>(&duration_)) + sizeof(color_));
}

CUserMessageFade::~CUserMessageFade() {
  // @@protoc_insertion_point(destructor:CUserMessageFade)
  SharedDtor();
}

void CUserMessageFade::SharedDtor() {
}

void CUserMessageFade::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageFade::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageFade& CUserMessageFade::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageFade.base);
  return *internal_default_instance();
}


void CUserMessageFade::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageFade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&duration_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&color_) -
        reinterpret_cast<char*>(&duration_)) + sizeof(color_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageFade::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageFade)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 duration = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 hold_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_hold_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hold_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 flags = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 color = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_color();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &color_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageFade)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageFade)
  return false;
#undef DO_
}

void CUserMessageFade::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageFade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 duration = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->duration(), output);
  }

  // optional uint32 hold_time = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hold_time(), output);
  }

  // optional uint32 flags = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->flags(), output);
  }

  // optional fixed32 color = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(4, this->color(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageFade)
}

::google::protobuf::uint8* CUserMessageFade::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageFade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 duration = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->duration(), target);
  }

  // optional uint32 hold_time = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hold_time(), target);
  }

  // optional uint32 flags = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->flags(), target);
  }

  // optional fixed32 color = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(4, this->color(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageFade)
  return target;
}

size_t CUserMessageFade::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageFade)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 duration = 1;
    if (has_duration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->duration());
    }

    // optional uint32 hold_time = 2;
    if (has_hold_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hold_time());
    }

    // optional uint32 flags = 3;
    if (has_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flags());
    }

    // optional fixed32 color = 4;
    if (has_color()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageFade::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageFade)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageFade* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageFade>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageFade)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageFade)
    MergeFrom(*source);
  }
}

void CUserMessageFade::MergeFrom(const CUserMessageFade& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageFade)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      duration_ = from.duration_;
    }
    if (cached_has_bits & 0x00000002u) {
      hold_time_ = from.hold_time_;
    }
    if (cached_has_bits & 0x00000004u) {
      flags_ = from.flags_;
    }
    if (cached_has_bits & 0x00000008u) {
      color_ = from.color_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMessageFade::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageFade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageFade::CopyFrom(const CUserMessageFade& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageFade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageFade::IsInitialized() const {
  return true;
}

void CUserMessageFade::Swap(CUserMessageFade* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageFade::InternalSwap(CUserMessageFade* other) {
  using std::swap;
  swap(duration_, other->duration_);
  swap(hold_time_, other->hold_time_);
  swap(flags_, other->flags_);
  swap(color_, other->color_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageFade::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageShake::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageShake::kCommandFieldNumber;
const int CUserMessageShake::kAmplitudeFieldNumber;
const int CUserMessageShake::kFrequencyFieldNumber;
const int CUserMessageShake::kDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageShake::CUserMessageShake()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageShake.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageShake)
}
CUserMessageShake::CUserMessageShake(const CUserMessageShake& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&command_, &from.command_,
    static_cast<size_t>(reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&command_)) + sizeof(duration_));
  // @@protoc_insertion_point(copy_constructor:CUserMessageShake)
}

void CUserMessageShake::SharedCtor() {
  ::memset(&command_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&command_)) + sizeof(duration_));
}

CUserMessageShake::~CUserMessageShake() {
  // @@protoc_insertion_point(destructor:CUserMessageShake)
  SharedDtor();
}

void CUserMessageShake::SharedDtor() {
}

void CUserMessageShake::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageShake::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageShake& CUserMessageShake::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageShake.base);
  return *internal_default_instance();
}


void CUserMessageShake::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageShake)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&command_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&duration_) -
        reinterpret_cast<char*>(&command_)) + sizeof(duration_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageShake::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageShake)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 command = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_command();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &command_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float amplitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_amplitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &amplitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float frequency = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_frequency();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &frequency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float duration = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageShake)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageShake)
  return false;
#undef DO_
}

void CUserMessageShake::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageShake)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 command = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->command(), output);
  }

  // optional float amplitude = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->amplitude(), output);
  }

  // optional float frequency = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->frequency(), output);
  }

  // optional float duration = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->duration(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageShake)
}

::google::protobuf::uint8* CUserMessageShake::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageShake)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 command = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->command(), target);
  }

  // optional float amplitude = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->amplitude(), target);
  }

  // optional float frequency = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->frequency(), target);
  }

  // optional float duration = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->duration(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageShake)
  return target;
}

size_t CUserMessageShake::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageShake)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 command = 1;
    if (has_command()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->command());
    }

    // optional float amplitude = 2;
    if (has_amplitude()) {
      total_size += 1 + 4;
    }

    // optional float frequency = 3;
    if (has_frequency()) {
      total_size += 1 + 4;
    }

    // optional float duration = 4;
    if (has_duration()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageShake::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageShake)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageShake* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageShake>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageShake)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageShake)
    MergeFrom(*source);
  }
}

void CUserMessageShake::MergeFrom(const CUserMessageShake& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageShake)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      command_ = from.command_;
    }
    if (cached_has_bits & 0x00000002u) {
      amplitude_ = from.amplitude_;
    }
    if (cached_has_bits & 0x00000004u) {
      frequency_ = from.frequency_;
    }
    if (cached_has_bits & 0x00000008u) {
      duration_ = from.duration_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMessageShake::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageShake)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageShake::CopyFrom(const CUserMessageShake& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageShake)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageShake::IsInitialized() const {
  return true;
}

void CUserMessageShake::Swap(CUserMessageShake* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageShake::InternalSwap(CUserMessageShake* other) {
  using std::swap;
  swap(command_, other->command_);
  swap(amplitude_, other->amplitude_);
  swap(frequency_, other->frequency_);
  swap(duration_, other->duration_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageShake::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageShakeDir::InitAsDefaultInstance() {
  ::_CUserMessageShakeDir_default_instance_._instance.get_mutable()->shake_ = const_cast< ::CUserMessageShake*>(
      ::CUserMessageShake::internal_default_instance());
  ::_CUserMessageShakeDir_default_instance_._instance.get_mutable()->direction_ = const_cast< ::CMsgVector*>(
      ::CMsgVector::internal_default_instance());
}
void CUserMessageShakeDir::clear_direction() {
  if (direction_ != NULL) direction_->Clear();
  clear_has_direction();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageShakeDir::kShakeFieldNumber;
const int CUserMessageShakeDir::kDirectionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageShakeDir::CUserMessageShakeDir()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageShakeDir.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageShakeDir)
}
CUserMessageShakeDir::CUserMessageShakeDir(const CUserMessageShakeDir& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_shake()) {
    shake_ = new ::CUserMessageShake(*from.shake_);
  } else {
    shake_ = NULL;
  }
  if (from.has_direction()) {
    direction_ = new ::CMsgVector(*from.direction_);
  } else {
    direction_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CUserMessageShakeDir)
}

void CUserMessageShakeDir::SharedCtor() {
  ::memset(&shake_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&direction_) -
      reinterpret_cast<char*>(&shake_)) + sizeof(direction_));
}

CUserMessageShakeDir::~CUserMessageShakeDir() {
  // @@protoc_insertion_point(destructor:CUserMessageShakeDir)
  SharedDtor();
}

void CUserMessageShakeDir::SharedDtor() {
  if (this != internal_default_instance()) delete shake_;
  if (this != internal_default_instance()) delete direction_;
}

void CUserMessageShakeDir::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageShakeDir::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageShakeDir& CUserMessageShakeDir::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageShakeDir.base);
  return *internal_default_instance();
}


void CUserMessageShakeDir::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageShakeDir)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(shake_ != NULL);
      shake_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(direction_ != NULL);
      direction_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageShakeDir::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageShakeDir)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CUserMessageShake shake = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shake()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgVector direction = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_direction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageShakeDir)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageShakeDir)
  return false;
#undef DO_
}

void CUserMessageShakeDir::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageShakeDir)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CUserMessageShake shake = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_shake(), output);
  }

  // optional .CMsgVector direction = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_direction(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageShakeDir)
}

::google::protobuf::uint8* CUserMessageShakeDir::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageShakeDir)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CUserMessageShake shake = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_shake(), deterministic, target);
  }

  // optional .CMsgVector direction = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_direction(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageShakeDir)
  return target;
}

size_t CUserMessageShakeDir::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageShakeDir)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .CUserMessageShake shake = 1;
    if (has_shake()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *shake_);
    }

    // optional .CMsgVector direction = 2;
    if (has_direction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *direction_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageShakeDir::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageShakeDir)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageShakeDir* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageShakeDir>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageShakeDir)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageShakeDir)
    MergeFrom(*source);
  }
}

void CUserMessageShakeDir::MergeFrom(const CUserMessageShakeDir& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageShakeDir)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_shake()->::CUserMessageShake::MergeFrom(from.shake());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_direction()->::CMsgVector::MergeFrom(from.direction());
    }
  }
}

void CUserMessageShakeDir::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageShakeDir)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageShakeDir::CopyFrom(const CUserMessageShakeDir& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageShakeDir)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageShakeDir::IsInitialized() const {
  return true;
}

void CUserMessageShakeDir::Swap(CUserMessageShakeDir* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageShakeDir::InternalSwap(CUserMessageShakeDir* other) {
  using std::swap;
  swap(shake_, other->shake_);
  swap(direction_, other->direction_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageShakeDir::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageScreenTilt::InitAsDefaultInstance() {
  ::_CUserMessageScreenTilt_default_instance_._instance.get_mutable()->angle_ = const_cast< ::CMsgVector*>(
      ::CMsgVector::internal_default_instance());
}
void CUserMessageScreenTilt::clear_angle() {
  if (angle_ != NULL) angle_->Clear();
  clear_has_angle();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageScreenTilt::kCommandFieldNumber;
const int CUserMessageScreenTilt::kEaseInOutFieldNumber;
const int CUserMessageScreenTilt::kAngleFieldNumber;
const int CUserMessageScreenTilt::kDurationFieldNumber;
const int CUserMessageScreenTilt::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageScreenTilt::CUserMessageScreenTilt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageScreenTilt.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageScreenTilt)
}
CUserMessageScreenTilt::CUserMessageScreenTilt(const CUserMessageScreenTilt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_angle()) {
    angle_ = new ::CMsgVector(*from.angle_);
  } else {
    angle_ = NULL;
  }
  ::memcpy(&command_, &from.command_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_) -
    reinterpret_cast<char*>(&command_)) + sizeof(time_));
  // @@protoc_insertion_point(copy_constructor:CUserMessageScreenTilt)
}

void CUserMessageScreenTilt::SharedCtor() {
  ::memset(&angle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_) -
      reinterpret_cast<char*>(&angle_)) + sizeof(time_));
}

CUserMessageScreenTilt::~CUserMessageScreenTilt() {
  // @@protoc_insertion_point(destructor:CUserMessageScreenTilt)
  SharedDtor();
}

void CUserMessageScreenTilt::SharedDtor() {
  if (this != internal_default_instance()) delete angle_;
}

void CUserMessageScreenTilt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageScreenTilt::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageScreenTilt& CUserMessageScreenTilt::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageScreenTilt.base);
  return *internal_default_instance();
}


void CUserMessageScreenTilt::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageScreenTilt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(angle_ != NULL);
    angle_->Clear();
  }
  if (cached_has_bits & 30u) {
    ::memset(&command_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&time_) -
        reinterpret_cast<char*>(&command_)) + sizeof(time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageScreenTilt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageScreenTilt)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 command = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_command();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &command_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool ease_in_out = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_ease_in_out();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ease_in_out_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgVector angle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_angle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float duration = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageScreenTilt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageScreenTilt)
  return false;
#undef DO_
}

void CUserMessageScreenTilt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageScreenTilt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 command = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->command(), output);
  }

  // optional bool ease_in_out = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->ease_in_out(), output);
  }

  // optional .CMsgVector angle = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_angle(), output);
  }

  // optional float duration = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->duration(), output);
  }

  // optional float time = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageScreenTilt)
}

::google::protobuf::uint8* CUserMessageScreenTilt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageScreenTilt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 command = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->command(), target);
  }

  // optional bool ease_in_out = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->ease_in_out(), target);
  }

  // optional .CMsgVector angle = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_angle(), deterministic, target);
  }

  // optional float duration = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->duration(), target);
  }

  // optional float time = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageScreenTilt)
  return target;
}

size_t CUserMessageScreenTilt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageScreenTilt)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional .CMsgVector angle = 3;
    if (has_angle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *angle_);
    }

    // optional uint32 command = 1;
    if (has_command()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->command());
    }

    // optional bool ease_in_out = 2;
    if (has_ease_in_out()) {
      total_size += 1 + 1;
    }

    // optional float duration = 4;
    if (has_duration()) {
      total_size += 1 + 4;
    }

    // optional float time = 5;
    if (has_time()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageScreenTilt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageScreenTilt)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageScreenTilt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageScreenTilt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageScreenTilt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageScreenTilt)
    MergeFrom(*source);
  }
}

void CUserMessageScreenTilt::MergeFrom(const CUserMessageScreenTilt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageScreenTilt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_angle()->::CMsgVector::MergeFrom(from.angle());
    }
    if (cached_has_bits & 0x00000002u) {
      command_ = from.command_;
    }
    if (cached_has_bits & 0x00000004u) {
      ease_in_out_ = from.ease_in_out_;
    }
    if (cached_has_bits & 0x00000008u) {
      duration_ = from.duration_;
    }
    if (cached_has_bits & 0x00000010u) {
      time_ = from.time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMessageScreenTilt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageScreenTilt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageScreenTilt::CopyFrom(const CUserMessageScreenTilt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageScreenTilt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageScreenTilt::IsInitialized() const {
  return true;
}

void CUserMessageScreenTilt::Swap(CUserMessageScreenTilt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageScreenTilt::InternalSwap(CUserMessageScreenTilt* other) {
  using std::swap;
  swap(angle_, other->angle_);
  swap(command_, other->command_);
  swap(ease_in_out_, other->ease_in_out_);
  swap(duration_, other->duration_);
  swap(time_, other->time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageScreenTilt::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageSayText::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageSayText::kPlayerindexFieldNumber;
const int CUserMessageSayText::kTextFieldNumber;
const int CUserMessageSayText::kChatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageSayText::CUserMessageSayText()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageSayText.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageSayText)
}
CUserMessageSayText::CUserMessageSayText(const CUserMessageSayText& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  ::memcpy(&playerindex_, &from.playerindex_,
    static_cast<size_t>(reinterpret_cast<char*>(&chat_) -
    reinterpret_cast<char*>(&playerindex_)) + sizeof(chat_));
  // @@protoc_insertion_point(copy_constructor:CUserMessageSayText)
}

void CUserMessageSayText::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerindex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chat_) -
      reinterpret_cast<char*>(&playerindex_)) + sizeof(chat_));
}

CUserMessageSayText::~CUserMessageSayText() {
  // @@protoc_insertion_point(destructor:CUserMessageSayText)
  SharedDtor();
}

void CUserMessageSayText::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CUserMessageSayText::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageSayText::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageSayText& CUserMessageSayText::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageSayText.base);
  return *internal_default_instance();
}


void CUserMessageSayText::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageSayText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    text_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&playerindex_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&chat_) -
        reinterpret_cast<char*>(&playerindex_)) + sizeof(chat_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageSayText::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageSayText)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 playerindex = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_playerindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &playerindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CUserMessageSayText.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool chat = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_chat();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &chat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageSayText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageSayText)
  return false;
#undef DO_
}

void CUserMessageSayText::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageSayText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 playerindex = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->playerindex(), output);
  }

  // optional string text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageSayText.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  // optional bool chat = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->chat(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageSayText)
}

::google::protobuf::uint8* CUserMessageSayText::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageSayText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 playerindex = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->playerindex(), target);
  }

  // optional string text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageSayText.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  // optional bool chat = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->chat(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageSayText)
  return target;
}

size_t CUserMessageSayText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageSayText)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string text = 2;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional uint32 playerindex = 1;
    if (has_playerindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->playerindex());
    }

    // optional bool chat = 3;
    if (has_chat()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageSayText::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageSayText)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageSayText* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageSayText>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageSayText)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageSayText)
    MergeFrom(*source);
  }
}

void CUserMessageSayText::MergeFrom(const CUserMessageSayText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageSayText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      playerindex_ = from.playerindex_;
    }
    if (cached_has_bits & 0x00000004u) {
      chat_ = from.chat_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMessageSayText::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageSayText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageSayText::CopyFrom(const CUserMessageSayText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageSayText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageSayText::IsInitialized() const {
  return true;
}

void CUserMessageSayText::Swap(CUserMessageSayText* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageSayText::InternalSwap(CUserMessageSayText* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerindex_, other->playerindex_);
  swap(chat_, other->chat_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageSayText::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageSayText2::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageSayText2::kEntityindexFieldNumber;
const int CUserMessageSayText2::kChatFieldNumber;
const int CUserMessageSayText2::kMessagenameFieldNumber;
const int CUserMessageSayText2::kParam1FieldNumber;
const int CUserMessageSayText2::kParam2FieldNumber;
const int CUserMessageSayText2::kParam3FieldNumber;
const int CUserMessageSayText2::kParam4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageSayText2::CUserMessageSayText2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageSayText2.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageSayText2)
}
CUserMessageSayText2::CUserMessageSayText2(const CUserMessageSayText2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  messagename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_messagename()) {
    messagename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.messagename_);
  }
  param1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_param1()) {
    param1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param1_);
  }
  param2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_param2()) {
    param2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param2_);
  }
  param3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_param3()) {
    param3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param3_);
  }
  param4_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_param4()) {
    param4_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param4_);
  }
  ::memcpy(&entityindex_, &from.entityindex_,
    static_cast<size_t>(reinterpret_cast<char*>(&chat_) -
    reinterpret_cast<char*>(&entityindex_)) + sizeof(chat_));
  // @@protoc_insertion_point(copy_constructor:CUserMessageSayText2)
}

void CUserMessageSayText2::SharedCtor() {
  messagename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param4_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&entityindex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chat_) -
      reinterpret_cast<char*>(&entityindex_)) + sizeof(chat_));
}

CUserMessageSayText2::~CUserMessageSayText2() {
  // @@protoc_insertion_point(destructor:CUserMessageSayText2)
  SharedDtor();
}

void CUserMessageSayText2::SharedDtor() {
  messagename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param4_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CUserMessageSayText2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageSayText2::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageSayText2& CUserMessageSayText2::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageSayText2.base);
  return *internal_default_instance();
}


void CUserMessageSayText2::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageSayText2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      messagename_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      param1_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      param2_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      param3_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      param4_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 96u) {
    ::memset(&entityindex_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&chat_) -
        reinterpret_cast<char*>(&entityindex_)) + sizeof(chat_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageSayText2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageSayText2)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 entityindex = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_entityindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entityindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool chat = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_chat();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &chat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string messagename = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_messagename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->messagename().data(), static_cast<int>(this->messagename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CUserMessageSayText2.messagename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string param1 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->param1().data(), static_cast<int>(this->param1().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CUserMessageSayText2.param1");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string param2 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->param2().data(), static_cast<int>(this->param2().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CUserMessageSayText2.param2");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string param3 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param3()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->param3().data(), static_cast<int>(this->param3().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CUserMessageSayText2.param3");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string param4 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param4()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->param4().data(), static_cast<int>(this->param4().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CUserMessageSayText2.param4");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageSayText2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageSayText2)
  return false;
#undef DO_
}

void CUserMessageSayText2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageSayText2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 entityindex = 1;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entityindex(), output);
  }

  // optional bool chat = 2;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->chat(), output);
  }

  // optional string messagename = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messagename().data(), static_cast<int>(this->messagename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageSayText2.messagename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->messagename(), output);
  }

  // optional string param1 = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param1().data(), static_cast<int>(this->param1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageSayText2.param1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->param1(), output);
  }

  // optional string param2 = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param2().data(), static_cast<int>(this->param2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageSayText2.param2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->param2(), output);
  }

  // optional string param3 = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param3().data(), static_cast<int>(this->param3().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageSayText2.param3");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->param3(), output);
  }

  // optional string param4 = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param4().data(), static_cast<int>(this->param4().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageSayText2.param4");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->param4(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageSayText2)
}

::google::protobuf::uint8* CUserMessageSayText2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageSayText2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 entityindex = 1;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entityindex(), target);
  }

  // optional bool chat = 2;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->chat(), target);
  }

  // optional string messagename = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messagename().data(), static_cast<int>(this->messagename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageSayText2.messagename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->messagename(), target);
  }

  // optional string param1 = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param1().data(), static_cast<int>(this->param1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageSayText2.param1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->param1(), target);
  }

  // optional string param2 = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param2().data(), static_cast<int>(this->param2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageSayText2.param2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->param2(), target);
  }

  // optional string param3 = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param3().data(), static_cast<int>(this->param3().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageSayText2.param3");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->param3(), target);
  }

  // optional string param4 = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param4().data(), static_cast<int>(this->param4().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageSayText2.param4");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->param4(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageSayText2)
  return target;
}

size_t CUserMessageSayText2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageSayText2)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string messagename = 3;
    if (has_messagename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->messagename());
    }

    // optional string param1 = 4;
    if (has_param1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->param1());
    }

    // optional string param2 = 5;
    if (has_param2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->param2());
    }

    // optional string param3 = 6;
    if (has_param3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->param3());
    }

    // optional string param4 = 7;
    if (has_param4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->param4());
    }

    // optional uint32 entityindex = 1;
    if (has_entityindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->entityindex());
    }

    // optional bool chat = 2;
    if (has_chat()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageSayText2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageSayText2)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageSayText2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageSayText2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageSayText2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageSayText2)
    MergeFrom(*source);
  }
}

void CUserMessageSayText2::MergeFrom(const CUserMessageSayText2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageSayText2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_messagename();
      messagename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.messagename_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_param1();
      param1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param1_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_param2();
      param2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param2_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_param3();
      param3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param3_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_param4();
      param4_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param4_);
    }
    if (cached_has_bits & 0x00000020u) {
      entityindex_ = from.entityindex_;
    }
    if (cached_has_bits & 0x00000040u) {
      chat_ = from.chat_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMessageSayText2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageSayText2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageSayText2::CopyFrom(const CUserMessageSayText2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageSayText2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageSayText2::IsInitialized() const {
  return true;
}

void CUserMessageSayText2::Swap(CUserMessageSayText2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageSayText2::InternalSwap(CUserMessageSayText2* other) {
  using std::swap;
  messagename_.Swap(&other->messagename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  param1_.Swap(&other->param1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  param2_.Swap(&other->param2_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  param3_.Swap(&other->param3_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  param4_.Swap(&other->param4_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(entityindex_, other->entityindex_);
  swap(chat_, other->chat_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageSayText2::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageHudMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageHudMsg::kChannelFieldNumber;
const int CUserMessageHudMsg::kXFieldNumber;
const int CUserMessageHudMsg::kYFieldNumber;
const int CUserMessageHudMsg::kColor1FieldNumber;
const int CUserMessageHudMsg::kColor2FieldNumber;
const int CUserMessageHudMsg::kEffectFieldNumber;
const int CUserMessageHudMsg::kFadeInTimeFieldNumber;
const int CUserMessageHudMsg::kFadeOutTimeFieldNumber;
const int CUserMessageHudMsg::kHoldTimeFieldNumber;
const int CUserMessageHudMsg::kFxTimeFieldNumber;
const int CUserMessageHudMsg::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageHudMsg::CUserMessageHudMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageHudMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageHudMsg)
}
CUserMessageHudMsg::CUserMessageHudMsg(const CUserMessageHudMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  ::memcpy(&channel_, &from.channel_,
    static_cast<size_t>(reinterpret_cast<char*>(&fx_time_) -
    reinterpret_cast<char*>(&channel_)) + sizeof(fx_time_));
  // @@protoc_insertion_point(copy_constructor:CUserMessageHudMsg)
}

void CUserMessageHudMsg::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fx_time_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(fx_time_));
}

CUserMessageHudMsg::~CUserMessageHudMsg() {
  // @@protoc_insertion_point(destructor:CUserMessageHudMsg)
  SharedDtor();
}

void CUserMessageHudMsg::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CUserMessageHudMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageHudMsg::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageHudMsg& CUserMessageHudMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageHudMsg.base);
  return *internal_default_instance();
}


void CUserMessageHudMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageHudMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    message_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 254u) {
    ::memset(&channel_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&fade_in_time_) -
        reinterpret_cast<char*>(&channel_)) + sizeof(fade_in_time_));
  }
  if (cached_has_bits & 1792u) {
    ::memset(&fade_out_time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&fx_time_) -
        reinterpret_cast<char*>(&fade_out_time_)) + sizeof(fx_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageHudMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageHudMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 channel = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_channel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 color1 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_color1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &color1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 color2 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_color2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &color2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 effect = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_effect();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &effect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float fade_in_time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          set_has_fade_in_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fade_in_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float fade_out_time = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {
          set_has_fade_out_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fade_out_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float hold_time = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {
          set_has_hold_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &hold_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float fx_time = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {
          set_has_fx_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fx_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string message = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CUserMessageHudMsg.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageHudMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageHudMsg)
  return false;
#undef DO_
}

void CUserMessageHudMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageHudMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 channel = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->channel(), output);
  }

  // optional float x = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->x(), output);
  }

  // optional float y = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->y(), output);
  }

  // optional fixed32 color1 = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(4, this->color1(), output);
  }

  // optional fixed32 color2 = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(5, this->color2(), output);
  }

  // optional uint32 effect = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->effect(), output);
  }

  // optional float fade_in_time = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->fade_in_time(), output);
  }

  // optional float fade_out_time = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->fade_out_time(), output);
  }

  // optional float hold_time = 9;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->hold_time(), output);
  }

  // optional float fx_time = 10;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->fx_time(), output);
  }

  // optional string message = 11;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageHudMsg.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageHudMsg)
}

::google::protobuf::uint8* CUserMessageHudMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageHudMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 channel = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->channel(), target);
  }

  // optional float x = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->x(), target);
  }

  // optional float y = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->y(), target);
  }

  // optional fixed32 color1 = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(4, this->color1(), target);
  }

  // optional fixed32 color2 = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(5, this->color2(), target);
  }

  // optional uint32 effect = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->effect(), target);
  }

  // optional float fade_in_time = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->fade_in_time(), target);
  }

  // optional float fade_out_time = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->fade_out_time(), target);
  }

  // optional float hold_time = 9;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->hold_time(), target);
  }

  // optional float fx_time = 10;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->fx_time(), target);
  }

  // optional string message = 11;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageHudMsg.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageHudMsg)
  return target;
}

size_t CUserMessageHudMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageHudMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string message = 11;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional uint32 channel = 1;
    if (has_channel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->channel());
    }

    // optional float x = 2;
    if (has_x()) {
      total_size += 1 + 4;
    }

    // optional float y = 3;
    if (has_y()) {
      total_size += 1 + 4;
    }

    // optional fixed32 color1 = 4;
    if (has_color1()) {
      total_size += 1 + 4;
    }

    // optional fixed32 color2 = 5;
    if (has_color2()) {
      total_size += 1 + 4;
    }

    // optional uint32 effect = 6;
    if (has_effect()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->effect());
    }

    // optional float fade_in_time = 7;
    if (has_fade_in_time()) {
      total_size += 1 + 4;
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional float fade_out_time = 8;
    if (has_fade_out_time()) {
      total_size += 1 + 4;
    }

    // optional float hold_time = 9;
    if (has_hold_time()) {
      total_size += 1 + 4;
    }

    // optional float fx_time = 10;
    if (has_fx_time()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageHudMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageHudMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageHudMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageHudMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageHudMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageHudMsg)
    MergeFrom(*source);
  }
}

void CUserMessageHudMsg::MergeFrom(const CUserMessageHudMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageHudMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      channel_ = from.channel_;
    }
    if (cached_has_bits & 0x00000004u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000008u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000010u) {
      color1_ = from.color1_;
    }
    if (cached_has_bits & 0x00000020u) {
      color2_ = from.color2_;
    }
    if (cached_has_bits & 0x00000040u) {
      effect_ = from.effect_;
    }
    if (cached_has_bits & 0x00000080u) {
      fade_in_time_ = from.fade_in_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      fade_out_time_ = from.fade_out_time_;
    }
    if (cached_has_bits & 0x00000200u) {
      hold_time_ = from.hold_time_;
    }
    if (cached_has_bits & 0x00000400u) {
      fx_time_ = from.fx_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMessageHudMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageHudMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageHudMsg::CopyFrom(const CUserMessageHudMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageHudMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageHudMsg::IsInitialized() const {
  return true;
}

void CUserMessageHudMsg::Swap(CUserMessageHudMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageHudMsg::InternalSwap(CUserMessageHudMsg* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(channel_, other->channel_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(color1_, other->color1_);
  swap(color2_, other->color2_);
  swap(effect_, other->effect_);
  swap(fade_in_time_, other->fade_in_time_);
  swap(fade_out_time_, other->fade_out_time_);
  swap(hold_time_, other->hold_time_);
  swap(fx_time_, other->fx_time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageHudMsg::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageHudText::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageHudText::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageHudText::CUserMessageHudText()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageHudText.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageHudText)
}
CUserMessageHudText::CUserMessageHudText(const CUserMessageHudText& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:CUserMessageHudText)
}

void CUserMessageHudText::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CUserMessageHudText::~CUserMessageHudText() {
  // @@protoc_insertion_point(destructor:CUserMessageHudText)
  SharedDtor();
}

void CUserMessageHudText::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CUserMessageHudText::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageHudText::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageHudText& CUserMessageHudText::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageHudText.base);
  return *internal_default_instance();
}


void CUserMessageHudText::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageHudText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    message_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageHudText::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageHudText)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CUserMessageHudText.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageHudText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageHudText)
  return false;
#undef DO_
}

void CUserMessageHudText::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageHudText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageHudText.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageHudText)
}

::google::protobuf::uint8* CUserMessageHudText::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageHudText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageHudText.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageHudText)
  return target;
}

size_t CUserMessageHudText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageHudText)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string message = 1;
  if (has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageHudText::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageHudText)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageHudText* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageHudText>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageHudText)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageHudText)
    MergeFrom(*source);
  }
}

void CUserMessageHudText::MergeFrom(const CUserMessageHudText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageHudText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_message()) {
    set_has_message();
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void CUserMessageHudText::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageHudText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageHudText::CopyFrom(const CUserMessageHudText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageHudText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageHudText::IsInitialized() const {
  return true;
}

void CUserMessageHudText::Swap(CUserMessageHudText* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageHudText::InternalSwap(CUserMessageHudText* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageHudText::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageTextMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageTextMsg::kDestFieldNumber;
const int CUserMessageTextMsg::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageTextMsg::CUserMessageTextMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageTextMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageTextMsg)
}
CUserMessageTextMsg::CUserMessageTextMsg(const CUserMessageTextMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      param_(from.param_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dest_ = from.dest_;
  // @@protoc_insertion_point(copy_constructor:CUserMessageTextMsg)
}

void CUserMessageTextMsg::SharedCtor() {
  dest_ = 0u;
}

CUserMessageTextMsg::~CUserMessageTextMsg() {
  // @@protoc_insertion_point(destructor:CUserMessageTextMsg)
  SharedDtor();
}

void CUserMessageTextMsg::SharedDtor() {
}

void CUserMessageTextMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageTextMsg::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageTextMsg& CUserMessageTextMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageTextMsg.base);
  return *internal_default_instance();
}


void CUserMessageTextMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageTextMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  param_.Clear();
  dest_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageTextMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageTextMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 dest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dest();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string param = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_param()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->param(this->param_size() - 1).data(),
            static_cast<int>(this->param(this->param_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CUserMessageTextMsg.param");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageTextMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageTextMsg)
  return false;
#undef DO_
}

void CUserMessageTextMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageTextMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 dest = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dest(), output);
  }

  // repeated string param = 2;
  for (int i = 0, n = this->param_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param(i).data(), static_cast<int>(this->param(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageTextMsg.param");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->param(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageTextMsg)
}

::google::protobuf::uint8* CUserMessageTextMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageTextMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 dest = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dest(), target);
  }

  // repeated string param = 2;
  for (int i = 0, n = this->param_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param(i).data(), static_cast<int>(this->param(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageTextMsg.param");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->param(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageTextMsg)
  return target;
}

size_t CUserMessageTextMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageTextMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string param = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->param_size());
  for (int i = 0, n = this->param_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->param(i));
  }

  // optional uint32 dest = 1;
  if (has_dest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dest());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageTextMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageTextMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageTextMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageTextMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageTextMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageTextMsg)
    MergeFrom(*source);
  }
}

void CUserMessageTextMsg::MergeFrom(const CUserMessageTextMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageTextMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  param_.MergeFrom(from.param_);
  if (from.has_dest()) {
    set_dest(from.dest());
  }
}

void CUserMessageTextMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageTextMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageTextMsg::CopyFrom(const CUserMessageTextMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageTextMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageTextMsg::IsInitialized() const {
  return true;
}

void CUserMessageTextMsg::Swap(CUserMessageTextMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageTextMsg::InternalSwap(CUserMessageTextMsg* other) {
  using std::swap;
  param_.InternalSwap(CastToBase(&other->param_));
  swap(dest_, other->dest_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageTextMsg::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageGameTitle::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageGameTitle::CUserMessageGameTitle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageGameTitle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageGameTitle)
}
CUserMessageGameTitle::CUserMessageGameTitle(const CUserMessageGameTitle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CUserMessageGameTitle)
}

void CUserMessageGameTitle::SharedCtor() {
}

CUserMessageGameTitle::~CUserMessageGameTitle() {
  // @@protoc_insertion_point(destructor:CUserMessageGameTitle)
  SharedDtor();
}

void CUserMessageGameTitle::SharedDtor() {
}

void CUserMessageGameTitle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageGameTitle::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageGameTitle& CUserMessageGameTitle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageGameTitle.base);
  return *internal_default_instance();
}


void CUserMessageGameTitle::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageGameTitle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageGameTitle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageGameTitle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageGameTitle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageGameTitle)
  return false;
#undef DO_
}

void CUserMessageGameTitle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageGameTitle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageGameTitle)
}

::google::protobuf::uint8* CUserMessageGameTitle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageGameTitle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageGameTitle)
  return target;
}

size_t CUserMessageGameTitle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageGameTitle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageGameTitle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageGameTitle)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageGameTitle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageGameTitle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageGameTitle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageGameTitle)
    MergeFrom(*source);
  }
}

void CUserMessageGameTitle::MergeFrom(const CUserMessageGameTitle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageGameTitle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CUserMessageGameTitle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageGameTitle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageGameTitle::CopyFrom(const CUserMessageGameTitle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageGameTitle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageGameTitle::IsInitialized() const {
  return true;
}

void CUserMessageGameTitle::Swap(CUserMessageGameTitle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageGameTitle::InternalSwap(CUserMessageGameTitle* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageGameTitle::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageResetHUD::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageResetHUD::CUserMessageResetHUD()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageResetHUD.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageResetHUD)
}
CUserMessageResetHUD::CUserMessageResetHUD(const CUserMessageResetHUD& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CUserMessageResetHUD)
}

void CUserMessageResetHUD::SharedCtor() {
}

CUserMessageResetHUD::~CUserMessageResetHUD() {
  // @@protoc_insertion_point(destructor:CUserMessageResetHUD)
  SharedDtor();
}

void CUserMessageResetHUD::SharedDtor() {
}

void CUserMessageResetHUD::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageResetHUD::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageResetHUD& CUserMessageResetHUD::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageResetHUD.base);
  return *internal_default_instance();
}


void CUserMessageResetHUD::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageResetHUD)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageResetHUD::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageResetHUD)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageResetHUD)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageResetHUD)
  return false;
#undef DO_
}

void CUserMessageResetHUD::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageResetHUD)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageResetHUD)
}

::google::protobuf::uint8* CUserMessageResetHUD::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageResetHUD)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageResetHUD)
  return target;
}

size_t CUserMessageResetHUD::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageResetHUD)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageResetHUD::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageResetHUD)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageResetHUD* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageResetHUD>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageResetHUD)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageResetHUD)
    MergeFrom(*source);
  }
}

void CUserMessageResetHUD::MergeFrom(const CUserMessageResetHUD& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageResetHUD)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CUserMessageResetHUD::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageResetHUD)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageResetHUD::CopyFrom(const CUserMessageResetHUD& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageResetHUD)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageResetHUD::IsInitialized() const {
  return true;
}

void CUserMessageResetHUD::Swap(CUserMessageResetHUD* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageResetHUD::InternalSwap(CUserMessageResetHUD* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageResetHUD::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageSendAudio::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageSendAudio::kSoundnameFieldNumber;
const int CUserMessageSendAudio::kStopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageSendAudio::CUserMessageSendAudio()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageSendAudio.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageSendAudio)
}
CUserMessageSendAudio::CUserMessageSendAudio(const CUserMessageSendAudio& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  soundname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_soundname()) {
    soundname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.soundname_);
  }
  stop_ = from.stop_;
  // @@protoc_insertion_point(copy_constructor:CUserMessageSendAudio)
}

void CUserMessageSendAudio::SharedCtor() {
  soundname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stop_ = false;
}

CUserMessageSendAudio::~CUserMessageSendAudio() {
  // @@protoc_insertion_point(destructor:CUserMessageSendAudio)
  SharedDtor();
}

void CUserMessageSendAudio::SharedDtor() {
  soundname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CUserMessageSendAudio::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageSendAudio::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageSendAudio& CUserMessageSendAudio::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageSendAudio.base);
  return *internal_default_instance();
}


void CUserMessageSendAudio::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageSendAudio)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    soundname_.ClearNonDefaultToEmptyNoArena();
  }
  stop_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageSendAudio::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageSendAudio)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string soundname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_soundname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->soundname().data(), static_cast<int>(this->soundname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CUserMessageSendAudio.soundname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool stop = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_stop();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageSendAudio)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageSendAudio)
  return false;
#undef DO_
}

void CUserMessageSendAudio::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageSendAudio)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string soundname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->soundname().data(), static_cast<int>(this->soundname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageSendAudio.soundname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->soundname(), output);
  }

  // optional bool stop = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->stop(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageSendAudio)
}

::google::protobuf::uint8* CUserMessageSendAudio::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageSendAudio)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string soundname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->soundname().data(), static_cast<int>(this->soundname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageSendAudio.soundname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->soundname(), target);
  }

  // optional bool stop = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->stop(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageSendAudio)
  return target;
}

size_t CUserMessageSendAudio::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageSendAudio)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string soundname = 1;
    if (has_soundname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->soundname());
    }

    // optional bool stop = 2;
    if (has_stop()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageSendAudio::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageSendAudio)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageSendAudio* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageSendAudio>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageSendAudio)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageSendAudio)
    MergeFrom(*source);
  }
}

void CUserMessageSendAudio::MergeFrom(const CUserMessageSendAudio& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageSendAudio)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_soundname();
      soundname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.soundname_);
    }
    if (cached_has_bits & 0x00000002u) {
      stop_ = from.stop_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMessageSendAudio::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageSendAudio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageSendAudio::CopyFrom(const CUserMessageSendAudio& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageSendAudio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageSendAudio::IsInitialized() const {
  return true;
}

void CUserMessageSendAudio::Swap(CUserMessageSendAudio* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageSendAudio::InternalSwap(CUserMessageSendAudio* other) {
  using std::swap;
  soundname_.Swap(&other->soundname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(stop_, other->stop_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageSendAudio::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageAudioParameter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageAudioParameter::kParameterTypeFieldNumber;
const int CUserMessageAudioParameter::kNameHashCodeFieldNumber;
const int CUserMessageAudioParameter::kValueFieldNumber;
const int CUserMessageAudioParameter::kIntValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageAudioParameter::CUserMessageAudioParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageAudioParameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageAudioParameter)
}
CUserMessageAudioParameter::CUserMessageAudioParameter(const CUserMessageAudioParameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&parameter_type_, &from.parameter_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&int_value_) -
    reinterpret_cast<char*>(&parameter_type_)) + sizeof(int_value_));
  // @@protoc_insertion_point(copy_constructor:CUserMessageAudioParameter)
}

void CUserMessageAudioParameter::SharedCtor() {
  ::memset(&parameter_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&int_value_) -
      reinterpret_cast<char*>(&parameter_type_)) + sizeof(int_value_));
}

CUserMessageAudioParameter::~CUserMessageAudioParameter() {
  // @@protoc_insertion_point(destructor:CUserMessageAudioParameter)
  SharedDtor();
}

void CUserMessageAudioParameter::SharedDtor() {
}

void CUserMessageAudioParameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageAudioParameter::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageAudioParameter& CUserMessageAudioParameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageAudioParameter.base);
  return *internal_default_instance();
}


void CUserMessageAudioParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageAudioParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&parameter_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&int_value_) -
        reinterpret_cast<char*>(&parameter_type_)) + sizeof(int_value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageAudioParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageAudioParameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 parameter_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_parameter_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parameter_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 name_hash_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_name_hash_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &name_hash_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 int_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_int_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &int_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageAudioParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageAudioParameter)
  return false;
#undef DO_
}

void CUserMessageAudioParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageAudioParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 parameter_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->parameter_type(), output);
  }

  // optional uint32 name_hash_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->name_hash_code(), output);
  }

  // optional float value = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->value(), output);
  }

  // optional uint32 int_value = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->int_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageAudioParameter)
}

::google::protobuf::uint8* CUserMessageAudioParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageAudioParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 parameter_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->parameter_type(), target);
  }

  // optional uint32 name_hash_code = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->name_hash_code(), target);
  }

  // optional float value = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->value(), target);
  }

  // optional uint32 int_value = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->int_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageAudioParameter)
  return target;
}

size_t CUserMessageAudioParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageAudioParameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 parameter_type = 1;
    if (has_parameter_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->parameter_type());
    }

    // optional uint32 name_hash_code = 2;
    if (has_name_hash_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->name_hash_code());
    }

    // optional float value = 3;
    if (has_value()) {
      total_size += 1 + 4;
    }

    // optional uint32 int_value = 4;
    if (has_int_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->int_value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageAudioParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageAudioParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageAudioParameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageAudioParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageAudioParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageAudioParameter)
    MergeFrom(*source);
  }
}

void CUserMessageAudioParameter::MergeFrom(const CUserMessageAudioParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageAudioParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      parameter_type_ = from.parameter_type_;
    }
    if (cached_has_bits & 0x00000002u) {
      name_hash_code_ = from.name_hash_code_;
    }
    if (cached_has_bits & 0x00000004u) {
      value_ = from.value_;
    }
    if (cached_has_bits & 0x00000008u) {
      int_value_ = from.int_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMessageAudioParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageAudioParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageAudioParameter::CopyFrom(const CUserMessageAudioParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageAudioParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageAudioParameter::IsInitialized() const {
  return true;
}

void CUserMessageAudioParameter::Swap(CUserMessageAudioParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageAudioParameter::InternalSwap(CUserMessageAudioParameter* other) {
  using std::swap;
  swap(parameter_type_, other->parameter_type_);
  swap(name_hash_code_, other->name_hash_code_);
  swap(value_, other->value_);
  swap(int_value_, other->int_value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageAudioParameter::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageVoiceMask::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageVoiceMask::kGamerulesMasksFieldNumber;
const int CUserMessageVoiceMask::kBanMasksFieldNumber;
const int CUserMessageVoiceMask::kModEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageVoiceMask::CUserMessageVoiceMask()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageVoiceMask.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageVoiceMask)
}
CUserMessageVoiceMask::CUserMessageVoiceMask(const CUserMessageVoiceMask& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      gamerules_masks_(from.gamerules_masks_),
      ban_masks_(from.ban_masks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mod_enable_ = from.mod_enable_;
  // @@protoc_insertion_point(copy_constructor:CUserMessageVoiceMask)
}

void CUserMessageVoiceMask::SharedCtor() {
  mod_enable_ = false;
}

CUserMessageVoiceMask::~CUserMessageVoiceMask() {
  // @@protoc_insertion_point(destructor:CUserMessageVoiceMask)
  SharedDtor();
}

void CUserMessageVoiceMask::SharedDtor() {
}

void CUserMessageVoiceMask::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageVoiceMask::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageVoiceMask& CUserMessageVoiceMask::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageVoiceMask.base);
  return *internal_default_instance();
}


void CUserMessageVoiceMask::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageVoiceMask)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gamerules_masks_.Clear();
  ban_masks_.Clear();
  mod_enable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageVoiceMask::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageVoiceMask)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 gamerules_masks = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_gamerules_masks())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_gamerules_masks())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 ban_masks = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_ban_masks())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_ban_masks())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool mod_enable = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_mod_enable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &mod_enable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageVoiceMask)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageVoiceMask)
  return false;
#undef DO_
}

void CUserMessageVoiceMask::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageVoiceMask)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 gamerules_masks = 1;
  for (int i = 0, n = this->gamerules_masks_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->gamerules_masks(i), output);
  }

  // repeated uint32 ban_masks = 2;
  for (int i = 0, n = this->ban_masks_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->ban_masks(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool mod_enable = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->mod_enable(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageVoiceMask)
}

::google::protobuf::uint8* CUserMessageVoiceMask::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageVoiceMask)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 gamerules_masks = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->gamerules_masks_, target);

  // repeated uint32 ban_masks = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->ban_masks_, target);

  cached_has_bits = _has_bits_[0];
  // optional bool mod_enable = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->mod_enable(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageVoiceMask)
  return target;
}

size_t CUserMessageVoiceMask::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageVoiceMask)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 gamerules_masks = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->gamerules_masks_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->gamerules_masks_size());
    total_size += data_size;
  }

  // repeated uint32 ban_masks = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->ban_masks_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->ban_masks_size());
    total_size += data_size;
  }

  // optional bool mod_enable = 3;
  if (has_mod_enable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageVoiceMask::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageVoiceMask)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageVoiceMask* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageVoiceMask>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageVoiceMask)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageVoiceMask)
    MergeFrom(*source);
  }
}

void CUserMessageVoiceMask::MergeFrom(const CUserMessageVoiceMask& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageVoiceMask)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gamerules_masks_.MergeFrom(from.gamerules_masks_);
  ban_masks_.MergeFrom(from.ban_masks_);
  if (from.has_mod_enable()) {
    set_mod_enable(from.mod_enable());
  }
}

void CUserMessageVoiceMask::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageVoiceMask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageVoiceMask::CopyFrom(const CUserMessageVoiceMask& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageVoiceMask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageVoiceMask::IsInitialized() const {
  return true;
}

void CUserMessageVoiceMask::Swap(CUserMessageVoiceMask* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageVoiceMask::InternalSwap(CUserMessageVoiceMask* other) {
  using std::swap;
  gamerules_masks_.InternalSwap(&other->gamerules_masks_);
  ban_masks_.InternalSwap(&other->ban_masks_);
  swap(mod_enable_, other->mod_enable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageVoiceMask::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageRequestState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageRequestState::CUserMessageRequestState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageRequestState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageRequestState)
}
CUserMessageRequestState::CUserMessageRequestState(const CUserMessageRequestState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CUserMessageRequestState)
}

void CUserMessageRequestState::SharedCtor() {
}

CUserMessageRequestState::~CUserMessageRequestState() {
  // @@protoc_insertion_point(destructor:CUserMessageRequestState)
  SharedDtor();
}

void CUserMessageRequestState::SharedDtor() {
}

void CUserMessageRequestState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageRequestState::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageRequestState& CUserMessageRequestState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageRequestState.base);
  return *internal_default_instance();
}


void CUserMessageRequestState::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageRequestState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageRequestState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageRequestState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageRequestState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageRequestState)
  return false;
#undef DO_
}

void CUserMessageRequestState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageRequestState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageRequestState)
}

::google::protobuf::uint8* CUserMessageRequestState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageRequestState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageRequestState)
  return target;
}

size_t CUserMessageRequestState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageRequestState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageRequestState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageRequestState)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageRequestState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageRequestState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageRequestState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageRequestState)
    MergeFrom(*source);
  }
}

void CUserMessageRequestState::MergeFrom(const CUserMessageRequestState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageRequestState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CUserMessageRequestState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageRequestState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageRequestState::CopyFrom(const CUserMessageRequestState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageRequestState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageRequestState::IsInitialized() const {
  return true;
}

void CUserMessageRequestState::Swap(CUserMessageRequestState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageRequestState::InternalSwap(CUserMessageRequestState* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageRequestState::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageHintText::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageHintText::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageHintText::CUserMessageHintText()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageHintText.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageHintText)
}
CUserMessageHintText::CUserMessageHintText(const CUserMessageHintText& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:CUserMessageHintText)
}

void CUserMessageHintText::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CUserMessageHintText::~CUserMessageHintText() {
  // @@protoc_insertion_point(destructor:CUserMessageHintText)
  SharedDtor();
}

void CUserMessageHintText::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CUserMessageHintText::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageHintText::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageHintText& CUserMessageHintText::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageHintText.base);
  return *internal_default_instance();
}


void CUserMessageHintText::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageHintText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    message_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageHintText::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageHintText)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CUserMessageHintText.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageHintText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageHintText)
  return false;
#undef DO_
}

void CUserMessageHintText::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageHintText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageHintText.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageHintText)
}

::google::protobuf::uint8* CUserMessageHintText::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageHintText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageHintText.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageHintText)
  return target;
}

size_t CUserMessageHintText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageHintText)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string message = 1;
  if (has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageHintText::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageHintText)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageHintText* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageHintText>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageHintText)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageHintText)
    MergeFrom(*source);
  }
}

void CUserMessageHintText::MergeFrom(const CUserMessageHintText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageHintText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_message()) {
    set_has_message();
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void CUserMessageHintText::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageHintText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageHintText::CopyFrom(const CUserMessageHintText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageHintText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageHintText::IsInitialized() const {
  return true;
}

void CUserMessageHintText::Swap(CUserMessageHintText* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageHintText::InternalSwap(CUserMessageHintText* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageHintText::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageKeyHintText::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageKeyHintText::kMessagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageKeyHintText::CUserMessageKeyHintText()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageKeyHintText.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageKeyHintText)
}
CUserMessageKeyHintText::CUserMessageKeyHintText(const CUserMessageKeyHintText& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      messages_(from.messages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CUserMessageKeyHintText)
}

void CUserMessageKeyHintText::SharedCtor() {
}

CUserMessageKeyHintText::~CUserMessageKeyHintText() {
  // @@protoc_insertion_point(destructor:CUserMessageKeyHintText)
  SharedDtor();
}

void CUserMessageKeyHintText::SharedDtor() {
}

void CUserMessageKeyHintText::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageKeyHintText::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageKeyHintText& CUserMessageKeyHintText::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageKeyHintText.base);
  return *internal_default_instance();
}


void CUserMessageKeyHintText::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageKeyHintText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  messages_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageKeyHintText::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageKeyHintText)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string messages = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_messages()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->messages(this->messages_size() - 1).data(),
            static_cast<int>(this->messages(this->messages_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CUserMessageKeyHintText.messages");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageKeyHintText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageKeyHintText)
  return false;
#undef DO_
}

void CUserMessageKeyHintText::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageKeyHintText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string messages = 1;
  for (int i = 0, n = this->messages_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messages(i).data(), static_cast<int>(this->messages(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageKeyHintText.messages");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->messages(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageKeyHintText)
}

::google::protobuf::uint8* CUserMessageKeyHintText::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageKeyHintText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string messages = 1;
  for (int i = 0, n = this->messages_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messages(i).data(), static_cast<int>(this->messages(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageKeyHintText.messages");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->messages(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageKeyHintText)
  return target;
}

size_t CUserMessageKeyHintText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageKeyHintText)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string messages = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->messages_size());
  for (int i = 0, n = this->messages_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->messages(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageKeyHintText::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageKeyHintText)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageKeyHintText* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageKeyHintText>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageKeyHintText)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageKeyHintText)
    MergeFrom(*source);
  }
}

void CUserMessageKeyHintText::MergeFrom(const CUserMessageKeyHintText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageKeyHintText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  messages_.MergeFrom(from.messages_);
}

void CUserMessageKeyHintText::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageKeyHintText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageKeyHintText::CopyFrom(const CUserMessageKeyHintText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageKeyHintText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageKeyHintText::IsInitialized() const {
  return true;
}

void CUserMessageKeyHintText::Swap(CUserMessageKeyHintText* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageKeyHintText::InternalSwap(CUserMessageKeyHintText* other) {
  using std::swap;
  messages_.InternalSwap(CastToBase(&other->messages_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageKeyHintText::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageVoiceSubtitle::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageVoiceSubtitle::kPlayerFieldNumber;
const int CUserMessageVoiceSubtitle::kMenuFieldNumber;
const int CUserMessageVoiceSubtitle::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageVoiceSubtitle::CUserMessageVoiceSubtitle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageVoiceSubtitle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageVoiceSubtitle)
}
CUserMessageVoiceSubtitle::CUserMessageVoiceSubtitle(const CUserMessageVoiceSubtitle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_, &from.player_,
    static_cast<size_t>(reinterpret_cast<char*>(&item_) -
    reinterpret_cast<char*>(&player_)) + sizeof(item_));
  // @@protoc_insertion_point(copy_constructor:CUserMessageVoiceSubtitle)
}

void CUserMessageVoiceSubtitle::SharedCtor() {
  ::memset(&player_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&item_) -
      reinterpret_cast<char*>(&player_)) + sizeof(item_));
}

CUserMessageVoiceSubtitle::~CUserMessageVoiceSubtitle() {
  // @@protoc_insertion_point(destructor:CUserMessageVoiceSubtitle)
  SharedDtor();
}

void CUserMessageVoiceSubtitle::SharedDtor() {
}

void CUserMessageVoiceSubtitle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageVoiceSubtitle::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageVoiceSubtitle& CUserMessageVoiceSubtitle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageVoiceSubtitle.base);
  return *internal_default_instance();
}


void CUserMessageVoiceSubtitle::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageVoiceSubtitle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&player_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&item_) -
        reinterpret_cast<char*>(&player_)) + sizeof(item_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageVoiceSubtitle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageVoiceSubtitle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 player = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 menu = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_menu();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &menu_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 item = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_item();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageVoiceSubtitle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageVoiceSubtitle)
  return false;
#undef DO_
}

void CUserMessageVoiceSubtitle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageVoiceSubtitle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 player = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->player(), output);
  }

  // optional int32 menu = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->menu(), output);
  }

  // optional int32 item = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->item(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageVoiceSubtitle)
}

::google::protobuf::uint8* CUserMessageVoiceSubtitle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageVoiceSubtitle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 player = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->player(), target);
  }

  // optional int32 menu = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->menu(), target);
  }

  // optional int32 item = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->item(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageVoiceSubtitle)
  return target;
}

size_t CUserMessageVoiceSubtitle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageVoiceSubtitle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 player = 1;
    if (has_player()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player());
    }

    // optional int32 menu = 2;
    if (has_menu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->menu());
    }

    // optional int32 item = 3;
    if (has_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageVoiceSubtitle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageVoiceSubtitle)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageVoiceSubtitle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageVoiceSubtitle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageVoiceSubtitle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageVoiceSubtitle)
    MergeFrom(*source);
  }
}

void CUserMessageVoiceSubtitle::MergeFrom(const CUserMessageVoiceSubtitle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageVoiceSubtitle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      player_ = from.player_;
    }
    if (cached_has_bits & 0x00000002u) {
      menu_ = from.menu_;
    }
    if (cached_has_bits & 0x00000004u) {
      item_ = from.item_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMessageVoiceSubtitle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageVoiceSubtitle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageVoiceSubtitle::CopyFrom(const CUserMessageVoiceSubtitle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageVoiceSubtitle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageVoiceSubtitle::IsInitialized() const {
  return true;
}

void CUserMessageVoiceSubtitle::Swap(CUserMessageVoiceSubtitle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageVoiceSubtitle::InternalSwap(CUserMessageVoiceSubtitle* other) {
  using std::swap;
  swap(player_, other->player_);
  swap(menu_, other->menu_);
  swap(item_, other->item_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageVoiceSubtitle::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageVGUIMenu_Keys::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageVGUIMenu_Keys::kNameFieldNumber;
const int CUserMessageVGUIMenu_Keys::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageVGUIMenu_Keys::CUserMessageVGUIMenu_Keys()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageVGUIMenu_Keys.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageVGUIMenu.Keys)
}
CUserMessageVGUIMenu_Keys::CUserMessageVGUIMenu_Keys(const CUserMessageVGUIMenu_Keys& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:CUserMessageVGUIMenu.Keys)
}

void CUserMessageVGUIMenu_Keys::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CUserMessageVGUIMenu_Keys::~CUserMessageVGUIMenu_Keys() {
  // @@protoc_insertion_point(destructor:CUserMessageVGUIMenu.Keys)
  SharedDtor();
}

void CUserMessageVGUIMenu_Keys::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CUserMessageVGUIMenu_Keys::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageVGUIMenu_Keys::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageVGUIMenu_Keys& CUserMessageVGUIMenu_Keys::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageVGUIMenu_Keys.base);
  return *internal_default_instance();
}


void CUserMessageVGUIMenu_Keys::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageVGUIMenu.Keys)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageVGUIMenu_Keys::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageVGUIMenu.Keys)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CUserMessageVGUIMenu.Keys.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CUserMessageVGUIMenu.Keys.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageVGUIMenu.Keys)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageVGUIMenu.Keys)
  return false;
#undef DO_
}

void CUserMessageVGUIMenu_Keys::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageVGUIMenu.Keys)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageVGUIMenu.Keys.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageVGUIMenu.Keys.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageVGUIMenu.Keys)
}

::google::protobuf::uint8* CUserMessageVGUIMenu_Keys::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageVGUIMenu.Keys)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageVGUIMenu.Keys.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageVGUIMenu.Keys.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageVGUIMenu.Keys)
  return target;
}

size_t CUserMessageVGUIMenu_Keys::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageVGUIMenu.Keys)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageVGUIMenu_Keys::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageVGUIMenu.Keys)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageVGUIMenu_Keys* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageVGUIMenu_Keys>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageVGUIMenu.Keys)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageVGUIMenu.Keys)
    MergeFrom(*source);
  }
}

void CUserMessageVGUIMenu_Keys::MergeFrom(const CUserMessageVGUIMenu_Keys& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageVGUIMenu.Keys)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void CUserMessageVGUIMenu_Keys::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageVGUIMenu.Keys)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageVGUIMenu_Keys::CopyFrom(const CUserMessageVGUIMenu_Keys& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageVGUIMenu.Keys)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageVGUIMenu_Keys::IsInitialized() const {
  return true;
}

void CUserMessageVGUIMenu_Keys::Swap(CUserMessageVGUIMenu_Keys* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageVGUIMenu_Keys::InternalSwap(CUserMessageVGUIMenu_Keys* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageVGUIMenu_Keys::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageVGUIMenu::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageVGUIMenu::kNameFieldNumber;
const int CUserMessageVGUIMenu::kShowFieldNumber;
const int CUserMessageVGUIMenu::kKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageVGUIMenu::CUserMessageVGUIMenu()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageVGUIMenu.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageVGUIMenu)
}
CUserMessageVGUIMenu::CUserMessageVGUIMenu(const CUserMessageVGUIMenu& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  show_ = from.show_;
  // @@protoc_insertion_point(copy_constructor:CUserMessageVGUIMenu)
}

void CUserMessageVGUIMenu::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  show_ = false;
}

CUserMessageVGUIMenu::~CUserMessageVGUIMenu() {
  // @@protoc_insertion_point(destructor:CUserMessageVGUIMenu)
  SharedDtor();
}

void CUserMessageVGUIMenu::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CUserMessageVGUIMenu::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageVGUIMenu::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageVGUIMenu& CUserMessageVGUIMenu::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageVGUIMenu.base);
  return *internal_default_instance();
}


void CUserMessageVGUIMenu::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageVGUIMenu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  show_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageVGUIMenu::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageVGUIMenu)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CUserMessageVGUIMenu.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool show = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_show();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CUserMessageVGUIMenu.Keys keys = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageVGUIMenu)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageVGUIMenu)
  return false;
#undef DO_
}

void CUserMessageVGUIMenu::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageVGUIMenu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageVGUIMenu.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional bool show = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->show(), output);
  }

  // repeated .CUserMessageVGUIMenu.Keys keys = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->keys(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageVGUIMenu)
}

::google::protobuf::uint8* CUserMessageVGUIMenu::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageVGUIMenu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageVGUIMenu.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional bool show = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->show(), target);
  }

  // repeated .CUserMessageVGUIMenu.Keys keys = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->keys(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageVGUIMenu)
  return target;
}

size_t CUserMessageVGUIMenu::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageVGUIMenu)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CUserMessageVGUIMenu.Keys keys = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->keys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->keys(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional bool show = 2;
    if (has_show()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageVGUIMenu::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageVGUIMenu)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageVGUIMenu* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageVGUIMenu>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageVGUIMenu)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageVGUIMenu)
    MergeFrom(*source);
  }
}

void CUserMessageVGUIMenu::MergeFrom(const CUserMessageVGUIMenu& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageVGUIMenu)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      show_ = from.show_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMessageVGUIMenu::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageVGUIMenu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageVGUIMenu::CopyFrom(const CUserMessageVGUIMenu& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageVGUIMenu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageVGUIMenu::IsInitialized() const {
  return true;
}

void CUserMessageVGUIMenu::Swap(CUserMessageVGUIMenu* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageVGUIMenu::InternalSwap(CUserMessageVGUIMenu* other) {
  using std::swap;
  CastToBase(&keys_)->InternalSwap(CastToBase(&other->keys_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(show_, other->show_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageVGUIMenu::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageRumble::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageRumble::kIndexFieldNumber;
const int CUserMessageRumble::kDataFieldNumber;
const int CUserMessageRumble::kFlagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageRumble::CUserMessageRumble()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageRumble.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageRumble)
}
CUserMessageRumble::CUserMessageRumble(const CUserMessageRumble& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&index_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:CUserMessageRumble)
}

void CUserMessageRumble::SharedCtor() {
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&index_)) + sizeof(flags_));
}

CUserMessageRumble::~CUserMessageRumble() {
  // @@protoc_insertion_point(destructor:CUserMessageRumble)
  SharedDtor();
}

void CUserMessageRumble::SharedDtor() {
}

void CUserMessageRumble::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageRumble::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageRumble& CUserMessageRumble::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageRumble.base);
  return *internal_default_instance();
}


void CUserMessageRumble::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageRumble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&flags_) -
        reinterpret_cast<char*>(&index_)) + sizeof(flags_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageRumble::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageRumble)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 flags = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageRumble)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageRumble)
  return false;
#undef DO_
}

void CUserMessageRumble::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageRumble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 index = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // optional int32 data = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->data(), output);
  }

  // optional int32 flags = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->flags(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageRumble)
}

::google::protobuf::uint8* CUserMessageRumble::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageRumble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // optional int32 data = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->data(), target);
  }

  // optional int32 flags = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->flags(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageRumble)
  return target;
}

size_t CUserMessageRumble::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageRumble)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }

    // optional int32 data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->data());
    }

    // optional int32 flags = 3;
    if (has_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flags());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageRumble::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageRumble)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageRumble* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageRumble>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageRumble)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageRumble)
    MergeFrom(*source);
  }
}

void CUserMessageRumble::MergeFrom(const CUserMessageRumble& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageRumble)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      index_ = from.index_;
    }
    if (cached_has_bits & 0x00000002u) {
      data_ = from.data_;
    }
    if (cached_has_bits & 0x00000004u) {
      flags_ = from.flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMessageRumble::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageRumble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageRumble::CopyFrom(const CUserMessageRumble& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageRumble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageRumble::IsInitialized() const {
  return true;
}

void CUserMessageRumble::Swap(CUserMessageRumble* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageRumble::InternalSwap(CUserMessageRumble* other) {
  using std::swap;
  swap(index_, other->index_);
  swap(data_, other->data_);
  swap(flags_, other->flags_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageRumble::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageTrain::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageTrain::kPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageTrain::CUserMessageTrain()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageTrain.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageTrain)
}
CUserMessageTrain::CUserMessageTrain(const CUserMessageTrain& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  position_ = from.position_;
  // @@protoc_insertion_point(copy_constructor:CUserMessageTrain)
}

void CUserMessageTrain::SharedCtor() {
  position_ = 0u;
}

CUserMessageTrain::~CUserMessageTrain() {
  // @@protoc_insertion_point(destructor:CUserMessageTrain)
  SharedDtor();
}

void CUserMessageTrain::SharedDtor() {
}

void CUserMessageTrain::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageTrain::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageTrain& CUserMessageTrain::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageTrain.base);
  return *internal_default_instance();
}


void CUserMessageTrain::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageTrain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  position_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageTrain::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageTrain)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 position = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_position();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageTrain)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageTrain)
  return false;
#undef DO_
}

void CUserMessageTrain::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageTrain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 position = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->position(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageTrain)
}

::google::protobuf::uint8* CUserMessageTrain::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageTrain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 position = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->position(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageTrain)
  return target;
}

size_t CUserMessageTrain::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageTrain)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 position = 1;
  if (has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->position());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageTrain::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageTrain)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageTrain* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageTrain>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageTrain)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageTrain)
    MergeFrom(*source);
  }
}

void CUserMessageTrain::MergeFrom(const CUserMessageTrain& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageTrain)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    set_position(from.position());
  }
}

void CUserMessageTrain::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageTrain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageTrain::CopyFrom(const CUserMessageTrain& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageTrain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageTrain::IsInitialized() const {
  return true;
}

void CUserMessageTrain::Swap(CUserMessageTrain* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageTrain::InternalSwap(CUserMessageTrain* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageTrain::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageSayTextChannel::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageSayTextChannel::kPlayerFieldNumber;
const int CUserMessageSayTextChannel::kChannelFieldNumber;
const int CUserMessageSayTextChannel::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageSayTextChannel::CUserMessageSayTextChannel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageSayTextChannel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageSayTextChannel)
}
CUserMessageSayTextChannel::CUserMessageSayTextChannel(const CUserMessageSayTextChannel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  ::memcpy(&player_, &from.player_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel_) -
    reinterpret_cast<char*>(&player_)) + sizeof(channel_));
  // @@protoc_insertion_point(copy_constructor:CUserMessageSayTextChannel)
}

void CUserMessageSayTextChannel::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&player_)) + sizeof(channel_));
}

CUserMessageSayTextChannel::~CUserMessageSayTextChannel() {
  // @@protoc_insertion_point(destructor:CUserMessageSayTextChannel)
  SharedDtor();
}

void CUserMessageSayTextChannel::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CUserMessageSayTextChannel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageSayTextChannel::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageSayTextChannel& CUserMessageSayTextChannel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageSayTextChannel.base);
  return *internal_default_instance();
}


void CUserMessageSayTextChannel::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageSayTextChannel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    text_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&player_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&channel_) -
        reinterpret_cast<char*>(&player_)) + sizeof(channel_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageSayTextChannel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageSayTextChannel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 player = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 channel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_channel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string text = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CUserMessageSayTextChannel.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageSayTextChannel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageSayTextChannel)
  return false;
#undef DO_
}

void CUserMessageSayTextChannel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageSayTextChannel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 player = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->player(), output);
  }

  // optional int32 channel = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->channel(), output);
  }

  // optional string text = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageSayTextChannel.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageSayTextChannel)
}

::google::protobuf::uint8* CUserMessageSayTextChannel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageSayTextChannel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 player = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->player(), target);
  }

  // optional int32 channel = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->channel(), target);
  }

  // optional string text = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageSayTextChannel.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageSayTextChannel)
  return target;
}

size_t CUserMessageSayTextChannel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageSayTextChannel)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string text = 3;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional int32 player = 1;
    if (has_player()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player());
    }

    // optional int32 channel = 2;
    if (has_channel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->channel());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageSayTextChannel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageSayTextChannel)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageSayTextChannel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageSayTextChannel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageSayTextChannel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageSayTextChannel)
    MergeFrom(*source);
  }
}

void CUserMessageSayTextChannel::MergeFrom(const CUserMessageSayTextChannel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageSayTextChannel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      player_ = from.player_;
    }
    if (cached_has_bits & 0x00000004u) {
      channel_ = from.channel_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMessageSayTextChannel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageSayTextChannel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageSayTextChannel::CopyFrom(const CUserMessageSayTextChannel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageSayTextChannel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageSayTextChannel::IsInitialized() const {
  return true;
}

void CUserMessageSayTextChannel::Swap(CUserMessageSayTextChannel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageSayTextChannel::InternalSwap(CUserMessageSayTextChannel* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(player_, other->player_);
  swap(channel_, other->channel_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageSayTextChannel::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageColoredText::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageColoredText::kColorFieldNumber;
const int CUserMessageColoredText::kTextFieldNumber;
const int CUserMessageColoredText::kResetFieldNumber;
const int CUserMessageColoredText::kContextPlayerIdFieldNumber;
const int CUserMessageColoredText::kContextValueFieldNumber;
const int CUserMessageColoredText::kContextTeamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageColoredText::CUserMessageColoredText()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageColoredText.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageColoredText)
}
CUserMessageColoredText::CUserMessageColoredText(const CUserMessageColoredText& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  ::memcpy(&color_, &from.color_,
    static_cast<size_t>(reinterpret_cast<char*>(&context_team_id_) -
    reinterpret_cast<char*>(&color_)) + sizeof(context_team_id_));
  // @@protoc_insertion_point(copy_constructor:CUserMessageColoredText)
}

void CUserMessageColoredText::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&color_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&context_team_id_) -
      reinterpret_cast<char*>(&color_)) + sizeof(context_team_id_));
}

CUserMessageColoredText::~CUserMessageColoredText() {
  // @@protoc_insertion_point(destructor:CUserMessageColoredText)
  SharedDtor();
}

void CUserMessageColoredText::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CUserMessageColoredText::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageColoredText::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageColoredText& CUserMessageColoredText::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageColoredText.base);
  return *internal_default_instance();
}


void CUserMessageColoredText::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageColoredText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    text_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 62u) {
    ::memset(&color_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&context_team_id_) -
        reinterpret_cast<char*>(&color_)) + sizeof(context_team_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageColoredText::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageColoredText)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 color = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_color();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &color_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CUserMessageColoredText.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool reset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_reset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 context_player_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_context_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &context_player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 context_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_context_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &context_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 context_team_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_context_team_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &context_team_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageColoredText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageColoredText)
  return false;
#undef DO_
}

void CUserMessageColoredText::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageColoredText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 color = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->color(), output);
  }

  // optional string text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageColoredText.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  // optional bool reset = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->reset(), output);
  }

  // optional int32 context_player_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->context_player_id(), output);
  }

  // optional int32 context_value = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->context_value(), output);
  }

  // optional int32 context_team_id = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->context_team_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageColoredText)
}

::google::protobuf::uint8* CUserMessageColoredText::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageColoredText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 color = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->color(), target);
  }

  // optional string text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageColoredText.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  // optional bool reset = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->reset(), target);
  }

  // optional int32 context_player_id = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->context_player_id(), target);
  }

  // optional int32 context_value = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->context_value(), target);
  }

  // optional int32 context_team_id = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->context_team_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageColoredText)
  return target;
}

size_t CUserMessageColoredText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageColoredText)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string text = 2;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional uint32 color = 1;
    if (has_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->color());
    }

    // optional bool reset = 3;
    if (has_reset()) {
      total_size += 1 + 1;
    }

    // optional int32 context_player_id = 4;
    if (has_context_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->context_player_id());
    }

    // optional int32 context_value = 5;
    if (has_context_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->context_value());
    }

    // optional int32 context_team_id = 6;
    if (has_context_team_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->context_team_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageColoredText::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageColoredText)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageColoredText* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageColoredText>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageColoredText)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageColoredText)
    MergeFrom(*source);
  }
}

void CUserMessageColoredText::MergeFrom(const CUserMessageColoredText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageColoredText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      color_ = from.color_;
    }
    if (cached_has_bits & 0x00000004u) {
      reset_ = from.reset_;
    }
    if (cached_has_bits & 0x00000008u) {
      context_player_id_ = from.context_player_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      context_value_ = from.context_value_;
    }
    if (cached_has_bits & 0x00000020u) {
      context_team_id_ = from.context_team_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMessageColoredText::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageColoredText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageColoredText::CopyFrom(const CUserMessageColoredText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageColoredText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageColoredText::IsInitialized() const {
  return true;
}

void CUserMessageColoredText::Swap(CUserMessageColoredText* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageColoredText::InternalSwap(CUserMessageColoredText* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(color_, other->color_);
  swap(reset_, other->reset_);
  swap(context_player_id_, other->context_player_id_);
  swap(context_value_, other->context_value_);
  swap(context_team_id_, other->context_team_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageColoredText::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageItemPickup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageItemPickup::kItemnameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageItemPickup::CUserMessageItemPickup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageItemPickup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageItemPickup)
}
CUserMessageItemPickup::CUserMessageItemPickup(const CUserMessageItemPickup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  itemname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_itemname()) {
    itemname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.itemname_);
  }
  // @@protoc_insertion_point(copy_constructor:CUserMessageItemPickup)
}

void CUserMessageItemPickup::SharedCtor() {
  itemname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CUserMessageItemPickup::~CUserMessageItemPickup() {
  // @@protoc_insertion_point(destructor:CUserMessageItemPickup)
  SharedDtor();
}

void CUserMessageItemPickup::SharedDtor() {
  itemname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CUserMessageItemPickup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageItemPickup::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageItemPickup& CUserMessageItemPickup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageItemPickup.base);
  return *internal_default_instance();
}


void CUserMessageItemPickup::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageItemPickup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    itemname_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageItemPickup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageItemPickup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string itemname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_itemname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->itemname().data(), static_cast<int>(this->itemname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CUserMessageItemPickup.itemname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageItemPickup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageItemPickup)
  return false;
#undef DO_
}

void CUserMessageItemPickup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageItemPickup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string itemname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->itemname().data(), static_cast<int>(this->itemname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageItemPickup.itemname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->itemname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageItemPickup)
}

::google::protobuf::uint8* CUserMessageItemPickup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageItemPickup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string itemname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->itemname().data(), static_cast<int>(this->itemname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageItemPickup.itemname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->itemname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageItemPickup)
  return target;
}

size_t CUserMessageItemPickup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageItemPickup)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string itemname = 1;
  if (has_itemname()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->itemname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageItemPickup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageItemPickup)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageItemPickup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageItemPickup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageItemPickup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageItemPickup)
    MergeFrom(*source);
  }
}

void CUserMessageItemPickup::MergeFrom(const CUserMessageItemPickup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageItemPickup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_itemname()) {
    set_has_itemname();
    itemname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.itemname_);
  }
}

void CUserMessageItemPickup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageItemPickup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageItemPickup::CopyFrom(const CUserMessageItemPickup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageItemPickup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageItemPickup::IsInitialized() const {
  return true;
}

void CUserMessageItemPickup::Swap(CUserMessageItemPickup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageItemPickup::InternalSwap(CUserMessageItemPickup* other) {
  using std::swap;
  itemname_.Swap(&other->itemname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageItemPickup::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageAmmoDenied::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageAmmoDenied::kAmmoIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageAmmoDenied::CUserMessageAmmoDenied()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageAmmoDenied.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageAmmoDenied)
}
CUserMessageAmmoDenied::CUserMessageAmmoDenied(const CUserMessageAmmoDenied& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ammo_id_ = from.ammo_id_;
  // @@protoc_insertion_point(copy_constructor:CUserMessageAmmoDenied)
}

void CUserMessageAmmoDenied::SharedCtor() {
  ammo_id_ = 0u;
}

CUserMessageAmmoDenied::~CUserMessageAmmoDenied() {
  // @@protoc_insertion_point(destructor:CUserMessageAmmoDenied)
  SharedDtor();
}

void CUserMessageAmmoDenied::SharedDtor() {
}

void CUserMessageAmmoDenied::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageAmmoDenied::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageAmmoDenied& CUserMessageAmmoDenied::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageAmmoDenied.base);
  return *internal_default_instance();
}


void CUserMessageAmmoDenied::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageAmmoDenied)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ammo_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageAmmoDenied::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageAmmoDenied)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ammo_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ammo_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ammo_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageAmmoDenied)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageAmmoDenied)
  return false;
#undef DO_
}

void CUserMessageAmmoDenied::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageAmmoDenied)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 ammo_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ammo_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageAmmoDenied)
}

::google::protobuf::uint8* CUserMessageAmmoDenied::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageAmmoDenied)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 ammo_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ammo_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageAmmoDenied)
  return target;
}

size_t CUserMessageAmmoDenied::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageAmmoDenied)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 ammo_id = 1;
  if (has_ammo_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ammo_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageAmmoDenied::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageAmmoDenied)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageAmmoDenied* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageAmmoDenied>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageAmmoDenied)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageAmmoDenied)
    MergeFrom(*source);
  }
}

void CUserMessageAmmoDenied::MergeFrom(const CUserMessageAmmoDenied& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageAmmoDenied)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ammo_id()) {
    set_ammo_id(from.ammo_id());
  }
}

void CUserMessageAmmoDenied::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageAmmoDenied)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageAmmoDenied::CopyFrom(const CUserMessageAmmoDenied& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageAmmoDenied)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageAmmoDenied::IsInitialized() const {
  return true;
}

void CUserMessageAmmoDenied::Swap(CUserMessageAmmoDenied* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageAmmoDenied::InternalSwap(CUserMessageAmmoDenied* other) {
  using std::swap;
  swap(ammo_id_, other->ammo_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageAmmoDenied::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageCrosshairAngle::InitAsDefaultInstance() {
  ::_CUserMessageCrosshairAngle_default_instance_._instance.get_mutable()->angcrosshair_ = const_cast< ::CMsgQAngle*>(
      ::CMsgQAngle::internal_default_instance());
}
void CUserMessageCrosshairAngle::clear_angcrosshair() {
  if (angcrosshair_ != NULL) angcrosshair_->Clear();
  clear_has_angcrosshair();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageCrosshairAngle::kAngcrosshairFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageCrosshairAngle::CUserMessageCrosshairAngle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageCrosshairAngle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageCrosshairAngle)
}
CUserMessageCrosshairAngle::CUserMessageCrosshairAngle(const CUserMessageCrosshairAngle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_angcrosshair()) {
    angcrosshair_ = new ::CMsgQAngle(*from.angcrosshair_);
  } else {
    angcrosshair_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CUserMessageCrosshairAngle)
}

void CUserMessageCrosshairAngle::SharedCtor() {
  angcrosshair_ = NULL;
}

CUserMessageCrosshairAngle::~CUserMessageCrosshairAngle() {
  // @@protoc_insertion_point(destructor:CUserMessageCrosshairAngle)
  SharedDtor();
}

void CUserMessageCrosshairAngle::SharedDtor() {
  if (this != internal_default_instance()) delete angcrosshair_;
}

void CUserMessageCrosshairAngle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageCrosshairAngle::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageCrosshairAngle& CUserMessageCrosshairAngle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageCrosshairAngle.base);
  return *internal_default_instance();
}


void CUserMessageCrosshairAngle::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageCrosshairAngle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(angcrosshair_ != NULL);
    angcrosshair_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageCrosshairAngle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageCrosshairAngle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsgQAngle angcrosshair = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_angcrosshair()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageCrosshairAngle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageCrosshairAngle)
  return false;
#undef DO_
}

void CUserMessageCrosshairAngle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageCrosshairAngle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgQAngle angcrosshair = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_angcrosshair(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageCrosshairAngle)
}

::google::protobuf::uint8* CUserMessageCrosshairAngle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageCrosshairAngle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgQAngle angcrosshair = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_angcrosshair(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageCrosshairAngle)
  return target;
}

size_t CUserMessageCrosshairAngle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageCrosshairAngle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .CMsgQAngle angcrosshair = 1;
  if (has_angcrosshair()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *angcrosshair_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageCrosshairAngle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageCrosshairAngle)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageCrosshairAngle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageCrosshairAngle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageCrosshairAngle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageCrosshairAngle)
    MergeFrom(*source);
  }
}

void CUserMessageCrosshairAngle::MergeFrom(const CUserMessageCrosshairAngle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageCrosshairAngle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_angcrosshair()) {
    mutable_angcrosshair()->::CMsgQAngle::MergeFrom(from.angcrosshair());
  }
}

void CUserMessageCrosshairAngle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageCrosshairAngle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageCrosshairAngle::CopyFrom(const CUserMessageCrosshairAngle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageCrosshairAngle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageCrosshairAngle::IsInitialized() const {
  return true;
}

void CUserMessageCrosshairAngle::Swap(CUserMessageCrosshairAngle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageCrosshairAngle::InternalSwap(CUserMessageCrosshairAngle* other) {
  using std::swap;
  swap(angcrosshair_, other->angcrosshair_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageCrosshairAngle::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageShowMenu::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageShowMenu::kValidslotsFieldNumber;
const int CUserMessageShowMenu::kDisplaytimeFieldNumber;
const int CUserMessageShowMenu::kNeedmoreFieldNumber;
const int CUserMessageShowMenu::kMenustringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageShowMenu::CUserMessageShowMenu()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageShowMenu.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageShowMenu)
}
CUserMessageShowMenu::CUserMessageShowMenu(const CUserMessageShowMenu& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  menustring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_menustring()) {
    menustring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.menustring_);
  }
  ::memcpy(&validslots_, &from.validslots_,
    static_cast<size_t>(reinterpret_cast<char*>(&needmore_) -
    reinterpret_cast<char*>(&validslots_)) + sizeof(needmore_));
  // @@protoc_insertion_point(copy_constructor:CUserMessageShowMenu)
}

void CUserMessageShowMenu::SharedCtor() {
  menustring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&validslots_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&needmore_) -
      reinterpret_cast<char*>(&validslots_)) + sizeof(needmore_));
}

CUserMessageShowMenu::~CUserMessageShowMenu() {
  // @@protoc_insertion_point(destructor:CUserMessageShowMenu)
  SharedDtor();
}

void CUserMessageShowMenu::SharedDtor() {
  menustring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CUserMessageShowMenu::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageShowMenu::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageShowMenu& CUserMessageShowMenu::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageShowMenu.base);
  return *internal_default_instance();
}


void CUserMessageShowMenu::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageShowMenu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    menustring_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&validslots_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&needmore_) -
        reinterpret_cast<char*>(&validslots_)) + sizeof(needmore_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageShowMenu::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageShowMenu)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 validslots = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_validslots();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &validslots_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 displaytime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_displaytime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &displaytime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool needmore = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_needmore();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &needmore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string menustring = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_menustring()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->menustring().data(), static_cast<int>(this->menustring().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CUserMessageShowMenu.menustring");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageShowMenu)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageShowMenu)
  return false;
#undef DO_
}

void CUserMessageShowMenu::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageShowMenu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 validslots = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->validslots(), output);
  }

  // optional uint32 displaytime = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->displaytime(), output);
  }

  // optional bool needmore = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->needmore(), output);
  }

  // optional string menustring = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->menustring().data(), static_cast<int>(this->menustring().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageShowMenu.menustring");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->menustring(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageShowMenu)
}

::google::protobuf::uint8* CUserMessageShowMenu::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageShowMenu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 validslots = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->validslots(), target);
  }

  // optional uint32 displaytime = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->displaytime(), target);
  }

  // optional bool needmore = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->needmore(), target);
  }

  // optional string menustring = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->menustring().data(), static_cast<int>(this->menustring().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageShowMenu.menustring");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->menustring(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageShowMenu)
  return target;
}

size_t CUserMessageShowMenu::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageShowMenu)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string menustring = 4;
    if (has_menustring()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->menustring());
    }

    // optional uint32 validslots = 1;
    if (has_validslots()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->validslots());
    }

    // optional uint32 displaytime = 2;
    if (has_displaytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->displaytime());
    }

    // optional bool needmore = 3;
    if (has_needmore()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageShowMenu::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageShowMenu)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageShowMenu* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageShowMenu>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageShowMenu)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageShowMenu)
    MergeFrom(*source);
  }
}

void CUserMessageShowMenu::MergeFrom(const CUserMessageShowMenu& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageShowMenu)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_menustring();
      menustring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.menustring_);
    }
    if (cached_has_bits & 0x00000002u) {
      validslots_ = from.validslots_;
    }
    if (cached_has_bits & 0x00000004u) {
      displaytime_ = from.displaytime_;
    }
    if (cached_has_bits & 0x00000008u) {
      needmore_ = from.needmore_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMessageShowMenu::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageShowMenu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageShowMenu::CopyFrom(const CUserMessageShowMenu& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageShowMenu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageShowMenu::IsInitialized() const {
  return true;
}

void CUserMessageShowMenu::Swap(CUserMessageShowMenu* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageShowMenu::InternalSwap(CUserMessageShowMenu* other) {
  using std::swap;
  menustring_.Swap(&other->menustring_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(validslots_, other->validslots_);
  swap(displaytime_, other->displaytime_);
  swap(needmore_, other->needmore_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageShowMenu::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageCreditsMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageCreditsMsg::kRolltypeFieldNumber;
const int CUserMessageCreditsMsg::kLogoLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageCreditsMsg::CUserMessageCreditsMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageCreditsMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageCreditsMsg)
}
CUserMessageCreditsMsg::CUserMessageCreditsMsg(const CUserMessageCreditsMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&logo_length_, &from.logo_length_,
    static_cast<size_t>(reinterpret_cast<char*>(&rolltype_) -
    reinterpret_cast<char*>(&logo_length_)) + sizeof(rolltype_));
  // @@protoc_insertion_point(copy_constructor:CUserMessageCreditsMsg)
}

void CUserMessageCreditsMsg::SharedCtor() {
  logo_length_ = 0;
  rolltype_ = -1;
}

CUserMessageCreditsMsg::~CUserMessageCreditsMsg() {
  // @@protoc_insertion_point(destructor:CUserMessageCreditsMsg)
  SharedDtor();
}

void CUserMessageCreditsMsg::SharedDtor() {
}

void CUserMessageCreditsMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageCreditsMsg::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageCreditsMsg& CUserMessageCreditsMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageCreditsMsg.base);
  return *internal_default_instance();
}


void CUserMessageCreditsMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageCreditsMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    logo_length_ = 0;
    rolltype_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageCreditsMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageCreditsMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .eRollType rolltype = 1 [default = ROLL_NONE];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::eRollType_IsValid(value)) {
            set_rolltype(static_cast< ::eRollType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float logo_length = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_logo_length();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &logo_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageCreditsMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageCreditsMsg)
  return false;
#undef DO_
}

void CUserMessageCreditsMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageCreditsMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .eRollType rolltype = 1 [default = ROLL_NONE];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->rolltype(), output);
  }

  // optional float logo_length = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->logo_length(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageCreditsMsg)
}

::google::protobuf::uint8* CUserMessageCreditsMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageCreditsMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .eRollType rolltype = 1 [default = ROLL_NONE];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->rolltype(), target);
  }

  // optional float logo_length = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->logo_length(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageCreditsMsg)
  return target;
}

size_t CUserMessageCreditsMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageCreditsMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional float logo_length = 2;
    if (has_logo_length()) {
      total_size += 1 + 4;
    }

    // optional .eRollType rolltype = 1 [default = ROLL_NONE];
    if (has_rolltype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->rolltype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageCreditsMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageCreditsMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageCreditsMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageCreditsMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageCreditsMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageCreditsMsg)
    MergeFrom(*source);
  }
}

void CUserMessageCreditsMsg::MergeFrom(const CUserMessageCreditsMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageCreditsMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      logo_length_ = from.logo_length_;
    }
    if (cached_has_bits & 0x00000002u) {
      rolltype_ = from.rolltype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMessageCreditsMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageCreditsMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageCreditsMsg::CopyFrom(const CUserMessageCreditsMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageCreditsMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageCreditsMsg::IsInitialized() const {
  return true;
}

void CUserMessageCreditsMsg::Swap(CUserMessageCreditsMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageCreditsMsg::InternalSwap(CUserMessageCreditsMsg* other) {
  using std::swap;
  swap(logo_length_, other->logo_length_);
  swap(rolltype_, other->rolltype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageCreditsMsg::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CEntityMessagePlayJingle::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CEntityMessagePlayJingle::CEntityMessagePlayJingle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CEntityMessagePlayJingle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CEntityMessagePlayJingle)
}
CEntityMessagePlayJingle::CEntityMessagePlayJingle(const CEntityMessagePlayJingle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CEntityMessagePlayJingle)
}

void CEntityMessagePlayJingle::SharedCtor() {
}

CEntityMessagePlayJingle::~CEntityMessagePlayJingle() {
  // @@protoc_insertion_point(destructor:CEntityMessagePlayJingle)
  SharedDtor();
}

void CEntityMessagePlayJingle::SharedDtor() {
}

void CEntityMessagePlayJingle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CEntityMessagePlayJingle::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CEntityMessagePlayJingle& CEntityMessagePlayJingle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CEntityMessagePlayJingle.base);
  return *internal_default_instance();
}


void CEntityMessagePlayJingle::Clear() {
// @@protoc_insertion_point(message_clear_start:CEntityMessagePlayJingle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CEntityMessagePlayJingle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CEntityMessagePlayJingle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CEntityMessagePlayJingle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CEntityMessagePlayJingle)
  return false;
#undef DO_
}

void CEntityMessagePlayJingle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CEntityMessagePlayJingle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CEntityMessagePlayJingle)
}

::google::protobuf::uint8* CEntityMessagePlayJingle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CEntityMessagePlayJingle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CEntityMessagePlayJingle)
  return target;
}

size_t CEntityMessagePlayJingle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CEntityMessagePlayJingle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CEntityMessagePlayJingle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CEntityMessagePlayJingle)
  GOOGLE_DCHECK_NE(&from, this);
  const CEntityMessagePlayJingle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CEntityMessagePlayJingle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CEntityMessagePlayJingle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CEntityMessagePlayJingle)
    MergeFrom(*source);
  }
}

void CEntityMessagePlayJingle::MergeFrom(const CEntityMessagePlayJingle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CEntityMessagePlayJingle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CEntityMessagePlayJingle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CEntityMessagePlayJingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CEntityMessagePlayJingle::CopyFrom(const CEntityMessagePlayJingle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CEntityMessagePlayJingle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CEntityMessagePlayJingle::IsInitialized() const {
  return true;
}

void CEntityMessagePlayJingle::Swap(CEntityMessagePlayJingle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CEntityMessagePlayJingle::InternalSwap(CEntityMessagePlayJingle* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CEntityMessagePlayJingle::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CEntityMessageScreenOverlay::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CEntityMessageScreenOverlay::kStartEffectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CEntityMessageScreenOverlay::CEntityMessageScreenOverlay()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CEntityMessageScreenOverlay.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CEntityMessageScreenOverlay)
}
CEntityMessageScreenOverlay::CEntityMessageScreenOverlay(const CEntityMessageScreenOverlay& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  start_effect_ = from.start_effect_;
  // @@protoc_insertion_point(copy_constructor:CEntityMessageScreenOverlay)
}

void CEntityMessageScreenOverlay::SharedCtor() {
  start_effect_ = false;
}

CEntityMessageScreenOverlay::~CEntityMessageScreenOverlay() {
  // @@protoc_insertion_point(destructor:CEntityMessageScreenOverlay)
  SharedDtor();
}

void CEntityMessageScreenOverlay::SharedDtor() {
}

void CEntityMessageScreenOverlay::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CEntityMessageScreenOverlay::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CEntityMessageScreenOverlay& CEntityMessageScreenOverlay::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CEntityMessageScreenOverlay.base);
  return *internal_default_instance();
}


void CEntityMessageScreenOverlay::Clear() {
// @@protoc_insertion_point(message_clear_start:CEntityMessageScreenOverlay)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  start_effect_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CEntityMessageScreenOverlay::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CEntityMessageScreenOverlay)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool start_effect = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_start_effect();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &start_effect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CEntityMessageScreenOverlay)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CEntityMessageScreenOverlay)
  return false;
#undef DO_
}

void CEntityMessageScreenOverlay::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CEntityMessageScreenOverlay)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool start_effect = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->start_effect(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CEntityMessageScreenOverlay)
}

::google::protobuf::uint8* CEntityMessageScreenOverlay::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CEntityMessageScreenOverlay)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool start_effect = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->start_effect(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CEntityMessageScreenOverlay)
  return target;
}

size_t CEntityMessageScreenOverlay::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CEntityMessageScreenOverlay)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bool start_effect = 1;
  if (has_start_effect()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CEntityMessageScreenOverlay::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CEntityMessageScreenOverlay)
  GOOGLE_DCHECK_NE(&from, this);
  const CEntityMessageScreenOverlay* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CEntityMessageScreenOverlay>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CEntityMessageScreenOverlay)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CEntityMessageScreenOverlay)
    MergeFrom(*source);
  }
}

void CEntityMessageScreenOverlay::MergeFrom(const CEntityMessageScreenOverlay& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CEntityMessageScreenOverlay)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_start_effect()) {
    set_start_effect(from.start_effect());
  }
}

void CEntityMessageScreenOverlay::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CEntityMessageScreenOverlay)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CEntityMessageScreenOverlay::CopyFrom(const CEntityMessageScreenOverlay& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CEntityMessageScreenOverlay)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CEntityMessageScreenOverlay::IsInitialized() const {
  return true;
}

void CEntityMessageScreenOverlay::Swap(CEntityMessageScreenOverlay* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CEntityMessageScreenOverlay::InternalSwap(CEntityMessageScreenOverlay* other) {
  using std::swap;
  swap(start_effect_, other->start_effect_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CEntityMessageScreenOverlay::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CEntityMessageRemoveAllDecals::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CEntityMessageRemoveAllDecals::kRemoveDecalsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CEntityMessageRemoveAllDecals::CEntityMessageRemoveAllDecals()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CEntityMessageRemoveAllDecals.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CEntityMessageRemoveAllDecals)
}
CEntityMessageRemoveAllDecals::CEntityMessageRemoveAllDecals(const CEntityMessageRemoveAllDecals& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  remove_decals_ = from.remove_decals_;
  // @@protoc_insertion_point(copy_constructor:CEntityMessageRemoveAllDecals)
}

void CEntityMessageRemoveAllDecals::SharedCtor() {
  remove_decals_ = false;
}

CEntityMessageRemoveAllDecals::~CEntityMessageRemoveAllDecals() {
  // @@protoc_insertion_point(destructor:CEntityMessageRemoveAllDecals)
  SharedDtor();
}

void CEntityMessageRemoveAllDecals::SharedDtor() {
}

void CEntityMessageRemoveAllDecals::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CEntityMessageRemoveAllDecals::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CEntityMessageRemoveAllDecals& CEntityMessageRemoveAllDecals::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CEntityMessageRemoveAllDecals.base);
  return *internal_default_instance();
}


void CEntityMessageRemoveAllDecals::Clear() {
// @@protoc_insertion_point(message_clear_start:CEntityMessageRemoveAllDecals)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  remove_decals_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CEntityMessageRemoveAllDecals::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CEntityMessageRemoveAllDecals)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool remove_decals = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_remove_decals();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &remove_decals_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CEntityMessageRemoveAllDecals)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CEntityMessageRemoveAllDecals)
  return false;
#undef DO_
}

void CEntityMessageRemoveAllDecals::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CEntityMessageRemoveAllDecals)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool remove_decals = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->remove_decals(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CEntityMessageRemoveAllDecals)
}

::google::protobuf::uint8* CEntityMessageRemoveAllDecals::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CEntityMessageRemoveAllDecals)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool remove_decals = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->remove_decals(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CEntityMessageRemoveAllDecals)
  return target;
}

size_t CEntityMessageRemoveAllDecals::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CEntityMessageRemoveAllDecals)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bool remove_decals = 1;
  if (has_remove_decals()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CEntityMessageRemoveAllDecals::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CEntityMessageRemoveAllDecals)
  GOOGLE_DCHECK_NE(&from, this);
  const CEntityMessageRemoveAllDecals* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CEntityMessageRemoveAllDecals>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CEntityMessageRemoveAllDecals)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CEntityMessageRemoveAllDecals)
    MergeFrom(*source);
  }
}

void CEntityMessageRemoveAllDecals::MergeFrom(const CEntityMessageRemoveAllDecals& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CEntityMessageRemoveAllDecals)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_remove_decals()) {
    set_remove_decals(from.remove_decals());
  }
}

void CEntityMessageRemoveAllDecals::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CEntityMessageRemoveAllDecals)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CEntityMessageRemoveAllDecals::CopyFrom(const CEntityMessageRemoveAllDecals& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CEntityMessageRemoveAllDecals)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CEntityMessageRemoveAllDecals::IsInitialized() const {
  return true;
}

void CEntityMessageRemoveAllDecals::Swap(CEntityMessageRemoveAllDecals* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CEntityMessageRemoveAllDecals::InternalSwap(CEntityMessageRemoveAllDecals* other) {
  using std::swap;
  swap(remove_decals_, other->remove_decals_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CEntityMessageRemoveAllDecals::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CEntityMessagePropagateForce::InitAsDefaultInstance() {
  ::_CEntityMessagePropagateForce_default_instance_._instance.get_mutable()->impulse_ = const_cast< ::CMsgVector*>(
      ::CMsgVector::internal_default_instance());
}
void CEntityMessagePropagateForce::clear_impulse() {
  if (impulse_ != NULL) impulse_->Clear();
  clear_has_impulse();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CEntityMessagePropagateForce::kImpulseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CEntityMessagePropagateForce::CEntityMessagePropagateForce()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CEntityMessagePropagateForce.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CEntityMessagePropagateForce)
}
CEntityMessagePropagateForce::CEntityMessagePropagateForce(const CEntityMessagePropagateForce& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_impulse()) {
    impulse_ = new ::CMsgVector(*from.impulse_);
  } else {
    impulse_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CEntityMessagePropagateForce)
}

void CEntityMessagePropagateForce::SharedCtor() {
  impulse_ = NULL;
}

CEntityMessagePropagateForce::~CEntityMessagePropagateForce() {
  // @@protoc_insertion_point(destructor:CEntityMessagePropagateForce)
  SharedDtor();
}

void CEntityMessagePropagateForce::SharedDtor() {
  if (this != internal_default_instance()) delete impulse_;
}

void CEntityMessagePropagateForce::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CEntityMessagePropagateForce::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CEntityMessagePropagateForce& CEntityMessagePropagateForce::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CEntityMessagePropagateForce.base);
  return *internal_default_instance();
}


void CEntityMessagePropagateForce::Clear() {
// @@protoc_insertion_point(message_clear_start:CEntityMessagePropagateForce)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(impulse_ != NULL);
    impulse_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CEntityMessagePropagateForce::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CEntityMessagePropagateForce)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsgVector impulse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_impulse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CEntityMessagePropagateForce)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CEntityMessagePropagateForce)
  return false;
#undef DO_
}

void CEntityMessagePropagateForce::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CEntityMessagePropagateForce)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgVector impulse = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_impulse(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CEntityMessagePropagateForce)
}

::google::protobuf::uint8* CEntityMessagePropagateForce::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CEntityMessagePropagateForce)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgVector impulse = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_impulse(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CEntityMessagePropagateForce)
  return target;
}

size_t CEntityMessagePropagateForce::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CEntityMessagePropagateForce)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .CMsgVector impulse = 1;
  if (has_impulse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *impulse_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CEntityMessagePropagateForce::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CEntityMessagePropagateForce)
  GOOGLE_DCHECK_NE(&from, this);
  const CEntityMessagePropagateForce* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CEntityMessagePropagateForce>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CEntityMessagePropagateForce)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CEntityMessagePropagateForce)
    MergeFrom(*source);
  }
}

void CEntityMessagePropagateForce::MergeFrom(const CEntityMessagePropagateForce& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CEntityMessagePropagateForce)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_impulse()) {
    mutable_impulse()->::CMsgVector::MergeFrom(from.impulse());
  }
}

void CEntityMessagePropagateForce::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CEntityMessagePropagateForce)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CEntityMessagePropagateForce::CopyFrom(const CEntityMessagePropagateForce& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CEntityMessagePropagateForce)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CEntityMessagePropagateForce::IsInitialized() const {
  return true;
}

void CEntityMessagePropagateForce::Swap(CEntityMessagePropagateForce* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CEntityMessagePropagateForce::InternalSwap(CEntityMessagePropagateForce* other) {
  using std::swap;
  swap(impulse_, other->impulse_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CEntityMessagePropagateForce::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CEntityMessageDoSpark::InitAsDefaultInstance() {
  ::_CEntityMessageDoSpark_default_instance_._instance.get_mutable()->origin_ = const_cast< ::CMsgVector*>(
      ::CMsgVector::internal_default_instance());
}
void CEntityMessageDoSpark::clear_origin() {
  if (origin_ != NULL) origin_->Clear();
  clear_has_origin();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CEntityMessageDoSpark::kOriginFieldNumber;
const int CEntityMessageDoSpark::kEntityindexFieldNumber;
const int CEntityMessageDoSpark::kRadiusFieldNumber;
const int CEntityMessageDoSpark::kColorFieldNumber;
const int CEntityMessageDoSpark::kBeamsFieldNumber;
const int CEntityMessageDoSpark::kThickFieldNumber;
const int CEntityMessageDoSpark::kDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CEntityMessageDoSpark::CEntityMessageDoSpark()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CEntityMessageDoSpark.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CEntityMessageDoSpark)
}
CEntityMessageDoSpark::CEntityMessageDoSpark(const CEntityMessageDoSpark& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_origin()) {
    origin_ = new ::CMsgVector(*from.origin_);
  } else {
    origin_ = NULL;
  }
  ::memcpy(&entityindex_, &from.entityindex_,
    static_cast<size_t>(reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&entityindex_)) + sizeof(duration_));
  // @@protoc_insertion_point(copy_constructor:CEntityMessageDoSpark)
}

void CEntityMessageDoSpark::SharedCtor() {
  ::memset(&origin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&origin_)) + sizeof(duration_));
}

CEntityMessageDoSpark::~CEntityMessageDoSpark() {
  // @@protoc_insertion_point(destructor:CEntityMessageDoSpark)
  SharedDtor();
}

void CEntityMessageDoSpark::SharedDtor() {
  if (this != internal_default_instance()) delete origin_;
}

void CEntityMessageDoSpark::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CEntityMessageDoSpark::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CEntityMessageDoSpark& CEntityMessageDoSpark::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CEntityMessageDoSpark.base);
  return *internal_default_instance();
}


void CEntityMessageDoSpark::Clear() {
// @@protoc_insertion_point(message_clear_start:CEntityMessageDoSpark)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(origin_ != NULL);
    origin_->Clear();
  }
  if (cached_has_bits & 126u) {
    ::memset(&entityindex_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&duration_) -
        reinterpret_cast<char*>(&entityindex_)) + sizeof(duration_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CEntityMessageDoSpark::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CEntityMessageDoSpark)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsgVector origin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_origin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 entityindex = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_entityindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entityindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float radius = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_radius();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &radius_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 color = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_color();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &color_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 beams = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_beams();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beams_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float thick = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          set_has_thick();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &thick_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float duration = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CEntityMessageDoSpark)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CEntityMessageDoSpark)
  return false;
#undef DO_
}

void CEntityMessageDoSpark::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CEntityMessageDoSpark)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgVector origin = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_origin(), output);
  }

  // optional uint32 entityindex = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entityindex(), output);
  }

  // optional float radius = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->radius(), output);
  }

  // optional fixed32 color = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(4, this->color(), output);
  }

  // optional uint32 beams = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->beams(), output);
  }

  // optional float thick = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->thick(), output);
  }

  // optional float duration = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->duration(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CEntityMessageDoSpark)
}

::google::protobuf::uint8* CEntityMessageDoSpark::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CEntityMessageDoSpark)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgVector origin = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_origin(), deterministic, target);
  }

  // optional uint32 entityindex = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entityindex(), target);
  }

  // optional float radius = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->radius(), target);
  }

  // optional fixed32 color = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(4, this->color(), target);
  }

  // optional uint32 beams = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->beams(), target);
  }

  // optional float thick = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->thick(), target);
  }

  // optional float duration = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->duration(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CEntityMessageDoSpark)
  return target;
}

size_t CEntityMessageDoSpark::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CEntityMessageDoSpark)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional .CMsgVector origin = 1;
    if (has_origin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *origin_);
    }

    // optional uint32 entityindex = 2;
    if (has_entityindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->entityindex());
    }

    // optional float radius = 3;
    if (has_radius()) {
      total_size += 1 + 4;
    }

    // optional fixed32 color = 4;
    if (has_color()) {
      total_size += 1 + 4;
    }

    // optional uint32 beams = 5;
    if (has_beams()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->beams());
    }

    // optional float thick = 6;
    if (has_thick()) {
      total_size += 1 + 4;
    }

    // optional float duration = 7;
    if (has_duration()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CEntityMessageDoSpark::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CEntityMessageDoSpark)
  GOOGLE_DCHECK_NE(&from, this);
  const CEntityMessageDoSpark* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CEntityMessageDoSpark>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CEntityMessageDoSpark)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CEntityMessageDoSpark)
    MergeFrom(*source);
  }
}

void CEntityMessageDoSpark::MergeFrom(const CEntityMessageDoSpark& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CEntityMessageDoSpark)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_origin()->::CMsgVector::MergeFrom(from.origin());
    }
    if (cached_has_bits & 0x00000002u) {
      entityindex_ = from.entityindex_;
    }
    if (cached_has_bits & 0x00000004u) {
      radius_ = from.radius_;
    }
    if (cached_has_bits & 0x00000008u) {
      color_ = from.color_;
    }
    if (cached_has_bits & 0x00000010u) {
      beams_ = from.beams_;
    }
    if (cached_has_bits & 0x00000020u) {
      thick_ = from.thick_;
    }
    if (cached_has_bits & 0x00000040u) {
      duration_ = from.duration_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CEntityMessageDoSpark::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CEntityMessageDoSpark)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CEntityMessageDoSpark::CopyFrom(const CEntityMessageDoSpark& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CEntityMessageDoSpark)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CEntityMessageDoSpark::IsInitialized() const {
  return true;
}

void CEntityMessageDoSpark::Swap(CEntityMessageDoSpark* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CEntityMessageDoSpark::InternalSwap(CEntityMessageDoSpark* other) {
  using std::swap;
  swap(origin_, other->origin_);
  swap(entityindex_, other->entityindex_);
  swap(radius_, other->radius_);
  swap(color_, other->color_);
  swap(beams_, other->beams_);
  swap(thick_, other->thick_);
  swap(duration_, other->duration_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CEntityMessageDoSpark::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CEntityMessageFixAngle::InitAsDefaultInstance() {
  ::_CEntityMessageFixAngle_default_instance_._instance.get_mutable()->angle_ = const_cast< ::CMsgQAngle*>(
      ::CMsgQAngle::internal_default_instance());
}
void CEntityMessageFixAngle::clear_angle() {
  if (angle_ != NULL) angle_->Clear();
  clear_has_angle();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CEntityMessageFixAngle::kRelativeFieldNumber;
const int CEntityMessageFixAngle::kAngleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CEntityMessageFixAngle::CEntityMessageFixAngle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CEntityMessageFixAngle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CEntityMessageFixAngle)
}
CEntityMessageFixAngle::CEntityMessageFixAngle(const CEntityMessageFixAngle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_angle()) {
    angle_ = new ::CMsgQAngle(*from.angle_);
  } else {
    angle_ = NULL;
  }
  relative_ = from.relative_;
  // @@protoc_insertion_point(copy_constructor:CEntityMessageFixAngle)
}

void CEntityMessageFixAngle::SharedCtor() {
  ::memset(&angle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&relative_) -
      reinterpret_cast<char*>(&angle_)) + sizeof(relative_));
}

CEntityMessageFixAngle::~CEntityMessageFixAngle() {
  // @@protoc_insertion_point(destructor:CEntityMessageFixAngle)
  SharedDtor();
}

void CEntityMessageFixAngle::SharedDtor() {
  if (this != internal_default_instance()) delete angle_;
}

void CEntityMessageFixAngle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CEntityMessageFixAngle::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CEntityMessageFixAngle& CEntityMessageFixAngle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CEntityMessageFixAngle.base);
  return *internal_default_instance();
}


void CEntityMessageFixAngle::Clear() {
// @@protoc_insertion_point(message_clear_start:CEntityMessageFixAngle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(angle_ != NULL);
    angle_->Clear();
  }
  relative_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CEntityMessageFixAngle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CEntityMessageFixAngle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool relative = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_relative();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &relative_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgQAngle angle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_angle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CEntityMessageFixAngle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CEntityMessageFixAngle)
  return false;
#undef DO_
}

void CEntityMessageFixAngle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CEntityMessageFixAngle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool relative = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->relative(), output);
  }

  // optional .CMsgQAngle angle = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_angle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CEntityMessageFixAngle)
}

::google::protobuf::uint8* CEntityMessageFixAngle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CEntityMessageFixAngle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool relative = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->relative(), target);
  }

  // optional .CMsgQAngle angle = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_angle(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CEntityMessageFixAngle)
  return target;
}

size_t CEntityMessageFixAngle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CEntityMessageFixAngle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .CMsgQAngle angle = 2;
    if (has_angle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *angle_);
    }

    // optional bool relative = 1;
    if (has_relative()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CEntityMessageFixAngle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CEntityMessageFixAngle)
  GOOGLE_DCHECK_NE(&from, this);
  const CEntityMessageFixAngle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CEntityMessageFixAngle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CEntityMessageFixAngle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CEntityMessageFixAngle)
    MergeFrom(*source);
  }
}

void CEntityMessageFixAngle::MergeFrom(const CEntityMessageFixAngle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CEntityMessageFixAngle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_angle()->::CMsgQAngle::MergeFrom(from.angle());
    }
    if (cached_has_bits & 0x00000002u) {
      relative_ = from.relative_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CEntityMessageFixAngle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CEntityMessageFixAngle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CEntityMessageFixAngle::CopyFrom(const CEntityMessageFixAngle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CEntityMessageFixAngle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CEntityMessageFixAngle::IsInitialized() const {
  return true;
}

void CEntityMessageFixAngle::Swap(CEntityMessageFixAngle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CEntityMessageFixAngle::InternalSwap(CEntityMessageFixAngle* other) {
  using std::swap;
  swap(angle_, other->angle_);
  swap(relative_, other->relative_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CEntityMessageFixAngle::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageCameraTransition_Transition_DataDriven::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageCameraTransition_Transition_DataDriven::kFilenameFieldNumber;
const int CUserMessageCameraTransition_Transition_DataDriven::kAttachEntIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageCameraTransition_Transition_DataDriven::CUserMessageCameraTransition_Transition_DataDriven()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageCameraTransition_Transition_DataDriven.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageCameraTransition.Transition_DataDriven)
}
CUserMessageCameraTransition_Transition_DataDriven::CUserMessageCameraTransition_Transition_DataDriven(const CUserMessageCameraTransition_Transition_DataDriven& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  attach_ent_index_ = from.attach_ent_index_;
  // @@protoc_insertion_point(copy_constructor:CUserMessageCameraTransition.Transition_DataDriven)
}

void CUserMessageCameraTransition_Transition_DataDriven::SharedCtor() {
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attach_ent_index_ = 0;
}

CUserMessageCameraTransition_Transition_DataDriven::~CUserMessageCameraTransition_Transition_DataDriven() {
  // @@protoc_insertion_point(destructor:CUserMessageCameraTransition.Transition_DataDriven)
  SharedDtor();
}

void CUserMessageCameraTransition_Transition_DataDriven::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CUserMessageCameraTransition_Transition_DataDriven::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageCameraTransition_Transition_DataDriven::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageCameraTransition_Transition_DataDriven& CUserMessageCameraTransition_Transition_DataDriven::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageCameraTransition_Transition_DataDriven.base);
  return *internal_default_instance();
}


void CUserMessageCameraTransition_Transition_DataDriven::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageCameraTransition.Transition_DataDriven)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    filename_.ClearNonDefaultToEmptyNoArena();
  }
  attach_ent_index_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageCameraTransition_Transition_DataDriven::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageCameraTransition.Transition_DataDriven)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string filename = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CUserMessageCameraTransition.Transition_DataDriven.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 attach_ent_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_attach_ent_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attach_ent_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageCameraTransition.Transition_DataDriven)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageCameraTransition.Transition_DataDriven)
  return false;
#undef DO_
}

void CUserMessageCameraTransition_Transition_DataDriven::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageCameraTransition.Transition_DataDriven)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageCameraTransition.Transition_DataDriven.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // optional int32 attach_ent_index = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->attach_ent_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageCameraTransition.Transition_DataDriven)
}

::google::protobuf::uint8* CUserMessageCameraTransition_Transition_DataDriven::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageCameraTransition.Transition_DataDriven)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMessageCameraTransition.Transition_DataDriven.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // optional int32 attach_ent_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->attach_ent_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageCameraTransition.Transition_DataDriven)
  return target;
}

size_t CUserMessageCameraTransition_Transition_DataDriven::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageCameraTransition.Transition_DataDriven)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string filename = 1;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional int32 attach_ent_index = 2;
    if (has_attach_ent_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attach_ent_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageCameraTransition_Transition_DataDriven::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageCameraTransition.Transition_DataDriven)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageCameraTransition_Transition_DataDriven* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageCameraTransition_Transition_DataDriven>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageCameraTransition.Transition_DataDriven)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageCameraTransition.Transition_DataDriven)
    MergeFrom(*source);
  }
}

void CUserMessageCameraTransition_Transition_DataDriven::MergeFrom(const CUserMessageCameraTransition_Transition_DataDriven& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageCameraTransition.Transition_DataDriven)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_filename();
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000002u) {
      attach_ent_index_ = from.attach_ent_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMessageCameraTransition_Transition_DataDriven::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageCameraTransition.Transition_DataDriven)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageCameraTransition_Transition_DataDriven::CopyFrom(const CUserMessageCameraTransition_Transition_DataDriven& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageCameraTransition.Transition_DataDriven)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageCameraTransition_Transition_DataDriven::IsInitialized() const {
  return true;
}

void CUserMessageCameraTransition_Transition_DataDriven::Swap(CUserMessageCameraTransition_Transition_DataDriven* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageCameraTransition_Transition_DataDriven::InternalSwap(CUserMessageCameraTransition_Transition_DataDriven* other) {
  using std::swap;
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(attach_ent_index_, other->attach_ent_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageCameraTransition_Transition_DataDriven::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageCameraTransition::InitAsDefaultInstance() {
  ::_CUserMessageCameraTransition_default_instance_._instance.get_mutable()->params_data_driven_ = const_cast< ::CUserMessageCameraTransition_Transition_DataDriven*>(
      ::CUserMessageCameraTransition_Transition_DataDriven::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageCameraTransition::kCameraTypeFieldNumber;
const int CUserMessageCameraTransition::kDurationFieldNumber;
const int CUserMessageCameraTransition::kParamsDataDrivenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageCameraTransition::CUserMessageCameraTransition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageCameraTransition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageCameraTransition)
}
CUserMessageCameraTransition::CUserMessageCameraTransition(const CUserMessageCameraTransition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_params_data_driven()) {
    params_data_driven_ = new ::CUserMessageCameraTransition_Transition_DataDriven(*from.params_data_driven_);
  } else {
    params_data_driven_ = NULL;
  }
  ::memcpy(&camera_type_, &from.camera_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&camera_type_)) + sizeof(duration_));
  // @@protoc_insertion_point(copy_constructor:CUserMessageCameraTransition)
}

void CUserMessageCameraTransition::SharedCtor() {
  ::memset(&params_data_driven_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&params_data_driven_)) + sizeof(duration_));
}

CUserMessageCameraTransition::~CUserMessageCameraTransition() {
  // @@protoc_insertion_point(destructor:CUserMessageCameraTransition)
  SharedDtor();
}

void CUserMessageCameraTransition::SharedDtor() {
  if (this != internal_default_instance()) delete params_data_driven_;
}

void CUserMessageCameraTransition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageCameraTransition::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageCameraTransition& CUserMessageCameraTransition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageCameraTransition.base);
  return *internal_default_instance();
}


void CUserMessageCameraTransition::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageCameraTransition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(params_data_driven_ != NULL);
    params_data_driven_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&camera_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&duration_) -
        reinterpret_cast<char*>(&camera_type_)) + sizeof(duration_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageCameraTransition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageCameraTransition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 camera_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_camera_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &camera_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float duration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CUserMessageCameraTransition.Transition_DataDriven params_data_driven = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_params_data_driven()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageCameraTransition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageCameraTransition)
  return false;
#undef DO_
}

void CUserMessageCameraTransition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageCameraTransition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 camera_type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->camera_type(), output);
  }

  // optional float duration = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->duration(), output);
  }

  // optional .CUserMessageCameraTransition.Transition_DataDriven params_data_driven = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_params_data_driven(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageCameraTransition)
}

::google::protobuf::uint8* CUserMessageCameraTransition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageCameraTransition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 camera_type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->camera_type(), target);
  }

  // optional float duration = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->duration(), target);
  }

  // optional .CUserMessageCameraTransition.Transition_DataDriven params_data_driven = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_params_data_driven(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageCameraTransition)
  return target;
}

size_t CUserMessageCameraTransition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageCameraTransition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .CUserMessageCameraTransition.Transition_DataDriven params_data_driven = 3;
    if (has_params_data_driven()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *params_data_driven_);
    }

    // optional uint32 camera_type = 1;
    if (has_camera_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->camera_type());
    }

    // optional float duration = 2;
    if (has_duration()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageCameraTransition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageCameraTransition)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageCameraTransition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageCameraTransition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageCameraTransition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageCameraTransition)
    MergeFrom(*source);
  }
}

void CUserMessageCameraTransition::MergeFrom(const CUserMessageCameraTransition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageCameraTransition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_params_data_driven()->::CUserMessageCameraTransition_Transition_DataDriven::MergeFrom(from.params_data_driven());
    }
    if (cached_has_bits & 0x00000002u) {
      camera_type_ = from.camera_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      duration_ = from.duration_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMessageCameraTransition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageCameraTransition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageCameraTransition::CopyFrom(const CUserMessageCameraTransition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageCameraTransition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageCameraTransition::IsInitialized() const {
  return true;
}

void CUserMessageCameraTransition::Swap(CUserMessageCameraTransition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageCameraTransition::InternalSwap(CUserMessageCameraTransition* other) {
  using std::swap;
  swap(params_data_driven_, other->params_data_driven_);
  swap(camera_type_, other->camera_type_);
  swap(duration_, other->duration_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageCameraTransition::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMsg_ParticleManager_ReleaseParticleIndex::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMsg_ParticleManager_ReleaseParticleIndex::CUserMsg_ParticleManager_ReleaseParticleIndex()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_ReleaseParticleIndex.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMsg_ParticleManager.ReleaseParticleIndex)
}
CUserMsg_ParticleManager_ReleaseParticleIndex::CUserMsg_ParticleManager_ReleaseParticleIndex(const CUserMsg_ParticleManager_ReleaseParticleIndex& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CUserMsg_ParticleManager.ReleaseParticleIndex)
}

void CUserMsg_ParticleManager_ReleaseParticleIndex::SharedCtor() {
}

CUserMsg_ParticleManager_ReleaseParticleIndex::~CUserMsg_ParticleManager_ReleaseParticleIndex() {
  // @@protoc_insertion_point(destructor:CUserMsg_ParticleManager.ReleaseParticleIndex)
  SharedDtor();
}

void CUserMsg_ParticleManager_ReleaseParticleIndex::SharedDtor() {
}

void CUserMsg_ParticleManager_ReleaseParticleIndex::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMsg_ParticleManager_ReleaseParticleIndex::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMsg_ParticleManager_ReleaseParticleIndex& CUserMsg_ParticleManager_ReleaseParticleIndex::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_ReleaseParticleIndex.base);
  return *internal_default_instance();
}


void CUserMsg_ParticleManager_ReleaseParticleIndex::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMsg_ParticleManager.ReleaseParticleIndex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMsg_ParticleManager_ReleaseParticleIndex::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMsg_ParticleManager.ReleaseParticleIndex)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMsg_ParticleManager.ReleaseParticleIndex)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMsg_ParticleManager.ReleaseParticleIndex)
  return false;
#undef DO_
}

void CUserMsg_ParticleManager_ReleaseParticleIndex::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMsg_ParticleManager.ReleaseParticleIndex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMsg_ParticleManager.ReleaseParticleIndex)
}

::google::protobuf::uint8* CUserMsg_ParticleManager_ReleaseParticleIndex::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMsg_ParticleManager.ReleaseParticleIndex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMsg_ParticleManager.ReleaseParticleIndex)
  return target;
}

size_t CUserMsg_ParticleManager_ReleaseParticleIndex::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMsg_ParticleManager.ReleaseParticleIndex)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMsg_ParticleManager_ReleaseParticleIndex::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMsg_ParticleManager.ReleaseParticleIndex)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMsg_ParticleManager_ReleaseParticleIndex* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMsg_ParticleManager_ReleaseParticleIndex>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMsg_ParticleManager.ReleaseParticleIndex)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMsg_ParticleManager.ReleaseParticleIndex)
    MergeFrom(*source);
  }
}

void CUserMsg_ParticleManager_ReleaseParticleIndex::MergeFrom(const CUserMsg_ParticleManager_ReleaseParticleIndex& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMsg_ParticleManager.ReleaseParticleIndex)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CUserMsg_ParticleManager_ReleaseParticleIndex::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMsg_ParticleManager.ReleaseParticleIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMsg_ParticleManager_ReleaseParticleIndex::CopyFrom(const CUserMsg_ParticleManager_ReleaseParticleIndex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMsg_ParticleManager.ReleaseParticleIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMsg_ParticleManager_ReleaseParticleIndex::IsInitialized() const {
  return true;
}

void CUserMsg_ParticleManager_ReleaseParticleIndex::Swap(CUserMsg_ParticleManager_ReleaseParticleIndex* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMsg_ParticleManager_ReleaseParticleIndex::InternalSwap(CUserMsg_ParticleManager_ReleaseParticleIndex* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMsg_ParticleManager_ReleaseParticleIndex::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMsg_ParticleManager_CreateParticle::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMsg_ParticleManager_CreateParticle::kParticleNameIndexFieldNumber;
const int CUserMsg_ParticleManager_CreateParticle::kAttachTypeFieldNumber;
const int CUserMsg_ParticleManager_CreateParticle::kEntityHandleFieldNumber;
const int CUserMsg_ParticleManager_CreateParticle::kEntityHandleForModifiersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMsg_ParticleManager_CreateParticle::CUserMsg_ParticleManager_CreateParticle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_CreateParticle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMsg_ParticleManager.CreateParticle)
}
CUserMsg_ParticleManager_CreateParticle::CUserMsg_ParticleManager_CreateParticle(const CUserMsg_ParticleManager_CreateParticle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&particle_name_index_, &from.particle_name_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&entity_handle_for_modifiers_) -
    reinterpret_cast<char*>(&particle_name_index_)) + sizeof(entity_handle_for_modifiers_));
  // @@protoc_insertion_point(copy_constructor:CUserMsg_ParticleManager.CreateParticle)
}

void CUserMsg_ParticleManager_CreateParticle::SharedCtor() {
  ::memset(&particle_name_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_handle_for_modifiers_) -
      reinterpret_cast<char*>(&particle_name_index_)) + sizeof(entity_handle_for_modifiers_));
}

CUserMsg_ParticleManager_CreateParticle::~CUserMsg_ParticleManager_CreateParticle() {
  // @@protoc_insertion_point(destructor:CUserMsg_ParticleManager.CreateParticle)
  SharedDtor();
}

void CUserMsg_ParticleManager_CreateParticle::SharedDtor() {
}

void CUserMsg_ParticleManager_CreateParticle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMsg_ParticleManager_CreateParticle::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMsg_ParticleManager_CreateParticle& CUserMsg_ParticleManager_CreateParticle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_CreateParticle.base);
  return *internal_default_instance();
}


void CUserMsg_ParticleManager_CreateParticle::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMsg_ParticleManager.CreateParticle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&particle_name_index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&entity_handle_for_modifiers_) -
        reinterpret_cast<char*>(&particle_name_index_)) + sizeof(entity_handle_for_modifiers_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMsg_ParticleManager_CreateParticle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMsg_ParticleManager.CreateParticle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 particle_name_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_particle_name_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &particle_name_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 attach_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_attach_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attach_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 entity_handle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_entity_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entity_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 entity_handle_for_modifiers = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_entity_handle_for_modifiers();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entity_handle_for_modifiers_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMsg_ParticleManager.CreateParticle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMsg_ParticleManager.CreateParticle)
  return false;
#undef DO_
}

void CUserMsg_ParticleManager_CreateParticle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMsg_ParticleManager.CreateParticle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 particle_name_index = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->particle_name_index(), output);
  }

  // optional int32 attach_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->attach_type(), output);
  }

  // optional int32 entity_handle = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->entity_handle(), output);
  }

  // optional int32 entity_handle_for_modifiers = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->entity_handle_for_modifiers(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMsg_ParticleManager.CreateParticle)
}

::google::protobuf::uint8* CUserMsg_ParticleManager_CreateParticle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMsg_ParticleManager.CreateParticle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 particle_name_index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->particle_name_index(), target);
  }

  // optional int32 attach_type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->attach_type(), target);
  }

  // optional int32 entity_handle = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->entity_handle(), target);
  }

  // optional int32 entity_handle_for_modifiers = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->entity_handle_for_modifiers(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMsg_ParticleManager.CreateParticle)
  return target;
}

size_t CUserMsg_ParticleManager_CreateParticle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMsg_ParticleManager.CreateParticle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional fixed64 particle_name_index = 1;
    if (has_particle_name_index()) {
      total_size += 1 + 8;
    }

    // optional int32 attach_type = 2;
    if (has_attach_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attach_type());
    }

    // optional int32 entity_handle = 3;
    if (has_entity_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entity_handle());
    }

    // optional int32 entity_handle_for_modifiers = 4;
    if (has_entity_handle_for_modifiers()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entity_handle_for_modifiers());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMsg_ParticleManager_CreateParticle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMsg_ParticleManager.CreateParticle)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMsg_ParticleManager_CreateParticle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMsg_ParticleManager_CreateParticle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMsg_ParticleManager.CreateParticle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMsg_ParticleManager.CreateParticle)
    MergeFrom(*source);
  }
}

void CUserMsg_ParticleManager_CreateParticle::MergeFrom(const CUserMsg_ParticleManager_CreateParticle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMsg_ParticleManager.CreateParticle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      particle_name_index_ = from.particle_name_index_;
    }
    if (cached_has_bits & 0x00000002u) {
      attach_type_ = from.attach_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      entity_handle_ = from.entity_handle_;
    }
    if (cached_has_bits & 0x00000008u) {
      entity_handle_for_modifiers_ = from.entity_handle_for_modifiers_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMsg_ParticleManager_CreateParticle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMsg_ParticleManager.CreateParticle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMsg_ParticleManager_CreateParticle::CopyFrom(const CUserMsg_ParticleManager_CreateParticle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMsg_ParticleManager.CreateParticle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMsg_ParticleManager_CreateParticle::IsInitialized() const {
  return true;
}

void CUserMsg_ParticleManager_CreateParticle::Swap(CUserMsg_ParticleManager_CreateParticle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMsg_ParticleManager_CreateParticle::InternalSwap(CUserMsg_ParticleManager_CreateParticle* other) {
  using std::swap;
  swap(particle_name_index_, other->particle_name_index_);
  swap(attach_type_, other->attach_type_);
  swap(entity_handle_, other->entity_handle_);
  swap(entity_handle_for_modifiers_, other->entity_handle_for_modifiers_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMsg_ParticleManager_CreateParticle::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMsg_ParticleManager_DestroyParticle::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMsg_ParticleManager_DestroyParticle::kDestroyImmediatelyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMsg_ParticleManager_DestroyParticle::CUserMsg_ParticleManager_DestroyParticle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_DestroyParticle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMsg_ParticleManager.DestroyParticle)
}
CUserMsg_ParticleManager_DestroyParticle::CUserMsg_ParticleManager_DestroyParticle(const CUserMsg_ParticleManager_DestroyParticle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  destroy_immediately_ = from.destroy_immediately_;
  // @@protoc_insertion_point(copy_constructor:CUserMsg_ParticleManager.DestroyParticle)
}

void CUserMsg_ParticleManager_DestroyParticle::SharedCtor() {
  destroy_immediately_ = false;
}

CUserMsg_ParticleManager_DestroyParticle::~CUserMsg_ParticleManager_DestroyParticle() {
  // @@protoc_insertion_point(destructor:CUserMsg_ParticleManager.DestroyParticle)
  SharedDtor();
}

void CUserMsg_ParticleManager_DestroyParticle::SharedDtor() {
}

void CUserMsg_ParticleManager_DestroyParticle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMsg_ParticleManager_DestroyParticle::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMsg_ParticleManager_DestroyParticle& CUserMsg_ParticleManager_DestroyParticle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_DestroyParticle.base);
  return *internal_default_instance();
}


void CUserMsg_ParticleManager_DestroyParticle::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMsg_ParticleManager.DestroyParticle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  destroy_immediately_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMsg_ParticleManager_DestroyParticle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMsg_ParticleManager.DestroyParticle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool destroy_immediately = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_destroy_immediately();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &destroy_immediately_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMsg_ParticleManager.DestroyParticle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMsg_ParticleManager.DestroyParticle)
  return false;
#undef DO_
}

void CUserMsg_ParticleManager_DestroyParticle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMsg_ParticleManager.DestroyParticle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool destroy_immediately = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->destroy_immediately(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMsg_ParticleManager.DestroyParticle)
}

::google::protobuf::uint8* CUserMsg_ParticleManager_DestroyParticle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMsg_ParticleManager.DestroyParticle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool destroy_immediately = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->destroy_immediately(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMsg_ParticleManager.DestroyParticle)
  return target;
}

size_t CUserMsg_ParticleManager_DestroyParticle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMsg_ParticleManager.DestroyParticle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bool destroy_immediately = 1;
  if (has_destroy_immediately()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMsg_ParticleManager_DestroyParticle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMsg_ParticleManager.DestroyParticle)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMsg_ParticleManager_DestroyParticle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMsg_ParticleManager_DestroyParticle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMsg_ParticleManager.DestroyParticle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMsg_ParticleManager.DestroyParticle)
    MergeFrom(*source);
  }
}

void CUserMsg_ParticleManager_DestroyParticle::MergeFrom(const CUserMsg_ParticleManager_DestroyParticle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMsg_ParticleManager.DestroyParticle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_destroy_immediately()) {
    set_destroy_immediately(from.destroy_immediately());
  }
}

void CUserMsg_ParticleManager_DestroyParticle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMsg_ParticleManager.DestroyParticle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMsg_ParticleManager_DestroyParticle::CopyFrom(const CUserMsg_ParticleManager_DestroyParticle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMsg_ParticleManager.DestroyParticle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMsg_ParticleManager_DestroyParticle::IsInitialized() const {
  return true;
}

void CUserMsg_ParticleManager_DestroyParticle::Swap(CUserMsg_ParticleManager_DestroyParticle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMsg_ParticleManager_DestroyParticle::InternalSwap(CUserMsg_ParticleManager_DestroyParticle* other) {
  using std::swap;
  swap(destroy_immediately_, other->destroy_immediately_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMsg_ParticleManager_DestroyParticle::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMsg_ParticleManager_DestroyParticleInvolving::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMsg_ParticleManager_DestroyParticleInvolving::kDestroyImmediatelyFieldNumber;
const int CUserMsg_ParticleManager_DestroyParticleInvolving::kEntityHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMsg_ParticleManager_DestroyParticleInvolving::CUserMsg_ParticleManager_DestroyParticleInvolving()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_DestroyParticleInvolving.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMsg_ParticleManager.DestroyParticleInvolving)
}
CUserMsg_ParticleManager_DestroyParticleInvolving::CUserMsg_ParticleManager_DestroyParticleInvolving(const CUserMsg_ParticleManager_DestroyParticleInvolving& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&destroy_immediately_, &from.destroy_immediately_,
    static_cast<size_t>(reinterpret_cast<char*>(&entity_handle_) -
    reinterpret_cast<char*>(&destroy_immediately_)) + sizeof(entity_handle_));
  // @@protoc_insertion_point(copy_constructor:CUserMsg_ParticleManager.DestroyParticleInvolving)
}

void CUserMsg_ParticleManager_DestroyParticleInvolving::SharedCtor() {
  ::memset(&destroy_immediately_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_handle_) -
      reinterpret_cast<char*>(&destroy_immediately_)) + sizeof(entity_handle_));
}

CUserMsg_ParticleManager_DestroyParticleInvolving::~CUserMsg_ParticleManager_DestroyParticleInvolving() {
  // @@protoc_insertion_point(destructor:CUserMsg_ParticleManager.DestroyParticleInvolving)
  SharedDtor();
}

void CUserMsg_ParticleManager_DestroyParticleInvolving::SharedDtor() {
}

void CUserMsg_ParticleManager_DestroyParticleInvolving::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMsg_ParticleManager_DestroyParticleInvolving::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMsg_ParticleManager_DestroyParticleInvolving& CUserMsg_ParticleManager_DestroyParticleInvolving::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_DestroyParticleInvolving.base);
  return *internal_default_instance();
}


void CUserMsg_ParticleManager_DestroyParticleInvolving::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMsg_ParticleManager.DestroyParticleInvolving)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&destroy_immediately_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&entity_handle_) -
        reinterpret_cast<char*>(&destroy_immediately_)) + sizeof(entity_handle_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMsg_ParticleManager_DestroyParticleInvolving::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMsg_ParticleManager.DestroyParticleInvolving)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool destroy_immediately = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_destroy_immediately();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &destroy_immediately_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 entity_handle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_entity_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entity_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMsg_ParticleManager.DestroyParticleInvolving)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMsg_ParticleManager.DestroyParticleInvolving)
  return false;
#undef DO_
}

void CUserMsg_ParticleManager_DestroyParticleInvolving::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMsg_ParticleManager.DestroyParticleInvolving)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool destroy_immediately = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->destroy_immediately(), output);
  }

  // optional int32 entity_handle = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->entity_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMsg_ParticleManager.DestroyParticleInvolving)
}

::google::protobuf::uint8* CUserMsg_ParticleManager_DestroyParticleInvolving::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMsg_ParticleManager.DestroyParticleInvolving)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool destroy_immediately = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->destroy_immediately(), target);
  }

  // optional int32 entity_handle = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->entity_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMsg_ParticleManager.DestroyParticleInvolving)
  return target;
}

size_t CUserMsg_ParticleManager_DestroyParticleInvolving::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMsg_ParticleManager.DestroyParticleInvolving)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bool destroy_immediately = 1;
    if (has_destroy_immediately()) {
      total_size += 1 + 1;
    }

    // optional int32 entity_handle = 3;
    if (has_entity_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entity_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMsg_ParticleManager_DestroyParticleInvolving::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMsg_ParticleManager.DestroyParticleInvolving)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMsg_ParticleManager_DestroyParticleInvolving* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMsg_ParticleManager_DestroyParticleInvolving>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMsg_ParticleManager.DestroyParticleInvolving)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMsg_ParticleManager.DestroyParticleInvolving)
    MergeFrom(*source);
  }
}

void CUserMsg_ParticleManager_DestroyParticleInvolving::MergeFrom(const CUserMsg_ParticleManager_DestroyParticleInvolving& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMsg_ParticleManager.DestroyParticleInvolving)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      destroy_immediately_ = from.destroy_immediately_;
    }
    if (cached_has_bits & 0x00000002u) {
      entity_handle_ = from.entity_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMsg_ParticleManager_DestroyParticleInvolving::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMsg_ParticleManager.DestroyParticleInvolving)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMsg_ParticleManager_DestroyParticleInvolving::CopyFrom(const CUserMsg_ParticleManager_DestroyParticleInvolving& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMsg_ParticleManager.DestroyParticleInvolving)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMsg_ParticleManager_DestroyParticleInvolving::IsInitialized() const {
  return true;
}

void CUserMsg_ParticleManager_DestroyParticleInvolving::Swap(CUserMsg_ParticleManager_DestroyParticleInvolving* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMsg_ParticleManager_DestroyParticleInvolving::InternalSwap(CUserMsg_ParticleManager_DestroyParticleInvolving* other) {
  using std::swap;
  swap(destroy_immediately_, other->destroy_immediately_);
  swap(entity_handle_, other->entity_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMsg_ParticleManager_DestroyParticleInvolving::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMsg_ParticleManager_UpdateParticle::InitAsDefaultInstance() {
  ::_CUserMsg_ParticleManager_UpdateParticle_default_instance_._instance.get_mutable()->position_ = const_cast< ::CMsgVector*>(
      ::CMsgVector::internal_default_instance());
}
void CUserMsg_ParticleManager_UpdateParticle::clear_position() {
  if (position_ != NULL) position_->Clear();
  clear_has_position();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMsg_ParticleManager_UpdateParticle::kControlPointFieldNumber;
const int CUserMsg_ParticleManager_UpdateParticle::kPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMsg_ParticleManager_UpdateParticle::CUserMsg_ParticleManager_UpdateParticle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_UpdateParticle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMsg_ParticleManager.UpdateParticle)
}
CUserMsg_ParticleManager_UpdateParticle::CUserMsg_ParticleManager_UpdateParticle(const CUserMsg_ParticleManager_UpdateParticle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::CMsgVector(*from.position_);
  } else {
    position_ = NULL;
  }
  control_point_ = from.control_point_;
  // @@protoc_insertion_point(copy_constructor:CUserMsg_ParticleManager.UpdateParticle)
}

void CUserMsg_ParticleManager_UpdateParticle::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&control_point_) -
      reinterpret_cast<char*>(&position_)) + sizeof(control_point_));
}

CUserMsg_ParticleManager_UpdateParticle::~CUserMsg_ParticleManager_UpdateParticle() {
  // @@protoc_insertion_point(destructor:CUserMsg_ParticleManager.UpdateParticle)
  SharedDtor();
}

void CUserMsg_ParticleManager_UpdateParticle::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
}

void CUserMsg_ParticleManager_UpdateParticle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMsg_ParticleManager_UpdateParticle::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMsg_ParticleManager_UpdateParticle& CUserMsg_ParticleManager_UpdateParticle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_UpdateParticle.base);
  return *internal_default_instance();
}


void CUserMsg_ParticleManager_UpdateParticle::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMsg_ParticleManager.UpdateParticle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(position_ != NULL);
    position_->Clear();
  }
  control_point_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMsg_ParticleManager_UpdateParticle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMsg_ParticleManager.UpdateParticle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 control_point = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_control_point();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &control_point_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgVector position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMsg_ParticleManager.UpdateParticle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMsg_ParticleManager.UpdateParticle)
  return false;
#undef DO_
}

void CUserMsg_ParticleManager_UpdateParticle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMsg_ParticleManager.UpdateParticle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 control_point = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->control_point(), output);
  }

  // optional .CMsgVector position = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_position(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMsg_ParticleManager.UpdateParticle)
}

::google::protobuf::uint8* CUserMsg_ParticleManager_UpdateParticle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMsg_ParticleManager.UpdateParticle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 control_point = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->control_point(), target);
  }

  // optional .CMsgVector position = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_position(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMsg_ParticleManager.UpdateParticle)
  return target;
}

size_t CUserMsg_ParticleManager_UpdateParticle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMsg_ParticleManager.UpdateParticle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .CMsgVector position = 2;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *position_);
    }

    // optional int32 control_point = 1;
    if (has_control_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->control_point());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMsg_ParticleManager_UpdateParticle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMsg_ParticleManager.UpdateParticle)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMsg_ParticleManager_UpdateParticle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMsg_ParticleManager_UpdateParticle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMsg_ParticleManager.UpdateParticle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMsg_ParticleManager.UpdateParticle)
    MergeFrom(*source);
  }
}

void CUserMsg_ParticleManager_UpdateParticle::MergeFrom(const CUserMsg_ParticleManager_UpdateParticle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMsg_ParticleManager.UpdateParticle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_position()->::CMsgVector::MergeFrom(from.position());
    }
    if (cached_has_bits & 0x00000002u) {
      control_point_ = from.control_point_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMsg_ParticleManager_UpdateParticle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMsg_ParticleManager.UpdateParticle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMsg_ParticleManager_UpdateParticle::CopyFrom(const CUserMsg_ParticleManager_UpdateParticle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMsg_ParticleManager.UpdateParticle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMsg_ParticleManager_UpdateParticle::IsInitialized() const {
  return true;
}

void CUserMsg_ParticleManager_UpdateParticle::Swap(CUserMsg_ParticleManager_UpdateParticle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMsg_ParticleManager_UpdateParticle::InternalSwap(CUserMsg_ParticleManager_UpdateParticle* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(control_point_, other->control_point_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMsg_ParticleManager_UpdateParticle::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMsg_ParticleManager_UpdateParticleFwd::InitAsDefaultInstance() {
  ::_CUserMsg_ParticleManager_UpdateParticleFwd_default_instance_._instance.get_mutable()->forward_ = const_cast< ::CMsgVector*>(
      ::CMsgVector::internal_default_instance());
}
void CUserMsg_ParticleManager_UpdateParticleFwd::clear_forward() {
  if (forward_ != NULL) forward_->Clear();
  clear_has_forward();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMsg_ParticleManager_UpdateParticleFwd::kControlPointFieldNumber;
const int CUserMsg_ParticleManager_UpdateParticleFwd::kForwardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMsg_ParticleManager_UpdateParticleFwd::CUserMsg_ParticleManager_UpdateParticleFwd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_UpdateParticleFwd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMsg_ParticleManager.UpdateParticleFwd)
}
CUserMsg_ParticleManager_UpdateParticleFwd::CUserMsg_ParticleManager_UpdateParticleFwd(const CUserMsg_ParticleManager_UpdateParticleFwd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_forward()) {
    forward_ = new ::CMsgVector(*from.forward_);
  } else {
    forward_ = NULL;
  }
  control_point_ = from.control_point_;
  // @@protoc_insertion_point(copy_constructor:CUserMsg_ParticleManager.UpdateParticleFwd)
}

void CUserMsg_ParticleManager_UpdateParticleFwd::SharedCtor() {
  ::memset(&forward_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&control_point_) -
      reinterpret_cast<char*>(&forward_)) + sizeof(control_point_));
}

CUserMsg_ParticleManager_UpdateParticleFwd::~CUserMsg_ParticleManager_UpdateParticleFwd() {
  // @@protoc_insertion_point(destructor:CUserMsg_ParticleManager.UpdateParticleFwd)
  SharedDtor();
}

void CUserMsg_ParticleManager_UpdateParticleFwd::SharedDtor() {
  if (this != internal_default_instance()) delete forward_;
}

void CUserMsg_ParticleManager_UpdateParticleFwd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMsg_ParticleManager_UpdateParticleFwd::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMsg_ParticleManager_UpdateParticleFwd& CUserMsg_ParticleManager_UpdateParticleFwd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_UpdateParticleFwd.base);
  return *internal_default_instance();
}


void CUserMsg_ParticleManager_UpdateParticleFwd::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMsg_ParticleManager.UpdateParticleFwd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(forward_ != NULL);
    forward_->Clear();
  }
  control_point_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMsg_ParticleManager_UpdateParticleFwd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMsg_ParticleManager.UpdateParticleFwd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 control_point = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_control_point();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &control_point_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgVector forward = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_forward()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMsg_ParticleManager.UpdateParticleFwd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMsg_ParticleManager.UpdateParticleFwd)
  return false;
#undef DO_
}

void CUserMsg_ParticleManager_UpdateParticleFwd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMsg_ParticleManager.UpdateParticleFwd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 control_point = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->control_point(), output);
  }

  // optional .CMsgVector forward = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_forward(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMsg_ParticleManager.UpdateParticleFwd)
}

::google::protobuf::uint8* CUserMsg_ParticleManager_UpdateParticleFwd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMsg_ParticleManager.UpdateParticleFwd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 control_point = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->control_point(), target);
  }

  // optional .CMsgVector forward = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_forward(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMsg_ParticleManager.UpdateParticleFwd)
  return target;
}

size_t CUserMsg_ParticleManager_UpdateParticleFwd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMsg_ParticleManager.UpdateParticleFwd)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .CMsgVector forward = 2;
    if (has_forward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *forward_);
    }

    // optional int32 control_point = 1;
    if (has_control_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->control_point());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMsg_ParticleManager_UpdateParticleFwd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMsg_ParticleManager.UpdateParticleFwd)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMsg_ParticleManager_UpdateParticleFwd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMsg_ParticleManager_UpdateParticleFwd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMsg_ParticleManager.UpdateParticleFwd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMsg_ParticleManager.UpdateParticleFwd)
    MergeFrom(*source);
  }
}

void CUserMsg_ParticleManager_UpdateParticleFwd::MergeFrom(const CUserMsg_ParticleManager_UpdateParticleFwd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMsg_ParticleManager.UpdateParticleFwd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_forward()->::CMsgVector::MergeFrom(from.forward());
    }
    if (cached_has_bits & 0x00000002u) {
      control_point_ = from.control_point_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMsg_ParticleManager_UpdateParticleFwd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMsg_ParticleManager.UpdateParticleFwd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMsg_ParticleManager_UpdateParticleFwd::CopyFrom(const CUserMsg_ParticleManager_UpdateParticleFwd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMsg_ParticleManager.UpdateParticleFwd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMsg_ParticleManager_UpdateParticleFwd::IsInitialized() const {
  return true;
}

void CUserMsg_ParticleManager_UpdateParticleFwd::Swap(CUserMsg_ParticleManager_UpdateParticleFwd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMsg_ParticleManager_UpdateParticleFwd::InternalSwap(CUserMsg_ParticleManager_UpdateParticleFwd* other) {
  using std::swap;
  swap(forward_, other->forward_);
  swap(control_point_, other->control_point_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMsg_ParticleManager_UpdateParticleFwd::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMsg_ParticleManager_UpdateParticleOrient::InitAsDefaultInstance() {
  ::_CUserMsg_ParticleManager_UpdateParticleOrient_default_instance_._instance.get_mutable()->forward_ = const_cast< ::CMsgVector*>(
      ::CMsgVector::internal_default_instance());
  ::_CUserMsg_ParticleManager_UpdateParticleOrient_default_instance_._instance.get_mutable()->right_ = const_cast< ::CMsgVector*>(
      ::CMsgVector::internal_default_instance());
  ::_CUserMsg_ParticleManager_UpdateParticleOrient_default_instance_._instance.get_mutable()->up_ = const_cast< ::CMsgVector*>(
      ::CMsgVector::internal_default_instance());
  ::_CUserMsg_ParticleManager_UpdateParticleOrient_default_instance_._instance.get_mutable()->left_ = const_cast< ::CMsgVector*>(
      ::CMsgVector::internal_default_instance());
}
void CUserMsg_ParticleManager_UpdateParticleOrient::clear_forward() {
  if (forward_ != NULL) forward_->Clear();
  clear_has_forward();
}
void CUserMsg_ParticleManager_UpdateParticleOrient::clear_right() {
  if (right_ != NULL) right_->Clear();
  clear_has_right();
}
void CUserMsg_ParticleManager_UpdateParticleOrient::clear_up() {
  if (up_ != NULL) up_->Clear();
  clear_has_up();
}
void CUserMsg_ParticleManager_UpdateParticleOrient::clear_left() {
  if (left_ != NULL) left_->Clear();
  clear_has_left();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMsg_ParticleManager_UpdateParticleOrient::kControlPointFieldNumber;
const int CUserMsg_ParticleManager_UpdateParticleOrient::kForwardFieldNumber;
const int CUserMsg_ParticleManager_UpdateParticleOrient::kRightFieldNumber;
const int CUserMsg_ParticleManager_UpdateParticleOrient::kUpFieldNumber;
const int CUserMsg_ParticleManager_UpdateParticleOrient::kLeftFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMsg_ParticleManager_UpdateParticleOrient::CUserMsg_ParticleManager_UpdateParticleOrient()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_UpdateParticleOrient.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMsg_ParticleManager.UpdateParticleOrient)
}
CUserMsg_ParticleManager_UpdateParticleOrient::CUserMsg_ParticleManager_UpdateParticleOrient(const CUserMsg_ParticleManager_UpdateParticleOrient& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_forward()) {
    forward_ = new ::CMsgVector(*from.forward_);
  } else {
    forward_ = NULL;
  }
  if (from.has_right()) {
    right_ = new ::CMsgVector(*from.right_);
  } else {
    right_ = NULL;
  }
  if (from.has_up()) {
    up_ = new ::CMsgVector(*from.up_);
  } else {
    up_ = NULL;
  }
  if (from.has_left()) {
    left_ = new ::CMsgVector(*from.left_);
  } else {
    left_ = NULL;
  }
  control_point_ = from.control_point_;
  // @@protoc_insertion_point(copy_constructor:CUserMsg_ParticleManager.UpdateParticleOrient)
}

void CUserMsg_ParticleManager_UpdateParticleOrient::SharedCtor() {
  ::memset(&forward_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&control_point_) -
      reinterpret_cast<char*>(&forward_)) + sizeof(control_point_));
}

CUserMsg_ParticleManager_UpdateParticleOrient::~CUserMsg_ParticleManager_UpdateParticleOrient() {
  // @@protoc_insertion_point(destructor:CUserMsg_ParticleManager.UpdateParticleOrient)
  SharedDtor();
}

void CUserMsg_ParticleManager_UpdateParticleOrient::SharedDtor() {
  if (this != internal_default_instance()) delete forward_;
  if (this != internal_default_instance()) delete right_;
  if (this != internal_default_instance()) delete up_;
  if (this != internal_default_instance()) delete left_;
}

void CUserMsg_ParticleManager_UpdateParticleOrient::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMsg_ParticleManager_UpdateParticleOrient::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMsg_ParticleManager_UpdateParticleOrient& CUserMsg_ParticleManager_UpdateParticleOrient::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_UpdateParticleOrient.base);
  return *internal_default_instance();
}


void CUserMsg_ParticleManager_UpdateParticleOrient::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMsg_ParticleManager.UpdateParticleOrient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(forward_ != NULL);
      forward_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(right_ != NULL);
      right_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(up_ != NULL);
      up_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(left_ != NULL);
      left_->Clear();
    }
  }
  control_point_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMsg_ParticleManager_UpdateParticleOrient::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMsg_ParticleManager.UpdateParticleOrient)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 control_point = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_control_point();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &control_point_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgVector forward = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_forward()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgVector right = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_right()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgVector up = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_up()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgVector left = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_left()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMsg_ParticleManager.UpdateParticleOrient)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMsg_ParticleManager.UpdateParticleOrient)
  return false;
#undef DO_
}

void CUserMsg_ParticleManager_UpdateParticleOrient::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMsg_ParticleManager.UpdateParticleOrient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 control_point = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->control_point(), output);
  }

  // optional .CMsgVector forward = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_forward(), output);
  }

  // optional .CMsgVector right = 3 [deprecated = true];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_right(), output);
  }

  // optional .CMsgVector up = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_up(), output);
  }

  // optional .CMsgVector left = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_left(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMsg_ParticleManager.UpdateParticleOrient)
}

::google::protobuf::uint8* CUserMsg_ParticleManager_UpdateParticleOrient::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMsg_ParticleManager.UpdateParticleOrient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 control_point = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->control_point(), target);
  }

  // optional .CMsgVector forward = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_forward(), deterministic, target);
  }

  // optional .CMsgVector right = 3 [deprecated = true];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_right(), deterministic, target);
  }

  // optional .CMsgVector up = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_up(), deterministic, target);
  }

  // optional .CMsgVector left = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_left(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMsg_ParticleManager.UpdateParticleOrient)
  return target;
}

size_t CUserMsg_ParticleManager_UpdateParticleOrient::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMsg_ParticleManager.UpdateParticleOrient)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional .CMsgVector forward = 2;
    if (has_forward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *forward_);
    }

    // optional .CMsgVector right = 3 [deprecated = true];
    if (has_right()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *right_);
    }

    // optional .CMsgVector up = 4;
    if (has_up()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *up_);
    }

    // optional .CMsgVector left = 5;
    if (has_left()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *left_);
    }

    // optional int32 control_point = 1;
    if (has_control_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->control_point());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMsg_ParticleManager_UpdateParticleOrient::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMsg_ParticleManager.UpdateParticleOrient)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMsg_ParticleManager_UpdateParticleOrient* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMsg_ParticleManager_UpdateParticleOrient>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMsg_ParticleManager.UpdateParticleOrient)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMsg_ParticleManager.UpdateParticleOrient)
    MergeFrom(*source);
  }
}

void CUserMsg_ParticleManager_UpdateParticleOrient::MergeFrom(const CUserMsg_ParticleManager_UpdateParticleOrient& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMsg_ParticleManager.UpdateParticleOrient)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_forward()->::CMsgVector::MergeFrom(from.forward());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_right()->::CMsgVector::MergeFrom(from.right());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_up()->::CMsgVector::MergeFrom(from.up());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_left()->::CMsgVector::MergeFrom(from.left());
    }
    if (cached_has_bits & 0x00000010u) {
      control_point_ = from.control_point_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMsg_ParticleManager_UpdateParticleOrient::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMsg_ParticleManager.UpdateParticleOrient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMsg_ParticleManager_UpdateParticleOrient::CopyFrom(const CUserMsg_ParticleManager_UpdateParticleOrient& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMsg_ParticleManager.UpdateParticleOrient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMsg_ParticleManager_UpdateParticleOrient::IsInitialized() const {
  return true;
}

void CUserMsg_ParticleManager_UpdateParticleOrient::Swap(CUserMsg_ParticleManager_UpdateParticleOrient* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMsg_ParticleManager_UpdateParticleOrient::InternalSwap(CUserMsg_ParticleManager_UpdateParticleOrient* other) {
  using std::swap;
  swap(forward_, other->forward_);
  swap(right_, other->right_);
  swap(up_, other->up_);
  swap(left_, other->left_);
  swap(control_point_, other->control_point_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMsg_ParticleManager_UpdateParticleOrient::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMsg_ParticleManager_UpdateParticleFallback::InitAsDefaultInstance() {
  ::_CUserMsg_ParticleManager_UpdateParticleFallback_default_instance_._instance.get_mutable()->position_ = const_cast< ::CMsgVector*>(
      ::CMsgVector::internal_default_instance());
}
void CUserMsg_ParticleManager_UpdateParticleFallback::clear_position() {
  if (position_ != NULL) position_->Clear();
  clear_has_position();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMsg_ParticleManager_UpdateParticleFallback::kControlPointFieldNumber;
const int CUserMsg_ParticleManager_UpdateParticleFallback::kPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMsg_ParticleManager_UpdateParticleFallback::CUserMsg_ParticleManager_UpdateParticleFallback()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_UpdateParticleFallback.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMsg_ParticleManager.UpdateParticleFallback)
}
CUserMsg_ParticleManager_UpdateParticleFallback::CUserMsg_ParticleManager_UpdateParticleFallback(const CUserMsg_ParticleManager_UpdateParticleFallback& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::CMsgVector(*from.position_);
  } else {
    position_ = NULL;
  }
  control_point_ = from.control_point_;
  // @@protoc_insertion_point(copy_constructor:CUserMsg_ParticleManager.UpdateParticleFallback)
}

void CUserMsg_ParticleManager_UpdateParticleFallback::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&control_point_) -
      reinterpret_cast<char*>(&position_)) + sizeof(control_point_));
}

CUserMsg_ParticleManager_UpdateParticleFallback::~CUserMsg_ParticleManager_UpdateParticleFallback() {
  // @@protoc_insertion_point(destructor:CUserMsg_ParticleManager.UpdateParticleFallback)
  SharedDtor();
}

void CUserMsg_ParticleManager_UpdateParticleFallback::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
}

void CUserMsg_ParticleManager_UpdateParticleFallback::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMsg_ParticleManager_UpdateParticleFallback::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMsg_ParticleManager_UpdateParticleFallback& CUserMsg_ParticleManager_UpdateParticleFallback::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_UpdateParticleFallback.base);
  return *internal_default_instance();
}


void CUserMsg_ParticleManager_UpdateParticleFallback::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMsg_ParticleManager.UpdateParticleFallback)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(position_ != NULL);
    position_->Clear();
  }
  control_point_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMsg_ParticleManager_UpdateParticleFallback::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMsg_ParticleManager.UpdateParticleFallback)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 control_point = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_control_point();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &control_point_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgVector position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMsg_ParticleManager.UpdateParticleFallback)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMsg_ParticleManager.UpdateParticleFallback)
  return false;
#undef DO_
}

void CUserMsg_ParticleManager_UpdateParticleFallback::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMsg_ParticleManager.UpdateParticleFallback)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 control_point = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->control_point(), output);
  }

  // optional .CMsgVector position = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_position(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMsg_ParticleManager.UpdateParticleFallback)
}

::google::protobuf::uint8* CUserMsg_ParticleManager_UpdateParticleFallback::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMsg_ParticleManager.UpdateParticleFallback)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 control_point = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->control_point(), target);
  }

  // optional .CMsgVector position = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_position(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMsg_ParticleManager.UpdateParticleFallback)
  return target;
}

size_t CUserMsg_ParticleManager_UpdateParticleFallback::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMsg_ParticleManager.UpdateParticleFallback)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .CMsgVector position = 2;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *position_);
    }

    // optional int32 control_point = 1;
    if (has_control_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->control_point());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMsg_ParticleManager_UpdateParticleFallback::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMsg_ParticleManager.UpdateParticleFallback)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMsg_ParticleManager_UpdateParticleFallback* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMsg_ParticleManager_UpdateParticleFallback>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMsg_ParticleManager.UpdateParticleFallback)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMsg_ParticleManager.UpdateParticleFallback)
    MergeFrom(*source);
  }
}

void CUserMsg_ParticleManager_UpdateParticleFallback::MergeFrom(const CUserMsg_ParticleManager_UpdateParticleFallback& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMsg_ParticleManager.UpdateParticleFallback)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_position()->::CMsgVector::MergeFrom(from.position());
    }
    if (cached_has_bits & 0x00000002u) {
      control_point_ = from.control_point_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMsg_ParticleManager_UpdateParticleFallback::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMsg_ParticleManager.UpdateParticleFallback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMsg_ParticleManager_UpdateParticleFallback::CopyFrom(const CUserMsg_ParticleManager_UpdateParticleFallback& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMsg_ParticleManager.UpdateParticleFallback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMsg_ParticleManager_UpdateParticleFallback::IsInitialized() const {
  return true;
}

void CUserMsg_ParticleManager_UpdateParticleFallback::Swap(CUserMsg_ParticleManager_UpdateParticleFallback* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMsg_ParticleManager_UpdateParticleFallback::InternalSwap(CUserMsg_ParticleManager_UpdateParticleFallback* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(control_point_, other->control_point_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMsg_ParticleManager_UpdateParticleFallback::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMsg_ParticleManager_UpdateParticleOffset::InitAsDefaultInstance() {
  ::_CUserMsg_ParticleManager_UpdateParticleOffset_default_instance_._instance.get_mutable()->origin_offset_ = const_cast< ::CMsgVector*>(
      ::CMsgVector::internal_default_instance());
  ::_CUserMsg_ParticleManager_UpdateParticleOffset_default_instance_._instance.get_mutable()->angle_offset_ = const_cast< ::CMsgQAngle*>(
      ::CMsgQAngle::internal_default_instance());
}
void CUserMsg_ParticleManager_UpdateParticleOffset::clear_origin_offset() {
  if (origin_offset_ != NULL) origin_offset_->Clear();
  clear_has_origin_offset();
}
void CUserMsg_ParticleManager_UpdateParticleOffset::clear_angle_offset() {
  if (angle_offset_ != NULL) angle_offset_->Clear();
  clear_has_angle_offset();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMsg_ParticleManager_UpdateParticleOffset::kControlPointFieldNumber;
const int CUserMsg_ParticleManager_UpdateParticleOffset::kOriginOffsetFieldNumber;
const int CUserMsg_ParticleManager_UpdateParticleOffset::kAngleOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMsg_ParticleManager_UpdateParticleOffset::CUserMsg_ParticleManager_UpdateParticleOffset()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_UpdateParticleOffset.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMsg_ParticleManager.UpdateParticleOffset)
}
CUserMsg_ParticleManager_UpdateParticleOffset::CUserMsg_ParticleManager_UpdateParticleOffset(const CUserMsg_ParticleManager_UpdateParticleOffset& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_origin_offset()) {
    origin_offset_ = new ::CMsgVector(*from.origin_offset_);
  } else {
    origin_offset_ = NULL;
  }
  if (from.has_angle_offset()) {
    angle_offset_ = new ::CMsgQAngle(*from.angle_offset_);
  } else {
    angle_offset_ = NULL;
  }
  control_point_ = from.control_point_;
  // @@protoc_insertion_point(copy_constructor:CUserMsg_ParticleManager.UpdateParticleOffset)
}

void CUserMsg_ParticleManager_UpdateParticleOffset::SharedCtor() {
  ::memset(&origin_offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&control_point_) -
      reinterpret_cast<char*>(&origin_offset_)) + sizeof(control_point_));
}

CUserMsg_ParticleManager_UpdateParticleOffset::~CUserMsg_ParticleManager_UpdateParticleOffset() {
  // @@protoc_insertion_point(destructor:CUserMsg_ParticleManager.UpdateParticleOffset)
  SharedDtor();
}

void CUserMsg_ParticleManager_UpdateParticleOffset::SharedDtor() {
  if (this != internal_default_instance()) delete origin_offset_;
  if (this != internal_default_instance()) delete angle_offset_;
}

void CUserMsg_ParticleManager_UpdateParticleOffset::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMsg_ParticleManager_UpdateParticleOffset::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMsg_ParticleManager_UpdateParticleOffset& CUserMsg_ParticleManager_UpdateParticleOffset::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_UpdateParticleOffset.base);
  return *internal_default_instance();
}


void CUserMsg_ParticleManager_UpdateParticleOffset::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMsg_ParticleManager.UpdateParticleOffset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(origin_offset_ != NULL);
      origin_offset_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(angle_offset_ != NULL);
      angle_offset_->Clear();
    }
  }
  control_point_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMsg_ParticleManager_UpdateParticleOffset::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMsg_ParticleManager.UpdateParticleOffset)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 control_point = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_control_point();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &control_point_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgVector origin_offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_origin_offset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgQAngle angle_offset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_angle_offset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMsg_ParticleManager.UpdateParticleOffset)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMsg_ParticleManager.UpdateParticleOffset)
  return false;
#undef DO_
}

void CUserMsg_ParticleManager_UpdateParticleOffset::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMsg_ParticleManager.UpdateParticleOffset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 control_point = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->control_point(), output);
  }

  // optional .CMsgVector origin_offset = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_origin_offset(), output);
  }

  // optional .CMsgQAngle angle_offset = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_angle_offset(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMsg_ParticleManager.UpdateParticleOffset)
}

::google::protobuf::uint8* CUserMsg_ParticleManager_UpdateParticleOffset::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMsg_ParticleManager.UpdateParticleOffset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 control_point = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->control_point(), target);
  }

  // optional .CMsgVector origin_offset = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_origin_offset(), deterministic, target);
  }

  // optional .CMsgQAngle angle_offset = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_angle_offset(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMsg_ParticleManager.UpdateParticleOffset)
  return target;
}

size_t CUserMsg_ParticleManager_UpdateParticleOffset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMsg_ParticleManager.UpdateParticleOffset)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .CMsgVector origin_offset = 2;
    if (has_origin_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *origin_offset_);
    }

    // optional .CMsgQAngle angle_offset = 3;
    if (has_angle_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *angle_offset_);
    }

    // optional int32 control_point = 1;
    if (has_control_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->control_point());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMsg_ParticleManager_UpdateParticleOffset::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMsg_ParticleManager.UpdateParticleOffset)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMsg_ParticleManager_UpdateParticleOffset* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMsg_ParticleManager_UpdateParticleOffset>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMsg_ParticleManager.UpdateParticleOffset)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMsg_ParticleManager.UpdateParticleOffset)
    MergeFrom(*source);
  }
}

void CUserMsg_ParticleManager_UpdateParticleOffset::MergeFrom(const CUserMsg_ParticleManager_UpdateParticleOffset& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMsg_ParticleManager.UpdateParticleOffset)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_origin_offset()->::CMsgVector::MergeFrom(from.origin_offset());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_angle_offset()->::CMsgQAngle::MergeFrom(from.angle_offset());
    }
    if (cached_has_bits & 0x00000004u) {
      control_point_ = from.control_point_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMsg_ParticleManager_UpdateParticleOffset::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMsg_ParticleManager.UpdateParticleOffset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMsg_ParticleManager_UpdateParticleOffset::CopyFrom(const CUserMsg_ParticleManager_UpdateParticleOffset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMsg_ParticleManager.UpdateParticleOffset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMsg_ParticleManager_UpdateParticleOffset::IsInitialized() const {
  return true;
}

void CUserMsg_ParticleManager_UpdateParticleOffset::Swap(CUserMsg_ParticleManager_UpdateParticleOffset* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMsg_ParticleManager_UpdateParticleOffset::InternalSwap(CUserMsg_ParticleManager_UpdateParticleOffset* other) {
  using std::swap;
  swap(origin_offset_, other->origin_offset_);
  swap(angle_offset_, other->angle_offset_);
  swap(control_point_, other->control_point_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMsg_ParticleManager_UpdateParticleOffset::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMsg_ParticleManager_UpdateParticleEnt::InitAsDefaultInstance() {
  ::_CUserMsg_ParticleManager_UpdateParticleEnt_default_instance_._instance.get_mutable()->fallback_position_ = const_cast< ::CMsgVector*>(
      ::CMsgVector::internal_default_instance());
}
void CUserMsg_ParticleManager_UpdateParticleEnt::clear_fallback_position() {
  if (fallback_position_ != NULL) fallback_position_->Clear();
  clear_has_fallback_position();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMsg_ParticleManager_UpdateParticleEnt::kControlPointFieldNumber;
const int CUserMsg_ParticleManager_UpdateParticleEnt::kEntityHandleFieldNumber;
const int CUserMsg_ParticleManager_UpdateParticleEnt::kAttachTypeFieldNumber;
const int CUserMsg_ParticleManager_UpdateParticleEnt::kAttachmentFieldNumber;
const int CUserMsg_ParticleManager_UpdateParticleEnt::kFallbackPositionFieldNumber;
const int CUserMsg_ParticleManager_UpdateParticleEnt::kIncludeWearablesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMsg_ParticleManager_UpdateParticleEnt::CUserMsg_ParticleManager_UpdateParticleEnt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_UpdateParticleEnt.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMsg_ParticleManager.UpdateParticleEnt)
}
CUserMsg_ParticleManager_UpdateParticleEnt::CUserMsg_ParticleManager_UpdateParticleEnt(const CUserMsg_ParticleManager_UpdateParticleEnt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_fallback_position()) {
    fallback_position_ = new ::CMsgVector(*from.fallback_position_);
  } else {
    fallback_position_ = NULL;
  }
  ::memcpy(&control_point_, &from.control_point_,
    static_cast<size_t>(reinterpret_cast<char*>(&include_wearables_) -
    reinterpret_cast<char*>(&control_point_)) + sizeof(include_wearables_));
  // @@protoc_insertion_point(copy_constructor:CUserMsg_ParticleManager.UpdateParticleEnt)
}

void CUserMsg_ParticleManager_UpdateParticleEnt::SharedCtor() {
  ::memset(&fallback_position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&include_wearables_) -
      reinterpret_cast<char*>(&fallback_position_)) + sizeof(include_wearables_));
}

CUserMsg_ParticleManager_UpdateParticleEnt::~CUserMsg_ParticleManager_UpdateParticleEnt() {
  // @@protoc_insertion_point(destructor:CUserMsg_ParticleManager.UpdateParticleEnt)
  SharedDtor();
}

void CUserMsg_ParticleManager_UpdateParticleEnt::SharedDtor() {
  if (this != internal_default_instance()) delete fallback_position_;
}

void CUserMsg_ParticleManager_UpdateParticleEnt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMsg_ParticleManager_UpdateParticleEnt::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMsg_ParticleManager_UpdateParticleEnt& CUserMsg_ParticleManager_UpdateParticleEnt::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_UpdateParticleEnt.base);
  return *internal_default_instance();
}


void CUserMsg_ParticleManager_UpdateParticleEnt::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMsg_ParticleManager.UpdateParticleEnt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(fallback_position_ != NULL);
    fallback_position_->Clear();
  }
  if (cached_has_bits & 62u) {
    ::memset(&control_point_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&include_wearables_) -
        reinterpret_cast<char*>(&control_point_)) + sizeof(include_wearables_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMsg_ParticleManager_UpdateParticleEnt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMsg_ParticleManager.UpdateParticleEnt)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 control_point = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_control_point();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &control_point_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 entity_handle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_entity_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entity_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 attach_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_attach_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attach_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 attachment = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_attachment();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attachment_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgVector fallback_position = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fallback_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool include_wearables = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_include_wearables();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &include_wearables_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMsg_ParticleManager.UpdateParticleEnt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMsg_ParticleManager.UpdateParticleEnt)
  return false;
#undef DO_
}

void CUserMsg_ParticleManager_UpdateParticleEnt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMsg_ParticleManager.UpdateParticleEnt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 control_point = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->control_point(), output);
  }

  // optional int32 entity_handle = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->entity_handle(), output);
  }

  // optional int32 attach_type = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->attach_type(), output);
  }

  // optional int32 attachment = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->attachment(), output);
  }

  // optional .CMsgVector fallback_position = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_fallback_position(), output);
  }

  // optional bool include_wearables = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->include_wearables(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMsg_ParticleManager.UpdateParticleEnt)
}

::google::protobuf::uint8* CUserMsg_ParticleManager_UpdateParticleEnt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMsg_ParticleManager.UpdateParticleEnt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 control_point = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->control_point(), target);
  }

  // optional int32 entity_handle = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->entity_handle(), target);
  }

  // optional int32 attach_type = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->attach_type(), target);
  }

  // optional int32 attachment = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->attachment(), target);
  }

  // optional .CMsgVector fallback_position = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_fallback_position(), deterministic, target);
  }

  // optional bool include_wearables = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->include_wearables(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMsg_ParticleManager.UpdateParticleEnt)
  return target;
}

size_t CUserMsg_ParticleManager_UpdateParticleEnt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMsg_ParticleManager.UpdateParticleEnt)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional .CMsgVector fallback_position = 5;
    if (has_fallback_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fallback_position_);
    }

    // optional int32 control_point = 1;
    if (has_control_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->control_point());
    }

    // optional int32 entity_handle = 2;
    if (has_entity_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entity_handle());
    }

    // optional int32 attach_type = 3;
    if (has_attach_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attach_type());
    }

    // optional int32 attachment = 4;
    if (has_attachment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attachment());
    }

    // optional bool include_wearables = 6;
    if (has_include_wearables()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMsg_ParticleManager_UpdateParticleEnt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMsg_ParticleManager.UpdateParticleEnt)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMsg_ParticleManager_UpdateParticleEnt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMsg_ParticleManager_UpdateParticleEnt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMsg_ParticleManager.UpdateParticleEnt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMsg_ParticleManager.UpdateParticleEnt)
    MergeFrom(*source);
  }
}

void CUserMsg_ParticleManager_UpdateParticleEnt::MergeFrom(const CUserMsg_ParticleManager_UpdateParticleEnt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMsg_ParticleManager.UpdateParticleEnt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_fallback_position()->::CMsgVector::MergeFrom(from.fallback_position());
    }
    if (cached_has_bits & 0x00000002u) {
      control_point_ = from.control_point_;
    }
    if (cached_has_bits & 0x00000004u) {
      entity_handle_ = from.entity_handle_;
    }
    if (cached_has_bits & 0x00000008u) {
      attach_type_ = from.attach_type_;
    }
    if (cached_has_bits & 0x00000010u) {
      attachment_ = from.attachment_;
    }
    if (cached_has_bits & 0x00000020u) {
      include_wearables_ = from.include_wearables_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMsg_ParticleManager_UpdateParticleEnt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMsg_ParticleManager.UpdateParticleEnt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMsg_ParticleManager_UpdateParticleEnt::CopyFrom(const CUserMsg_ParticleManager_UpdateParticleEnt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMsg_ParticleManager.UpdateParticleEnt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMsg_ParticleManager_UpdateParticleEnt::IsInitialized() const {
  return true;
}

void CUserMsg_ParticleManager_UpdateParticleEnt::Swap(CUserMsg_ParticleManager_UpdateParticleEnt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMsg_ParticleManager_UpdateParticleEnt::InternalSwap(CUserMsg_ParticleManager_UpdateParticleEnt* other) {
  using std::swap;
  swap(fallback_position_, other->fallback_position_);
  swap(control_point_, other->control_point_);
  swap(entity_handle_, other->entity_handle_);
  swap(attach_type_, other->attach_type_);
  swap(attachment_, other->attachment_);
  swap(include_wearables_, other->include_wearables_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMsg_ParticleManager_UpdateParticleEnt::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMsg_ParticleManager_UpdateParticleSetFrozen::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMsg_ParticleManager_UpdateParticleSetFrozen::kSetFrozenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMsg_ParticleManager_UpdateParticleSetFrozen::CUserMsg_ParticleManager_UpdateParticleSetFrozen()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_UpdateParticleSetFrozen.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMsg_ParticleManager.UpdateParticleSetFrozen)
}
CUserMsg_ParticleManager_UpdateParticleSetFrozen::CUserMsg_ParticleManager_UpdateParticleSetFrozen(const CUserMsg_ParticleManager_UpdateParticleSetFrozen& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  set_frozen_ = from.set_frozen_;
  // @@protoc_insertion_point(copy_constructor:CUserMsg_ParticleManager.UpdateParticleSetFrozen)
}

void CUserMsg_ParticleManager_UpdateParticleSetFrozen::SharedCtor() {
  set_frozen_ = false;
}

CUserMsg_ParticleManager_UpdateParticleSetFrozen::~CUserMsg_ParticleManager_UpdateParticleSetFrozen() {
  // @@protoc_insertion_point(destructor:CUserMsg_ParticleManager.UpdateParticleSetFrozen)
  SharedDtor();
}

void CUserMsg_ParticleManager_UpdateParticleSetFrozen::SharedDtor() {
}

void CUserMsg_ParticleManager_UpdateParticleSetFrozen::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMsg_ParticleManager_UpdateParticleSetFrozen::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMsg_ParticleManager_UpdateParticleSetFrozen& CUserMsg_ParticleManager_UpdateParticleSetFrozen::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_UpdateParticleSetFrozen.base);
  return *internal_default_instance();
}


void CUserMsg_ParticleManager_UpdateParticleSetFrozen::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMsg_ParticleManager.UpdateParticleSetFrozen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_frozen_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMsg_ParticleManager_UpdateParticleSetFrozen::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMsg_ParticleManager.UpdateParticleSetFrozen)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool set_frozen = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_set_frozen();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &set_frozen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMsg_ParticleManager.UpdateParticleSetFrozen)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMsg_ParticleManager.UpdateParticleSetFrozen)
  return false;
#undef DO_
}

void CUserMsg_ParticleManager_UpdateParticleSetFrozen::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMsg_ParticleManager.UpdateParticleSetFrozen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool set_frozen = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->set_frozen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMsg_ParticleManager.UpdateParticleSetFrozen)
}

::google::protobuf::uint8* CUserMsg_ParticleManager_UpdateParticleSetFrozen::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMsg_ParticleManager.UpdateParticleSetFrozen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool set_frozen = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->set_frozen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMsg_ParticleManager.UpdateParticleSetFrozen)
  return target;
}

size_t CUserMsg_ParticleManager_UpdateParticleSetFrozen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMsg_ParticleManager.UpdateParticleSetFrozen)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bool set_frozen = 1;
  if (has_set_frozen()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMsg_ParticleManager_UpdateParticleSetFrozen::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMsg_ParticleManager.UpdateParticleSetFrozen)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMsg_ParticleManager_UpdateParticleSetFrozen* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMsg_ParticleManager_UpdateParticleSetFrozen>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMsg_ParticleManager.UpdateParticleSetFrozen)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMsg_ParticleManager.UpdateParticleSetFrozen)
    MergeFrom(*source);
  }
}

void CUserMsg_ParticleManager_UpdateParticleSetFrozen::MergeFrom(const CUserMsg_ParticleManager_UpdateParticleSetFrozen& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMsg_ParticleManager.UpdateParticleSetFrozen)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_set_frozen()) {
    set_set_frozen(from.set_frozen());
  }
}

void CUserMsg_ParticleManager_UpdateParticleSetFrozen::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMsg_ParticleManager.UpdateParticleSetFrozen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMsg_ParticleManager_UpdateParticleSetFrozen::CopyFrom(const CUserMsg_ParticleManager_UpdateParticleSetFrozen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMsg_ParticleManager.UpdateParticleSetFrozen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMsg_ParticleManager_UpdateParticleSetFrozen::IsInitialized() const {
  return true;
}

void CUserMsg_ParticleManager_UpdateParticleSetFrozen::Swap(CUserMsg_ParticleManager_UpdateParticleSetFrozen* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMsg_ParticleManager_UpdateParticleSetFrozen::InternalSwap(CUserMsg_ParticleManager_UpdateParticleSetFrozen* other) {
  using std::swap;
  swap(set_frozen_, other->set_frozen_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMsg_ParticleManager_UpdateParticleSetFrozen::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMsg_ParticleManager_UpdateParticleShouldDraw::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMsg_ParticleManager_UpdateParticleShouldDraw::kShouldDrawFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMsg_ParticleManager_UpdateParticleShouldDraw::CUserMsg_ParticleManager_UpdateParticleShouldDraw()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_UpdateParticleShouldDraw.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMsg_ParticleManager.UpdateParticleShouldDraw)
}
CUserMsg_ParticleManager_UpdateParticleShouldDraw::CUserMsg_ParticleManager_UpdateParticleShouldDraw(const CUserMsg_ParticleManager_UpdateParticleShouldDraw& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  should_draw_ = from.should_draw_;
  // @@protoc_insertion_point(copy_constructor:CUserMsg_ParticleManager.UpdateParticleShouldDraw)
}

void CUserMsg_ParticleManager_UpdateParticleShouldDraw::SharedCtor() {
  should_draw_ = false;
}

CUserMsg_ParticleManager_UpdateParticleShouldDraw::~CUserMsg_ParticleManager_UpdateParticleShouldDraw() {
  // @@protoc_insertion_point(destructor:CUserMsg_ParticleManager.UpdateParticleShouldDraw)
  SharedDtor();
}

void CUserMsg_ParticleManager_UpdateParticleShouldDraw::SharedDtor() {
}

void CUserMsg_ParticleManager_UpdateParticleShouldDraw::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMsg_ParticleManager_UpdateParticleShouldDraw::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMsg_ParticleManager_UpdateParticleShouldDraw& CUserMsg_ParticleManager_UpdateParticleShouldDraw::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_UpdateParticleShouldDraw.base);
  return *internal_default_instance();
}


void CUserMsg_ParticleManager_UpdateParticleShouldDraw::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMsg_ParticleManager.UpdateParticleShouldDraw)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  should_draw_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMsg_ParticleManager_UpdateParticleShouldDraw::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMsg_ParticleManager.UpdateParticleShouldDraw)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool should_draw = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_should_draw();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &should_draw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMsg_ParticleManager.UpdateParticleShouldDraw)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMsg_ParticleManager.UpdateParticleShouldDraw)
  return false;
#undef DO_
}

void CUserMsg_ParticleManager_UpdateParticleShouldDraw::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMsg_ParticleManager.UpdateParticleShouldDraw)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool should_draw = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->should_draw(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMsg_ParticleManager.UpdateParticleShouldDraw)
}

::google::protobuf::uint8* CUserMsg_ParticleManager_UpdateParticleShouldDraw::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMsg_ParticleManager.UpdateParticleShouldDraw)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool should_draw = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->should_draw(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMsg_ParticleManager.UpdateParticleShouldDraw)
  return target;
}

size_t CUserMsg_ParticleManager_UpdateParticleShouldDraw::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMsg_ParticleManager.UpdateParticleShouldDraw)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bool should_draw = 1;
  if (has_should_draw()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMsg_ParticleManager_UpdateParticleShouldDraw::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMsg_ParticleManager.UpdateParticleShouldDraw)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMsg_ParticleManager_UpdateParticleShouldDraw* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMsg_ParticleManager_UpdateParticleShouldDraw>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMsg_ParticleManager.UpdateParticleShouldDraw)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMsg_ParticleManager.UpdateParticleShouldDraw)
    MergeFrom(*source);
  }
}

void CUserMsg_ParticleManager_UpdateParticleShouldDraw::MergeFrom(const CUserMsg_ParticleManager_UpdateParticleShouldDraw& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMsg_ParticleManager.UpdateParticleShouldDraw)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_should_draw()) {
    set_should_draw(from.should_draw());
  }
}

void CUserMsg_ParticleManager_UpdateParticleShouldDraw::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMsg_ParticleManager.UpdateParticleShouldDraw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMsg_ParticleManager_UpdateParticleShouldDraw::CopyFrom(const CUserMsg_ParticleManager_UpdateParticleShouldDraw& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMsg_ParticleManager.UpdateParticleShouldDraw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMsg_ParticleManager_UpdateParticleShouldDraw::IsInitialized() const {
  return true;
}

void CUserMsg_ParticleManager_UpdateParticleShouldDraw::Swap(CUserMsg_ParticleManager_UpdateParticleShouldDraw* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMsg_ParticleManager_UpdateParticleShouldDraw::InternalSwap(CUserMsg_ParticleManager_UpdateParticleShouldDraw* other) {
  using std::swap;
  swap(should_draw_, other->should_draw_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMsg_ParticleManager_UpdateParticleShouldDraw::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMsg_ParticleManager_ChangeControlPointAttachment::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMsg_ParticleManager_ChangeControlPointAttachment::kAttachmentOldFieldNumber;
const int CUserMsg_ParticleManager_ChangeControlPointAttachment::kAttachmentNewFieldNumber;
const int CUserMsg_ParticleManager_ChangeControlPointAttachment::kEntityHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMsg_ParticleManager_ChangeControlPointAttachment::CUserMsg_ParticleManager_ChangeControlPointAttachment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_ChangeControlPointAttachment.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMsg_ParticleManager.ChangeControlPointAttachment)
}
CUserMsg_ParticleManager_ChangeControlPointAttachment::CUserMsg_ParticleManager_ChangeControlPointAttachment(const CUserMsg_ParticleManager_ChangeControlPointAttachment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&attachment_old_, &from.attachment_old_,
    static_cast<size_t>(reinterpret_cast<char*>(&entity_handle_) -
    reinterpret_cast<char*>(&attachment_old_)) + sizeof(entity_handle_));
  // @@protoc_insertion_point(copy_constructor:CUserMsg_ParticleManager.ChangeControlPointAttachment)
}

void CUserMsg_ParticleManager_ChangeControlPointAttachment::SharedCtor() {
  ::memset(&attachment_old_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_handle_) -
      reinterpret_cast<char*>(&attachment_old_)) + sizeof(entity_handle_));
}

CUserMsg_ParticleManager_ChangeControlPointAttachment::~CUserMsg_ParticleManager_ChangeControlPointAttachment() {
  // @@protoc_insertion_point(destructor:CUserMsg_ParticleManager.ChangeControlPointAttachment)
  SharedDtor();
}

void CUserMsg_ParticleManager_ChangeControlPointAttachment::SharedDtor() {
}

void CUserMsg_ParticleManager_ChangeControlPointAttachment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMsg_ParticleManager_ChangeControlPointAttachment::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMsg_ParticleManager_ChangeControlPointAttachment& CUserMsg_ParticleManager_ChangeControlPointAttachment::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_ChangeControlPointAttachment.base);
  return *internal_default_instance();
}


void CUserMsg_ParticleManager_ChangeControlPointAttachment::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMsg_ParticleManager.ChangeControlPointAttachment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&attachment_old_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&entity_handle_) -
        reinterpret_cast<char*>(&attachment_old_)) + sizeof(entity_handle_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMsg_ParticleManager_ChangeControlPointAttachment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMsg_ParticleManager.ChangeControlPointAttachment)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 attachment_old = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_attachment_old();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attachment_old_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 attachment_new = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_attachment_new();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attachment_new_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 entity_handle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_entity_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entity_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMsg_ParticleManager.ChangeControlPointAttachment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMsg_ParticleManager.ChangeControlPointAttachment)
  return false;
#undef DO_
}

void CUserMsg_ParticleManager_ChangeControlPointAttachment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMsg_ParticleManager.ChangeControlPointAttachment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 attachment_old = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->attachment_old(), output);
  }

  // optional int32 attachment_new = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->attachment_new(), output);
  }

  // optional int32 entity_handle = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->entity_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMsg_ParticleManager.ChangeControlPointAttachment)
}

::google::protobuf::uint8* CUserMsg_ParticleManager_ChangeControlPointAttachment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMsg_ParticleManager.ChangeControlPointAttachment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 attachment_old = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->attachment_old(), target);
  }

  // optional int32 attachment_new = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->attachment_new(), target);
  }

  // optional int32 entity_handle = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->entity_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMsg_ParticleManager.ChangeControlPointAttachment)
  return target;
}

size_t CUserMsg_ParticleManager_ChangeControlPointAttachment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMsg_ParticleManager.ChangeControlPointAttachment)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 attachment_old = 1;
    if (has_attachment_old()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attachment_old());
    }

    // optional int32 attachment_new = 2;
    if (has_attachment_new()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attachment_new());
    }

    // optional int32 entity_handle = 3;
    if (has_entity_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entity_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMsg_ParticleManager_ChangeControlPointAttachment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMsg_ParticleManager.ChangeControlPointAttachment)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMsg_ParticleManager_ChangeControlPointAttachment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMsg_ParticleManager_ChangeControlPointAttachment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMsg_ParticleManager.ChangeControlPointAttachment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMsg_ParticleManager.ChangeControlPointAttachment)
    MergeFrom(*source);
  }
}

void CUserMsg_ParticleManager_ChangeControlPointAttachment::MergeFrom(const CUserMsg_ParticleManager_ChangeControlPointAttachment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMsg_ParticleManager.ChangeControlPointAttachment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      attachment_old_ = from.attachment_old_;
    }
    if (cached_has_bits & 0x00000002u) {
      attachment_new_ = from.attachment_new_;
    }
    if (cached_has_bits & 0x00000004u) {
      entity_handle_ = from.entity_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMsg_ParticleManager_ChangeControlPointAttachment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMsg_ParticleManager.ChangeControlPointAttachment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMsg_ParticleManager_ChangeControlPointAttachment::CopyFrom(const CUserMsg_ParticleManager_ChangeControlPointAttachment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMsg_ParticleManager.ChangeControlPointAttachment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMsg_ParticleManager_ChangeControlPointAttachment::IsInitialized() const {
  return true;
}

void CUserMsg_ParticleManager_ChangeControlPointAttachment::Swap(CUserMsg_ParticleManager_ChangeControlPointAttachment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMsg_ParticleManager_ChangeControlPointAttachment::InternalSwap(CUserMsg_ParticleManager_ChangeControlPointAttachment* other) {
  using std::swap;
  swap(attachment_old_, other->attachment_old_);
  swap(attachment_new_, other->attachment_new_);
  swap(entity_handle_, other->entity_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMsg_ParticleManager_ChangeControlPointAttachment::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMsg_ParticleManager_UpdateEntityPosition::InitAsDefaultInstance() {
  ::_CUserMsg_ParticleManager_UpdateEntityPosition_default_instance_._instance.get_mutable()->position_ = const_cast< ::CMsgVector*>(
      ::CMsgVector::internal_default_instance());
}
void CUserMsg_ParticleManager_UpdateEntityPosition::clear_position() {
  if (position_ != NULL) position_->Clear();
  clear_has_position();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMsg_ParticleManager_UpdateEntityPosition::kEntityHandleFieldNumber;
const int CUserMsg_ParticleManager_UpdateEntityPosition::kPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMsg_ParticleManager_UpdateEntityPosition::CUserMsg_ParticleManager_UpdateEntityPosition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_UpdateEntityPosition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMsg_ParticleManager.UpdateEntityPosition)
}
CUserMsg_ParticleManager_UpdateEntityPosition::CUserMsg_ParticleManager_UpdateEntityPosition(const CUserMsg_ParticleManager_UpdateEntityPosition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::CMsgVector(*from.position_);
  } else {
    position_ = NULL;
  }
  entity_handle_ = from.entity_handle_;
  // @@protoc_insertion_point(copy_constructor:CUserMsg_ParticleManager.UpdateEntityPosition)
}

void CUserMsg_ParticleManager_UpdateEntityPosition::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_handle_) -
      reinterpret_cast<char*>(&position_)) + sizeof(entity_handle_));
}

CUserMsg_ParticleManager_UpdateEntityPosition::~CUserMsg_ParticleManager_UpdateEntityPosition() {
  // @@protoc_insertion_point(destructor:CUserMsg_ParticleManager.UpdateEntityPosition)
  SharedDtor();
}

void CUserMsg_ParticleManager_UpdateEntityPosition::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
}

void CUserMsg_ParticleManager_UpdateEntityPosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMsg_ParticleManager_UpdateEntityPosition::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMsg_ParticleManager_UpdateEntityPosition& CUserMsg_ParticleManager_UpdateEntityPosition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_UpdateEntityPosition.base);
  return *internal_default_instance();
}


void CUserMsg_ParticleManager_UpdateEntityPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMsg_ParticleManager.UpdateEntityPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(position_ != NULL);
    position_->Clear();
  }
  entity_handle_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMsg_ParticleManager_UpdateEntityPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMsg_ParticleManager.UpdateEntityPosition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 entity_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_entity_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entity_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgVector position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMsg_ParticleManager.UpdateEntityPosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMsg_ParticleManager.UpdateEntityPosition)
  return false;
#undef DO_
}

void CUserMsg_ParticleManager_UpdateEntityPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMsg_ParticleManager.UpdateEntityPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 entity_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->entity_handle(), output);
  }

  // optional .CMsgVector position = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_position(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMsg_ParticleManager.UpdateEntityPosition)
}

::google::protobuf::uint8* CUserMsg_ParticleManager_UpdateEntityPosition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMsg_ParticleManager.UpdateEntityPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 entity_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->entity_handle(), target);
  }

  // optional .CMsgVector position = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_position(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMsg_ParticleManager.UpdateEntityPosition)
  return target;
}

size_t CUserMsg_ParticleManager_UpdateEntityPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMsg_ParticleManager.UpdateEntityPosition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .CMsgVector position = 2;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *position_);
    }

    // optional int32 entity_handle = 1;
    if (has_entity_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entity_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMsg_ParticleManager_UpdateEntityPosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMsg_ParticleManager.UpdateEntityPosition)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMsg_ParticleManager_UpdateEntityPosition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMsg_ParticleManager_UpdateEntityPosition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMsg_ParticleManager.UpdateEntityPosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMsg_ParticleManager.UpdateEntityPosition)
    MergeFrom(*source);
  }
}

void CUserMsg_ParticleManager_UpdateEntityPosition::MergeFrom(const CUserMsg_ParticleManager_UpdateEntityPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMsg_ParticleManager.UpdateEntityPosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_position()->::CMsgVector::MergeFrom(from.position());
    }
    if (cached_has_bits & 0x00000002u) {
      entity_handle_ = from.entity_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMsg_ParticleManager_UpdateEntityPosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMsg_ParticleManager.UpdateEntityPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMsg_ParticleManager_UpdateEntityPosition::CopyFrom(const CUserMsg_ParticleManager_UpdateEntityPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMsg_ParticleManager.UpdateEntityPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMsg_ParticleManager_UpdateEntityPosition::IsInitialized() const {
  return true;
}

void CUserMsg_ParticleManager_UpdateEntityPosition::Swap(CUserMsg_ParticleManager_UpdateEntityPosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMsg_ParticleManager_UpdateEntityPosition::InternalSwap(CUserMsg_ParticleManager_UpdateEntityPosition* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(entity_handle_, other->entity_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMsg_ParticleManager_UpdateEntityPosition::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMsg_ParticleManager_SetParticleFoWProperties::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMsg_ParticleManager_SetParticleFoWProperties::kFowControlPointFieldNumber;
const int CUserMsg_ParticleManager_SetParticleFoWProperties::kFowControlPoint2FieldNumber;
const int CUserMsg_ParticleManager_SetParticleFoWProperties::kFowRadiusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMsg_ParticleManager_SetParticleFoWProperties::CUserMsg_ParticleManager_SetParticleFoWProperties()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_SetParticleFoWProperties.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMsg_ParticleManager.SetParticleFoWProperties)
}
CUserMsg_ParticleManager_SetParticleFoWProperties::CUserMsg_ParticleManager_SetParticleFoWProperties(const CUserMsg_ParticleManager_SetParticleFoWProperties& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&fow_control_point_, &from.fow_control_point_,
    static_cast<size_t>(reinterpret_cast<char*>(&fow_radius_) -
    reinterpret_cast<char*>(&fow_control_point_)) + sizeof(fow_radius_));
  // @@protoc_insertion_point(copy_constructor:CUserMsg_ParticleManager.SetParticleFoWProperties)
}

void CUserMsg_ParticleManager_SetParticleFoWProperties::SharedCtor() {
  ::memset(&fow_control_point_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fow_radius_) -
      reinterpret_cast<char*>(&fow_control_point_)) + sizeof(fow_radius_));
}

CUserMsg_ParticleManager_SetParticleFoWProperties::~CUserMsg_ParticleManager_SetParticleFoWProperties() {
  // @@protoc_insertion_point(destructor:CUserMsg_ParticleManager.SetParticleFoWProperties)
  SharedDtor();
}

void CUserMsg_ParticleManager_SetParticleFoWProperties::SharedDtor() {
}

void CUserMsg_ParticleManager_SetParticleFoWProperties::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMsg_ParticleManager_SetParticleFoWProperties::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMsg_ParticleManager_SetParticleFoWProperties& CUserMsg_ParticleManager_SetParticleFoWProperties::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_SetParticleFoWProperties.base);
  return *internal_default_instance();
}


void CUserMsg_ParticleManager_SetParticleFoWProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMsg_ParticleManager.SetParticleFoWProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&fow_control_point_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&fow_radius_) -
        reinterpret_cast<char*>(&fow_control_point_)) + sizeof(fow_radius_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMsg_ParticleManager_SetParticleFoWProperties::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMsg_ParticleManager.SetParticleFoWProperties)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fow_control_point = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_fow_control_point();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fow_control_point_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 fow_control_point2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_fow_control_point2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fow_control_point2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float fow_radius = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_fow_radius();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fow_radius_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMsg_ParticleManager.SetParticleFoWProperties)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMsg_ParticleManager.SetParticleFoWProperties)
  return false;
#undef DO_
}

void CUserMsg_ParticleManager_SetParticleFoWProperties::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMsg_ParticleManager.SetParticleFoWProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 fow_control_point = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fow_control_point(), output);
  }

  // optional int32 fow_control_point2 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->fow_control_point2(), output);
  }

  // optional float fow_radius = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->fow_radius(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMsg_ParticleManager.SetParticleFoWProperties)
}

::google::protobuf::uint8* CUserMsg_ParticleManager_SetParticleFoWProperties::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMsg_ParticleManager.SetParticleFoWProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 fow_control_point = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fow_control_point(), target);
  }

  // optional int32 fow_control_point2 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->fow_control_point2(), target);
  }

  // optional float fow_radius = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->fow_radius(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMsg_ParticleManager.SetParticleFoWProperties)
  return target;
}

size_t CUserMsg_ParticleManager_SetParticleFoWProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMsg_ParticleManager.SetParticleFoWProperties)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 fow_control_point = 1;
    if (has_fow_control_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fow_control_point());
    }

    // optional int32 fow_control_point2 = 2;
    if (has_fow_control_point2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fow_control_point2());
    }

    // optional float fow_radius = 3;
    if (has_fow_radius()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMsg_ParticleManager_SetParticleFoWProperties::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMsg_ParticleManager.SetParticleFoWProperties)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMsg_ParticleManager_SetParticleFoWProperties* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMsg_ParticleManager_SetParticleFoWProperties>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMsg_ParticleManager.SetParticleFoWProperties)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMsg_ParticleManager.SetParticleFoWProperties)
    MergeFrom(*source);
  }
}

void CUserMsg_ParticleManager_SetParticleFoWProperties::MergeFrom(const CUserMsg_ParticleManager_SetParticleFoWProperties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMsg_ParticleManager.SetParticleFoWProperties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      fow_control_point_ = from.fow_control_point_;
    }
    if (cached_has_bits & 0x00000002u) {
      fow_control_point2_ = from.fow_control_point2_;
    }
    if (cached_has_bits & 0x00000004u) {
      fow_radius_ = from.fow_radius_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMsg_ParticleManager_SetParticleFoWProperties::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMsg_ParticleManager.SetParticleFoWProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMsg_ParticleManager_SetParticleFoWProperties::CopyFrom(const CUserMsg_ParticleManager_SetParticleFoWProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMsg_ParticleManager.SetParticleFoWProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMsg_ParticleManager_SetParticleFoWProperties::IsInitialized() const {
  return true;
}

void CUserMsg_ParticleManager_SetParticleFoWProperties::Swap(CUserMsg_ParticleManager_SetParticleFoWProperties* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMsg_ParticleManager_SetParticleFoWProperties::InternalSwap(CUserMsg_ParticleManager_SetParticleFoWProperties* other) {
  using std::swap;
  swap(fow_control_point_, other->fow_control_point_);
  swap(fow_control_point2_, other->fow_control_point2_);
  swap(fow_radius_, other->fow_radius_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMsg_ParticleManager_SetParticleFoWProperties::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMsg_ParticleManager_SetParticleShouldCheckFoW::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMsg_ParticleManager_SetParticleShouldCheckFoW::kCheckFowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMsg_ParticleManager_SetParticleShouldCheckFoW::CUserMsg_ParticleManager_SetParticleShouldCheckFoW()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_SetParticleShouldCheckFoW.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMsg_ParticleManager.SetParticleShouldCheckFoW)
}
CUserMsg_ParticleManager_SetParticleShouldCheckFoW::CUserMsg_ParticleManager_SetParticleShouldCheckFoW(const CUserMsg_ParticleManager_SetParticleShouldCheckFoW& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  check_fow_ = from.check_fow_;
  // @@protoc_insertion_point(copy_constructor:CUserMsg_ParticleManager.SetParticleShouldCheckFoW)
}

void CUserMsg_ParticleManager_SetParticleShouldCheckFoW::SharedCtor() {
  check_fow_ = false;
}

CUserMsg_ParticleManager_SetParticleShouldCheckFoW::~CUserMsg_ParticleManager_SetParticleShouldCheckFoW() {
  // @@protoc_insertion_point(destructor:CUserMsg_ParticleManager.SetParticleShouldCheckFoW)
  SharedDtor();
}

void CUserMsg_ParticleManager_SetParticleShouldCheckFoW::SharedDtor() {
}

void CUserMsg_ParticleManager_SetParticleShouldCheckFoW::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMsg_ParticleManager_SetParticleShouldCheckFoW::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMsg_ParticleManager_SetParticleShouldCheckFoW& CUserMsg_ParticleManager_SetParticleShouldCheckFoW::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_SetParticleShouldCheckFoW.base);
  return *internal_default_instance();
}


void CUserMsg_ParticleManager_SetParticleShouldCheckFoW::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMsg_ParticleManager.SetParticleShouldCheckFoW)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  check_fow_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMsg_ParticleManager_SetParticleShouldCheckFoW::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMsg_ParticleManager.SetParticleShouldCheckFoW)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool check_fow = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_check_fow();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &check_fow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMsg_ParticleManager.SetParticleShouldCheckFoW)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMsg_ParticleManager.SetParticleShouldCheckFoW)
  return false;
#undef DO_
}

void CUserMsg_ParticleManager_SetParticleShouldCheckFoW::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMsg_ParticleManager.SetParticleShouldCheckFoW)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool check_fow = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->check_fow(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMsg_ParticleManager.SetParticleShouldCheckFoW)
}

::google::protobuf::uint8* CUserMsg_ParticleManager_SetParticleShouldCheckFoW::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMsg_ParticleManager.SetParticleShouldCheckFoW)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool check_fow = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->check_fow(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMsg_ParticleManager.SetParticleShouldCheckFoW)
  return target;
}

size_t CUserMsg_ParticleManager_SetParticleShouldCheckFoW::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMsg_ParticleManager.SetParticleShouldCheckFoW)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bool check_fow = 1;
  if (has_check_fow()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMsg_ParticleManager_SetParticleShouldCheckFoW::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMsg_ParticleManager.SetParticleShouldCheckFoW)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMsg_ParticleManager_SetParticleShouldCheckFoW* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMsg_ParticleManager_SetParticleShouldCheckFoW>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMsg_ParticleManager.SetParticleShouldCheckFoW)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMsg_ParticleManager.SetParticleShouldCheckFoW)
    MergeFrom(*source);
  }
}

void CUserMsg_ParticleManager_SetParticleShouldCheckFoW::MergeFrom(const CUserMsg_ParticleManager_SetParticleShouldCheckFoW& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMsg_ParticleManager.SetParticleShouldCheckFoW)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_check_fow()) {
    set_check_fow(from.check_fow());
  }
}

void CUserMsg_ParticleManager_SetParticleShouldCheckFoW::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMsg_ParticleManager.SetParticleShouldCheckFoW)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMsg_ParticleManager_SetParticleShouldCheckFoW::CopyFrom(const CUserMsg_ParticleManager_SetParticleShouldCheckFoW& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMsg_ParticleManager.SetParticleShouldCheckFoW)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMsg_ParticleManager_SetParticleShouldCheckFoW::IsInitialized() const {
  return true;
}

void CUserMsg_ParticleManager_SetParticleShouldCheckFoW::Swap(CUserMsg_ParticleManager_SetParticleShouldCheckFoW* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMsg_ParticleManager_SetParticleShouldCheckFoW::InternalSwap(CUserMsg_ParticleManager_SetParticleShouldCheckFoW* other) {
  using std::swap;
  swap(check_fow_, other->check_fow_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMsg_ParticleManager_SetParticleShouldCheckFoW::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMsg_ParticleManager_SetParticleText::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMsg_ParticleManager_SetParticleText::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMsg_ParticleManager_SetParticleText::CUserMsg_ParticleManager_SetParticleText()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_SetParticleText.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMsg_ParticleManager.SetParticleText)
}
CUserMsg_ParticleManager_SetParticleText::CUserMsg_ParticleManager_SetParticleText(const CUserMsg_ParticleManager_SetParticleText& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  // @@protoc_insertion_point(copy_constructor:CUserMsg_ParticleManager.SetParticleText)
}

void CUserMsg_ParticleManager_SetParticleText::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CUserMsg_ParticleManager_SetParticleText::~CUserMsg_ParticleManager_SetParticleText() {
  // @@protoc_insertion_point(destructor:CUserMsg_ParticleManager.SetParticleText)
  SharedDtor();
}

void CUserMsg_ParticleManager_SetParticleText::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CUserMsg_ParticleManager_SetParticleText::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMsg_ParticleManager_SetParticleText::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMsg_ParticleManager_SetParticleText& CUserMsg_ParticleManager_SetParticleText::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager_SetParticleText.base);
  return *internal_default_instance();
}


void CUserMsg_ParticleManager_SetParticleText::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMsg_ParticleManager.SetParticleText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    text_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMsg_ParticleManager_SetParticleText::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMsg_ParticleManager.SetParticleText)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CUserMsg_ParticleManager.SetParticleText.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMsg_ParticleManager.SetParticleText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMsg_ParticleManager.SetParticleText)
  return false;
#undef DO_
}

void CUserMsg_ParticleManager_SetParticleText::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMsg_ParticleManager.SetParticleText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMsg_ParticleManager.SetParticleText.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMsg_ParticleManager.SetParticleText)
}

::google::protobuf::uint8* CUserMsg_ParticleManager_SetParticleText::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMsg_ParticleManager.SetParticleText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMsg_ParticleManager.SetParticleText.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMsg_ParticleManager.SetParticleText)
  return target;
}

size_t CUserMsg_ParticleManager_SetParticleText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMsg_ParticleManager.SetParticleText)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string text = 1;
  if (has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMsg_ParticleManager_SetParticleText::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMsg_ParticleManager.SetParticleText)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMsg_ParticleManager_SetParticleText* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMsg_ParticleManager_SetParticleText>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMsg_ParticleManager.SetParticleText)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMsg_ParticleManager.SetParticleText)
    MergeFrom(*source);
  }
}

void CUserMsg_ParticleManager_SetParticleText::MergeFrom(const CUserMsg_ParticleManager_SetParticleText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMsg_ParticleManager.SetParticleText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_text()) {
    set_has_text();
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
}

void CUserMsg_ParticleManager_SetParticleText::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMsg_ParticleManager.SetParticleText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMsg_ParticleManager_SetParticleText::CopyFrom(const CUserMsg_ParticleManager_SetParticleText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMsg_ParticleManager.SetParticleText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMsg_ParticleManager_SetParticleText::IsInitialized() const {
  return true;
}

void CUserMsg_ParticleManager_SetParticleText::Swap(CUserMsg_ParticleManager_SetParticleText* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMsg_ParticleManager_SetParticleText::InternalSwap(CUserMsg_ParticleManager_SetParticleText* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMsg_ParticleManager_SetParticleText::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMsg_ParticleManager::InitAsDefaultInstance() {
  ::_CUserMsg_ParticleManager_default_instance_._instance.get_mutable()->release_particle_index_ = const_cast< ::CUserMsg_ParticleManager_ReleaseParticleIndex*>(
      ::CUserMsg_ParticleManager_ReleaseParticleIndex::internal_default_instance());
  ::_CUserMsg_ParticleManager_default_instance_._instance.get_mutable()->create_particle_ = const_cast< ::CUserMsg_ParticleManager_CreateParticle*>(
      ::CUserMsg_ParticleManager_CreateParticle::internal_default_instance());
  ::_CUserMsg_ParticleManager_default_instance_._instance.get_mutable()->destroy_particle_ = const_cast< ::CUserMsg_ParticleManager_DestroyParticle*>(
      ::CUserMsg_ParticleManager_DestroyParticle::internal_default_instance());
  ::_CUserMsg_ParticleManager_default_instance_._instance.get_mutable()->destroy_particle_involving_ = const_cast< ::CUserMsg_ParticleManager_DestroyParticleInvolving*>(
      ::CUserMsg_ParticleManager_DestroyParticleInvolving::internal_default_instance());
  ::_CUserMsg_ParticleManager_default_instance_._instance.get_mutable()->update_particle_ = const_cast< ::CUserMsg_ParticleManager_UpdateParticle*>(
      ::CUserMsg_ParticleManager_UpdateParticle::internal_default_instance());
  ::_CUserMsg_ParticleManager_default_instance_._instance.get_mutable()->update_particle_fwd_ = const_cast< ::CUserMsg_ParticleManager_UpdateParticleFwd*>(
      ::CUserMsg_ParticleManager_UpdateParticleFwd::internal_default_instance());
  ::_CUserMsg_ParticleManager_default_instance_._instance.get_mutable()->update_particle_orient_ = const_cast< ::CUserMsg_ParticleManager_UpdateParticleOrient*>(
      ::CUserMsg_ParticleManager_UpdateParticleOrient::internal_default_instance());
  ::_CUserMsg_ParticleManager_default_instance_._instance.get_mutable()->update_particle_fallback_ = const_cast< ::CUserMsg_ParticleManager_UpdateParticleFallback*>(
      ::CUserMsg_ParticleManager_UpdateParticleFallback::internal_default_instance());
  ::_CUserMsg_ParticleManager_default_instance_._instance.get_mutable()->update_particle_offset_ = const_cast< ::CUserMsg_ParticleManager_UpdateParticleOffset*>(
      ::CUserMsg_ParticleManager_UpdateParticleOffset::internal_default_instance());
  ::_CUserMsg_ParticleManager_default_instance_._instance.get_mutable()->update_particle_ent_ = const_cast< ::CUserMsg_ParticleManager_UpdateParticleEnt*>(
      ::CUserMsg_ParticleManager_UpdateParticleEnt::internal_default_instance());
  ::_CUserMsg_ParticleManager_default_instance_._instance.get_mutable()->update_particle_should_draw_ = const_cast< ::CUserMsg_ParticleManager_UpdateParticleShouldDraw*>(
      ::CUserMsg_ParticleManager_UpdateParticleShouldDraw::internal_default_instance());
  ::_CUserMsg_ParticleManager_default_instance_._instance.get_mutable()->update_particle_set_frozen_ = const_cast< ::CUserMsg_ParticleManager_UpdateParticleSetFrozen*>(
      ::CUserMsg_ParticleManager_UpdateParticleSetFrozen::internal_default_instance());
  ::_CUserMsg_ParticleManager_default_instance_._instance.get_mutable()->change_control_point_attachment_ = const_cast< ::CUserMsg_ParticleManager_ChangeControlPointAttachment*>(
      ::CUserMsg_ParticleManager_ChangeControlPointAttachment::internal_default_instance());
  ::_CUserMsg_ParticleManager_default_instance_._instance.get_mutable()->update_entity_position_ = const_cast< ::CUserMsg_ParticleManager_UpdateEntityPosition*>(
      ::CUserMsg_ParticleManager_UpdateEntityPosition::internal_default_instance());
  ::_CUserMsg_ParticleManager_default_instance_._instance.get_mutable()->set_particle_fow_properties_ = const_cast< ::CUserMsg_ParticleManager_SetParticleFoWProperties*>(
      ::CUserMsg_ParticleManager_SetParticleFoWProperties::internal_default_instance());
  ::_CUserMsg_ParticleManager_default_instance_._instance.get_mutable()->set_particle_text_ = const_cast< ::CUserMsg_ParticleManager_SetParticleText*>(
      ::CUserMsg_ParticleManager_SetParticleText::internal_default_instance());
  ::_CUserMsg_ParticleManager_default_instance_._instance.get_mutable()->set_particle_should_check_fow_ = const_cast< ::CUserMsg_ParticleManager_SetParticleShouldCheckFoW*>(
      ::CUserMsg_ParticleManager_SetParticleShouldCheckFoW::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMsg_ParticleManager::kTypeFieldNumber;
const int CUserMsg_ParticleManager::kIndexFieldNumber;
const int CUserMsg_ParticleManager::kReleaseParticleIndexFieldNumber;
const int CUserMsg_ParticleManager::kCreateParticleFieldNumber;
const int CUserMsg_ParticleManager::kDestroyParticleFieldNumber;
const int CUserMsg_ParticleManager::kDestroyParticleInvolvingFieldNumber;
const int CUserMsg_ParticleManager::kUpdateParticleFieldNumber;
const int CUserMsg_ParticleManager::kUpdateParticleFwdFieldNumber;
const int CUserMsg_ParticleManager::kUpdateParticleOrientFieldNumber;
const int CUserMsg_ParticleManager::kUpdateParticleFallbackFieldNumber;
const int CUserMsg_ParticleManager::kUpdateParticleOffsetFieldNumber;
const int CUserMsg_ParticleManager::kUpdateParticleEntFieldNumber;
const int CUserMsg_ParticleManager::kUpdateParticleShouldDrawFieldNumber;
const int CUserMsg_ParticleManager::kUpdateParticleSetFrozenFieldNumber;
const int CUserMsg_ParticleManager::kChangeControlPointAttachmentFieldNumber;
const int CUserMsg_ParticleManager::kUpdateEntityPositionFieldNumber;
const int CUserMsg_ParticleManager::kSetParticleFowPropertiesFieldNumber;
const int CUserMsg_ParticleManager::kSetParticleTextFieldNumber;
const int CUserMsg_ParticleManager::kSetParticleShouldCheckFowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMsg_ParticleManager::CUserMsg_ParticleManager()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMsg_ParticleManager)
}
CUserMsg_ParticleManager::CUserMsg_ParticleManager(const CUserMsg_ParticleManager& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_release_particle_index()) {
    release_particle_index_ = new ::CUserMsg_ParticleManager_ReleaseParticleIndex(*from.release_particle_index_);
  } else {
    release_particle_index_ = NULL;
  }
  if (from.has_create_particle()) {
    create_particle_ = new ::CUserMsg_ParticleManager_CreateParticle(*from.create_particle_);
  } else {
    create_particle_ = NULL;
  }
  if (from.has_destroy_particle()) {
    destroy_particle_ = new ::CUserMsg_ParticleManager_DestroyParticle(*from.destroy_particle_);
  } else {
    destroy_particle_ = NULL;
  }
  if (from.has_destroy_particle_involving()) {
    destroy_particle_involving_ = new ::CUserMsg_ParticleManager_DestroyParticleInvolving(*from.destroy_particle_involving_);
  } else {
    destroy_particle_involving_ = NULL;
  }
  if (from.has_update_particle()) {
    update_particle_ = new ::CUserMsg_ParticleManager_UpdateParticle(*from.update_particle_);
  } else {
    update_particle_ = NULL;
  }
  if (from.has_update_particle_fwd()) {
    update_particle_fwd_ = new ::CUserMsg_ParticleManager_UpdateParticleFwd(*from.update_particle_fwd_);
  } else {
    update_particle_fwd_ = NULL;
  }
  if (from.has_update_particle_orient()) {
    update_particle_orient_ = new ::CUserMsg_ParticleManager_UpdateParticleOrient(*from.update_particle_orient_);
  } else {
    update_particle_orient_ = NULL;
  }
  if (from.has_update_particle_fallback()) {
    update_particle_fallback_ = new ::CUserMsg_ParticleManager_UpdateParticleFallback(*from.update_particle_fallback_);
  } else {
    update_particle_fallback_ = NULL;
  }
  if (from.has_update_particle_offset()) {
    update_particle_offset_ = new ::CUserMsg_ParticleManager_UpdateParticleOffset(*from.update_particle_offset_);
  } else {
    update_particle_offset_ = NULL;
  }
  if (from.has_update_particle_ent()) {
    update_particle_ent_ = new ::CUserMsg_ParticleManager_UpdateParticleEnt(*from.update_particle_ent_);
  } else {
    update_particle_ent_ = NULL;
  }
  if (from.has_update_particle_should_draw()) {
    update_particle_should_draw_ = new ::CUserMsg_ParticleManager_UpdateParticleShouldDraw(*from.update_particle_should_draw_);
  } else {
    update_particle_should_draw_ = NULL;
  }
  if (from.has_update_particle_set_frozen()) {
    update_particle_set_frozen_ = new ::CUserMsg_ParticleManager_UpdateParticleSetFrozen(*from.update_particle_set_frozen_);
  } else {
    update_particle_set_frozen_ = NULL;
  }
  if (from.has_change_control_point_attachment()) {
    change_control_point_attachment_ = new ::CUserMsg_ParticleManager_ChangeControlPointAttachment(*from.change_control_point_attachment_);
  } else {
    change_control_point_attachment_ = NULL;
  }
  if (from.has_update_entity_position()) {
    update_entity_position_ = new ::CUserMsg_ParticleManager_UpdateEntityPosition(*from.update_entity_position_);
  } else {
    update_entity_position_ = NULL;
  }
  if (from.has_set_particle_fow_properties()) {
    set_particle_fow_properties_ = new ::CUserMsg_ParticleManager_SetParticleFoWProperties(*from.set_particle_fow_properties_);
  } else {
    set_particle_fow_properties_ = NULL;
  }
  if (from.has_set_particle_text()) {
    set_particle_text_ = new ::CUserMsg_ParticleManager_SetParticleText(*from.set_particle_text_);
  } else {
    set_particle_text_ = NULL;
  }
  if (from.has_set_particle_should_check_fow()) {
    set_particle_should_check_fow_ = new ::CUserMsg_ParticleManager_SetParticleShouldCheckFoW(*from.set_particle_should_check_fow_);
  } else {
    set_particle_should_check_fow_ = NULL;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&type_)) + sizeof(index_));
  // @@protoc_insertion_point(copy_constructor:CUserMsg_ParticleManager)
}

void CUserMsg_ParticleManager::SharedCtor() {
  ::memset(&release_particle_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&release_particle_index_)) + sizeof(index_));
}

CUserMsg_ParticleManager::~CUserMsg_ParticleManager() {
  // @@protoc_insertion_point(destructor:CUserMsg_ParticleManager)
  SharedDtor();
}

void CUserMsg_ParticleManager::SharedDtor() {
  if (this != internal_default_instance()) delete release_particle_index_;
  if (this != internal_default_instance()) delete create_particle_;
  if (this != internal_default_instance()) delete destroy_particle_;
  if (this != internal_default_instance()) delete destroy_particle_involving_;
  if (this != internal_default_instance()) delete update_particle_;
  if (this != internal_default_instance()) delete update_particle_fwd_;
  if (this != internal_default_instance()) delete update_particle_orient_;
  if (this != internal_default_instance()) delete update_particle_fallback_;
  if (this != internal_default_instance()) delete update_particle_offset_;
  if (this != internal_default_instance()) delete update_particle_ent_;
  if (this != internal_default_instance()) delete update_particle_should_draw_;
  if (this != internal_default_instance()) delete update_particle_set_frozen_;
  if (this != internal_default_instance()) delete change_control_point_attachment_;
  if (this != internal_default_instance()) delete update_entity_position_;
  if (this != internal_default_instance()) delete set_particle_fow_properties_;
  if (this != internal_default_instance()) delete set_particle_text_;
  if (this != internal_default_instance()) delete set_particle_should_check_fow_;
}

void CUserMsg_ParticleManager::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMsg_ParticleManager::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMsg_ParticleManager& CUserMsg_ParticleManager::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMsg_ParticleManager.base);
  return *internal_default_instance();
}


void CUserMsg_ParticleManager::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMsg_ParticleManager)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(release_particle_index_ != NULL);
      release_particle_index_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(create_particle_ != NULL);
      create_particle_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(destroy_particle_ != NULL);
      destroy_particle_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(destroy_particle_involving_ != NULL);
      destroy_particle_involving_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(update_particle_ != NULL);
      update_particle_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(update_particle_fwd_ != NULL);
      update_particle_fwd_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(update_particle_orient_ != NULL);
      update_particle_orient_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(update_particle_fallback_ != NULL);
      update_particle_fallback_->Clear();
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(update_particle_offset_ != NULL);
      update_particle_offset_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(update_particle_ent_ != NULL);
      update_particle_ent_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(update_particle_should_draw_ != NULL);
      update_particle_should_draw_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(update_particle_set_frozen_ != NULL);
      update_particle_set_frozen_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(change_control_point_attachment_ != NULL);
      change_control_point_attachment_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(update_entity_position_ != NULL);
      update_entity_position_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(set_particle_fow_properties_ != NULL);
      set_particle_fow_properties_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(set_particle_text_ != NULL);
      set_particle_text_->Clear();
    }
  }
  if (cached_has_bits & 0x00010000u) {
    GOOGLE_DCHECK(set_particle_should_check_fow_ != NULL);
    set_particle_should_check_fow_->Clear();
  }
  if (cached_has_bits & 393216u) {
    ::memset(&type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&index_) -
        reinterpret_cast<char*>(&type_)) + sizeof(index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMsg_ParticleManager::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMsg_ParticleManager)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .PARTICLE_MESSAGE type = 1 [default = GAME_PARTICLE_MANAGER_EVENT_CREATE];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PARTICLE_MESSAGE_IsValid(value)) {
            set_type(static_cast< ::PARTICLE_MESSAGE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CUserMsg_ParticleManager.ReleaseParticleIndex release_particle_index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_release_particle_index()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CUserMsg_ParticleManager.CreateParticle create_particle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_particle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CUserMsg_ParticleManager.DestroyParticle destroy_particle = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_destroy_particle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CUserMsg_ParticleManager.DestroyParticleInvolving destroy_particle_involving = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_destroy_particle_involving()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CUserMsg_ParticleManager.UpdateParticle update_particle = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_particle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CUserMsg_ParticleManager.UpdateParticleFwd update_particle_fwd = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_particle_fwd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CUserMsg_ParticleManager.UpdateParticleOrient update_particle_orient = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_particle_orient()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CUserMsg_ParticleManager.UpdateParticleFallback update_particle_fallback = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_particle_fallback()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CUserMsg_ParticleManager.UpdateParticleOffset update_particle_offset = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_particle_offset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CUserMsg_ParticleManager.UpdateParticleEnt update_particle_ent = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_particle_ent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CUserMsg_ParticleManager.UpdateParticleShouldDraw update_particle_should_draw = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_particle_should_draw()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CUserMsg_ParticleManager.UpdateParticleSetFrozen update_particle_set_frozen = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_particle_set_frozen()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CUserMsg_ParticleManager.ChangeControlPointAttachment change_control_point_attachment = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_change_control_point_attachment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CUserMsg_ParticleManager.UpdateEntityPosition update_entity_position = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_entity_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CUserMsg_ParticleManager.SetParticleFoWProperties set_particle_fow_properties = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_set_particle_fow_properties()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CUserMsg_ParticleManager.SetParticleText set_particle_text = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_set_particle_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CUserMsg_ParticleManager.SetParticleShouldCheckFoW set_particle_should_check_fow = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_set_particle_should_check_fow()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMsg_ParticleManager)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMsg_ParticleManager)
  return false;
#undef DO_
}

void CUserMsg_ParticleManager::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMsg_ParticleManager)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .PARTICLE_MESSAGE type = 1 [default = GAME_PARTICLE_MANAGER_EVENT_CREATE];
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // required uint32 index = 2;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->index(), output);
  }

  // optional .CUserMsg_ParticleManager.ReleaseParticleIndex release_particle_index = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_release_particle_index(), output);
  }

  // optional .CUserMsg_ParticleManager.CreateParticle create_particle = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_create_particle(), output);
  }

  // optional .CUserMsg_ParticleManager.DestroyParticle destroy_particle = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_destroy_particle(), output);
  }

  // optional .CUserMsg_ParticleManager.DestroyParticleInvolving destroy_particle_involving = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_destroy_particle_involving(), output);
  }

  // optional .CUserMsg_ParticleManager.UpdateParticle update_particle = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_update_particle(), output);
  }

  // optional .CUserMsg_ParticleManager.UpdateParticleFwd update_particle_fwd = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_update_particle_fwd(), output);
  }

  // optional .CUserMsg_ParticleManager.UpdateParticleOrient update_particle_orient = 9;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_update_particle_orient(), output);
  }

  // optional .CUserMsg_ParticleManager.UpdateParticleFallback update_particle_fallback = 10;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_update_particle_fallback(), output);
  }

  // optional .CUserMsg_ParticleManager.UpdateParticleOffset update_particle_offset = 11;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_update_particle_offset(), output);
  }

  // optional .CUserMsg_ParticleManager.UpdateParticleEnt update_particle_ent = 12;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_update_particle_ent(), output);
  }

  // optional .CUserMsg_ParticleManager.UpdateParticleShouldDraw update_particle_should_draw = 14;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_update_particle_should_draw(), output);
  }

  // optional .CUserMsg_ParticleManager.UpdateParticleSetFrozen update_particle_set_frozen = 15;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_update_particle_set_frozen(), output);
  }

  // optional .CUserMsg_ParticleManager.ChangeControlPointAttachment change_control_point_attachment = 16;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_change_control_point_attachment(), output);
  }

  // optional .CUserMsg_ParticleManager.UpdateEntityPosition update_entity_position = 17;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_update_entity_position(), output);
  }

  // optional .CUserMsg_ParticleManager.SetParticleFoWProperties set_particle_fow_properties = 18;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_set_particle_fow_properties(), output);
  }

  // optional .CUserMsg_ParticleManager.SetParticleText set_particle_text = 19;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_set_particle_text(), output);
  }

  // optional .CUserMsg_ParticleManager.SetParticleShouldCheckFoW set_particle_should_check_fow = 20;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_set_particle_should_check_fow(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMsg_ParticleManager)
}

::google::protobuf::uint8* CUserMsg_ParticleManager::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMsg_ParticleManager)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .PARTICLE_MESSAGE type = 1 [default = GAME_PARTICLE_MANAGER_EVENT_CREATE];
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // required uint32 index = 2;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->index(), target);
  }

  // optional .CUserMsg_ParticleManager.ReleaseParticleIndex release_particle_index = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_release_particle_index(), deterministic, target);
  }

  // optional .CUserMsg_ParticleManager.CreateParticle create_particle = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_create_particle(), deterministic, target);
  }

  // optional .CUserMsg_ParticleManager.DestroyParticle destroy_particle = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_destroy_particle(), deterministic, target);
  }

  // optional .CUserMsg_ParticleManager.DestroyParticleInvolving destroy_particle_involving = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_destroy_particle_involving(), deterministic, target);
  }

  // optional .CUserMsg_ParticleManager.UpdateParticle update_particle = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_update_particle(), deterministic, target);
  }

  // optional .CUserMsg_ParticleManager.UpdateParticleFwd update_particle_fwd = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_update_particle_fwd(), deterministic, target);
  }

  // optional .CUserMsg_ParticleManager.UpdateParticleOrient update_particle_orient = 9;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_update_particle_orient(), deterministic, target);
  }

  // optional .CUserMsg_ParticleManager.UpdateParticleFallback update_particle_fallback = 10;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_update_particle_fallback(), deterministic, target);
  }

  // optional .CUserMsg_ParticleManager.UpdateParticleOffset update_particle_offset = 11;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_update_particle_offset(), deterministic, target);
  }

  // optional .CUserMsg_ParticleManager.UpdateParticleEnt update_particle_ent = 12;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_update_particle_ent(), deterministic, target);
  }

  // optional .CUserMsg_ParticleManager.UpdateParticleShouldDraw update_particle_should_draw = 14;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_update_particle_should_draw(), deterministic, target);
  }

  // optional .CUserMsg_ParticleManager.UpdateParticleSetFrozen update_particle_set_frozen = 15;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_update_particle_set_frozen(), deterministic, target);
  }

  // optional .CUserMsg_ParticleManager.ChangeControlPointAttachment change_control_point_attachment = 16;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_change_control_point_attachment(), deterministic, target);
  }

  // optional .CUserMsg_ParticleManager.UpdateEntityPosition update_entity_position = 17;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_update_entity_position(), deterministic, target);
  }

  // optional .CUserMsg_ParticleManager.SetParticleFoWProperties set_particle_fow_properties = 18;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_set_particle_fow_properties(), deterministic, target);
  }

  // optional .CUserMsg_ParticleManager.SetParticleText set_particle_text = 19;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_set_particle_text(), deterministic, target);
  }

  // optional .CUserMsg_ParticleManager.SetParticleShouldCheckFoW set_particle_should_check_fow = 20;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_set_particle_should_check_fow(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMsg_ParticleManager)
  return target;
}

size_t CUserMsg_ParticleManager::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CUserMsg_ParticleManager)
  size_t total_size = 0;

  if (has_type()) {
    // required .PARTICLE_MESSAGE type = 1 [default = GAME_PARTICLE_MANAGER_EVENT_CREATE];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  if (has_index()) {
    // required uint32 index = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  return total_size;
}
size_t CUserMsg_ParticleManager::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMsg_ParticleManager)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00060000) ^ 0x00060000) == 0) {  // All required fields are present.
    // required .PARTICLE_MESSAGE type = 1 [default = GAME_PARTICLE_MANAGER_EVENT_CREATE];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

    // required uint32 index = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .CUserMsg_ParticleManager.ReleaseParticleIndex release_particle_index = 3;
    if (has_release_particle_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *release_particle_index_);
    }

    // optional .CUserMsg_ParticleManager.CreateParticle create_particle = 4;
    if (has_create_particle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *create_particle_);
    }

    // optional .CUserMsg_ParticleManager.DestroyParticle destroy_particle = 5;
    if (has_destroy_particle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *destroy_particle_);
    }

    // optional .CUserMsg_ParticleManager.DestroyParticleInvolving destroy_particle_involving = 6;
    if (has_destroy_particle_involving()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *destroy_particle_involving_);
    }

    // optional .CUserMsg_ParticleManager.UpdateParticle update_particle = 7;
    if (has_update_particle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *update_particle_);
    }

    // optional .CUserMsg_ParticleManager.UpdateParticleFwd update_particle_fwd = 8;
    if (has_update_particle_fwd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *update_particle_fwd_);
    }

    // optional .CUserMsg_ParticleManager.UpdateParticleOrient update_particle_orient = 9;
    if (has_update_particle_orient()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *update_particle_orient_);
    }

    // optional .CUserMsg_ParticleManager.UpdateParticleFallback update_particle_fallback = 10;
    if (has_update_particle_fallback()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *update_particle_fallback_);
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional .CUserMsg_ParticleManager.UpdateParticleOffset update_particle_offset = 11;
    if (has_update_particle_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *update_particle_offset_);
    }

    // optional .CUserMsg_ParticleManager.UpdateParticleEnt update_particle_ent = 12;
    if (has_update_particle_ent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *update_particle_ent_);
    }

    // optional .CUserMsg_ParticleManager.UpdateParticleShouldDraw update_particle_should_draw = 14;
    if (has_update_particle_should_draw()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *update_particle_should_draw_);
    }

    // optional .CUserMsg_ParticleManager.UpdateParticleSetFrozen update_particle_set_frozen = 15;
    if (has_update_particle_set_frozen()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *update_particle_set_frozen_);
    }

    // optional .CUserMsg_ParticleManager.ChangeControlPointAttachment change_control_point_attachment = 16;
    if (has_change_control_point_attachment()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *change_control_point_attachment_);
    }

    // optional .CUserMsg_ParticleManager.UpdateEntityPosition update_entity_position = 17;
    if (has_update_entity_position()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *update_entity_position_);
    }

    // optional .CUserMsg_ParticleManager.SetParticleFoWProperties set_particle_fow_properties = 18;
    if (has_set_particle_fow_properties()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *set_particle_fow_properties_);
    }

    // optional .CUserMsg_ParticleManager.SetParticleText set_particle_text = 19;
    if (has_set_particle_text()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *set_particle_text_);
    }

  }
  // optional .CUserMsg_ParticleManager.SetParticleShouldCheckFoW set_particle_should_check_fow = 20;
  if (has_set_particle_should_check_fow()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *set_particle_should_check_fow_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMsg_ParticleManager::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMsg_ParticleManager)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMsg_ParticleManager* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMsg_ParticleManager>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMsg_ParticleManager)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMsg_ParticleManager)
    MergeFrom(*source);
  }
}

void CUserMsg_ParticleManager::MergeFrom(const CUserMsg_ParticleManager& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMsg_ParticleManager)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_release_particle_index()->::CUserMsg_ParticleManager_ReleaseParticleIndex::MergeFrom(from.release_particle_index());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_create_particle()->::CUserMsg_ParticleManager_CreateParticle::MergeFrom(from.create_particle());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_destroy_particle()->::CUserMsg_ParticleManager_DestroyParticle::MergeFrom(from.destroy_particle());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_destroy_particle_involving()->::CUserMsg_ParticleManager_DestroyParticleInvolving::MergeFrom(from.destroy_particle_involving());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_update_particle()->::CUserMsg_ParticleManager_UpdateParticle::MergeFrom(from.update_particle());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_update_particle_fwd()->::CUserMsg_ParticleManager_UpdateParticleFwd::MergeFrom(from.update_particle_fwd());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_update_particle_orient()->::CUserMsg_ParticleManager_UpdateParticleOrient::MergeFrom(from.update_particle_orient());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_update_particle_fallback()->::CUserMsg_ParticleManager_UpdateParticleFallback::MergeFrom(from.update_particle_fallback());
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_update_particle_offset()->::CUserMsg_ParticleManager_UpdateParticleOffset::MergeFrom(from.update_particle_offset());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_update_particle_ent()->::CUserMsg_ParticleManager_UpdateParticleEnt::MergeFrom(from.update_particle_ent());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_update_particle_should_draw()->::CUserMsg_ParticleManager_UpdateParticleShouldDraw::MergeFrom(from.update_particle_should_draw());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable_update_particle_set_frozen()->::CUserMsg_ParticleManager_UpdateParticleSetFrozen::MergeFrom(from.update_particle_set_frozen());
    }
    if (cached_has_bits & 0x00001000u) {
      mutable_change_control_point_attachment()->::CUserMsg_ParticleManager_ChangeControlPointAttachment::MergeFrom(from.change_control_point_attachment());
    }
    if (cached_has_bits & 0x00002000u) {
      mutable_update_entity_position()->::CUserMsg_ParticleManager_UpdateEntityPosition::MergeFrom(from.update_entity_position());
    }
    if (cached_has_bits & 0x00004000u) {
      mutable_set_particle_fow_properties()->::CUserMsg_ParticleManager_SetParticleFoWProperties::MergeFrom(from.set_particle_fow_properties());
    }
    if (cached_has_bits & 0x00008000u) {
      mutable_set_particle_text()->::CUserMsg_ParticleManager_SetParticleText::MergeFrom(from.set_particle_text());
    }
  }
  if (cached_has_bits & 458752u) {
    if (cached_has_bits & 0x00010000u) {
      mutable_set_particle_should_check_fow()->::CUserMsg_ParticleManager_SetParticleShouldCheckFoW::MergeFrom(from.set_particle_should_check_fow());
    }
    if (cached_has_bits & 0x00020000u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00040000u) {
      index_ = from.index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMsg_ParticleManager::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMsg_ParticleManager)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMsg_ParticleManager::CopyFrom(const CUserMsg_ParticleManager& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMsg_ParticleManager)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMsg_ParticleManager::IsInitialized() const {
  if ((_has_bits_[0] & 0x00060000) != 0x00060000) return false;
  return true;
}

void CUserMsg_ParticleManager::Swap(CUserMsg_ParticleManager* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMsg_ParticleManager::InternalSwap(CUserMsg_ParticleManager* other) {
  using std::swap;
  swap(release_particle_index_, other->release_particle_index_);
  swap(create_particle_, other->create_particle_);
  swap(destroy_particle_, other->destroy_particle_);
  swap(destroy_particle_involving_, other->destroy_particle_involving_);
  swap(update_particle_, other->update_particle_);
  swap(update_particle_fwd_, other->update_particle_fwd_);
  swap(update_particle_orient_, other->update_particle_orient_);
  swap(update_particle_fallback_, other->update_particle_fallback_);
  swap(update_particle_offset_, other->update_particle_offset_);
  swap(update_particle_ent_, other->update_particle_ent_);
  swap(update_particle_should_draw_, other->update_particle_should_draw_);
  swap(update_particle_set_frozen_, other->update_particle_set_frozen_);
  swap(change_control_point_attachment_, other->change_control_point_attachment_);
  swap(update_entity_position_, other->update_entity_position_);
  swap(set_particle_fow_properties_, other->set_particle_fow_properties_);
  swap(set_particle_text_, other->set_particle_text_);
  swap(set_particle_should_check_fow_, other->set_particle_should_check_fow_);
  swap(type_, other->type_);
  swap(index_, other->index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMsg_ParticleManager::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMsg_HudError::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMsg_HudError::kOrderIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMsg_HudError::CUserMsg_HudError()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_HudError.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMsg_HudError)
}
CUserMsg_HudError::CUserMsg_HudError(const CUserMsg_HudError& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  order_id_ = from.order_id_;
  // @@protoc_insertion_point(copy_constructor:CUserMsg_HudError)
}

void CUserMsg_HudError::SharedCtor() {
  order_id_ = 0;
}

CUserMsg_HudError::~CUserMsg_HudError() {
  // @@protoc_insertion_point(destructor:CUserMsg_HudError)
  SharedDtor();
}

void CUserMsg_HudError::SharedDtor() {
}

void CUserMsg_HudError::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMsg_HudError::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMsg_HudError& CUserMsg_HudError::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMsg_HudError.base);
  return *internal_default_instance();
}


void CUserMsg_HudError::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMsg_HudError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  order_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMsg_HudError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMsg_HudError)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 order_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_order_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &order_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMsg_HudError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMsg_HudError)
  return false;
#undef DO_
}

void CUserMsg_HudError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMsg_HudError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 order_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->order_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMsg_HudError)
}

::google::protobuf::uint8* CUserMsg_HudError::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMsg_HudError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 order_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->order_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMsg_HudError)
  return target;
}

size_t CUserMsg_HudError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMsg_HudError)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 order_id = 1;
  if (has_order_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->order_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMsg_HudError::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMsg_HudError)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMsg_HudError* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMsg_HudError>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMsg_HudError)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMsg_HudError)
    MergeFrom(*source);
  }
}

void CUserMsg_HudError::MergeFrom(const CUserMsg_HudError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMsg_HudError)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_order_id()) {
    set_order_id(from.order_id());
  }
}

void CUserMsg_HudError::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMsg_HudError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMsg_HudError::CopyFrom(const CUserMsg_HudError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMsg_HudError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMsg_HudError::IsInitialized() const {
  return true;
}

void CUserMsg_HudError::Swap(CUserMsg_HudError* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMsg_HudError::InternalSwap(CUserMsg_HudError* other) {
  using std::swap;
  swap(order_id_, other->order_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMsg_HudError::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMsg_CustomGameEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMsg_CustomGameEvent::kEventNameFieldNumber;
const int CUserMsg_CustomGameEvent::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMsg_CustomGameEvent::CUserMsg_CustomGameEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMsg_CustomGameEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMsg_CustomGameEvent)
}
CUserMsg_CustomGameEvent::CUserMsg_CustomGameEvent(const CUserMsg_CustomGameEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  event_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_event_name()) {
    event_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_name_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:CUserMsg_CustomGameEvent)
}

void CUserMsg_CustomGameEvent::SharedCtor() {
  event_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CUserMsg_CustomGameEvent::~CUserMsg_CustomGameEvent() {
  // @@protoc_insertion_point(destructor:CUserMsg_CustomGameEvent)
  SharedDtor();
}

void CUserMsg_CustomGameEvent::SharedDtor() {
  event_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CUserMsg_CustomGameEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMsg_CustomGameEvent::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMsg_CustomGameEvent& CUserMsg_CustomGameEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMsg_CustomGameEvent.base);
  return *internal_default_instance();
}


void CUserMsg_CustomGameEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMsg_CustomGameEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      event_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      data_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMsg_CustomGameEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMsg_CustomGameEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string event_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->event_name().data(), static_cast<int>(this->event_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CUserMsg_CustomGameEvent.event_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMsg_CustomGameEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMsg_CustomGameEvent)
  return false;
#undef DO_
}

void CUserMsg_CustomGameEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMsg_CustomGameEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string event_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->event_name().data(), static_cast<int>(this->event_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMsg_CustomGameEvent.event_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->event_name(), output);
  }

  // optional bytes data = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMsg_CustomGameEvent)
}

::google::protobuf::uint8* CUserMsg_CustomGameEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMsg_CustomGameEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string event_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->event_name().data(), static_cast<int>(this->event_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CUserMsg_CustomGameEvent.event_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->event_name(), target);
  }

  // optional bytes data = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMsg_CustomGameEvent)
  return target;
}

size_t CUserMsg_CustomGameEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMsg_CustomGameEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string event_name = 1;
    if (has_event_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->event_name());
    }

    // optional bytes data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMsg_CustomGameEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMsg_CustomGameEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMsg_CustomGameEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMsg_CustomGameEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMsg_CustomGameEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMsg_CustomGameEvent)
    MergeFrom(*source);
  }
}

void CUserMsg_CustomGameEvent::MergeFrom(const CUserMsg_CustomGameEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMsg_CustomGameEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_event_name();
      event_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
}

void CUserMsg_CustomGameEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMsg_CustomGameEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMsg_CustomGameEvent::CopyFrom(const CUserMsg_CustomGameEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMsg_CustomGameEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMsg_CustomGameEvent::IsInitialized() const {
  return true;
}

void CUserMsg_CustomGameEvent::Swap(CUserMsg_CustomGameEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMsg_CustomGameEvent::InternalSwap(CUserMsg_CustomGameEvent* other) {
  using std::swap;
  event_name_.Swap(&other->event_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMsg_CustomGameEvent::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageHapticPulse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageHapticPulse::kHandIdFieldNumber;
const int CUserMessageHapticPulse::kPulseTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageHapticPulse::CUserMessageHapticPulse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageHapticPulse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageHapticPulse)
}
CUserMessageHapticPulse::CUserMessageHapticPulse(const CUserMessageHapticPulse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hand_id_, &from.hand_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&pulse_type_) -
    reinterpret_cast<char*>(&hand_id_)) + sizeof(pulse_type_));
  // @@protoc_insertion_point(copy_constructor:CUserMessageHapticPulse)
}

void CUserMessageHapticPulse::SharedCtor() {
  ::memset(&hand_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pulse_type_) -
      reinterpret_cast<char*>(&hand_id_)) + sizeof(pulse_type_));
}

CUserMessageHapticPulse::~CUserMessageHapticPulse() {
  // @@protoc_insertion_point(destructor:CUserMessageHapticPulse)
  SharedDtor();
}

void CUserMessageHapticPulse::SharedDtor() {
}

void CUserMessageHapticPulse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageHapticPulse::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageHapticPulse& CUserMessageHapticPulse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageHapticPulse.base);
  return *internal_default_instance();
}


void CUserMessageHapticPulse::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageHapticPulse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&hand_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pulse_type_) -
        reinterpret_cast<char*>(&hand_id_)) + sizeof(pulse_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageHapticPulse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageHapticPulse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 hand_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_hand_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hand_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .EHapticPulseType pulse_type = 2 [default = VR_HAND_HAPTIC_PULSE_LIGHT];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::EHapticPulseType_IsValid(value)) {
            set_pulse_type(static_cast< ::EHapticPulseType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageHapticPulse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageHapticPulse)
  return false;
#undef DO_
}

void CUserMessageHapticPulse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageHapticPulse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 hand_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->hand_id(), output);
  }

  // optional .EHapticPulseType pulse_type = 2 [default = VR_HAND_HAPTIC_PULSE_LIGHT];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->pulse_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageHapticPulse)
}

::google::protobuf::uint8* CUserMessageHapticPulse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageHapticPulse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 hand_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->hand_id(), target);
  }

  // optional .EHapticPulseType pulse_type = 2 [default = VR_HAND_HAPTIC_PULSE_LIGHT];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->pulse_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageHapticPulse)
  return target;
}

size_t CUserMessageHapticPulse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageHapticPulse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 hand_id = 1;
    if (has_hand_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hand_id());
    }

    // optional .EHapticPulseType pulse_type = 2 [default = VR_HAND_HAPTIC_PULSE_LIGHT];
    if (has_pulse_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->pulse_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageHapticPulse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageHapticPulse)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageHapticPulse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageHapticPulse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageHapticPulse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageHapticPulse)
    MergeFrom(*source);
  }
}

void CUserMessageHapticPulse::MergeFrom(const CUserMessageHapticPulse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageHapticPulse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      hand_id_ = from.hand_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      pulse_type_ = from.pulse_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMessageHapticPulse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageHapticPulse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageHapticPulse::CopyFrom(const CUserMessageHapticPulse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageHapticPulse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageHapticPulse::IsInitialized() const {
  return true;
}

void CUserMessageHapticPulse::Swap(CUserMessageHapticPulse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageHapticPulse::InternalSwap(CUserMessageHapticPulse* other) {
  using std::swap;
  swap(hand_id_, other->hand_id_);
  swap(pulse_type_, other->pulse_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageHapticPulse::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageHapticPulsePrecise::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageHapticPulsePrecise::kHandIdFieldNumber;
const int CUserMessageHapticPulsePrecise::kPulseDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageHapticPulsePrecise::CUserMessageHapticPulsePrecise()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageHapticPulsePrecise.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageHapticPulsePrecise)
}
CUserMessageHapticPulsePrecise::CUserMessageHapticPulsePrecise(const CUserMessageHapticPulsePrecise& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hand_id_, &from.hand_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&pulse_duration_) -
    reinterpret_cast<char*>(&hand_id_)) + sizeof(pulse_duration_));
  // @@protoc_insertion_point(copy_constructor:CUserMessageHapticPulsePrecise)
}

void CUserMessageHapticPulsePrecise::SharedCtor() {
  ::memset(&hand_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pulse_duration_) -
      reinterpret_cast<char*>(&hand_id_)) + sizeof(pulse_duration_));
}

CUserMessageHapticPulsePrecise::~CUserMessageHapticPulsePrecise() {
  // @@protoc_insertion_point(destructor:CUserMessageHapticPulsePrecise)
  SharedDtor();
}

void CUserMessageHapticPulsePrecise::SharedDtor() {
}

void CUserMessageHapticPulsePrecise::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageHapticPulsePrecise::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageHapticPulsePrecise& CUserMessageHapticPulsePrecise::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageHapticPulsePrecise.base);
  return *internal_default_instance();
}


void CUserMessageHapticPulsePrecise::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageHapticPulsePrecise)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&hand_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pulse_duration_) -
        reinterpret_cast<char*>(&hand_id_)) + sizeof(pulse_duration_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageHapticPulsePrecise::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageHapticPulsePrecise)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 hand_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_hand_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hand_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 pulse_duration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pulse_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pulse_duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageHapticPulsePrecise)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageHapticPulsePrecise)
  return false;
#undef DO_
}

void CUserMessageHapticPulsePrecise::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageHapticPulsePrecise)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 hand_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->hand_id(), output);
  }

  // optional int32 pulse_duration = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pulse_duration(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageHapticPulsePrecise)
}

::google::protobuf::uint8* CUserMessageHapticPulsePrecise::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageHapticPulsePrecise)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 hand_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->hand_id(), target);
  }

  // optional int32 pulse_duration = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pulse_duration(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageHapticPulsePrecise)
  return target;
}

size_t CUserMessageHapticPulsePrecise::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageHapticPulsePrecise)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 hand_id = 1;
    if (has_hand_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hand_id());
    }

    // optional int32 pulse_duration = 2;
    if (has_pulse_duration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pulse_duration());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageHapticPulsePrecise::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageHapticPulsePrecise)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageHapticPulsePrecise* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageHapticPulsePrecise>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageHapticPulsePrecise)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageHapticPulsePrecise)
    MergeFrom(*source);
  }
}

void CUserMessageHapticPulsePrecise::MergeFrom(const CUserMessageHapticPulsePrecise& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageHapticPulsePrecise)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      hand_id_ = from.hand_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      pulse_duration_ = from.pulse_duration_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMessageHapticPulsePrecise::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageHapticPulsePrecise)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageHapticPulsePrecise::CopyFrom(const CUserMessageHapticPulsePrecise& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageHapticPulsePrecise)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageHapticPulsePrecise::IsInitialized() const {
  return true;
}

void CUserMessageHapticPulsePrecise::Swap(CUserMessageHapticPulsePrecise* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageHapticPulsePrecise::InternalSwap(CUserMessageHapticPulsePrecise* other) {
  using std::swap;
  swap(hand_id_, other->hand_id_);
  swap(pulse_duration_, other->pulse_duration_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageHapticPulsePrecise::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CUserMessageAnimStateGraphState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUserMessageAnimStateGraphState::kEntityIndexFieldNumber;
const int CUserMessageAnimStateGraphState::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUserMessageAnimStateGraphState::CUserMessageAnimStateGraphState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_usermessages_2eproto::scc_info_CUserMessageAnimStateGraphState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUserMessageAnimStateGraphState)
}
CUserMessageAnimStateGraphState::CUserMessageAnimStateGraphState(const CUserMessageAnimStateGraphState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  entity_index_ = from.entity_index_;
  // @@protoc_insertion_point(copy_constructor:CUserMessageAnimStateGraphState)
}

void CUserMessageAnimStateGraphState::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entity_index_ = 0;
}

CUserMessageAnimStateGraphState::~CUserMessageAnimStateGraphState() {
  // @@protoc_insertion_point(destructor:CUserMessageAnimStateGraphState)
  SharedDtor();
}

void CUserMessageAnimStateGraphState::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CUserMessageAnimStateGraphState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CUserMessageAnimStateGraphState::descriptor() {
  ::protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CUserMessageAnimStateGraphState& CUserMessageAnimStateGraphState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_usermessages_2eproto::scc_info_CUserMessageAnimStateGraphState.base);
  return *internal_default_instance();
}


void CUserMessageAnimStateGraphState::Clear() {
// @@protoc_insertion_point(message_clear_start:CUserMessageAnimStateGraphState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    data_.ClearNonDefaultToEmptyNoArena();
  }
  entity_index_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CUserMessageAnimStateGraphState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUserMessageAnimStateGraphState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 entity_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_entity_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entity_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUserMessageAnimStateGraphState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUserMessageAnimStateGraphState)
  return false;
#undef DO_
}

void CUserMessageAnimStateGraphState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUserMessageAnimStateGraphState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 entity_index = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->entity_index(), output);
  }

  // optional bytes data = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CUserMessageAnimStateGraphState)
}

::google::protobuf::uint8* CUserMessageAnimStateGraphState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUserMessageAnimStateGraphState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 entity_index = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->entity_index(), target);
  }

  // optional bytes data = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CUserMessageAnimStateGraphState)
  return target;
}

size_t CUserMessageAnimStateGraphState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUserMessageAnimStateGraphState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

    // optional int32 entity_index = 1;
    if (has_entity_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entity_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CUserMessageAnimStateGraphState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUserMessageAnimStateGraphState)
  GOOGLE_DCHECK_NE(&from, this);
  const CUserMessageAnimStateGraphState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUserMessageAnimStateGraphState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUserMessageAnimStateGraphState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUserMessageAnimStateGraphState)
    MergeFrom(*source);
  }
}

void CUserMessageAnimStateGraphState::MergeFrom(const CUserMessageAnimStateGraphState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUserMessageAnimStateGraphState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
    if (cached_has_bits & 0x00000002u) {
      entity_index_ = from.entity_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CUserMessageAnimStateGraphState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUserMessageAnimStateGraphState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUserMessageAnimStateGraphState::CopyFrom(const CUserMessageAnimStateGraphState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUserMessageAnimStateGraphState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CUserMessageAnimStateGraphState::IsInitialized() const {
  return true;
}

void CUserMessageAnimStateGraphState::Swap(CUserMessageAnimStateGraphState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUserMessageAnimStateGraphState::InternalSwap(CUserMessageAnimStateGraphState* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(entity_index_, other->entity_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CUserMessageAnimStateGraphState::GetMetadata() const {
  protobuf_usermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_usermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageAchievementEvent* Arena::CreateMaybeMessage< ::CUserMessageAchievementEvent >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageAchievementEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageCloseCaption* Arena::CreateMaybeMessage< ::CUserMessageCloseCaption >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageCloseCaption >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageCloseCaptionDirect* Arena::CreateMaybeMessage< ::CUserMessageCloseCaptionDirect >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageCloseCaptionDirect >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageCloseCaptionPlaceholder* Arena::CreateMaybeMessage< ::CUserMessageCloseCaptionPlaceholder >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageCloseCaptionPlaceholder >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageCurrentTimescale* Arena::CreateMaybeMessage< ::CUserMessageCurrentTimescale >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageCurrentTimescale >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageDesiredTimescale* Arena::CreateMaybeMessage< ::CUserMessageDesiredTimescale >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageDesiredTimescale >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageFade* Arena::CreateMaybeMessage< ::CUserMessageFade >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageFade >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageShake* Arena::CreateMaybeMessage< ::CUserMessageShake >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageShake >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageShakeDir* Arena::CreateMaybeMessage< ::CUserMessageShakeDir >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageShakeDir >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageScreenTilt* Arena::CreateMaybeMessage< ::CUserMessageScreenTilt >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageScreenTilt >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageSayText* Arena::CreateMaybeMessage< ::CUserMessageSayText >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageSayText >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageSayText2* Arena::CreateMaybeMessage< ::CUserMessageSayText2 >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageSayText2 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageHudMsg* Arena::CreateMaybeMessage< ::CUserMessageHudMsg >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageHudMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageHudText* Arena::CreateMaybeMessage< ::CUserMessageHudText >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageHudText >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageTextMsg* Arena::CreateMaybeMessage< ::CUserMessageTextMsg >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageTextMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageGameTitle* Arena::CreateMaybeMessage< ::CUserMessageGameTitle >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageGameTitle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageResetHUD* Arena::CreateMaybeMessage< ::CUserMessageResetHUD >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageResetHUD >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageSendAudio* Arena::CreateMaybeMessage< ::CUserMessageSendAudio >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageSendAudio >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageAudioParameter* Arena::CreateMaybeMessage< ::CUserMessageAudioParameter >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageAudioParameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageVoiceMask* Arena::CreateMaybeMessage< ::CUserMessageVoiceMask >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageVoiceMask >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageRequestState* Arena::CreateMaybeMessage< ::CUserMessageRequestState >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageRequestState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageHintText* Arena::CreateMaybeMessage< ::CUserMessageHintText >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageHintText >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageKeyHintText* Arena::CreateMaybeMessage< ::CUserMessageKeyHintText >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageKeyHintText >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageVoiceSubtitle* Arena::CreateMaybeMessage< ::CUserMessageVoiceSubtitle >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageVoiceSubtitle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageVGUIMenu_Keys* Arena::CreateMaybeMessage< ::CUserMessageVGUIMenu_Keys >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageVGUIMenu_Keys >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageVGUIMenu* Arena::CreateMaybeMessage< ::CUserMessageVGUIMenu >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageVGUIMenu >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageRumble* Arena::CreateMaybeMessage< ::CUserMessageRumble >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageRumble >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageTrain* Arena::CreateMaybeMessage< ::CUserMessageTrain >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageTrain >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageSayTextChannel* Arena::CreateMaybeMessage< ::CUserMessageSayTextChannel >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageSayTextChannel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageColoredText* Arena::CreateMaybeMessage< ::CUserMessageColoredText >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageColoredText >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageItemPickup* Arena::CreateMaybeMessage< ::CUserMessageItemPickup >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageItemPickup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageAmmoDenied* Arena::CreateMaybeMessage< ::CUserMessageAmmoDenied >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageAmmoDenied >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageCrosshairAngle* Arena::CreateMaybeMessage< ::CUserMessageCrosshairAngle >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageCrosshairAngle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageShowMenu* Arena::CreateMaybeMessage< ::CUserMessageShowMenu >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageShowMenu >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageCreditsMsg* Arena::CreateMaybeMessage< ::CUserMessageCreditsMsg >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageCreditsMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CEntityMessagePlayJingle* Arena::CreateMaybeMessage< ::CEntityMessagePlayJingle >(Arena* arena) {
  return Arena::CreateInternal< ::CEntityMessagePlayJingle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CEntityMessageScreenOverlay* Arena::CreateMaybeMessage< ::CEntityMessageScreenOverlay >(Arena* arena) {
  return Arena::CreateInternal< ::CEntityMessageScreenOverlay >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CEntityMessageRemoveAllDecals* Arena::CreateMaybeMessage< ::CEntityMessageRemoveAllDecals >(Arena* arena) {
  return Arena::CreateInternal< ::CEntityMessageRemoveAllDecals >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CEntityMessagePropagateForce* Arena::CreateMaybeMessage< ::CEntityMessagePropagateForce >(Arena* arena) {
  return Arena::CreateInternal< ::CEntityMessagePropagateForce >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CEntityMessageDoSpark* Arena::CreateMaybeMessage< ::CEntityMessageDoSpark >(Arena* arena) {
  return Arena::CreateInternal< ::CEntityMessageDoSpark >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CEntityMessageFixAngle* Arena::CreateMaybeMessage< ::CEntityMessageFixAngle >(Arena* arena) {
  return Arena::CreateInternal< ::CEntityMessageFixAngle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageCameraTransition_Transition_DataDriven* Arena::CreateMaybeMessage< ::CUserMessageCameraTransition_Transition_DataDriven >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageCameraTransition_Transition_DataDriven >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageCameraTransition* Arena::CreateMaybeMessage< ::CUserMessageCameraTransition >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageCameraTransition >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMsg_ParticleManager_ReleaseParticleIndex* Arena::CreateMaybeMessage< ::CUserMsg_ParticleManager_ReleaseParticleIndex >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMsg_ParticleManager_ReleaseParticleIndex >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMsg_ParticleManager_CreateParticle* Arena::CreateMaybeMessage< ::CUserMsg_ParticleManager_CreateParticle >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMsg_ParticleManager_CreateParticle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMsg_ParticleManager_DestroyParticle* Arena::CreateMaybeMessage< ::CUserMsg_ParticleManager_DestroyParticle >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMsg_ParticleManager_DestroyParticle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMsg_ParticleManager_DestroyParticleInvolving* Arena::CreateMaybeMessage< ::CUserMsg_ParticleManager_DestroyParticleInvolving >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMsg_ParticleManager_DestroyParticleInvolving >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMsg_ParticleManager_UpdateParticle* Arena::CreateMaybeMessage< ::CUserMsg_ParticleManager_UpdateParticle >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMsg_ParticleManager_UpdateParticle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMsg_ParticleManager_UpdateParticleFwd* Arena::CreateMaybeMessage< ::CUserMsg_ParticleManager_UpdateParticleFwd >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMsg_ParticleManager_UpdateParticleFwd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMsg_ParticleManager_UpdateParticleOrient* Arena::CreateMaybeMessage< ::CUserMsg_ParticleManager_UpdateParticleOrient >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMsg_ParticleManager_UpdateParticleOrient >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMsg_ParticleManager_UpdateParticleFallback* Arena::CreateMaybeMessage< ::CUserMsg_ParticleManager_UpdateParticleFallback >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMsg_ParticleManager_UpdateParticleFallback >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMsg_ParticleManager_UpdateParticleOffset* Arena::CreateMaybeMessage< ::CUserMsg_ParticleManager_UpdateParticleOffset >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMsg_ParticleManager_UpdateParticleOffset >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMsg_ParticleManager_UpdateParticleEnt* Arena::CreateMaybeMessage< ::CUserMsg_ParticleManager_UpdateParticleEnt >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMsg_ParticleManager_UpdateParticleEnt >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMsg_ParticleManager_UpdateParticleSetFrozen* Arena::CreateMaybeMessage< ::CUserMsg_ParticleManager_UpdateParticleSetFrozen >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMsg_ParticleManager_UpdateParticleSetFrozen >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMsg_ParticleManager_UpdateParticleShouldDraw* Arena::CreateMaybeMessage< ::CUserMsg_ParticleManager_UpdateParticleShouldDraw >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMsg_ParticleManager_UpdateParticleShouldDraw >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMsg_ParticleManager_ChangeControlPointAttachment* Arena::CreateMaybeMessage< ::CUserMsg_ParticleManager_ChangeControlPointAttachment >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMsg_ParticleManager_ChangeControlPointAttachment >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMsg_ParticleManager_UpdateEntityPosition* Arena::CreateMaybeMessage< ::CUserMsg_ParticleManager_UpdateEntityPosition >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMsg_ParticleManager_UpdateEntityPosition >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMsg_ParticleManager_SetParticleFoWProperties* Arena::CreateMaybeMessage< ::CUserMsg_ParticleManager_SetParticleFoWProperties >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMsg_ParticleManager_SetParticleFoWProperties >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMsg_ParticleManager_SetParticleShouldCheckFoW* Arena::CreateMaybeMessage< ::CUserMsg_ParticleManager_SetParticleShouldCheckFoW >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMsg_ParticleManager_SetParticleShouldCheckFoW >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMsg_ParticleManager_SetParticleText* Arena::CreateMaybeMessage< ::CUserMsg_ParticleManager_SetParticleText >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMsg_ParticleManager_SetParticleText >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMsg_ParticleManager* Arena::CreateMaybeMessage< ::CUserMsg_ParticleManager >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMsg_ParticleManager >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMsg_HudError* Arena::CreateMaybeMessage< ::CUserMsg_HudError >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMsg_HudError >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMsg_CustomGameEvent* Arena::CreateMaybeMessage< ::CUserMsg_CustomGameEvent >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMsg_CustomGameEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageHapticPulse* Arena::CreateMaybeMessage< ::CUserMessageHapticPulse >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageHapticPulse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageHapticPulsePrecise* Arena::CreateMaybeMessage< ::CUserMessageHapticPulsePrecise >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageHapticPulsePrecise >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CUserMessageAnimStateGraphState* Arena::CreateMaybeMessage< ::CUserMessageAnimStateGraphState >(Arena* arena) {
  return Arena::CreateInternal< ::CUserMessageAnimStateGraphState >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
