// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: netmessages.proto

#include "netmessages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_netmessages_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_netmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgIPCAddress;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_netmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgServerNetworkStats_Player;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_netmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgServerNetworkStats_Port;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_netmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgVoiceAudio;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_netmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_ClassInfo_class_t;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_netmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_GameEventList_key_t;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_netmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_SendTable_sendprop_t;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_netmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_Sounds_sounddata_t;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_netmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ProtoFlattenedSerializerField_t;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_netmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ProtoFlattenedSerializer_t;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_netmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SerializedNetAddress_t;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_netmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SignedPayload_t;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_netmessages_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CBidirMsg_RelayPacket_SignedDestinationAddress_t;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_netmessages_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CMsgServerPeer;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_netmessages_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CSVCMsg_GameEventList_descriptor_t;
}  // namespace protobuf_netmessages_2eproto
namespace protobuf_networkbasetypes_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_networkbasetypes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgQAngle;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_networkbasetypes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgVector;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_networkbasetypes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_GameSessionConfiguration;
}  // namespace protobuf_networkbasetypes_2eproto
class CCLCMsg_ClientInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCLCMsg_ClientInfo>
      _instance;
} _CCLCMsg_ClientInfo_default_instance_;
class CCLCMsg_MoveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCLCMsg_Move>
      _instance;
} _CCLCMsg_Move_default_instance_;
class CMsgVoiceAudioDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgVoiceAudio>
      _instance;
} _CMsgVoiceAudio_default_instance_;
class CCLCMsg_VoiceDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCLCMsg_VoiceData>
      _instance;
} _CCLCMsg_VoiceData_default_instance_;
class CCLCMsg_BaselineAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCLCMsg_BaselineAck>
      _instance;
} _CCLCMsg_BaselineAck_default_instance_;
class CCLCMsg_ListenEventsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCLCMsg_ListenEvents>
      _instance;
} _CCLCMsg_ListenEvents_default_instance_;
class CCLCMsg_RespondCvarValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCLCMsg_RespondCvarValue>
      _instance;
} _CCLCMsg_RespondCvarValue_default_instance_;
class CCLCMsg_FileCRCCheckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCLCMsg_FileCRCCheck>
      _instance;
} _CCLCMsg_FileCRCCheck_default_instance_;
class CCLCMsg_LoadingProgressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCLCMsg_LoadingProgress>
      _instance;
} _CCLCMsg_LoadingProgress_default_instance_;
class CCLCMsg_SplitPlayerConnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCLCMsg_SplitPlayerConnect>
      _instance;
} _CCLCMsg_SplitPlayerConnect_default_instance_;
class CCLCMsg_ClientMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCLCMsg_ClientMessage>
      _instance;
} _CCLCMsg_ClientMessage_default_instance_;
class CCLCMsg_SplitPlayerDisconnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCLCMsg_SplitPlayerDisconnect>
      _instance;
} _CCLCMsg_SplitPlayerDisconnect_default_instance_;
class CCLCMsg_ServerStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCLCMsg_ServerStatus>
      _instance;
} _CCLCMsg_ServerStatus_default_instance_;
class CCLCMsg_ServerPingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCLCMsg_ServerPing>
      _instance;
} _CCLCMsg_ServerPing_default_instance_;
class CCLCMsg_RequestPauseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCLCMsg_RequestPause>
      _instance;
} _CCLCMsg_RequestPause_default_instance_;
class CCLCMsg_CmdKeyValuesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCLCMsg_CmdKeyValues>
      _instance;
} _CCLCMsg_CmdKeyValues_default_instance_;
class CSVCMsg_ServerInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_ServerInfo>
      _instance;
} _CSVCMsg_ServerInfo_default_instance_;
class CSVCMsg_ClassInfo_class_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_ClassInfo_class_t>
      _instance;
} _CSVCMsg_ClassInfo_class_t_default_instance_;
class CSVCMsg_ClassInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_ClassInfo>
      _instance;
} _CSVCMsg_ClassInfo_default_instance_;
class CSVCMsg_SetPauseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_SetPause>
      _instance;
} _CSVCMsg_SetPause_default_instance_;
class CSVCMsg_VoiceInitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_VoiceInit>
      _instance;
} _CSVCMsg_VoiceInit_default_instance_;
class CSVCMsg_PrintDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_Print>
      _instance;
} _CSVCMsg_Print_default_instance_;
class CSVCMsg_Sounds_sounddata_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_Sounds_sounddata_t>
      _instance;
} _CSVCMsg_Sounds_sounddata_t_default_instance_;
class CSVCMsg_SoundsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_Sounds>
      _instance;
} _CSVCMsg_Sounds_default_instance_;
class CSVCMsg_PrefetchDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_Prefetch>
      _instance;
} _CSVCMsg_Prefetch_default_instance_;
class CSVCMsg_SetViewDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_SetView>
      _instance;
} _CSVCMsg_SetView_default_instance_;
class CSVCMsg_FixAngleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_FixAngle>
      _instance;
} _CSVCMsg_FixAngle_default_instance_;
class CSVCMsg_CrosshairAngleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_CrosshairAngle>
      _instance;
} _CSVCMsg_CrosshairAngle_default_instance_;
class CSVCMsg_BSPDecalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_BSPDecal>
      _instance;
} _CSVCMsg_BSPDecal_default_instance_;
class CSVCMsg_SplitScreenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_SplitScreen>
      _instance;
} _CSVCMsg_SplitScreen_default_instance_;
class CSVCMsg_GetCvarValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_GetCvarValue>
      _instance;
} _CSVCMsg_GetCvarValue_default_instance_;
class CSVCMsg_MenuDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_Menu>
      _instance;
} _CSVCMsg_Menu_default_instance_;
class CSVCMsg_SendTable_sendprop_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_SendTable_sendprop_t>
      _instance;
} _CSVCMsg_SendTable_sendprop_t_default_instance_;
class CSVCMsg_SendTableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_SendTable>
      _instance;
} _CSVCMsg_SendTable_default_instance_;
class CSVCMsg_GameEventList_key_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_GameEventList_key_t>
      _instance;
} _CSVCMsg_GameEventList_key_t_default_instance_;
class CSVCMsg_GameEventList_descriptor_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_GameEventList_descriptor_t>
      _instance;
} _CSVCMsg_GameEventList_descriptor_t_default_instance_;
class CSVCMsg_GameEventListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_GameEventList>
      _instance;
} _CSVCMsg_GameEventList_default_instance_;
class CSVCMsg_PacketEntitiesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_PacketEntities>
      _instance;
} _CSVCMsg_PacketEntities_default_instance_;
class CSVCMsg_TempEntitiesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_TempEntities>
      _instance;
} _CSVCMsg_TempEntities_default_instance_;
class CSVCMsg_CreateStringTableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_CreateStringTable>
      _instance;
} _CSVCMsg_CreateStringTable_default_instance_;
class CSVCMsg_UpdateStringTableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_UpdateStringTable>
      _instance;
} _CSVCMsg_UpdateStringTable_default_instance_;
class CSVCMsg_VoiceDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_VoiceData>
      _instance;
} _CSVCMsg_VoiceData_default_instance_;
class CSVCMsg_PacketReliableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_PacketReliable>
      _instance;
} _CSVCMsg_PacketReliable_default_instance_;
class CSVCMsg_FullFrameSplitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_FullFrameSplit>
      _instance;
} _CSVCMsg_FullFrameSplit_default_instance_;
class CSVCMsg_HLTVStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_HLTVStatus>
      _instance;
} _CSVCMsg_HLTVStatus_default_instance_;
class CSVCMsg_ServerSteamIDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_ServerSteamID>
      _instance;
} _CSVCMsg_ServerSteamID_default_instance_;
class CSVCMsg_CmdKeyValuesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_CmdKeyValues>
      _instance;
} _CSVCMsg_CmdKeyValues_default_instance_;
class CMsgIPCAddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgIPCAddress>
      _instance;
} _CMsgIPCAddress_default_instance_;
class CMsgServerPeerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgServerPeer>
      _instance;
} _CMsgServerPeer_default_instance_;
class CSVCMsg_PeerListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_PeerList>
      _instance;
} _CSVCMsg_PeerList_default_instance_;
class CSVCMsg_ClearAllStringTablesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_ClearAllStringTables>
      _instance;
} _CSVCMsg_ClearAllStringTables_default_instance_;
class ProtoFlattenedSerializerField_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtoFlattenedSerializerField_t>
      _instance;
} _ProtoFlattenedSerializerField_t_default_instance_;
class ProtoFlattenedSerializer_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtoFlattenedSerializer_t>
      _instance;
} _ProtoFlattenedSerializer_t_default_instance_;
class CSVCMsg_FlattenedSerializerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_FlattenedSerializer>
      _instance;
} _CSVCMsg_FlattenedSerializer_default_instance_;
class CSVCMsg_StopSoundDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_StopSound>
      _instance;
} _CSVCMsg_StopSound_default_instance_;
class CBidirMsg_RebroadcastGameEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CBidirMsg_RebroadcastGameEvent>
      _instance;
} _CBidirMsg_RebroadcastGameEvent_default_instance_;
class CBidirMsg_RebroadcastSourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CBidirMsg_RebroadcastSource>
      _instance;
} _CBidirMsg_RebroadcastSource_default_instance_;
class SerializedNetAddress_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SerializedNetAddress_t>
      _instance;
} _SerializedNetAddress_t_default_instance_;
class CBidirMsg_RelayInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CBidirMsg_RelayInfo>
      _instance;
} _CBidirMsg_RelayInfo_default_instance_;
class SignedPayload_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignedPayload_t>
      _instance;
} _SignedPayload_t_default_instance_;
class CBidirMsg_RelayPacket_SignedDestinationAddress_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CBidirMsg_RelayPacket_SignedDestinationAddress_t>
      _instance;
} _CBidirMsg_RelayPacket_SignedDestinationAddress_t_default_instance_;
class CBidirMsg_RelayPacketDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CBidirMsg_RelayPacket>
      _instance;
} _CBidirMsg_RelayPacket_default_instance_;
class CMsgServerNetworkStats_PortDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgServerNetworkStats_Port>
      _instance;
} _CMsgServerNetworkStats_Port_default_instance_;
class CMsgServerNetworkStats_PlayerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgServerNetworkStats_Player>
      _instance;
} _CMsgServerNetworkStats_Player_default_instance_;
class CMsgServerNetworkStatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgServerNetworkStats>
      _instance;
} _CMsgServerNetworkStats_default_instance_;
namespace protobuf_netmessages_2eproto {
static void InitDefaultsCCLCMsg_ClientInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CCLCMsg_ClientInfo_default_instance_;
    new (ptr) ::CCLCMsg_ClientInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCLCMsg_ClientInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CCLCMsg_ClientInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCCLCMsg_ClientInfo}, {}};

static void InitDefaultsCCLCMsg_Move() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CCLCMsg_Move_default_instance_;
    new (ptr) ::CCLCMsg_Move();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCLCMsg_Move::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CCLCMsg_Move =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCCLCMsg_Move}, {}};

static void InitDefaultsCMsgVoiceAudio() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgVoiceAudio_default_instance_;
    new (ptr) ::CMsgVoiceAudio();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgVoiceAudio::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgVoiceAudio =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgVoiceAudio}, {}};

static void InitDefaultsCCLCMsg_VoiceData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CCLCMsg_VoiceData_default_instance_;
    new (ptr) ::CCLCMsg_VoiceData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCLCMsg_VoiceData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CCLCMsg_VoiceData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCCLCMsg_VoiceData}, {
      &protobuf_netmessages_2eproto::scc_info_CMsgVoiceAudio.base,}};

static void InitDefaultsCCLCMsg_BaselineAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CCLCMsg_BaselineAck_default_instance_;
    new (ptr) ::CCLCMsg_BaselineAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCLCMsg_BaselineAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CCLCMsg_BaselineAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCCLCMsg_BaselineAck}, {}};

static void InitDefaultsCCLCMsg_ListenEvents() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CCLCMsg_ListenEvents_default_instance_;
    new (ptr) ::CCLCMsg_ListenEvents();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCLCMsg_ListenEvents::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CCLCMsg_ListenEvents =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCCLCMsg_ListenEvents}, {}};

static void InitDefaultsCCLCMsg_RespondCvarValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CCLCMsg_RespondCvarValue_default_instance_;
    new (ptr) ::CCLCMsg_RespondCvarValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCLCMsg_RespondCvarValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CCLCMsg_RespondCvarValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCCLCMsg_RespondCvarValue}, {}};

static void InitDefaultsCCLCMsg_FileCRCCheck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CCLCMsg_FileCRCCheck_default_instance_;
    new (ptr) ::CCLCMsg_FileCRCCheck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCLCMsg_FileCRCCheck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CCLCMsg_FileCRCCheck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCCLCMsg_FileCRCCheck}, {}};

static void InitDefaultsCCLCMsg_LoadingProgress() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CCLCMsg_LoadingProgress_default_instance_;
    new (ptr) ::CCLCMsg_LoadingProgress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCLCMsg_LoadingProgress::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CCLCMsg_LoadingProgress =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCCLCMsg_LoadingProgress}, {}};

static void InitDefaultsCCLCMsg_SplitPlayerConnect() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CCLCMsg_SplitPlayerConnect_default_instance_;
    new (ptr) ::CCLCMsg_SplitPlayerConnect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCLCMsg_SplitPlayerConnect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CCLCMsg_SplitPlayerConnect =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCCLCMsg_SplitPlayerConnect}, {}};

static void InitDefaultsCCLCMsg_ClientMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CCLCMsg_ClientMessage_default_instance_;
    new (ptr) ::CCLCMsg_ClientMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCLCMsg_ClientMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CCLCMsg_ClientMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCCLCMsg_ClientMessage}, {}};

static void InitDefaultsCCLCMsg_SplitPlayerDisconnect() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CCLCMsg_SplitPlayerDisconnect_default_instance_;
    new (ptr) ::CCLCMsg_SplitPlayerDisconnect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCLCMsg_SplitPlayerDisconnect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CCLCMsg_SplitPlayerDisconnect =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCCLCMsg_SplitPlayerDisconnect}, {}};

static void InitDefaultsCCLCMsg_ServerStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CCLCMsg_ServerStatus_default_instance_;
    new (ptr) ::CCLCMsg_ServerStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCLCMsg_ServerStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CCLCMsg_ServerStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCCLCMsg_ServerStatus}, {}};

static void InitDefaultsCCLCMsg_ServerPing() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CCLCMsg_ServerPing_default_instance_;
    new (ptr) ::CCLCMsg_ServerPing();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCLCMsg_ServerPing::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CCLCMsg_ServerPing =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCCLCMsg_ServerPing}, {}};

static void InitDefaultsCCLCMsg_RequestPause() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CCLCMsg_RequestPause_default_instance_;
    new (ptr) ::CCLCMsg_RequestPause();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCLCMsg_RequestPause::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CCLCMsg_RequestPause =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCCLCMsg_RequestPause}, {}};

static void InitDefaultsCCLCMsg_CmdKeyValues() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CCLCMsg_CmdKeyValues_default_instance_;
    new (ptr) ::CCLCMsg_CmdKeyValues();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCLCMsg_CmdKeyValues::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CCLCMsg_CmdKeyValues =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCCLCMsg_CmdKeyValues}, {}};

static void InitDefaultsCSVCMsg_ServerInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_ServerInfo_default_instance_;
    new (ptr) ::CSVCMsg_ServerInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_ServerInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CSVCMsg_ServerInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCSVCMsg_ServerInfo}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CSVCMsg_GameSessionConfiguration.base,}};

static void InitDefaultsCSVCMsg_ClassInfo_class_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_ClassInfo_class_t_default_instance_;
    new (ptr) ::CSVCMsg_ClassInfo_class_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_ClassInfo_class_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_ClassInfo_class_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCSVCMsg_ClassInfo_class_t}, {}};

static void InitDefaultsCSVCMsg_ClassInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_ClassInfo_default_instance_;
    new (ptr) ::CSVCMsg_ClassInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_ClassInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CSVCMsg_ClassInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCSVCMsg_ClassInfo}, {
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_ClassInfo_class_t.base,}};

static void InitDefaultsCSVCMsg_SetPause() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_SetPause_default_instance_;
    new (ptr) ::CSVCMsg_SetPause();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_SetPause::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_SetPause =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCSVCMsg_SetPause}, {}};

static void InitDefaultsCSVCMsg_VoiceInit() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_VoiceInit_default_instance_;
    new (ptr) ::CSVCMsg_VoiceInit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_VoiceInit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_VoiceInit =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCSVCMsg_VoiceInit}, {}};

static void InitDefaultsCSVCMsg_Print() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_Print_default_instance_;
    new (ptr) ::CSVCMsg_Print();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_Print::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_Print =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCSVCMsg_Print}, {}};

static void InitDefaultsCSVCMsg_Sounds_sounddata_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_Sounds_sounddata_t_default_instance_;
    new (ptr) ::CSVCMsg_Sounds_sounddata_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_Sounds_sounddata_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_Sounds_sounddata_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCSVCMsg_Sounds_sounddata_t}, {}};

static void InitDefaultsCSVCMsg_Sounds() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_Sounds_default_instance_;
    new (ptr) ::CSVCMsg_Sounds();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_Sounds::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CSVCMsg_Sounds =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCSVCMsg_Sounds}, {
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_Sounds_sounddata_t.base,}};

static void InitDefaultsCSVCMsg_Prefetch() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_Prefetch_default_instance_;
    new (ptr) ::CSVCMsg_Prefetch();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_Prefetch::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_Prefetch =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCSVCMsg_Prefetch}, {}};

static void InitDefaultsCSVCMsg_SetView() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_SetView_default_instance_;
    new (ptr) ::CSVCMsg_SetView();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_SetView::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_SetView =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCSVCMsg_SetView}, {}};

static void InitDefaultsCSVCMsg_FixAngle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_FixAngle_default_instance_;
    new (ptr) ::CSVCMsg_FixAngle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_FixAngle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CSVCMsg_FixAngle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCSVCMsg_FixAngle}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgQAngle.base,}};

static void InitDefaultsCSVCMsg_CrosshairAngle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_CrosshairAngle_default_instance_;
    new (ptr) ::CSVCMsg_CrosshairAngle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_CrosshairAngle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CSVCMsg_CrosshairAngle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCSVCMsg_CrosshairAngle}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgQAngle.base,}};

static void InitDefaultsCSVCMsg_BSPDecal() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_BSPDecal_default_instance_;
    new (ptr) ::CSVCMsg_BSPDecal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_BSPDecal::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CSVCMsg_BSPDecal =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCSVCMsg_BSPDecal}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgVector.base,}};

static void InitDefaultsCSVCMsg_SplitScreen() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_SplitScreen_default_instance_;
    new (ptr) ::CSVCMsg_SplitScreen();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_SplitScreen::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_SplitScreen =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCSVCMsg_SplitScreen}, {}};

static void InitDefaultsCSVCMsg_GetCvarValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_GetCvarValue_default_instance_;
    new (ptr) ::CSVCMsg_GetCvarValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_GetCvarValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_GetCvarValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCSVCMsg_GetCvarValue}, {}};

static void InitDefaultsCSVCMsg_Menu() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_Menu_default_instance_;
    new (ptr) ::CSVCMsg_Menu();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_Menu::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_Menu =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCSVCMsg_Menu}, {}};

static void InitDefaultsCSVCMsg_SendTable_sendprop_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_SendTable_sendprop_t_default_instance_;
    new (ptr) ::CSVCMsg_SendTable_sendprop_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_SendTable_sendprop_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_SendTable_sendprop_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCSVCMsg_SendTable_sendprop_t}, {}};

static void InitDefaultsCSVCMsg_SendTable() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_SendTable_default_instance_;
    new (ptr) ::CSVCMsg_SendTable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_SendTable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CSVCMsg_SendTable =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCSVCMsg_SendTable}, {
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_SendTable_sendprop_t.base,}};

static void InitDefaultsCSVCMsg_GameEventList_key_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_GameEventList_key_t_default_instance_;
    new (ptr) ::CSVCMsg_GameEventList_key_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_GameEventList_key_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_GameEventList_key_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCSVCMsg_GameEventList_key_t}, {}};

static void InitDefaultsCSVCMsg_GameEventList_descriptor_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_GameEventList_descriptor_t_default_instance_;
    new (ptr) ::CSVCMsg_GameEventList_descriptor_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_GameEventList_descriptor_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CSVCMsg_GameEventList_descriptor_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCSVCMsg_GameEventList_descriptor_t}, {
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_GameEventList_key_t.base,}};

static void InitDefaultsCSVCMsg_GameEventList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_GameEventList_default_instance_;
    new (ptr) ::CSVCMsg_GameEventList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_GameEventList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CSVCMsg_GameEventList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCSVCMsg_GameEventList}, {
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_GameEventList_descriptor_t.base,}};

static void InitDefaultsCSVCMsg_PacketEntities() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_PacketEntities_default_instance_;
    new (ptr) ::CSVCMsg_PacketEntities();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_PacketEntities::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_PacketEntities =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCSVCMsg_PacketEntities}, {}};

static void InitDefaultsCSVCMsg_TempEntities() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_TempEntities_default_instance_;
    new (ptr) ::CSVCMsg_TempEntities();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_TempEntities::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_TempEntities =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCSVCMsg_TempEntities}, {}};

static void InitDefaultsCSVCMsg_CreateStringTable() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_CreateStringTable_default_instance_;
    new (ptr) ::CSVCMsg_CreateStringTable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_CreateStringTable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_CreateStringTable =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCSVCMsg_CreateStringTable}, {}};

static void InitDefaultsCSVCMsg_UpdateStringTable() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_UpdateStringTable_default_instance_;
    new (ptr) ::CSVCMsg_UpdateStringTable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_UpdateStringTable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_UpdateStringTable =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCSVCMsg_UpdateStringTable}, {}};

static void InitDefaultsCSVCMsg_VoiceData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_VoiceData_default_instance_;
    new (ptr) ::CSVCMsg_VoiceData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_VoiceData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CSVCMsg_VoiceData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCSVCMsg_VoiceData}, {
      &protobuf_netmessages_2eproto::scc_info_CMsgVoiceAudio.base,}};

static void InitDefaultsCSVCMsg_PacketReliable() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_PacketReliable_default_instance_;
    new (ptr) ::CSVCMsg_PacketReliable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_PacketReliable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_PacketReliable =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCSVCMsg_PacketReliable}, {}};

static void InitDefaultsCSVCMsg_FullFrameSplit() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_FullFrameSplit_default_instance_;
    new (ptr) ::CSVCMsg_FullFrameSplit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_FullFrameSplit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_FullFrameSplit =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCSVCMsg_FullFrameSplit}, {}};

static void InitDefaultsCSVCMsg_HLTVStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_HLTVStatus_default_instance_;
    new (ptr) ::CSVCMsg_HLTVStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_HLTVStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_HLTVStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCSVCMsg_HLTVStatus}, {}};

static void InitDefaultsCSVCMsg_ServerSteamID() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_ServerSteamID_default_instance_;
    new (ptr) ::CSVCMsg_ServerSteamID();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_ServerSteamID::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_ServerSteamID =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCSVCMsg_ServerSteamID}, {}};

static void InitDefaultsCSVCMsg_CmdKeyValues() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_CmdKeyValues_default_instance_;
    new (ptr) ::CSVCMsg_CmdKeyValues();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_CmdKeyValues::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_CmdKeyValues =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCSVCMsg_CmdKeyValues}, {}};

static void InitDefaultsCMsgIPCAddress() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgIPCAddress_default_instance_;
    new (ptr) ::CMsgIPCAddress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgIPCAddress::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgIPCAddress =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgIPCAddress}, {}};

static void InitDefaultsCMsgServerPeer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgServerPeer_default_instance_;
    new (ptr) ::CMsgServerPeer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgServerPeer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgServerPeer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgServerPeer}, {
      &protobuf_netmessages_2eproto::scc_info_CMsgIPCAddress.base,}};

static void InitDefaultsCSVCMsg_PeerList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_PeerList_default_instance_;
    new (ptr) ::CSVCMsg_PeerList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_PeerList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CSVCMsg_PeerList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCSVCMsg_PeerList}, {
      &protobuf_netmessages_2eproto::scc_info_CMsgServerPeer.base,}};

static void InitDefaultsCSVCMsg_ClearAllStringTables() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_ClearAllStringTables_default_instance_;
    new (ptr) ::CSVCMsg_ClearAllStringTables();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_ClearAllStringTables::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_ClearAllStringTables =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCSVCMsg_ClearAllStringTables}, {}};

static void InitDefaultsProtoFlattenedSerializerField_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoFlattenedSerializerField_t_default_instance_;
    new (ptr) ::ProtoFlattenedSerializerField_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoFlattenedSerializerField_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProtoFlattenedSerializerField_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProtoFlattenedSerializerField_t}, {}};

static void InitDefaultsProtoFlattenedSerializer_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoFlattenedSerializer_t_default_instance_;
    new (ptr) ::ProtoFlattenedSerializer_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoFlattenedSerializer_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProtoFlattenedSerializer_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProtoFlattenedSerializer_t}, {}};

static void InitDefaultsCSVCMsg_FlattenedSerializer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_FlattenedSerializer_default_instance_;
    new (ptr) ::CSVCMsg_FlattenedSerializer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_FlattenedSerializer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CSVCMsg_FlattenedSerializer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCSVCMsg_FlattenedSerializer}, {
      &protobuf_netmessages_2eproto::scc_info_ProtoFlattenedSerializer_t.base,
      &protobuf_netmessages_2eproto::scc_info_ProtoFlattenedSerializerField_t.base,}};

static void InitDefaultsCSVCMsg_StopSound() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_StopSound_default_instance_;
    new (ptr) ::CSVCMsg_StopSound();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_StopSound::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_StopSound =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCSVCMsg_StopSound}, {}};

static void InitDefaultsCBidirMsg_RebroadcastGameEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CBidirMsg_RebroadcastGameEvent_default_instance_;
    new (ptr) ::CBidirMsg_RebroadcastGameEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CBidirMsg_RebroadcastGameEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CBidirMsg_RebroadcastGameEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCBidirMsg_RebroadcastGameEvent}, {}};

static void InitDefaultsCBidirMsg_RebroadcastSource() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CBidirMsg_RebroadcastSource_default_instance_;
    new (ptr) ::CBidirMsg_RebroadcastSource();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CBidirMsg_RebroadcastSource::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CBidirMsg_RebroadcastSource =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCBidirMsg_RebroadcastSource}, {}};

static void InitDefaultsSerializedNetAddress_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SerializedNetAddress_t_default_instance_;
    new (ptr) ::SerializedNetAddress_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SerializedNetAddress_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SerializedNetAddress_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSerializedNetAddress_t}, {}};

static void InitDefaultsCBidirMsg_RelayInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CBidirMsg_RelayInfo_default_instance_;
    new (ptr) ::CBidirMsg_RelayInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CBidirMsg_RelayInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CBidirMsg_RelayInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCBidirMsg_RelayInfo}, {
      &protobuf_netmessages_2eproto::scc_info_SerializedNetAddress_t.base,}};

static void InitDefaultsSignedPayload_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SignedPayload_t_default_instance_;
    new (ptr) ::SignedPayload_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SignedPayload_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SignedPayload_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSignedPayload_t}, {}};

static void InitDefaultsCBidirMsg_RelayPacket_SignedDestinationAddress_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CBidirMsg_RelayPacket_SignedDestinationAddress_t_default_instance_;
    new (ptr) ::CBidirMsg_RelayPacket_SignedDestinationAddress_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CBidirMsg_RelayPacket_SignedDestinationAddress_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CBidirMsg_RelayPacket_SignedDestinationAddress_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCBidirMsg_RelayPacket_SignedDestinationAddress_t}, {
      &protobuf_netmessages_2eproto::scc_info_SerializedNetAddress_t.base,}};

static void InitDefaultsCBidirMsg_RelayPacket() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CBidirMsg_RelayPacket_default_instance_;
    new (ptr) ::CBidirMsg_RelayPacket();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CBidirMsg_RelayPacket::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_CBidirMsg_RelayPacket =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsCBidirMsg_RelayPacket}, {
      &protobuf_netmessages_2eproto::scc_info_SerializedNetAddress_t.base,
      &protobuf_netmessages_2eproto::scc_info_SignedPayload_t.base,
      &protobuf_netmessages_2eproto::scc_info_CBidirMsg_RelayPacket_SignedDestinationAddress_t.base,}};

static void InitDefaultsCMsgServerNetworkStats_Port() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgServerNetworkStats_Port_default_instance_;
    new (ptr) ::CMsgServerNetworkStats_Port();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgServerNetworkStats_Port::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgServerNetworkStats_Port =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgServerNetworkStats_Port}, {}};

static void InitDefaultsCMsgServerNetworkStats_Player() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgServerNetworkStats_Player_default_instance_;
    new (ptr) ::CMsgServerNetworkStats_Player();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgServerNetworkStats_Player::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgServerNetworkStats_Player =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgServerNetworkStats_Player}, {}};

static void InitDefaultsCMsgServerNetworkStats() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgServerNetworkStats_default_instance_;
    new (ptr) ::CMsgServerNetworkStats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgServerNetworkStats::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CMsgServerNetworkStats =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCMsgServerNetworkStats}, {
      &protobuf_netmessages_2eproto::scc_info_CMsgServerNetworkStats_Port.base,
      &protobuf_netmessages_2eproto::scc_info_CMsgServerNetworkStats_Player.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CCLCMsg_ClientInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CCLCMsg_Move.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgVoiceAudio.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CCLCMsg_VoiceData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CCLCMsg_BaselineAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CCLCMsg_ListenEvents.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CCLCMsg_RespondCvarValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CCLCMsg_FileCRCCheck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CCLCMsg_LoadingProgress.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CCLCMsg_SplitPlayerConnect.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CCLCMsg_ClientMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CCLCMsg_SplitPlayerDisconnect.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CCLCMsg_ServerStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CCLCMsg_ServerPing.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CCLCMsg_RequestPause.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CCLCMsg_CmdKeyValues.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_ServerInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_ClassInfo_class_t.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_ClassInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_SetPause.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_VoiceInit.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_Print.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_Sounds_sounddata_t.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_Sounds.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_Prefetch.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_SetView.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_FixAngle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_CrosshairAngle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_BSPDecal.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_SplitScreen.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_GetCvarValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_Menu.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_SendTable_sendprop_t.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_SendTable.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_GameEventList_key_t.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_GameEventList_descriptor_t.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_GameEventList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_PacketEntities.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_TempEntities.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_CreateStringTable.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_UpdateStringTable.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_VoiceData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_PacketReliable.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_FullFrameSplit.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_HLTVStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_ServerSteamID.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_CmdKeyValues.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgIPCAddress.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgServerPeer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_PeerList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_ClearAllStringTables.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProtoFlattenedSerializerField_t.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProtoFlattenedSerializer_t.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_FlattenedSerializer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_StopSound.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CBidirMsg_RebroadcastGameEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CBidirMsg_RebroadcastSource.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SerializedNetAddress_t.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CBidirMsg_RelayInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SignedPayload_t.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CBidirMsg_RelayPacket_SignedDestinationAddress_t.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CBidirMsg_RelayPacket.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgServerNetworkStats_Port.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgServerNetworkStats_Player.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgServerNetworkStats.base);
}

::google::protobuf::Metadata file_level_metadata[65];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[12];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_ClientInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_ClientInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_ClientInfo, send_table_crc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_ClientInfo, server_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_ClientInfo, is_hltv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_ClientInfo, is_replay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_ClientInfo, friends_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_ClientInfo, friends_name_),
  1,
  2,
  3,
  4,
  5,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_Move, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_Move, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_Move, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_Move, command_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_Move, num_commands_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgVoiceAudio, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgVoiceAudio, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgVoiceAudio, format_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgVoiceAudio, voice_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgVoiceAudio, sequence_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgVoiceAudio, section_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgVoiceAudio, sample_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgVoiceAudio, uncompressed_sample_offset_),
  1,
  0,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_VoiceData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_VoiceData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_VoiceData, audio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_VoiceData, xuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_VoiceData, tick_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_BaselineAck, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_BaselineAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_BaselineAck, baseline_tick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_BaselineAck, baseline_nr_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_ListenEvents, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_ListenEvents, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_ListenEvents, event_mask_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_RespondCvarValue, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_RespondCvarValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_RespondCvarValue, cookie_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_RespondCvarValue, status_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_RespondCvarValue, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_RespondCvarValue, value_),
  2,
  3,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_FileCRCCheck, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_FileCRCCheck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_FileCRCCheck, code_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_FileCRCCheck, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_FileCRCCheck, code_filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_FileCRCCheck, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_FileCRCCheck, crc_),
  2,
  0,
  3,
  1,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_LoadingProgress, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_LoadingProgress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_LoadingProgress, progress_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_SplitPlayerConnect, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_SplitPlayerConnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_SplitPlayerConnect, playername_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_ClientMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_ClientMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_ClientMessage, msg_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_ClientMessage, data_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_SplitPlayerDisconnect, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_SplitPlayerDisconnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_SplitPlayerDisconnect, slot_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_ServerStatus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_ServerStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_ServerStatus, simplified_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_ServerPing, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_ServerPing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_RequestPause, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_RequestPause, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_RequestPause, pause_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_RequestPause, pause_group_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_CmdKeyValues, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_CmdKeyValues, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_CmdKeyValues, data_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ServerInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ServerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ServerInfo, protocol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ServerInfo, server_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ServerInfo, is_dedicated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ServerInfo, is_hltv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ServerInfo, is_replay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ServerInfo, c_os_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ServerInfo, max_clients_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ServerInfo, max_classes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ServerInfo, player_slot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ServerInfo, tick_interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ServerInfo, game_dir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ServerInfo, map_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ServerInfo, sky_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ServerInfo, host_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ServerInfo, addon_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ServerInfo, game_session_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ServerInfo, game_session_manifest_),
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  0,
  1,
  2,
  3,
  4,
  6,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ClassInfo_class_t, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ClassInfo_class_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ClassInfo_class_t, class_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ClassInfo_class_t, data_table_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ClassInfo_class_t, class_name_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ClassInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ClassInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ClassInfo, create_on_client_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ClassInfo, classes_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_SetPause, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_SetPause, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_SetPause, paused_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_VoiceInit, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_VoiceInit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_VoiceInit, quality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_VoiceInit, codec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_VoiceInit, version_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Print, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Print, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Print, text_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, origin_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, origin_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, origin_z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, volume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, delay_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, sequence_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, entity_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, pitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, sound_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, sound_num_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, speaker_entity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, random_seed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, sound_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, is_sentence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, is_ambient_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Sounds_sounddata_t, sound_resource_id_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  18,
  17,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Sounds, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Sounds, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Sounds, reliable_sound_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Sounds, sounds_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Prefetch, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Prefetch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Prefetch, sound_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Prefetch, resource_type_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_SetView, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_SetView, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_SetView, entity_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_SetView, slot_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_FixAngle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_FixAngle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_FixAngle, relative_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_FixAngle, angle_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_CrosshairAngle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_CrosshairAngle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_CrosshairAngle, angle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_BSPDecal, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_BSPDecal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_BSPDecal, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_BSPDecal, decal_texture_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_BSPDecal, entity_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_BSPDecal, model_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_BSPDecal, low_priority_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_SplitScreen, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_SplitScreen, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_SplitScreen, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_SplitScreen, slot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_SplitScreen, player_index_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GetCvarValue, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GetCvarValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GetCvarValue, cookie_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GetCvarValue, cvar_name_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Menu, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Menu, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Menu, dialog_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_Menu, menu_key_values_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_SendTable_sendprop_t, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_SendTable_sendprop_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_SendTable_sendprop_t, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_SendTable_sendprop_t, var_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_SendTable_sendprop_t, flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_SendTable_sendprop_t, priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_SendTable_sendprop_t, dt_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_SendTable_sendprop_t, num_elements_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_SendTable_sendprop_t, low_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_SendTable_sendprop_t, high_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_SendTable_sendprop_t, num_bits_),
  2,
  0,
  3,
  4,
  1,
  5,
  6,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_SendTable, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_SendTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_SendTable, is_end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_SendTable, net_table_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_SendTable, needs_decoder_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_SendTable, props_),
  1,
  0,
  2,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameEventList_key_t, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameEventList_key_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameEventList_key_t, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameEventList_key_t, name_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameEventList_descriptor_t, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameEventList_descriptor_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameEventList_descriptor_t, eventid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameEventList_descriptor_t, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameEventList_descriptor_t, keys_),
  1,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameEventList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameEventList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameEventList, descriptors_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_PacketEntities, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_PacketEntities, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_PacketEntities, max_entries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_PacketEntities, updated_entries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_PacketEntities, is_delta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_PacketEntities, update_baseline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_PacketEntities, baseline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_PacketEntities, delta_from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_PacketEntities, entity_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_PacketEntities, pending_full_frame_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_PacketEntities, active_spawngroup_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_PacketEntities, max_spawngroup_creationsequence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_PacketEntities, last_cmd_number_),
  1,
  2,
  4,
  5,
  3,
  7,
  0,
  6,
  8,
  9,
  10,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_TempEntities, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_TempEntities, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_TempEntities, reliable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_TempEntities, num_entries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_TempEntities, entity_data_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_CreateStringTable, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_CreateStringTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_CreateStringTable, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_CreateStringTable, num_entries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_CreateStringTable, user_data_fixed_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_CreateStringTable, user_data_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_CreateStringTable, user_data_size_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_CreateStringTable, flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_CreateStringTable, string_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_CreateStringTable, uncompressed_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_CreateStringTable, data_compressed_),
  0,
  2,
  6,
  3,
  4,
  5,
  1,
  8,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_UpdateStringTable, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_UpdateStringTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_UpdateStringTable, table_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_UpdateStringTable, num_changed_entries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_UpdateStringTable, string_data_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_VoiceData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_VoiceData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_VoiceData, audio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_VoiceData, client_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_VoiceData, proximity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_VoiceData, xuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_VoiceData, audible_mask_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_VoiceData, tick_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_PacketReliable, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_PacketReliable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_PacketReliable, tick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_PacketReliable, messagessize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_PacketReliable, state_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_FullFrameSplit, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_FullFrameSplit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_FullFrameSplit, tick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_FullFrameSplit, section_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_FullFrameSplit, total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_FullFrameSplit, data_),
  1,
  2,
  3,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_HLTVStatus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_HLTVStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_HLTVStatus, master_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_HLTVStatus, clients_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_HLTVStatus, slots_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_HLTVStatus, proxies_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ServerSteamID, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ServerSteamID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ServerSteamID, steam_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_CmdKeyValues, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_CmdKeyValues, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_CmdKeyValues, data_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgIPCAddress, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgIPCAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgIPCAddress, computer_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgIPCAddress, process_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerPeer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerPeer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerPeer, player_slot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerPeer, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerPeer, ipc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerPeer, they_hear_you_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerPeer, you_hear_them_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerPeer, is_listenserver_host_),
  2,
  1,
  0,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_PeerList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_PeerList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_PeerList, peer_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ClearAllStringTables, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ClearAllStringTables, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_ClearAllStringTables, mapname_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoFlattenedSerializerField_t, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoFlattenedSerializerField_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoFlattenedSerializerField_t, var_type_sym_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoFlattenedSerializerField_t, var_name_sym_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoFlattenedSerializerField_t, bit_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoFlattenedSerializerField_t, low_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoFlattenedSerializerField_t, high_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoFlattenedSerializerField_t, encode_flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoFlattenedSerializerField_t, field_serializer_name_sym_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoFlattenedSerializerField_t, field_serializer_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoFlattenedSerializerField_t, send_node_sym_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoFlattenedSerializerField_t, var_encoder_sym_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoFlattenedSerializer_t, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoFlattenedSerializer_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoFlattenedSerializer_t, serializer_name_sym_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoFlattenedSerializer_t, serializer_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoFlattenedSerializer_t, fields_index_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_FlattenedSerializer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_FlattenedSerializer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_FlattenedSerializer, serializers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_FlattenedSerializer, symbols_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_FlattenedSerializer, fields_),
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_StopSound, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_StopSound, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_StopSound, guid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CBidirMsg_RebroadcastGameEvent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CBidirMsg_RebroadcastGameEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CBidirMsg_RebroadcastGameEvent, posttoserver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CBidirMsg_RebroadcastGameEvent, buftype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CBidirMsg_RebroadcastGameEvent, clientbitcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CBidirMsg_RebroadcastGameEvent, receivingclients_),
  0,
  1,
  3,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CBidirMsg_RebroadcastSource, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CBidirMsg_RebroadcastSource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CBidirMsg_RebroadcastSource, eventsource_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedNetAddress_t, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedNetAddress_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedNetAddress_t, serializedaddress_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CBidirMsg_RelayInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CBidirMsg_RelayInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CBidirMsg_RelayInfo, operation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CBidirMsg_RelayInfo, serializedtargetaddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CBidirMsg_RelayInfo, additionalhops_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SignedPayload_t, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SignedPayload_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SignedPayload_t, payloaddata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SignedPayload_t, signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SignedPayload_t, bpayloadencrypted_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CBidirMsg_RelayPacket_SignedDestinationAddress_t, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CBidirMsg_RelayPacket_SignedDestinationAddress_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CBidirMsg_RelayPacket_SignedDestinationAddress_t, serializedaddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CBidirMsg_RelayPacket_SignedDestinationAddress_t, signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CBidirMsg_RelayPacket_SignedDestinationAddress_t, encryptedpayloadkey_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CBidirMsg_RelayPacket, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CBidirMsg_RelayPacket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CBidirMsg_RelayPacket, prevhopcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CBidirMsg_RelayPacket, originalsender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CBidirMsg_RelayPacket, signedpayload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CBidirMsg_RelayPacket, recipientlist_),
  2,
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats_Port, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats_Port, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats_Port, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats_Port, name_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats_Player, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats_Player, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats_Player, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats_Player, remote_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats_Player, ping_stddev_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats_Player, ping_avg_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats_Player, packet_loss_pct_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats_Player, is_bot_),
  1,
  0,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats, dedicated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats, cpu_usage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats, memory_used_mb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats, memory_free_mb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats, uptime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats, spawn_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats, num_clients_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats, num_bots_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats, num_spectators_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats, num_tv_relays_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats, fps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats, ports_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats, avg_latency_out_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats, avg_latency_in_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats, avg_packets_out_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats, avg_packets_in_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats, avg_loss_out_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats, avg_loss_in_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats, avg_data_out_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats, avg_data_in_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats, total_data_in_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats, total_packets_in_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats, total_data_out_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats, total_packets_out_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerNetworkStats, players_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  ~0u,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  19,
  18,
  20,
  21,
  22,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 11, sizeof(::CCLCMsg_ClientInfo)},
  { 17, 25, sizeof(::CCLCMsg_Move)},
  { 28, 39, sizeof(::CMsgVoiceAudio)},
  { 45, 53, sizeof(::CCLCMsg_VoiceData)},
  { 56, 63, sizeof(::CCLCMsg_BaselineAck)},
  { 65, 71, sizeof(::CCLCMsg_ListenEvents)},
  { 72, 81, sizeof(::CCLCMsg_RespondCvarValue)},
  { 85, 95, sizeof(::CCLCMsg_FileCRCCheck)},
  { 100, 106, sizeof(::CCLCMsg_LoadingProgress)},
  { 107, 113, sizeof(::CCLCMsg_SplitPlayerConnect)},
  { 114, 121, sizeof(::CCLCMsg_ClientMessage)},
  { 123, 129, sizeof(::CCLCMsg_SplitPlayerDisconnect)},
  { 130, 136, sizeof(::CCLCMsg_ServerStatus)},
  { 137, 142, sizeof(::CCLCMsg_ServerPing)},
  { 142, 149, sizeof(::CCLCMsg_RequestPause)},
  { 151, 157, sizeof(::CCLCMsg_CmdKeyValues)},
  { 158, 180, sizeof(::CSVCMsg_ServerInfo)},
  { 197, 205, sizeof(::CSVCMsg_ClassInfo_class_t)},
  { 208, 215, sizeof(::CSVCMsg_ClassInfo)},
  { 217, 223, sizeof(::CSVCMsg_SetPause)},
  { 224, 232, sizeof(::CSVCMsg_VoiceInit)},
  { 235, 241, sizeof(::CSVCMsg_Print)},
  { 242, 266, sizeof(::CSVCMsg_Sounds_sounddata_t)},
  { 285, 292, sizeof(::CSVCMsg_Sounds)},
  { 294, 301, sizeof(::CSVCMsg_Prefetch)},
  { 303, 310, sizeof(::CSVCMsg_SetView)},
  { 312, 319, sizeof(::CSVCMsg_FixAngle)},
  { 321, 327, sizeof(::CSVCMsg_CrosshairAngle)},
  { 328, 338, sizeof(::CSVCMsg_BSPDecal)},
  { 343, 351, sizeof(::CSVCMsg_SplitScreen)},
  { 354, 361, sizeof(::CSVCMsg_GetCvarValue)},
  { 363, 370, sizeof(::CSVCMsg_Menu)},
  { 372, 386, sizeof(::CSVCMsg_SendTable_sendprop_t)},
  { 395, 404, sizeof(::CSVCMsg_SendTable)},
  { 408, 415, sizeof(::CSVCMsg_GameEventList_key_t)},
  { 417, 425, sizeof(::CSVCMsg_GameEventList_descriptor_t)},
  { 428, 434, sizeof(::CSVCMsg_GameEventList)},
  { 435, 451, sizeof(::CSVCMsg_PacketEntities)},
  { 462, 470, sizeof(::CSVCMsg_TempEntities)},
  { 473, 487, sizeof(::CSVCMsg_CreateStringTable)},
  { 496, 504, sizeof(::CSVCMsg_UpdateStringTable)},
  { 507, 518, sizeof(::CSVCMsg_VoiceData)},
  { 524, 532, sizeof(::CSVCMsg_PacketReliable)},
  { 535, 544, sizeof(::CSVCMsg_FullFrameSplit)},
  { 548, 557, sizeof(::CSVCMsg_HLTVStatus)},
  { 561, 567, sizeof(::CSVCMsg_ServerSteamID)},
  { 568, 574, sizeof(::CSVCMsg_CmdKeyValues)},
  { 575, 582, sizeof(::CMsgIPCAddress)},
  { 584, 595, sizeof(::CMsgServerPeer)},
  { 601, 607, sizeof(::CSVCMsg_PeerList)},
  { 608, 614, sizeof(::CSVCMsg_ClearAllStringTables)},
  { 615, 630, sizeof(::ProtoFlattenedSerializerField_t)},
  { 640, 648, sizeof(::ProtoFlattenedSerializer_t)},
  { 651, 659, sizeof(::CSVCMsg_FlattenedSerializer)},
  { 662, 668, sizeof(::CSVCMsg_StopSound)},
  { 669, 678, sizeof(::CBidirMsg_RebroadcastGameEvent)},
  { 682, 688, sizeof(::CBidirMsg_RebroadcastSource)},
  { 689, 695, sizeof(::SerializedNetAddress_t)},
  { 696, 704, sizeof(::CBidirMsg_RelayInfo)},
  { 707, 715, sizeof(::SignedPayload_t)},
  { 718, 726, sizeof(::CBidirMsg_RelayPacket_SignedDestinationAddress_t)},
  { 729, 738, sizeof(::CBidirMsg_RelayPacket)},
  { 742, 749, sizeof(::CMsgServerNetworkStats_Port)},
  { 751, 762, sizeof(::CMsgServerNetworkStats_Player)},
  { 768, 798, sizeof(::CMsgServerNetworkStats)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCLCMsg_ClientInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCLCMsg_Move_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgVoiceAudio_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCLCMsg_VoiceData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCLCMsg_BaselineAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCLCMsg_ListenEvents_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCLCMsg_RespondCvarValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCLCMsg_FileCRCCheck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCLCMsg_LoadingProgress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCLCMsg_SplitPlayerConnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCLCMsg_ClientMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCLCMsg_SplitPlayerDisconnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCLCMsg_ServerStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCLCMsg_ServerPing_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCLCMsg_RequestPause_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCLCMsg_CmdKeyValues_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_ServerInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_ClassInfo_class_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_ClassInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_SetPause_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_VoiceInit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_Print_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_Sounds_sounddata_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_Sounds_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_Prefetch_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_SetView_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_FixAngle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_CrosshairAngle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_BSPDecal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_SplitScreen_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_GetCvarValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_Menu_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_SendTable_sendprop_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_SendTable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_GameEventList_key_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_GameEventList_descriptor_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_GameEventList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_PacketEntities_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_TempEntities_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_CreateStringTable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_UpdateStringTable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_VoiceData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_PacketReliable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_FullFrameSplit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_HLTVStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_ServerSteamID_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_CmdKeyValues_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgIPCAddress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgServerPeer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_PeerList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_ClearAllStringTables_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ProtoFlattenedSerializerField_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ProtoFlattenedSerializer_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_FlattenedSerializer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_StopSound_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CBidirMsg_RebroadcastGameEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CBidirMsg_RebroadcastSource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SerializedNetAddress_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CBidirMsg_RelayInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SignedPayload_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CBidirMsg_RelayPacket_SignedDestinationAddress_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CBidirMsg_RelayPacket_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgServerNetworkStats_Port_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgServerNetworkStats_Player_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgServerNetworkStats_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "netmessages.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 65);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021netmessages.proto\032\026networkbasetypes.pr"
      "oto\"\220\001\n\022CCLCMsg_ClientInfo\022\026\n\016send_table"
      "_crc\030\001 \001(\007\022\024\n\014server_count\030\002 \001(\r\022\017\n\007is_h"
      "ltv\030\003 \001(\010\022\021\n\tis_replay\030\004 \001(\010\022\022\n\nfriends_"
      "id\030\005 \001(\r\022\024\n\014friends_name\030\006 \001(\t\"J\n\014CCLCMs"
      "g_Move\022\014\n\004data\030\003 \001(\014\022\026\n\016command_number\030\004"
      " \001(\r\022\024\n\014num_commands\030\005 \001(\r\"\311\001\n\016CMsgVoice"
      "Audio\022:\n\006format\030\001 \001(\0162\022.VoiceDataFormat_"
      "t:\026VOICEDATA_FORMAT_STEAM\022\022\n\nvoice_data\030"
      "\002 \001(\014\022\026\n\016sequence_bytes\030\003 \001(\005\022\026\n\016section"
      "_number\030\004 \001(\r\022\023\n\013sample_rate\030\005 \001(\r\022\"\n\032un"
      "compressed_sample_offset\030\006 \001(\r\"O\n\021CCLCMs"
      "g_VoiceData\022\036\n\005audio\030\001 \001(\0132\017.CMsgVoiceAu"
      "dio\022\014\n\004xuid\030\002 \001(\006\022\014\n\004tick\030\003 \001(\r\"A\n\023CCLCM"
      "sg_BaselineAck\022\025\n\rbaseline_tick\030\001 \001(\005\022\023\n"
      "\013baseline_nr\030\002 \001(\005\"*\n\024CCLCMsg_ListenEven"
      "ts\022\022\n\nevent_mask\030\001 \003(\007\"\\\n\030CCLCMsg_Respon"
      "dCvarValue\022\016\n\006cookie\030\001 \001(\005\022\023\n\013status_cod"
      "e\030\002 \001(\005\022\014\n\004name\030\003 \001(\t\022\r\n\005value\030\004 \001(\t\"m\n\024"
      "CCLCMsg_FileCRCCheck\022\021\n\tcode_path\030\001 \001(\005\022"
      "\014\n\004path\030\002 \001(\t\022\025\n\rcode_filename\030\003 \001(\005\022\020\n\010"
      "filename\030\004 \001(\t\022\013\n\003crc\030\005 \001(\007\"+\n\027CCLCMsg_L"
      "oadingProgress\022\020\n\010progress\030\001 \001(\005\"0\n\032CCLC"
      "Msg_SplitPlayerConnect\022\022\n\nplayername\030\001 \001"
      "(\t\"7\n\025CCLCMsg_ClientMessage\022\020\n\010msg_type\030"
      "\001 \001(\005\022\014\n\004data\030\002 \001(\014\"-\n\035CCLCMsg_SplitPlay"
      "erDisconnect\022\014\n\004slot\030\001 \001(\005\"*\n\024CCLCMsg_Se"
      "rverStatus\022\022\n\nsimplified\030\001 \001(\010\"\024\n\022CCLCMs"
      "g_ServerPing\"Z\n\024CCLCMsg_RequestPause\022-\n\n"
      "pause_type\030\001 \001(\0162\017.RequestPause_t:\010RP_PA"
      "USE\022\023\n\013pause_group\030\002 \001(\005\"$\n\024CCLCMsg_CmdK"
      "eyValues\022\014\n\004data\030\001 \001(\014\"\226\003\n\022CSVCMsg_Serve"
      "rInfo\022\020\n\010protocol\030\001 \001(\005\022\024\n\014server_count\030"
      "\002 \001(\005\022\024\n\014is_dedicated\030\003 \001(\010\022\017\n\007is_hltv\030\004"
      " \001(\010\022\021\n\tis_replay\030\005 \001(\010\022\014\n\004c_os\030\006 \001(\005\022\023\n"
      "\013max_clients\030\n \001(\005\022\023\n\013max_classes\030\013 \001(\005\022"
      "\023\n\013player_slot\030\014 \001(\005\022\025\n\rtick_interval\030\r "
      "\001(\002\022\020\n\010game_dir\030\016 \001(\t\022\020\n\010map_name\030\017 \001(\t\022"
      "\020\n\010sky_name\030\020 \001(\t\022\021\n\thost_name\030\021 \001(\t\022\022\n\n"
      "addon_name\030\022 \001(\t\022>\n\023game_session_config\030"
      "\023 \001(\0132!.CSVCMsg_GameSessionConfiguration"
      "\022\035\n\025game_session_manifest\030\024 \001(\014\"\244\001\n\021CSVC"
      "Msg_ClassInfo\022\030\n\020create_on_client\030\001 \001(\010\022"
      "+\n\007classes\030\002 \003(\0132\032.CSVCMsg_ClassInfo.cla"
      "ss_t\032H\n\007class_t\022\020\n\010class_id\030\001 \001(\005\022\027\n\017dat"
      "a_table_name\030\002 \001(\t\022\022\n\nclass_name\030\003 \001(\t\"\""
      "\n\020CSVCMsg_SetPause\022\016\n\006paused\030\001 \001(\010\"G\n\021CS"
      "VCMsg_VoiceInit\022\017\n\007quality\030\001 \001(\005\022\r\n\005code"
      "c\030\002 \001(\t\022\022\n\007version\030\003 \001(\005:\0010\"\035\n\rCSVCMsg_P"
      "rint\022\014\n\004text\030\001 \001(\t\"\337\003\n\016CSVCMsg_Sounds\022\026\n"
      "\016reliable_sound\030\001 \001(\010\022+\n\006sounds\030\002 \003(\0132\033."
      "CSVCMsg_Sounds.sounddata_t\032\207\003\n\013sounddata"
      "_t\022\020\n\010origin_x\030\001 \001(\021\022\020\n\010origin_y\030\002 \001(\021\022\020"
      "\n\010origin_z\030\003 \001(\021\022\016\n\006volume\030\004 \001(\r\022\023\n\013dela"
      "y_value\030\005 \001(\002\022\027\n\017sequence_number\030\006 \001(\005\022\024"
      "\n\014entity_index\030\007 \001(\005\022\017\n\007channel\030\010 \001(\005\022\r\n"
      "\005pitch\030\t \001(\005\022\r\n\005flags\030\n \001(\005\022\021\n\tsound_num"
      "\030\013 \001(\r\022\030\n\020sound_num_handle\030\014 \001(\007\022\026\n\016spea"
      "ker_entity\030\r \001(\005\022\023\n\013random_seed\030\016 \001(\005\022\023\n"
      "\013sound_level\030\017 \001(\005\022\023\n\013is_sentence\030\020 \001(\010\022"
      "\022\n\nis_ambient\030\021 \001(\010\022\014\n\004guid\030\022 \001(\r\022\031\n\021sou"
      "nd_resource_id\030\023 \001(\006\"X\n\020CSVCMsg_Prefetch"
      "\022\023\n\013sound_index\030\001 \001(\005\022/\n\rresource_type\030\002"
      " \001(\0162\r.PrefetchType:\tPFT_SOUND\"5\n\017CSVCMs"
      "g_SetView\022\024\n\014entity_index\030\001 \001(\005\022\014\n\004slot\030"
      "\002 \001(\005\"@\n\020CSVCMsg_FixAngle\022\020\n\010relative\030\001 "
      "\001(\010\022\032\n\005angle\030\002 \001(\0132\013.CMsgQAngle\"4\n\026CSVCM"
      "sg_CrosshairAngle\022\032\n\005angle\030\001 \001(\0132\013.CMsgQ"
      "Angle\"\212\001\n\020CSVCMsg_BSPDecal\022\030\n\003pos\030\001 \001(\0132"
      "\013.CMsgVector\022\033\n\023decal_texture_index\030\002 \001("
      "\005\022\024\n\014entity_index\030\003 \001(\005\022\023\n\013model_index\030\004"
      " \001(\005\022\024\n\014low_priority\030\005 \001(\010\"z\n\023CSVCMsg_Sp"
      "litScreen\022\?\n\004type\030\001 \001(\0162\030.ESplitScreenMe"
      "ssageType:\027MSG_SPLITSCREEN_ADDUSER\022\014\n\004sl"
      "ot\030\002 \001(\005\022\024\n\014player_index\030\003 \001(\005\"9\n\024CSVCMs"
      "g_GetCvarValue\022\016\n\006cookie\030\001 \001(\005\022\021\n\tcvar_n"
      "ame\030\002 \001(\t\"<\n\014CSVCMsg_Menu\022\023\n\013dialog_type"
      "\030\001 \001(\005\022\027\n\017menu_key_values\030\002 \001(\014\"\260\002\n\021CSVC"
      "Msg_SendTable\022\016\n\006is_end\030\001 \001(\010\022\026\n\016net_tab"
      "le_name\030\002 \001(\t\022\025\n\rneeds_decoder\030\003 \001(\010\022,\n\005"
      "props\030\004 \003(\0132\035.CSVCMsg_SendTable.sendprop"
      "_t\032\255\001\n\nsendprop_t\022\014\n\004type\030\001 \001(\005\022\020\n\010var_n"
      "ame\030\002 \001(\t\022\r\n\005flags\030\003 \001(\005\022\020\n\010priority\030\004 \001"
      "(\005\022\017\n\007dt_name\030\005 \001(\t\022\024\n\014num_elements\030\006 \001("
      "\005\022\021\n\tlow_value\030\007 \001(\002\022\022\n\nhigh_value\030\010 \001(\002"
      "\022\020\n\010num_bits\030\t \001(\005\"\321\001\n\025CSVCMsg_GameEvent"
      "List\0228\n\013descriptors\030\001 \003(\0132#.CSVCMsg_Game"
      "EventList.descriptor_t\032#\n\005key_t\022\014\n\004type\030"
      "\001 \001(\005\022\014\n\004name\030\002 \001(\t\032Y\n\014descriptor_t\022\017\n\007e"
      "ventid\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022*\n\004keys\030\003 \003(\013"
      "2\034.CSVCMsg_GameEventList.key_t\"\254\002\n\026CSVCM"
      "sg_PacketEntities\022\023\n\013max_entries\030\001 \001(\005\022\027"
      "\n\017updated_entries\030\002 \001(\005\022\020\n\010is_delta\030\003 \001("
      "\010\022\027\n\017update_baseline\030\004 \001(\010\022\020\n\010baseline\030\005"
      " \001(\005\022\022\n\ndelta_from\030\006 \001(\005\022\023\n\013entity_data\030"
      "\007 \001(\014\022\032\n\022pending_full_frame\030\010 \001(\010\022 \n\030act"
      "ive_spawngroup_handle\030\t \001(\r\022\'\n\037max_spawn"
      "group_creationsequence\030\n \001(\r\022\027\n\017last_cmd"
      "_number\030\013 \001(\r\"R\n\024CSVCMsg_TempEntities\022\020\n"
      "\010reliable\030\001 \001(\010\022\023\n\013num_entries\030\002 \001(\005\022\023\n\013"
      "entity_data\030\003 \001(\014\"\351\001\n\031CSVCMsg_CreateStri"
      "ngTable\022\014\n\004name\030\001 \001(\t\022\023\n\013num_entries\030\002 \001"
      "(\005\022\034\n\024user_data_fixed_size\030\003 \001(\010\022\026\n\016user"
      "_data_size\030\004 \001(\005\022\033\n\023user_data_size_bits\030"
      "\005 \001(\005\022\r\n\005flags\030\006 \001(\005\022\023\n\013string_data\030\007 \001("
      "\014\022\031\n\021uncompressed_size\030\010 \001(\005\022\027\n\017data_com"
      "pressed\030\t \001(\010\"_\n\031CSVCMsg_UpdateStringTab"
      "le\022\020\n\010table_id\030\001 \001(\005\022\033\n\023num_changed_entr"
      "ies\030\002 \001(\005\022\023\n\013string_data\030\003 \001(\014\"\210\001\n\021CSVCM"
      "sg_VoiceData\022\036\n\005audio\030\001 \001(\0132\017.CMsgVoiceA"
      "udio\022\016\n\006client\030\002 \001(\005\022\021\n\tproximity\030\003 \001(\010\022"
      "\014\n\004xuid\030\004 \001(\006\022\024\n\014audible_mask\030\005 \001(\005\022\014\n\004t"
      "ick\030\006 \001(\r\"K\n\026CSVCMsg_PacketReliable\022\014\n\004t"
      "ick\030\001 \001(\005\022\024\n\014messagessize\030\002 \001(\005\022\r\n\005state"
      "\030\003 \001(\010\"T\n\026CSVCMsg_FullFrameSplit\022\014\n\004tick"
      "\030\001 \001(\005\022\017\n\007section\030\002 \001(\005\022\r\n\005total\030\003 \001(\005\022\014"
      "\n\004data\030\004 \001(\014\"U\n\022CSVCMsg_HLTVStatus\022\016\n\006ma"
      "ster\030\001 \001(\t\022\017\n\007clients\030\002 \001(\005\022\r\n\005slots\030\003 \001"
      "(\005\022\017\n\007proxies\030\004 \001(\005\")\n\025CSVCMsg_ServerSte"
      "amID\022\020\n\010steam_id\030\001 \001(\004\"$\n\024CSVCMsg_CmdKey"
      "Values\022\014\n\004data\030\001 \001(\014\";\n\016CMsgIPCAddress\022\025"
      "\n\rcomputer_guid\030\001 \001(\006\022\022\n\nprocess_id\030\002 \001("
      "\r\"\240\001\n\016CMsgServerPeer\022\023\n\013player_slot\030\001 \001("
      "\005\022\017\n\007steamid\030\002 \001(\006\022\034\n\003ipc\030\003 \001(\0132\017.CMsgIP"
      "CAddress\022\025\n\rthey_hear_you\030\004 \001(\010\022\025\n\ryou_h"
      "ear_them\030\005 \001(\010\022\034\n\024is_listenserver_host\030\006"
      " \001(\010\"1\n\020CSVCMsg_PeerList\022\035\n\004peer\030\001 \003(\0132\017"
      ".CMsgServerPeer\"/\n\034CSVCMsg_ClearAllStrin"
      "gTables\022\017\n\007mapname\030\001 \001(\t\"\222\002\n\037ProtoFlatte"
      "nedSerializerField_t\022\024\n\014var_type_sym\030\001 \001"
      "(\005\022\024\n\014var_name_sym\030\002 \001(\005\022\021\n\tbit_count\030\003 "
      "\001(\005\022\021\n\tlow_value\030\004 \001(\002\022\022\n\nhigh_value\030\005 \001"
      "(\002\022\024\n\014encode_flags\030\006 \001(\005\022!\n\031field_serial"
      "izer_name_sym\030\007 \001(\005\022 \n\030field_serializer_"
      "version\030\010 \001(\005\022\025\n\rsend_node_sym\030\t \001(\005\022\027\n\017"
      "var_encoder_sym\030\n \001(\005\"k\n\032ProtoFlattenedS"
      "erializer_t\022\033\n\023serializer_name_sym\030\001 \001(\005"
      "\022\032\n\022serializer_version\030\002 \001(\005\022\024\n\014fields_i"
      "ndex\030\003 \003(\005\"\222\001\n\033CSVCMsg_FlattenedSerializ"
      "er\0220\n\013serializers\030\001 \003(\0132\033.ProtoFlattened"
      "Serializer_t\022\017\n\007symbols\030\002 \003(\t\0220\n\006fields\030"
      "\003 \003(\0132 .ProtoFlattenedSerializerField_t\""
      "!\n\021CSVCMsg_StopSound\022\014\n\004guid\030\001 \001(\007\"y\n\036CB"
      "idirMsg_RebroadcastGameEvent\022\024\n\014posttose"
      "rver\030\001 \001(\010\022\017\n\007buftype\030\002 \001(\005\022\026\n\016clientbit"
      "count\030\003 \001(\r\022\030\n\020receivingclients\030\004 \001(\004\"2\n"
      "\033CBidirMsg_RebroadcastSource\022\023\n\013eventsou"
      "rce\030\001 \001(\005\"3\n\026SerializedNetAddress_t\022\031\n\021s"
      "erializedAddress\030\001 \002(\014\"\257\002\n\023CBidirMsg_Rel"
      "ayInfo\022F\n\toperation\030\001 \002(\0162 .CBidirMsg_Re"
      "layInfo.Operation_t:\021RIO_REQUEST_RELAY\0228"
      "\n\027serializedTargetAddress\030\002 \001(\0132\027.Serial"
      "izedNetAddress_t\022\026\n\016additionalHops\030\003 \001(\r"
      "\"~\n\013Operation_t\022\025\n\021RIO_REQUEST_RELAY\020\000\022\022"
      "\n\016RIO_WILL_RELAY\020\001\022\020\n\014RIO_NO_ROUTE\020\002\022\024\n\020"
      "RIO_REJECT_RELAY\020\003\022\034\n\030RIO_ESTABLISH_CONN"
      "ECTION\020\004\"T\n\017SignedPayload_t\022\023\n\013payloadDa"
      "ta\030\001 \002(\014\022\021\n\tsignature\030\002 \002(\r\022\031\n\021bPayloadE"
      "ncrypted\030\003 \002(\010\"\320\002\n\025CBidirMsg_RelayPacket"
      "\022\024\n\014prevhopcount\030\001 \002(\r\022/\n\016originalSender"
      "\030\002 \002(\0132\027.SerializedNetAddress_t\022\'\n\rsigne"
      "dPayload\030\003 \002(\0132\020.SignedPayload_t\022H\n\rreci"
      "pientList\030\004 \003(\01321.CBidirMsg_RelayPacket."
      "SignedDestinationAddress_t\032}\n\032SignedDest"
      "inationAddress_t\022/\n\016serializedAddr\030\001 \002(\013"
      "2\027.SerializedNetAddress_t\022\021\n\tsignature\030\002"
      " \002(\r\022\033\n\023encryptedPayloadKey\030\003 \001(\014\"\233\006\n\026CM"
      "sgServerNetworkStats\022\021\n\tdedicated\030\001 \001(\010\022"
      "\021\n\tcpu_usage\030\002 \001(\005\022\026\n\016memory_used_mb\030\003 \001"
      "(\005\022\026\n\016memory_free_mb\030\004 \001(\005\022\016\n\006uptime\030\005 \001"
      "(\005\022\023\n\013spawn_count\030\006 \001(\005\022\023\n\013num_clients\030\010"
      " \001(\005\022\020\n\010num_bots\030\t \001(\005\022\026\n\016num_spectators"
      "\030\n \001(\005\022\025\n\rnum_tv_relays\030\013 \001(\005\022\013\n\003fps\030\014 \001"
      "(\002\022+\n\005ports\030\021 \003(\0132\034.CMsgServerNetworkSta"
      "ts.Port\022\027\n\017avg_latency_out\030\022 \001(\002\022\026\n\016avg_"
      "latency_in\030\023 \001(\002\022\027\n\017avg_packets_out\030\024 \001("
      "\002\022\026\n\016avg_packets_in\030\025 \001(\002\022\024\n\014avg_loss_ou"
      "t\030\026 \001(\002\022\023\n\013avg_loss_in\030\027 \001(\002\022\024\n\014avg_data"
      "_out\030\030 \001(\002\022\023\n\013avg_data_in\030\031 \001(\002\022\025\n\rtotal"
      "_data_in\030\032 \001(\004\022\030\n\020total_packets_in\030\033 \001(\004"
      "\022\026\n\016total_data_out\030\034 \001(\004\022\031\n\021total_packet"
      "s_out\030\035 \001(\004\022/\n\007players\030\036 \003(\0132\036.CMsgServe"
      "rNetworkStats.Player\032\"\n\004Port\022\014\n\004port\030\001 \001"
      "(\005\022\014\n\004name\030\002 \001(\t\032\204\001\n\006Player\022\017\n\007steamid\030\001"
      " \001(\004\022\023\n\013remote_addr\030\002 \001(\t\022\026\n\016ping_stddev"
      "_ms\030\003 \001(\005\022\023\n\013ping_avg_ms\030\004 \001(\005\022\027\n\017packet"
      "_loss_pct\030\005 \001(\002\022\016\n\006is_bot\030\006 \001(\010*\337\002\n\014CLC_"
      "Messages\022\022\n\016clc_ClientInfo\020\024\022\014\n\010clc_Move"
      "\020\025\022\021\n\rclc_VoiceData\020\026\022\023\n\017clc_BaselineAck"
      "\020\027\022\024\n\020clc_ListenEvents\020\030\022\030\n\024clc_RespondC"
      "varValue\020\031\022\024\n\020clc_FileCRCCheck\020\032\022\027\n\023clc_"
      "LoadingProgress\020\033\022\032\n\026clc_SplitPlayerConn"
      "ect\020\034\022\025\n\021clc_ClientMessage\020\035\022\035\n\031clc_Spli"
      "tPlayerDisconnect\020\036\022\024\n\020clc_ServerStatus\020"
      "\037\022\022\n\016clc_ServerPing\020 \022\024\n\020clc_RequestPaus"
      "e\020!\022\024\n\020clc_CmdKeyValues\020\"*\231\004\n\014SVC_Messag"
      "es\022\022\n\016svc_ServerInfo\020(\022\033\n\027svc_FlattenedS"
      "erializer\020)\022\021\n\rsvc_ClassInfo\020*\022\020\n\014svc_Se"
      "tPause\020+\022\031\n\025svc_CreateStringTable\020,\022\031\n\025s"
      "vc_UpdateStringTable\020-\022\021\n\rsvc_VoiceInit\020"
      ".\022\021\n\rsvc_VoiceData\020/\022\r\n\tsvc_Print\0200\022\016\n\ns"
      "vc_Sounds\0201\022\017\n\013svc_SetView\0202\022\034\n\030svc_Clea"
      "rAllStringTables\0203\022\024\n\020svc_CmdKeyValues\0204"
      "\022\020\n\014svc_BSPDecal\0205\022\023\n\017svc_SplitScreen\0206\022"
      "\026\n\022svc_PacketEntities\0207\022\020\n\014svc_Prefetch\020"
      "8\022\014\n\010svc_Menu\0209\022\024\n\020svc_GetCvarValue\020:\022\021\n"
      "\rsvc_StopSound\020;\022\020\n\014svc_PeerList\020<\022\026\n\022sv"
      "c_PacketReliable\020=\022\022\n\016svc_HLTVStatus\020>\022\025"
      "\n\021svc_ServerSteamID\020\?\022\026\n\022svc_FullFrameSp"
      "lit\020F*L\n\021VoiceDataFormat_t\022\032\n\026VOICEDATA_"
      "FORMAT_STEAM\020\000\022\033\n\027VOICEDATA_FORMAT_ENGIN"
      "E\020\001*B\n\016RequestPause_t\022\014\n\010RP_PAUSE\020\000\022\016\n\nR"
      "P_UNPAUSE\020\001\022\022\n\016RP_TOGGLEPAUSE\020\002*\035\n\014Prefe"
      "tchType\022\r\n\tPFT_SOUND\020\000*V\n\027ESplitScreenMe"
      "ssageType\022\033\n\027MSG_SPLITSCREEN_ADDUSER\020\000\022\036"
      "\n\032MSG_SPLITSCREEN_REMOVEUSER\020\001*\263\001\n\025EQuer"
      "yCvarValueStatus\022%\n!eQueryCvarValueStatu"
      "s_ValueIntact\020\000\022&\n\"eQueryCvarValueStatus"
      "_CvarNotFound\020\001\022\"\n\036eQueryCvarValueStatus"
      "_NotACvar\020\002\022\'\n#eQueryCvarValueStatus_Cva"
      "rProtected\020\003*h\n\013DIALOG_TYPE\022\016\n\nDIALOG_MS"
      "G\020\000\022\017\n\013DIALOG_MENU\020\001\022\017\n\013DIALOG_TEXT\020\002\022\020\n"
      "\014DIALOG_ENTRY\020\003\022\025\n\021DIALOG_ASKCONNECT\020\004*+"
      "\n\031SVC_Messages_LowFrequency\022\016\n\tsvc_dummy"
      "\020\330\004*a\n\026Bidirectional_Messages\022\033\n\027bi_Rebr"
      "oadcastGameEvent\020\020\022\030\n\024bi_RebroadcastSour"
      "ce\020\021\022\020\n\014bi_GameEvent\020\022*M\n#Bidirectional_"
      "Messages_LowFrequency\022\021\n\014bi_RelayInfo\020\274\005"
      "\022\023\n\016bi_RelayPacket\020\275\005B\003\200\001\000"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 9146);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "netmessages.proto", &protobuf_RegisterTypes);
  ::protobuf_networkbasetypes_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_netmessages_2eproto
const ::google::protobuf::EnumDescriptor* CBidirMsg_RelayInfo_Operation_t_descriptor() {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_netmessages_2eproto::file_level_enum_descriptors[0];
}
bool CBidirMsg_RelayInfo_Operation_t_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CBidirMsg_RelayInfo_Operation_t CBidirMsg_RelayInfo::RIO_REQUEST_RELAY;
const CBidirMsg_RelayInfo_Operation_t CBidirMsg_RelayInfo::RIO_WILL_RELAY;
const CBidirMsg_RelayInfo_Operation_t CBidirMsg_RelayInfo::RIO_NO_ROUTE;
const CBidirMsg_RelayInfo_Operation_t CBidirMsg_RelayInfo::RIO_REJECT_RELAY;
const CBidirMsg_RelayInfo_Operation_t CBidirMsg_RelayInfo::RIO_ESTABLISH_CONNECTION;
const CBidirMsg_RelayInfo_Operation_t CBidirMsg_RelayInfo::Operation_t_MIN;
const CBidirMsg_RelayInfo_Operation_t CBidirMsg_RelayInfo::Operation_t_MAX;
const int CBidirMsg_RelayInfo::Operation_t_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CLC_Messages_descriptor() {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_netmessages_2eproto::file_level_enum_descriptors[1];
}
bool CLC_Messages_IsValid(int value) {
  switch (value) {
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SVC_Messages_descriptor() {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_netmessages_2eproto::file_level_enum_descriptors[2];
}
bool SVC_Messages_IsValid(int value) {
  switch (value) {
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 70:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* VoiceDataFormat_t_descriptor() {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_netmessages_2eproto::file_level_enum_descriptors[3];
}
bool VoiceDataFormat_t_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RequestPause_t_descriptor() {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_netmessages_2eproto::file_level_enum_descriptors[4];
}
bool RequestPause_t_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PrefetchType_descriptor() {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_netmessages_2eproto::file_level_enum_descriptors[5];
}
bool PrefetchType_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ESplitScreenMessageType_descriptor() {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_netmessages_2eproto::file_level_enum_descriptors[6];
}
bool ESplitScreenMessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EQueryCvarValueStatus_descriptor() {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_netmessages_2eproto::file_level_enum_descriptors[7];
}
bool EQueryCvarValueStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DIALOG_TYPE_descriptor() {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_netmessages_2eproto::file_level_enum_descriptors[8];
}
bool DIALOG_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SVC_Messages_LowFrequency_descriptor() {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_netmessages_2eproto::file_level_enum_descriptors[9];
}
bool SVC_Messages_LowFrequency_IsValid(int value) {
  switch (value) {
    case 600:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Bidirectional_Messages_descriptor() {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_netmessages_2eproto::file_level_enum_descriptors[10];
}
bool Bidirectional_Messages_IsValid(int value) {
  switch (value) {
    case 16:
    case 17:
    case 18:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Bidirectional_Messages_LowFrequency_descriptor() {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_netmessages_2eproto::file_level_enum_descriptors[11];
}
bool Bidirectional_Messages_LowFrequency_IsValid(int value) {
  switch (value) {
    case 700:
    case 701:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CCLCMsg_ClientInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCLCMsg_ClientInfo::kSendTableCrcFieldNumber;
const int CCLCMsg_ClientInfo::kServerCountFieldNumber;
const int CCLCMsg_ClientInfo::kIsHltvFieldNumber;
const int CCLCMsg_ClientInfo::kIsReplayFieldNumber;
const int CCLCMsg_ClientInfo::kFriendsIdFieldNumber;
const int CCLCMsg_ClientInfo::kFriendsNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCLCMsg_ClientInfo::CCLCMsg_ClientInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CCLCMsg_ClientInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCLCMsg_ClientInfo)
}
CCLCMsg_ClientInfo::CCLCMsg_ClientInfo(const CCLCMsg_ClientInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  friends_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_friends_name()) {
    friends_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friends_name_);
  }
  ::memcpy(&send_table_crc_, &from.send_table_crc_,
    static_cast<size_t>(reinterpret_cast<char*>(&friends_id_) -
    reinterpret_cast<char*>(&send_table_crc_)) + sizeof(friends_id_));
  // @@protoc_insertion_point(copy_constructor:CCLCMsg_ClientInfo)
}

void CCLCMsg_ClientInfo::SharedCtor() {
  friends_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&send_table_crc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friends_id_) -
      reinterpret_cast<char*>(&send_table_crc_)) + sizeof(friends_id_));
}

CCLCMsg_ClientInfo::~CCLCMsg_ClientInfo() {
  // @@protoc_insertion_point(destructor:CCLCMsg_ClientInfo)
  SharedDtor();
}

void CCLCMsg_ClientInfo::SharedDtor() {
  friends_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCLCMsg_ClientInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CCLCMsg_ClientInfo::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCLCMsg_ClientInfo& CCLCMsg_ClientInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CCLCMsg_ClientInfo.base);
  return *internal_default_instance();
}


void CCLCMsg_ClientInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_ClientInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    friends_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 62u) {
    ::memset(&send_table_crc_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&friends_id_) -
        reinterpret_cast<char*>(&send_table_crc_)) + sizeof(friends_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCLCMsg_ClientInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCLCMsg_ClientInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed32 send_table_crc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_send_table_crc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &send_table_crc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 server_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_server_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_hltv = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_is_hltv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_hltv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_replay = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_is_replay();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_replay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 friends_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_friends_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friends_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string friends_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friends_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->friends_name().data(), static_cast<int>(this->friends_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCLCMsg_ClientInfo.friends_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCLCMsg_ClientInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCLCMsg_ClientInfo)
  return false;
#undef DO_
}

void CCLCMsg_ClientInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCLCMsg_ClientInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 send_table_crc = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->send_table_crc(), output);
  }

  // optional uint32 server_count = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->server_count(), output);
  }

  // optional bool is_hltv = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_hltv(), output);
  }

  // optional bool is_replay = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_replay(), output);
  }

  // optional uint32 friends_id = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->friends_id(), output);
  }

  // optional string friends_name = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->friends_name().data(), static_cast<int>(this->friends_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCLCMsg_ClientInfo.friends_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->friends_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCLCMsg_ClientInfo)
}

::google::protobuf::uint8* CCLCMsg_ClientInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_ClientInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 send_table_crc = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->send_table_crc(), target);
  }

  // optional uint32 server_count = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->server_count(), target);
  }

  // optional bool is_hltv = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_hltv(), target);
  }

  // optional bool is_replay = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_replay(), target);
  }

  // optional uint32 friends_id = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->friends_id(), target);
  }

  // optional string friends_name = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->friends_name().data(), static_cast<int>(this->friends_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCLCMsg_ClientInfo.friends_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->friends_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_ClientInfo)
  return target;
}

size_t CCLCMsg_ClientInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_ClientInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string friends_name = 6;
    if (has_friends_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->friends_name());
    }

    // optional fixed32 send_table_crc = 1;
    if (has_send_table_crc()) {
      total_size += 1 + 4;
    }

    // optional uint32 server_count = 2;
    if (has_server_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_count());
    }

    // optional bool is_hltv = 3;
    if (has_is_hltv()) {
      total_size += 1 + 1;
    }

    // optional bool is_replay = 4;
    if (has_is_replay()) {
      total_size += 1 + 1;
    }

    // optional uint32 friends_id = 5;
    if (has_friends_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->friends_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CCLCMsg_ClientInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCLCMsg_ClientInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CCLCMsg_ClientInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCLCMsg_ClientInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCLCMsg_ClientInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCLCMsg_ClientInfo)
    MergeFrom(*source);
  }
}

void CCLCMsg_ClientInfo::MergeFrom(const CCLCMsg_ClientInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_ClientInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_friends_name();
      friends_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friends_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      send_table_crc_ = from.send_table_crc_;
    }
    if (cached_has_bits & 0x00000004u) {
      server_count_ = from.server_count_;
    }
    if (cached_has_bits & 0x00000008u) {
      is_hltv_ = from.is_hltv_;
    }
    if (cached_has_bits & 0x00000010u) {
      is_replay_ = from.is_replay_;
    }
    if (cached_has_bits & 0x00000020u) {
      friends_id_ = from.friends_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCLCMsg_ClientInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCLCMsg_ClientInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCLCMsg_ClientInfo::CopyFrom(const CCLCMsg_ClientInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_ClientInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCLCMsg_ClientInfo::IsInitialized() const {
  return true;
}

void CCLCMsg_ClientInfo::Swap(CCLCMsg_ClientInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCLCMsg_ClientInfo::InternalSwap(CCLCMsg_ClientInfo* other) {
  using std::swap;
  friends_name_.Swap(&other->friends_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(send_table_crc_, other->send_table_crc_);
  swap(server_count_, other->server_count_);
  swap(is_hltv_, other->is_hltv_);
  swap(is_replay_, other->is_replay_);
  swap(friends_id_, other->friends_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CCLCMsg_ClientInfo::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCLCMsg_Move::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCLCMsg_Move::kDataFieldNumber;
const int CCLCMsg_Move::kCommandNumberFieldNumber;
const int CCLCMsg_Move::kNumCommandsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCLCMsg_Move::CCLCMsg_Move()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CCLCMsg_Move.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCLCMsg_Move)
}
CCLCMsg_Move::CCLCMsg_Move(const CCLCMsg_Move& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  ::memcpy(&command_number_, &from.command_number_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_commands_) -
    reinterpret_cast<char*>(&command_number_)) + sizeof(num_commands_));
  // @@protoc_insertion_point(copy_constructor:CCLCMsg_Move)
}

void CCLCMsg_Move::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&command_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_commands_) -
      reinterpret_cast<char*>(&command_number_)) + sizeof(num_commands_));
}

CCLCMsg_Move::~CCLCMsg_Move() {
  // @@protoc_insertion_point(destructor:CCLCMsg_Move)
  SharedDtor();
}

void CCLCMsg_Move::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCLCMsg_Move::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CCLCMsg_Move::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCLCMsg_Move& CCLCMsg_Move::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CCLCMsg_Move.base);
  return *internal_default_instance();
}


void CCLCMsg_Move::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_Move)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    data_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&command_number_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&num_commands_) -
        reinterpret_cast<char*>(&command_number_)) + sizeof(num_commands_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCLCMsg_Move::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCLCMsg_Move)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 command_number = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_command_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &command_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 num_commands = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_num_commands();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_commands_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCLCMsg_Move)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCLCMsg_Move)
  return false;
#undef DO_
}

void CCLCMsg_Move::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCLCMsg_Move)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes data = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->data(), output);
  }

  // optional uint32 command_number = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->command_number(), output);
  }

  // optional uint32 num_commands = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->num_commands(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCLCMsg_Move)
}

::google::protobuf::uint8* CCLCMsg_Move::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_Move)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes data = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->data(), target);
  }

  // optional uint32 command_number = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->command_number(), target);
  }

  // optional uint32 num_commands = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->num_commands(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_Move)
  return target;
}

size_t CCLCMsg_Move::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_Move)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes data = 3;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

    // optional uint32 command_number = 4;
    if (has_command_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->command_number());
    }

    // optional uint32 num_commands = 5;
    if (has_num_commands()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_commands());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CCLCMsg_Move::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCLCMsg_Move)
  GOOGLE_DCHECK_NE(&from, this);
  const CCLCMsg_Move* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCLCMsg_Move>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCLCMsg_Move)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCLCMsg_Move)
    MergeFrom(*source);
  }
}

void CCLCMsg_Move::MergeFrom(const CCLCMsg_Move& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_Move)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
    if (cached_has_bits & 0x00000002u) {
      command_number_ = from.command_number_;
    }
    if (cached_has_bits & 0x00000004u) {
      num_commands_ = from.num_commands_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCLCMsg_Move::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCLCMsg_Move)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCLCMsg_Move::CopyFrom(const CCLCMsg_Move& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_Move)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCLCMsg_Move::IsInitialized() const {
  return true;
}

void CCLCMsg_Move::Swap(CCLCMsg_Move* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCLCMsg_Move::InternalSwap(CCLCMsg_Move* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(command_number_, other->command_number_);
  swap(num_commands_, other->num_commands_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CCLCMsg_Move::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgVoiceAudio::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgVoiceAudio::kFormatFieldNumber;
const int CMsgVoiceAudio::kVoiceDataFieldNumber;
const int CMsgVoiceAudio::kSequenceBytesFieldNumber;
const int CMsgVoiceAudio::kSectionNumberFieldNumber;
const int CMsgVoiceAudio::kSampleRateFieldNumber;
const int CMsgVoiceAudio::kUncompressedSampleOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgVoiceAudio::CMsgVoiceAudio()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CMsgVoiceAudio.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgVoiceAudio)
}
CMsgVoiceAudio::CMsgVoiceAudio(const CMsgVoiceAudio& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  voice_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_voice_data()) {
    voice_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.voice_data_);
  }
  ::memcpy(&format_, &from.format_,
    static_cast<size_t>(reinterpret_cast<char*>(&uncompressed_sample_offset_) -
    reinterpret_cast<char*>(&format_)) + sizeof(uncompressed_sample_offset_));
  // @@protoc_insertion_point(copy_constructor:CMsgVoiceAudio)
}

void CMsgVoiceAudio::SharedCtor() {
  voice_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&format_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uncompressed_sample_offset_) -
      reinterpret_cast<char*>(&format_)) + sizeof(uncompressed_sample_offset_));
}

CMsgVoiceAudio::~CMsgVoiceAudio() {
  // @@protoc_insertion_point(destructor:CMsgVoiceAudio)
  SharedDtor();
}

void CMsgVoiceAudio::SharedDtor() {
  voice_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgVoiceAudio::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgVoiceAudio::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgVoiceAudio& CMsgVoiceAudio::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CMsgVoiceAudio.base);
  return *internal_default_instance();
}


void CMsgVoiceAudio::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgVoiceAudio)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    voice_data_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 62u) {
    ::memset(&format_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&uncompressed_sample_offset_) -
        reinterpret_cast<char*>(&format_)) + sizeof(uncompressed_sample_offset_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgVoiceAudio::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgVoiceAudio)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .VoiceDataFormat_t format = 1 [default = VOICEDATA_FORMAT_STEAM];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::VoiceDataFormat_t_IsValid(value)) {
            set_format(static_cast< ::VoiceDataFormat_t >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes voice_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_voice_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 sequence_bytes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_sequence_bytes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sequence_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 section_number = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_section_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &section_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sample_rate = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_sample_rate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sample_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 uncompressed_sample_offset = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_uncompressed_sample_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uncompressed_sample_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgVoiceAudio)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgVoiceAudio)
  return false;
#undef DO_
}

void CMsgVoiceAudio::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgVoiceAudio)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .VoiceDataFormat_t format = 1 [default = VOICEDATA_FORMAT_STEAM];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->format(), output);
  }

  // optional bytes voice_data = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->voice_data(), output);
  }

  // optional int32 sequence_bytes = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->sequence_bytes(), output);
  }

  // optional uint32 section_number = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->section_number(), output);
  }

  // optional uint32 sample_rate = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->sample_rate(), output);
  }

  // optional uint32 uncompressed_sample_offset = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->uncompressed_sample_offset(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgVoiceAudio)
}

::google::protobuf::uint8* CMsgVoiceAudio::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgVoiceAudio)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .VoiceDataFormat_t format = 1 [default = VOICEDATA_FORMAT_STEAM];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->format(), target);
  }

  // optional bytes voice_data = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->voice_data(), target);
  }

  // optional int32 sequence_bytes = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->sequence_bytes(), target);
  }

  // optional uint32 section_number = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->section_number(), target);
  }

  // optional uint32 sample_rate = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->sample_rate(), target);
  }

  // optional uint32 uncompressed_sample_offset = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->uncompressed_sample_offset(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgVoiceAudio)
  return target;
}

size_t CMsgVoiceAudio::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgVoiceAudio)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional bytes voice_data = 2;
    if (has_voice_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->voice_data());
    }

    // optional .VoiceDataFormat_t format = 1 [default = VOICEDATA_FORMAT_STEAM];
    if (has_format()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->format());
    }

    // optional int32 sequence_bytes = 3;
    if (has_sequence_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sequence_bytes());
    }

    // optional uint32 section_number = 4;
    if (has_section_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->section_number());
    }

    // optional uint32 sample_rate = 5;
    if (has_sample_rate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sample_rate());
    }

    // optional uint32 uncompressed_sample_offset = 6;
    if (has_uncompressed_sample_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uncompressed_sample_offset());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgVoiceAudio::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgVoiceAudio)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgVoiceAudio* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgVoiceAudio>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgVoiceAudio)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgVoiceAudio)
    MergeFrom(*source);
  }
}

void CMsgVoiceAudio::MergeFrom(const CMsgVoiceAudio& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgVoiceAudio)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_voice_data();
      voice_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.voice_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      format_ = from.format_;
    }
    if (cached_has_bits & 0x00000004u) {
      sequence_bytes_ = from.sequence_bytes_;
    }
    if (cached_has_bits & 0x00000008u) {
      section_number_ = from.section_number_;
    }
    if (cached_has_bits & 0x00000010u) {
      sample_rate_ = from.sample_rate_;
    }
    if (cached_has_bits & 0x00000020u) {
      uncompressed_sample_offset_ = from.uncompressed_sample_offset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgVoiceAudio::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgVoiceAudio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgVoiceAudio::CopyFrom(const CMsgVoiceAudio& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgVoiceAudio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgVoiceAudio::IsInitialized() const {
  return true;
}

void CMsgVoiceAudio::Swap(CMsgVoiceAudio* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgVoiceAudio::InternalSwap(CMsgVoiceAudio* other) {
  using std::swap;
  voice_data_.Swap(&other->voice_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(format_, other->format_);
  swap(sequence_bytes_, other->sequence_bytes_);
  swap(section_number_, other->section_number_);
  swap(sample_rate_, other->sample_rate_);
  swap(uncompressed_sample_offset_, other->uncompressed_sample_offset_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgVoiceAudio::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCLCMsg_VoiceData::InitAsDefaultInstance() {
  ::_CCLCMsg_VoiceData_default_instance_._instance.get_mutable()->audio_ = const_cast< ::CMsgVoiceAudio*>(
      ::CMsgVoiceAudio::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCLCMsg_VoiceData::kAudioFieldNumber;
const int CCLCMsg_VoiceData::kXuidFieldNumber;
const int CCLCMsg_VoiceData::kTickFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCLCMsg_VoiceData::CCLCMsg_VoiceData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CCLCMsg_VoiceData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCLCMsg_VoiceData)
}
CCLCMsg_VoiceData::CCLCMsg_VoiceData(const CCLCMsg_VoiceData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_audio()) {
    audio_ = new ::CMsgVoiceAudio(*from.audio_);
  } else {
    audio_ = NULL;
  }
  ::memcpy(&xuid_, &from.xuid_,
    static_cast<size_t>(reinterpret_cast<char*>(&tick_) -
    reinterpret_cast<char*>(&xuid_)) + sizeof(tick_));
  // @@protoc_insertion_point(copy_constructor:CCLCMsg_VoiceData)
}

void CCLCMsg_VoiceData::SharedCtor() {
  ::memset(&audio_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tick_) -
      reinterpret_cast<char*>(&audio_)) + sizeof(tick_));
}

CCLCMsg_VoiceData::~CCLCMsg_VoiceData() {
  // @@protoc_insertion_point(destructor:CCLCMsg_VoiceData)
  SharedDtor();
}

void CCLCMsg_VoiceData::SharedDtor() {
  if (this != internal_default_instance()) delete audio_;
}

void CCLCMsg_VoiceData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CCLCMsg_VoiceData::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCLCMsg_VoiceData& CCLCMsg_VoiceData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CCLCMsg_VoiceData.base);
  return *internal_default_instance();
}


void CCLCMsg_VoiceData::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_VoiceData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(audio_ != NULL);
    audio_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&xuid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tick_) -
        reinterpret_cast<char*>(&xuid_)) + sizeof(tick_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCLCMsg_VoiceData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCLCMsg_VoiceData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsgVoiceAudio audio = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_audio()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 xuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_xuid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &xuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 tick = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_tick();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tick_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCLCMsg_VoiceData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCLCMsg_VoiceData)
  return false;
#undef DO_
}

void CCLCMsg_VoiceData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCLCMsg_VoiceData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgVoiceAudio audio = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_audio(), output);
  }

  // optional fixed64 xuid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->xuid(), output);
  }

  // optional uint32 tick = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->tick(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCLCMsg_VoiceData)
}

::google::protobuf::uint8* CCLCMsg_VoiceData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_VoiceData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgVoiceAudio audio = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_audio(), deterministic, target);
  }

  // optional fixed64 xuid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->xuid(), target);
  }

  // optional uint32 tick = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->tick(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_VoiceData)
  return target;
}

size_t CCLCMsg_VoiceData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_VoiceData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .CMsgVoiceAudio audio = 1;
    if (has_audio()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *audio_);
    }

    // optional fixed64 xuid = 2;
    if (has_xuid()) {
      total_size += 1 + 8;
    }

    // optional uint32 tick = 3;
    if (has_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tick());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CCLCMsg_VoiceData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCLCMsg_VoiceData)
  GOOGLE_DCHECK_NE(&from, this);
  const CCLCMsg_VoiceData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCLCMsg_VoiceData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCLCMsg_VoiceData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCLCMsg_VoiceData)
    MergeFrom(*source);
  }
}

void CCLCMsg_VoiceData::MergeFrom(const CCLCMsg_VoiceData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_VoiceData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_audio()->::CMsgVoiceAudio::MergeFrom(from.audio());
    }
    if (cached_has_bits & 0x00000002u) {
      xuid_ = from.xuid_;
    }
    if (cached_has_bits & 0x00000004u) {
      tick_ = from.tick_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCLCMsg_VoiceData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCLCMsg_VoiceData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCLCMsg_VoiceData::CopyFrom(const CCLCMsg_VoiceData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_VoiceData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCLCMsg_VoiceData::IsInitialized() const {
  return true;
}

void CCLCMsg_VoiceData::Swap(CCLCMsg_VoiceData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCLCMsg_VoiceData::InternalSwap(CCLCMsg_VoiceData* other) {
  using std::swap;
  swap(audio_, other->audio_);
  swap(xuid_, other->xuid_);
  swap(tick_, other->tick_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CCLCMsg_VoiceData::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCLCMsg_BaselineAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCLCMsg_BaselineAck::kBaselineTickFieldNumber;
const int CCLCMsg_BaselineAck::kBaselineNrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCLCMsg_BaselineAck::CCLCMsg_BaselineAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CCLCMsg_BaselineAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCLCMsg_BaselineAck)
}
CCLCMsg_BaselineAck::CCLCMsg_BaselineAck(const CCLCMsg_BaselineAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&baseline_tick_, &from.baseline_tick_,
    static_cast<size_t>(reinterpret_cast<char*>(&baseline_nr_) -
    reinterpret_cast<char*>(&baseline_tick_)) + sizeof(baseline_nr_));
  // @@protoc_insertion_point(copy_constructor:CCLCMsg_BaselineAck)
}

void CCLCMsg_BaselineAck::SharedCtor() {
  ::memset(&baseline_tick_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&baseline_nr_) -
      reinterpret_cast<char*>(&baseline_tick_)) + sizeof(baseline_nr_));
}

CCLCMsg_BaselineAck::~CCLCMsg_BaselineAck() {
  // @@protoc_insertion_point(destructor:CCLCMsg_BaselineAck)
  SharedDtor();
}

void CCLCMsg_BaselineAck::SharedDtor() {
}

void CCLCMsg_BaselineAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CCLCMsg_BaselineAck::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCLCMsg_BaselineAck& CCLCMsg_BaselineAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CCLCMsg_BaselineAck.base);
  return *internal_default_instance();
}


void CCLCMsg_BaselineAck::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_BaselineAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&baseline_tick_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&baseline_nr_) -
        reinterpret_cast<char*>(&baseline_tick_)) + sizeof(baseline_nr_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCLCMsg_BaselineAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCLCMsg_BaselineAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 baseline_tick = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_baseline_tick();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &baseline_tick_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 baseline_nr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_baseline_nr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &baseline_nr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCLCMsg_BaselineAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCLCMsg_BaselineAck)
  return false;
#undef DO_
}

void CCLCMsg_BaselineAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCLCMsg_BaselineAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 baseline_tick = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->baseline_tick(), output);
  }

  // optional int32 baseline_nr = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->baseline_nr(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCLCMsg_BaselineAck)
}

::google::protobuf::uint8* CCLCMsg_BaselineAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_BaselineAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 baseline_tick = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->baseline_tick(), target);
  }

  // optional int32 baseline_nr = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->baseline_nr(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_BaselineAck)
  return target;
}

size_t CCLCMsg_BaselineAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_BaselineAck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 baseline_tick = 1;
    if (has_baseline_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->baseline_tick());
    }

    // optional int32 baseline_nr = 2;
    if (has_baseline_nr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->baseline_nr());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CCLCMsg_BaselineAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCLCMsg_BaselineAck)
  GOOGLE_DCHECK_NE(&from, this);
  const CCLCMsg_BaselineAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCLCMsg_BaselineAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCLCMsg_BaselineAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCLCMsg_BaselineAck)
    MergeFrom(*source);
  }
}

void CCLCMsg_BaselineAck::MergeFrom(const CCLCMsg_BaselineAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_BaselineAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      baseline_tick_ = from.baseline_tick_;
    }
    if (cached_has_bits & 0x00000002u) {
      baseline_nr_ = from.baseline_nr_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCLCMsg_BaselineAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCLCMsg_BaselineAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCLCMsg_BaselineAck::CopyFrom(const CCLCMsg_BaselineAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_BaselineAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCLCMsg_BaselineAck::IsInitialized() const {
  return true;
}

void CCLCMsg_BaselineAck::Swap(CCLCMsg_BaselineAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCLCMsg_BaselineAck::InternalSwap(CCLCMsg_BaselineAck* other) {
  using std::swap;
  swap(baseline_tick_, other->baseline_tick_);
  swap(baseline_nr_, other->baseline_nr_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CCLCMsg_BaselineAck::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCLCMsg_ListenEvents::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCLCMsg_ListenEvents::kEventMaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCLCMsg_ListenEvents::CCLCMsg_ListenEvents()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CCLCMsg_ListenEvents.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCLCMsg_ListenEvents)
}
CCLCMsg_ListenEvents::CCLCMsg_ListenEvents(const CCLCMsg_ListenEvents& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      event_mask_(from.event_mask_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CCLCMsg_ListenEvents)
}

void CCLCMsg_ListenEvents::SharedCtor() {
}

CCLCMsg_ListenEvents::~CCLCMsg_ListenEvents() {
  // @@protoc_insertion_point(destructor:CCLCMsg_ListenEvents)
  SharedDtor();
}

void CCLCMsg_ListenEvents::SharedDtor() {
}

void CCLCMsg_ListenEvents::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CCLCMsg_ListenEvents::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCLCMsg_ListenEvents& CCLCMsg_ListenEvents::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CCLCMsg_ListenEvents.base);
  return *internal_default_instance();
}


void CCLCMsg_ListenEvents::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_ListenEvents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  event_mask_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCLCMsg_ListenEvents::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCLCMsg_ListenEvents)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed32 event_mask = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 13u, input, this->mutable_event_mask())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_event_mask())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCLCMsg_ListenEvents)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCLCMsg_ListenEvents)
  return false;
#undef DO_
}

void CCLCMsg_ListenEvents::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCLCMsg_ListenEvents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 event_mask = 1;
  for (int i = 0, n = this->event_mask_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(
      1, this->event_mask(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCLCMsg_ListenEvents)
}

::google::protobuf::uint8* CCLCMsg_ListenEvents::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_ListenEvents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 event_mask = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed32ToArray(1, this->event_mask_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_ListenEvents)
  return target;
}

size_t CCLCMsg_ListenEvents::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_ListenEvents)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated fixed32 event_mask = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->event_mask_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->event_mask_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CCLCMsg_ListenEvents::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCLCMsg_ListenEvents)
  GOOGLE_DCHECK_NE(&from, this);
  const CCLCMsg_ListenEvents* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCLCMsg_ListenEvents>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCLCMsg_ListenEvents)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCLCMsg_ListenEvents)
    MergeFrom(*source);
  }
}

void CCLCMsg_ListenEvents::MergeFrom(const CCLCMsg_ListenEvents& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_ListenEvents)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  event_mask_.MergeFrom(from.event_mask_);
}

void CCLCMsg_ListenEvents::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCLCMsg_ListenEvents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCLCMsg_ListenEvents::CopyFrom(const CCLCMsg_ListenEvents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_ListenEvents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCLCMsg_ListenEvents::IsInitialized() const {
  return true;
}

void CCLCMsg_ListenEvents::Swap(CCLCMsg_ListenEvents* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCLCMsg_ListenEvents::InternalSwap(CCLCMsg_ListenEvents* other) {
  using std::swap;
  event_mask_.InternalSwap(&other->event_mask_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CCLCMsg_ListenEvents::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCLCMsg_RespondCvarValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCLCMsg_RespondCvarValue::kCookieFieldNumber;
const int CCLCMsg_RespondCvarValue::kStatusCodeFieldNumber;
const int CCLCMsg_RespondCvarValue::kNameFieldNumber;
const int CCLCMsg_RespondCvarValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCLCMsg_RespondCvarValue::CCLCMsg_RespondCvarValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CCLCMsg_RespondCvarValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCLCMsg_RespondCvarValue)
}
CCLCMsg_RespondCvarValue::CCLCMsg_RespondCvarValue(const CCLCMsg_RespondCvarValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  ::memcpy(&cookie_, &from.cookie_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_code_) -
    reinterpret_cast<char*>(&cookie_)) + sizeof(status_code_));
  // @@protoc_insertion_point(copy_constructor:CCLCMsg_RespondCvarValue)
}

void CCLCMsg_RespondCvarValue::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cookie_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_code_) -
      reinterpret_cast<char*>(&cookie_)) + sizeof(status_code_));
}

CCLCMsg_RespondCvarValue::~CCLCMsg_RespondCvarValue() {
  // @@protoc_insertion_point(destructor:CCLCMsg_RespondCvarValue)
  SharedDtor();
}

void CCLCMsg_RespondCvarValue::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCLCMsg_RespondCvarValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CCLCMsg_RespondCvarValue::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCLCMsg_RespondCvarValue& CCLCMsg_RespondCvarValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CCLCMsg_RespondCvarValue.base);
  return *internal_default_instance();
}


void CCLCMsg_RespondCvarValue::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_RespondCvarValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&cookie_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&status_code_) -
        reinterpret_cast<char*>(&cookie_)) + sizeof(status_code_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCLCMsg_RespondCvarValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCLCMsg_RespondCvarValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cookie = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_cookie();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cookie_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 status_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_status_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCLCMsg_RespondCvarValue.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCLCMsg_RespondCvarValue.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCLCMsg_RespondCvarValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCLCMsg_RespondCvarValue)
  return false;
#undef DO_
}

void CCLCMsg_RespondCvarValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCLCMsg_RespondCvarValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 cookie = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cookie(), output);
  }

  // optional int32 status_code = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->status_code(), output);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCLCMsg_RespondCvarValue.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional string value = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCLCMsg_RespondCvarValue.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCLCMsg_RespondCvarValue)
}

::google::protobuf::uint8* CCLCMsg_RespondCvarValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_RespondCvarValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 cookie = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cookie(), target);
  }

  // optional int32 status_code = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->status_code(), target);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCLCMsg_RespondCvarValue.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional string value = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCLCMsg_RespondCvarValue.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_RespondCvarValue)
  return target;
}

size_t CCLCMsg_RespondCvarValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_RespondCvarValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string value = 4;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

    // optional int32 cookie = 1;
    if (has_cookie()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cookie());
    }

    // optional int32 status_code = 2;
    if (has_status_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status_code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CCLCMsg_RespondCvarValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCLCMsg_RespondCvarValue)
  GOOGLE_DCHECK_NE(&from, this);
  const CCLCMsg_RespondCvarValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCLCMsg_RespondCvarValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCLCMsg_RespondCvarValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCLCMsg_RespondCvarValue)
    MergeFrom(*source);
  }
}

void CCLCMsg_RespondCvarValue::MergeFrom(const CCLCMsg_RespondCvarValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_RespondCvarValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000004u) {
      cookie_ = from.cookie_;
    }
    if (cached_has_bits & 0x00000008u) {
      status_code_ = from.status_code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCLCMsg_RespondCvarValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCLCMsg_RespondCvarValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCLCMsg_RespondCvarValue::CopyFrom(const CCLCMsg_RespondCvarValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_RespondCvarValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCLCMsg_RespondCvarValue::IsInitialized() const {
  return true;
}

void CCLCMsg_RespondCvarValue::Swap(CCLCMsg_RespondCvarValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCLCMsg_RespondCvarValue::InternalSwap(CCLCMsg_RespondCvarValue* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cookie_, other->cookie_);
  swap(status_code_, other->status_code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CCLCMsg_RespondCvarValue::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCLCMsg_FileCRCCheck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCLCMsg_FileCRCCheck::kCodePathFieldNumber;
const int CCLCMsg_FileCRCCheck::kPathFieldNumber;
const int CCLCMsg_FileCRCCheck::kCodeFilenameFieldNumber;
const int CCLCMsg_FileCRCCheck::kFilenameFieldNumber;
const int CCLCMsg_FileCRCCheck::kCrcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCLCMsg_FileCRCCheck::CCLCMsg_FileCRCCheck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CCLCMsg_FileCRCCheck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCLCMsg_FileCRCCheck)
}
CCLCMsg_FileCRCCheck::CCLCMsg_FileCRCCheck(const CCLCMsg_FileCRCCheck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  ::memcpy(&code_path_, &from.code_path_,
    static_cast<size_t>(reinterpret_cast<char*>(&crc_) -
    reinterpret_cast<char*>(&code_path_)) + sizeof(crc_));
  // @@protoc_insertion_point(copy_constructor:CCLCMsg_FileCRCCheck)
}

void CCLCMsg_FileCRCCheck::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&code_path_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&crc_) -
      reinterpret_cast<char*>(&code_path_)) + sizeof(crc_));
}

CCLCMsg_FileCRCCheck::~CCLCMsg_FileCRCCheck() {
  // @@protoc_insertion_point(destructor:CCLCMsg_FileCRCCheck)
  SharedDtor();
}

void CCLCMsg_FileCRCCheck::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCLCMsg_FileCRCCheck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CCLCMsg_FileCRCCheck::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCLCMsg_FileCRCCheck& CCLCMsg_FileCRCCheck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CCLCMsg_FileCRCCheck.base);
  return *internal_default_instance();
}


void CCLCMsg_FileCRCCheck::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_FileCRCCheck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      filename_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&code_path_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&crc_) -
        reinterpret_cast<char*>(&code_path_)) + sizeof(crc_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCLCMsg_FileCRCCheck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCLCMsg_FileCRCCheck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code_path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code_path();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_path_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCLCMsg_FileCRCCheck.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 code_filename = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_code_filename();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_filename_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string filename = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCLCMsg_FileCRCCheck.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 crc = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_crc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &crc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCLCMsg_FileCRCCheck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCLCMsg_FileCRCCheck)
  return false;
#undef DO_
}

void CCLCMsg_FileCRCCheck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCLCMsg_FileCRCCheck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code_path = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code_path(), output);
  }

  // optional string path = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCLCMsg_FileCRCCheck.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  // optional int32 code_filename = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->code_filename(), output);
  }

  // optional string filename = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCLCMsg_FileCRCCheck.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->filename(), output);
  }

  // optional fixed32 crc = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(5, this->crc(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCLCMsg_FileCRCCheck)
}

::google::protobuf::uint8* CCLCMsg_FileCRCCheck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_FileCRCCheck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code_path = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code_path(), target);
  }

  // optional string path = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCLCMsg_FileCRCCheck.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  // optional int32 code_filename = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->code_filename(), target);
  }

  // optional string filename = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCLCMsg_FileCRCCheck.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->filename(), target);
  }

  // optional fixed32 crc = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(5, this->crc(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_FileCRCCheck)
  return target;
}

size_t CCLCMsg_FileCRCCheck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_FileCRCCheck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string path = 2;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }

    // optional string filename = 4;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional int32 code_path = 1;
    if (has_code_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code_path());
    }

    // optional int32 code_filename = 3;
    if (has_code_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code_filename());
    }

    // optional fixed32 crc = 5;
    if (has_crc()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CCLCMsg_FileCRCCheck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCLCMsg_FileCRCCheck)
  GOOGLE_DCHECK_NE(&from, this);
  const CCLCMsg_FileCRCCheck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCLCMsg_FileCRCCheck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCLCMsg_FileCRCCheck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCLCMsg_FileCRCCheck)
    MergeFrom(*source);
  }
}

void CCLCMsg_FileCRCCheck::MergeFrom(const CCLCMsg_FileCRCCheck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_FileCRCCheck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_filename();
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000004u) {
      code_path_ = from.code_path_;
    }
    if (cached_has_bits & 0x00000008u) {
      code_filename_ = from.code_filename_;
    }
    if (cached_has_bits & 0x00000010u) {
      crc_ = from.crc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCLCMsg_FileCRCCheck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCLCMsg_FileCRCCheck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCLCMsg_FileCRCCheck::CopyFrom(const CCLCMsg_FileCRCCheck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_FileCRCCheck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCLCMsg_FileCRCCheck::IsInitialized() const {
  return true;
}

void CCLCMsg_FileCRCCheck::Swap(CCLCMsg_FileCRCCheck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCLCMsg_FileCRCCheck::InternalSwap(CCLCMsg_FileCRCCheck* other) {
  using std::swap;
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_path_, other->code_path_);
  swap(code_filename_, other->code_filename_);
  swap(crc_, other->crc_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CCLCMsg_FileCRCCheck::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCLCMsg_LoadingProgress::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCLCMsg_LoadingProgress::kProgressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCLCMsg_LoadingProgress::CCLCMsg_LoadingProgress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CCLCMsg_LoadingProgress.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCLCMsg_LoadingProgress)
}
CCLCMsg_LoadingProgress::CCLCMsg_LoadingProgress(const CCLCMsg_LoadingProgress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  progress_ = from.progress_;
  // @@protoc_insertion_point(copy_constructor:CCLCMsg_LoadingProgress)
}

void CCLCMsg_LoadingProgress::SharedCtor() {
  progress_ = 0;
}

CCLCMsg_LoadingProgress::~CCLCMsg_LoadingProgress() {
  // @@protoc_insertion_point(destructor:CCLCMsg_LoadingProgress)
  SharedDtor();
}

void CCLCMsg_LoadingProgress::SharedDtor() {
}

void CCLCMsg_LoadingProgress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CCLCMsg_LoadingProgress::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCLCMsg_LoadingProgress& CCLCMsg_LoadingProgress::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CCLCMsg_LoadingProgress.base);
  return *internal_default_instance();
}


void CCLCMsg_LoadingProgress::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_LoadingProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  progress_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCLCMsg_LoadingProgress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCLCMsg_LoadingProgress)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 progress = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_progress();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCLCMsg_LoadingProgress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCLCMsg_LoadingProgress)
  return false;
#undef DO_
}

void CCLCMsg_LoadingProgress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCLCMsg_LoadingProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 progress = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->progress(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCLCMsg_LoadingProgress)
}

::google::protobuf::uint8* CCLCMsg_LoadingProgress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_LoadingProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 progress = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->progress(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_LoadingProgress)
  return target;
}

size_t CCLCMsg_LoadingProgress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_LoadingProgress)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 progress = 1;
  if (has_progress()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->progress());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CCLCMsg_LoadingProgress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCLCMsg_LoadingProgress)
  GOOGLE_DCHECK_NE(&from, this);
  const CCLCMsg_LoadingProgress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCLCMsg_LoadingProgress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCLCMsg_LoadingProgress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCLCMsg_LoadingProgress)
    MergeFrom(*source);
  }
}

void CCLCMsg_LoadingProgress::MergeFrom(const CCLCMsg_LoadingProgress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_LoadingProgress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_progress()) {
    set_progress(from.progress());
  }
}

void CCLCMsg_LoadingProgress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCLCMsg_LoadingProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCLCMsg_LoadingProgress::CopyFrom(const CCLCMsg_LoadingProgress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_LoadingProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCLCMsg_LoadingProgress::IsInitialized() const {
  return true;
}

void CCLCMsg_LoadingProgress::Swap(CCLCMsg_LoadingProgress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCLCMsg_LoadingProgress::InternalSwap(CCLCMsg_LoadingProgress* other) {
  using std::swap;
  swap(progress_, other->progress_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CCLCMsg_LoadingProgress::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCLCMsg_SplitPlayerConnect::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCLCMsg_SplitPlayerConnect::kPlayernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCLCMsg_SplitPlayerConnect::CCLCMsg_SplitPlayerConnect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CCLCMsg_SplitPlayerConnect.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCLCMsg_SplitPlayerConnect)
}
CCLCMsg_SplitPlayerConnect::CCLCMsg_SplitPlayerConnect(const CCLCMsg_SplitPlayerConnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_playername()) {
    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  // @@protoc_insertion_point(copy_constructor:CCLCMsg_SplitPlayerConnect)
}

void CCLCMsg_SplitPlayerConnect::SharedCtor() {
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CCLCMsg_SplitPlayerConnect::~CCLCMsg_SplitPlayerConnect() {
  // @@protoc_insertion_point(destructor:CCLCMsg_SplitPlayerConnect)
  SharedDtor();
}

void CCLCMsg_SplitPlayerConnect::SharedDtor() {
  playername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCLCMsg_SplitPlayerConnect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CCLCMsg_SplitPlayerConnect::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCLCMsg_SplitPlayerConnect& CCLCMsg_SplitPlayerConnect::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CCLCMsg_SplitPlayerConnect.base);
  return *internal_default_instance();
}


void CCLCMsg_SplitPlayerConnect::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_SplitPlayerConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    playername_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCLCMsg_SplitPlayerConnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCLCMsg_SplitPlayerConnect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string playername = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->playername().data(), static_cast<int>(this->playername().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCLCMsg_SplitPlayerConnect.playername");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCLCMsg_SplitPlayerConnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCLCMsg_SplitPlayerConnect)
  return false;
#undef DO_
}

void CCLCMsg_SplitPlayerConnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCLCMsg_SplitPlayerConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string playername = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playername().data(), static_cast<int>(this->playername().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCLCMsg_SplitPlayerConnect.playername");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->playername(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCLCMsg_SplitPlayerConnect)
}

::google::protobuf::uint8* CCLCMsg_SplitPlayerConnect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_SplitPlayerConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string playername = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playername().data(), static_cast<int>(this->playername().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCLCMsg_SplitPlayerConnect.playername");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->playername(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_SplitPlayerConnect)
  return target;
}

size_t CCLCMsg_SplitPlayerConnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_SplitPlayerConnect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string playername = 1;
  if (has_playername()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->playername());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CCLCMsg_SplitPlayerConnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCLCMsg_SplitPlayerConnect)
  GOOGLE_DCHECK_NE(&from, this);
  const CCLCMsg_SplitPlayerConnect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCLCMsg_SplitPlayerConnect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCLCMsg_SplitPlayerConnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCLCMsg_SplitPlayerConnect)
    MergeFrom(*source);
  }
}

void CCLCMsg_SplitPlayerConnect::MergeFrom(const CCLCMsg_SplitPlayerConnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_SplitPlayerConnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_playername()) {
    set_has_playername();
    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
}

void CCLCMsg_SplitPlayerConnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCLCMsg_SplitPlayerConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCLCMsg_SplitPlayerConnect::CopyFrom(const CCLCMsg_SplitPlayerConnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_SplitPlayerConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCLCMsg_SplitPlayerConnect::IsInitialized() const {
  return true;
}

void CCLCMsg_SplitPlayerConnect::Swap(CCLCMsg_SplitPlayerConnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCLCMsg_SplitPlayerConnect::InternalSwap(CCLCMsg_SplitPlayerConnect* other) {
  using std::swap;
  playername_.Swap(&other->playername_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CCLCMsg_SplitPlayerConnect::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCLCMsg_ClientMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCLCMsg_ClientMessage::kMsgTypeFieldNumber;
const int CCLCMsg_ClientMessage::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCLCMsg_ClientMessage::CCLCMsg_ClientMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CCLCMsg_ClientMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCLCMsg_ClientMessage)
}
CCLCMsg_ClientMessage::CCLCMsg_ClientMessage(const CCLCMsg_ClientMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  msg_type_ = from.msg_type_;
  // @@protoc_insertion_point(copy_constructor:CCLCMsg_ClientMessage)
}

void CCLCMsg_ClientMessage::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_type_ = 0;
}

CCLCMsg_ClientMessage::~CCLCMsg_ClientMessage() {
  // @@protoc_insertion_point(destructor:CCLCMsg_ClientMessage)
  SharedDtor();
}

void CCLCMsg_ClientMessage::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCLCMsg_ClientMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CCLCMsg_ClientMessage::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCLCMsg_ClientMessage& CCLCMsg_ClientMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CCLCMsg_ClientMessage.base);
  return *internal_default_instance();
}


void CCLCMsg_ClientMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_ClientMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    data_.ClearNonDefaultToEmptyNoArena();
  }
  msg_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCLCMsg_ClientMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCLCMsg_ClientMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 msg_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_msg_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msg_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCLCMsg_ClientMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCLCMsg_ClientMessage)
  return false;
#undef DO_
}

void CCLCMsg_ClientMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCLCMsg_ClientMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 msg_type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->msg_type(), output);
  }

  // optional bytes data = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCLCMsg_ClientMessage)
}

::google::protobuf::uint8* CCLCMsg_ClientMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_ClientMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 msg_type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->msg_type(), target);
  }

  // optional bytes data = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_ClientMessage)
  return target;
}

size_t CCLCMsg_ClientMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_ClientMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

    // optional int32 msg_type = 1;
    if (has_msg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->msg_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CCLCMsg_ClientMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCLCMsg_ClientMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CCLCMsg_ClientMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCLCMsg_ClientMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCLCMsg_ClientMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCLCMsg_ClientMessage)
    MergeFrom(*source);
  }
}

void CCLCMsg_ClientMessage::MergeFrom(const CCLCMsg_ClientMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_ClientMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
    if (cached_has_bits & 0x00000002u) {
      msg_type_ = from.msg_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCLCMsg_ClientMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCLCMsg_ClientMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCLCMsg_ClientMessage::CopyFrom(const CCLCMsg_ClientMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_ClientMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCLCMsg_ClientMessage::IsInitialized() const {
  return true;
}

void CCLCMsg_ClientMessage::Swap(CCLCMsg_ClientMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCLCMsg_ClientMessage::InternalSwap(CCLCMsg_ClientMessage* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msg_type_, other->msg_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CCLCMsg_ClientMessage::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCLCMsg_SplitPlayerDisconnect::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCLCMsg_SplitPlayerDisconnect::kSlotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCLCMsg_SplitPlayerDisconnect::CCLCMsg_SplitPlayerDisconnect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CCLCMsg_SplitPlayerDisconnect.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCLCMsg_SplitPlayerDisconnect)
}
CCLCMsg_SplitPlayerDisconnect::CCLCMsg_SplitPlayerDisconnect(const CCLCMsg_SplitPlayerDisconnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  slot_ = from.slot_;
  // @@protoc_insertion_point(copy_constructor:CCLCMsg_SplitPlayerDisconnect)
}

void CCLCMsg_SplitPlayerDisconnect::SharedCtor() {
  slot_ = 0;
}

CCLCMsg_SplitPlayerDisconnect::~CCLCMsg_SplitPlayerDisconnect() {
  // @@protoc_insertion_point(destructor:CCLCMsg_SplitPlayerDisconnect)
  SharedDtor();
}

void CCLCMsg_SplitPlayerDisconnect::SharedDtor() {
}

void CCLCMsg_SplitPlayerDisconnect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CCLCMsg_SplitPlayerDisconnect::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCLCMsg_SplitPlayerDisconnect& CCLCMsg_SplitPlayerDisconnect::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CCLCMsg_SplitPlayerDisconnect.base);
  return *internal_default_instance();
}


void CCLCMsg_SplitPlayerDisconnect::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_SplitPlayerDisconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  slot_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCLCMsg_SplitPlayerDisconnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCLCMsg_SplitPlayerDisconnect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 slot = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_slot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCLCMsg_SplitPlayerDisconnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCLCMsg_SplitPlayerDisconnect)
  return false;
#undef DO_
}

void CCLCMsg_SplitPlayerDisconnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCLCMsg_SplitPlayerDisconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 slot = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->slot(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCLCMsg_SplitPlayerDisconnect)
}

::google::protobuf::uint8* CCLCMsg_SplitPlayerDisconnect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_SplitPlayerDisconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 slot = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->slot(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_SplitPlayerDisconnect)
  return target;
}

size_t CCLCMsg_SplitPlayerDisconnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_SplitPlayerDisconnect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 slot = 1;
  if (has_slot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->slot());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CCLCMsg_SplitPlayerDisconnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCLCMsg_SplitPlayerDisconnect)
  GOOGLE_DCHECK_NE(&from, this);
  const CCLCMsg_SplitPlayerDisconnect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCLCMsg_SplitPlayerDisconnect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCLCMsg_SplitPlayerDisconnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCLCMsg_SplitPlayerDisconnect)
    MergeFrom(*source);
  }
}

void CCLCMsg_SplitPlayerDisconnect::MergeFrom(const CCLCMsg_SplitPlayerDisconnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_SplitPlayerDisconnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_slot()) {
    set_slot(from.slot());
  }
}

void CCLCMsg_SplitPlayerDisconnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCLCMsg_SplitPlayerDisconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCLCMsg_SplitPlayerDisconnect::CopyFrom(const CCLCMsg_SplitPlayerDisconnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_SplitPlayerDisconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCLCMsg_SplitPlayerDisconnect::IsInitialized() const {
  return true;
}

void CCLCMsg_SplitPlayerDisconnect::Swap(CCLCMsg_SplitPlayerDisconnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCLCMsg_SplitPlayerDisconnect::InternalSwap(CCLCMsg_SplitPlayerDisconnect* other) {
  using std::swap;
  swap(slot_, other->slot_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CCLCMsg_SplitPlayerDisconnect::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCLCMsg_ServerStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCLCMsg_ServerStatus::kSimplifiedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCLCMsg_ServerStatus::CCLCMsg_ServerStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CCLCMsg_ServerStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCLCMsg_ServerStatus)
}
CCLCMsg_ServerStatus::CCLCMsg_ServerStatus(const CCLCMsg_ServerStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  simplified_ = from.simplified_;
  // @@protoc_insertion_point(copy_constructor:CCLCMsg_ServerStatus)
}

void CCLCMsg_ServerStatus::SharedCtor() {
  simplified_ = false;
}

CCLCMsg_ServerStatus::~CCLCMsg_ServerStatus() {
  // @@protoc_insertion_point(destructor:CCLCMsg_ServerStatus)
  SharedDtor();
}

void CCLCMsg_ServerStatus::SharedDtor() {
}

void CCLCMsg_ServerStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CCLCMsg_ServerStatus::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCLCMsg_ServerStatus& CCLCMsg_ServerStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CCLCMsg_ServerStatus.base);
  return *internal_default_instance();
}


void CCLCMsg_ServerStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_ServerStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  simplified_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCLCMsg_ServerStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCLCMsg_ServerStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool simplified = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_simplified();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &simplified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCLCMsg_ServerStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCLCMsg_ServerStatus)
  return false;
#undef DO_
}

void CCLCMsg_ServerStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCLCMsg_ServerStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool simplified = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->simplified(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCLCMsg_ServerStatus)
}

::google::protobuf::uint8* CCLCMsg_ServerStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_ServerStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool simplified = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->simplified(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_ServerStatus)
  return target;
}

size_t CCLCMsg_ServerStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_ServerStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bool simplified = 1;
  if (has_simplified()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CCLCMsg_ServerStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCLCMsg_ServerStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const CCLCMsg_ServerStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCLCMsg_ServerStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCLCMsg_ServerStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCLCMsg_ServerStatus)
    MergeFrom(*source);
  }
}

void CCLCMsg_ServerStatus::MergeFrom(const CCLCMsg_ServerStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_ServerStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_simplified()) {
    set_simplified(from.simplified());
  }
}

void CCLCMsg_ServerStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCLCMsg_ServerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCLCMsg_ServerStatus::CopyFrom(const CCLCMsg_ServerStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_ServerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCLCMsg_ServerStatus::IsInitialized() const {
  return true;
}

void CCLCMsg_ServerStatus::Swap(CCLCMsg_ServerStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCLCMsg_ServerStatus::InternalSwap(CCLCMsg_ServerStatus* other) {
  using std::swap;
  swap(simplified_, other->simplified_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CCLCMsg_ServerStatus::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCLCMsg_ServerPing::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCLCMsg_ServerPing::CCLCMsg_ServerPing()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CCLCMsg_ServerPing.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCLCMsg_ServerPing)
}
CCLCMsg_ServerPing::CCLCMsg_ServerPing(const CCLCMsg_ServerPing& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CCLCMsg_ServerPing)
}

void CCLCMsg_ServerPing::SharedCtor() {
}

CCLCMsg_ServerPing::~CCLCMsg_ServerPing() {
  // @@protoc_insertion_point(destructor:CCLCMsg_ServerPing)
  SharedDtor();
}

void CCLCMsg_ServerPing::SharedDtor() {
}

void CCLCMsg_ServerPing::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CCLCMsg_ServerPing::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCLCMsg_ServerPing& CCLCMsg_ServerPing::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CCLCMsg_ServerPing.base);
  return *internal_default_instance();
}


void CCLCMsg_ServerPing::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_ServerPing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCLCMsg_ServerPing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCLCMsg_ServerPing)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CCLCMsg_ServerPing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCLCMsg_ServerPing)
  return false;
#undef DO_
}

void CCLCMsg_ServerPing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCLCMsg_ServerPing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCLCMsg_ServerPing)
}

::google::protobuf::uint8* CCLCMsg_ServerPing::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_ServerPing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_ServerPing)
  return target;
}

size_t CCLCMsg_ServerPing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_ServerPing)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CCLCMsg_ServerPing::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCLCMsg_ServerPing)
  GOOGLE_DCHECK_NE(&from, this);
  const CCLCMsg_ServerPing* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCLCMsg_ServerPing>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCLCMsg_ServerPing)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCLCMsg_ServerPing)
    MergeFrom(*source);
  }
}

void CCLCMsg_ServerPing::MergeFrom(const CCLCMsg_ServerPing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_ServerPing)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CCLCMsg_ServerPing::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCLCMsg_ServerPing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCLCMsg_ServerPing::CopyFrom(const CCLCMsg_ServerPing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_ServerPing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCLCMsg_ServerPing::IsInitialized() const {
  return true;
}

void CCLCMsg_ServerPing::Swap(CCLCMsg_ServerPing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCLCMsg_ServerPing::InternalSwap(CCLCMsg_ServerPing* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CCLCMsg_ServerPing::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCLCMsg_RequestPause::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCLCMsg_RequestPause::kPauseTypeFieldNumber;
const int CCLCMsg_RequestPause::kPauseGroupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCLCMsg_RequestPause::CCLCMsg_RequestPause()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CCLCMsg_RequestPause.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCLCMsg_RequestPause)
}
CCLCMsg_RequestPause::CCLCMsg_RequestPause(const CCLCMsg_RequestPause& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pause_type_, &from.pause_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&pause_group_) -
    reinterpret_cast<char*>(&pause_type_)) + sizeof(pause_group_));
  // @@protoc_insertion_point(copy_constructor:CCLCMsg_RequestPause)
}

void CCLCMsg_RequestPause::SharedCtor() {
  ::memset(&pause_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pause_group_) -
      reinterpret_cast<char*>(&pause_type_)) + sizeof(pause_group_));
}

CCLCMsg_RequestPause::~CCLCMsg_RequestPause() {
  // @@protoc_insertion_point(destructor:CCLCMsg_RequestPause)
  SharedDtor();
}

void CCLCMsg_RequestPause::SharedDtor() {
}

void CCLCMsg_RequestPause::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CCLCMsg_RequestPause::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCLCMsg_RequestPause& CCLCMsg_RequestPause::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CCLCMsg_RequestPause.base);
  return *internal_default_instance();
}


void CCLCMsg_RequestPause::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_RequestPause)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&pause_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pause_group_) -
        reinterpret_cast<char*>(&pause_type_)) + sizeof(pause_group_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCLCMsg_RequestPause::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCLCMsg_RequestPause)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .RequestPause_t pause_type = 1 [default = RP_PAUSE];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::RequestPause_t_IsValid(value)) {
            set_pause_type(static_cast< ::RequestPause_t >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 pause_group = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pause_group();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pause_group_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCLCMsg_RequestPause)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCLCMsg_RequestPause)
  return false;
#undef DO_
}

void CCLCMsg_RequestPause::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCLCMsg_RequestPause)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .RequestPause_t pause_type = 1 [default = RP_PAUSE];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->pause_type(), output);
  }

  // optional int32 pause_group = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pause_group(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCLCMsg_RequestPause)
}

::google::protobuf::uint8* CCLCMsg_RequestPause::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_RequestPause)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .RequestPause_t pause_type = 1 [default = RP_PAUSE];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->pause_type(), target);
  }

  // optional int32 pause_group = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pause_group(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_RequestPause)
  return target;
}

size_t CCLCMsg_RequestPause::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_RequestPause)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .RequestPause_t pause_type = 1 [default = RP_PAUSE];
    if (has_pause_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->pause_type());
    }

    // optional int32 pause_group = 2;
    if (has_pause_group()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pause_group());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CCLCMsg_RequestPause::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCLCMsg_RequestPause)
  GOOGLE_DCHECK_NE(&from, this);
  const CCLCMsg_RequestPause* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCLCMsg_RequestPause>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCLCMsg_RequestPause)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCLCMsg_RequestPause)
    MergeFrom(*source);
  }
}

void CCLCMsg_RequestPause::MergeFrom(const CCLCMsg_RequestPause& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_RequestPause)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      pause_type_ = from.pause_type_;
    }
    if (cached_has_bits & 0x00000002u) {
      pause_group_ = from.pause_group_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCLCMsg_RequestPause::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCLCMsg_RequestPause)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCLCMsg_RequestPause::CopyFrom(const CCLCMsg_RequestPause& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_RequestPause)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCLCMsg_RequestPause::IsInitialized() const {
  return true;
}

void CCLCMsg_RequestPause::Swap(CCLCMsg_RequestPause* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCLCMsg_RequestPause::InternalSwap(CCLCMsg_RequestPause* other) {
  using std::swap;
  swap(pause_type_, other->pause_type_);
  swap(pause_group_, other->pause_group_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CCLCMsg_RequestPause::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCLCMsg_CmdKeyValues::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCLCMsg_CmdKeyValues::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCLCMsg_CmdKeyValues::CCLCMsg_CmdKeyValues()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CCLCMsg_CmdKeyValues.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCLCMsg_CmdKeyValues)
}
CCLCMsg_CmdKeyValues::CCLCMsg_CmdKeyValues(const CCLCMsg_CmdKeyValues& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:CCLCMsg_CmdKeyValues)
}

void CCLCMsg_CmdKeyValues::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CCLCMsg_CmdKeyValues::~CCLCMsg_CmdKeyValues() {
  // @@protoc_insertion_point(destructor:CCLCMsg_CmdKeyValues)
  SharedDtor();
}

void CCLCMsg_CmdKeyValues::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCLCMsg_CmdKeyValues::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CCLCMsg_CmdKeyValues::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCLCMsg_CmdKeyValues& CCLCMsg_CmdKeyValues::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CCLCMsg_CmdKeyValues.base);
  return *internal_default_instance();
}


void CCLCMsg_CmdKeyValues::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_CmdKeyValues)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    data_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCLCMsg_CmdKeyValues::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCLCMsg_CmdKeyValues)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCLCMsg_CmdKeyValues)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCLCMsg_CmdKeyValues)
  return false;
#undef DO_
}

void CCLCMsg_CmdKeyValues::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCLCMsg_CmdKeyValues)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes data = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCLCMsg_CmdKeyValues)
}

::google::protobuf::uint8* CCLCMsg_CmdKeyValues::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_CmdKeyValues)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes data = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_CmdKeyValues)
  return target;
}

size_t CCLCMsg_CmdKeyValues::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_CmdKeyValues)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bytes data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CCLCMsg_CmdKeyValues::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCLCMsg_CmdKeyValues)
  GOOGLE_DCHECK_NE(&from, this);
  const CCLCMsg_CmdKeyValues* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCLCMsg_CmdKeyValues>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCLCMsg_CmdKeyValues)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCLCMsg_CmdKeyValues)
    MergeFrom(*source);
  }
}

void CCLCMsg_CmdKeyValues::MergeFrom(const CCLCMsg_CmdKeyValues& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_CmdKeyValues)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    set_has_data();
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void CCLCMsg_CmdKeyValues::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCLCMsg_CmdKeyValues)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCLCMsg_CmdKeyValues::CopyFrom(const CCLCMsg_CmdKeyValues& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_CmdKeyValues)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCLCMsg_CmdKeyValues::IsInitialized() const {
  return true;
}

void CCLCMsg_CmdKeyValues::Swap(CCLCMsg_CmdKeyValues* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCLCMsg_CmdKeyValues::InternalSwap(CCLCMsg_CmdKeyValues* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CCLCMsg_CmdKeyValues::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_ServerInfo::InitAsDefaultInstance() {
  ::_CSVCMsg_ServerInfo_default_instance_._instance.get_mutable()->game_session_config_ = const_cast< ::CSVCMsg_GameSessionConfiguration*>(
      ::CSVCMsg_GameSessionConfiguration::internal_default_instance());
}
void CSVCMsg_ServerInfo::clear_game_session_config() {
  if (game_session_config_ != NULL) game_session_config_->Clear();
  clear_has_game_session_config();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_ServerInfo::kProtocolFieldNumber;
const int CSVCMsg_ServerInfo::kServerCountFieldNumber;
const int CSVCMsg_ServerInfo::kIsDedicatedFieldNumber;
const int CSVCMsg_ServerInfo::kIsHltvFieldNumber;
const int CSVCMsg_ServerInfo::kIsReplayFieldNumber;
const int CSVCMsg_ServerInfo::kCOsFieldNumber;
const int CSVCMsg_ServerInfo::kMaxClientsFieldNumber;
const int CSVCMsg_ServerInfo::kMaxClassesFieldNumber;
const int CSVCMsg_ServerInfo::kPlayerSlotFieldNumber;
const int CSVCMsg_ServerInfo::kTickIntervalFieldNumber;
const int CSVCMsg_ServerInfo::kGameDirFieldNumber;
const int CSVCMsg_ServerInfo::kMapNameFieldNumber;
const int CSVCMsg_ServerInfo::kSkyNameFieldNumber;
const int CSVCMsg_ServerInfo::kHostNameFieldNumber;
const int CSVCMsg_ServerInfo::kAddonNameFieldNumber;
const int CSVCMsg_ServerInfo::kGameSessionConfigFieldNumber;
const int CSVCMsg_ServerInfo::kGameSessionManifestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_ServerInfo::CSVCMsg_ServerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_ServerInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_ServerInfo)
}
CSVCMsg_ServerInfo::CSVCMsg_ServerInfo(const CSVCMsg_ServerInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  game_dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_game_dir()) {
    game_dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_dir_);
  }
  map_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_map_name()) {
    map_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.map_name_);
  }
  sky_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sky_name()) {
    sky_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sky_name_);
  }
  host_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_host_name()) {
    host_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_name_);
  }
  addon_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_addon_name()) {
    addon_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addon_name_);
  }
  game_session_manifest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_game_session_manifest()) {
    game_session_manifest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_session_manifest_);
  }
  if (from.has_game_session_config()) {
    game_session_config_ = new ::CSVCMsg_GameSessionConfiguration(*from.game_session_config_);
  } else {
    game_session_config_ = NULL;
  }
  ::memcpy(&protocol_, &from.protocol_,
    static_cast<size_t>(reinterpret_cast<char*>(&tick_interval_) -
    reinterpret_cast<char*>(&protocol_)) + sizeof(tick_interval_));
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_ServerInfo)
}

void CSVCMsg_ServerInfo::SharedCtor() {
  game_dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  map_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sky_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addon_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_session_manifest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&game_session_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tick_interval_) -
      reinterpret_cast<char*>(&game_session_config_)) + sizeof(tick_interval_));
}

CSVCMsg_ServerInfo::~CSVCMsg_ServerInfo() {
  // @@protoc_insertion_point(destructor:CSVCMsg_ServerInfo)
  SharedDtor();
}

void CSVCMsg_ServerInfo::SharedDtor() {
  game_dir_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  map_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sky_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addon_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_session_manifest_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete game_session_config_;
}

void CSVCMsg_ServerInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_ServerInfo::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_ServerInfo& CSVCMsg_ServerInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_ServerInfo.base);
  return *internal_default_instance();
}


void CSVCMsg_ServerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_ServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      game_dir_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      map_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      sky_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      host_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      addon_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      game_session_manifest_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(game_session_config_ != NULL);
      game_session_config_->Clear();
    }
  }
  protocol_ = 0;
  if (cached_has_bits & 65280u) {
    ::memset(&server_count_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&player_slot_) -
        reinterpret_cast<char*>(&server_count_)) + sizeof(player_slot_));
  }
  tick_interval_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_ServerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_ServerInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 protocol = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_protocol();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &protocol_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 server_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_server_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &server_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_dedicated = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_is_dedicated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_dedicated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_hltv = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_is_hltv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_hltv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_replay = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_is_replay();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_replay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 c_os = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_c_os();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &c_os_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 max_clients = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_max_clients();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_clients_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 max_classes = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_max_classes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_classes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 player_slot = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_player_slot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_slot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float tick_interval = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(109u /* 109 & 0xFF */)) {
          set_has_tick_interval();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &tick_interval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string game_dir = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_game_dir()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->game_dir().data(), static_cast<int>(this->game_dir().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSVCMsg_ServerInfo.game_dir");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string map_name = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_map_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->map_name().data(), static_cast<int>(this->map_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSVCMsg_ServerInfo.map_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sky_name = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sky_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sky_name().data(), static_cast<int>(this->sky_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSVCMsg_ServerInfo.sky_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string host_name = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host_name().data(), static_cast<int>(this->host_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSVCMsg_ServerInfo.host_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string addon_name = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_addon_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->addon_name().data(), static_cast<int>(this->addon_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSVCMsg_ServerInfo.addon_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CSVCMsg_GameSessionConfiguration game_session_config = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_game_session_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes game_session_manifest = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_game_session_manifest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_ServerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_ServerInfo)
  return false;
#undef DO_
}

void CSVCMsg_ServerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_ServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 protocol = 1;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->protocol(), output);
  }

  // optional int32 server_count = 2;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->server_count(), output);
  }

  // optional bool is_dedicated = 3;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_dedicated(), output);
  }

  // optional bool is_hltv = 4;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_hltv(), output);
  }

  // optional bool is_replay = 5;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_replay(), output);
  }

  // optional int32 c_os = 6;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->c_os(), output);
  }

  // optional int32 max_clients = 10;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->max_clients(), output);
  }

  // optional int32 max_classes = 11;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->max_classes(), output);
  }

  // optional int32 player_slot = 12;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->player_slot(), output);
  }

  // optional float tick_interval = 13;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->tick_interval(), output);
  }

  // optional string game_dir = 14;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->game_dir().data(), static_cast<int>(this->game_dir().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_ServerInfo.game_dir");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->game_dir(), output);
  }

  // optional string map_name = 15;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->map_name().data(), static_cast<int>(this->map_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_ServerInfo.map_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->map_name(), output);
  }

  // optional string sky_name = 16;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sky_name().data(), static_cast<int>(this->sky_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_ServerInfo.sky_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->sky_name(), output);
  }

  // optional string host_name = 17;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_name().data(), static_cast<int>(this->host_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_ServerInfo.host_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->host_name(), output);
  }

  // optional string addon_name = 18;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->addon_name().data(), static_cast<int>(this->addon_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_ServerInfo.addon_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->addon_name(), output);
  }

  // optional .CSVCMsg_GameSessionConfiguration game_session_config = 19;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_game_session_config(), output);
  }

  // optional bytes game_session_manifest = 20;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->game_session_manifest(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_ServerInfo)
}

::google::protobuf::uint8* CSVCMsg_ServerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_ServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 protocol = 1;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->protocol(), target);
  }

  // optional int32 server_count = 2;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->server_count(), target);
  }

  // optional bool is_dedicated = 3;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_dedicated(), target);
  }

  // optional bool is_hltv = 4;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_hltv(), target);
  }

  // optional bool is_replay = 5;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_replay(), target);
  }

  // optional int32 c_os = 6;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->c_os(), target);
  }

  // optional int32 max_clients = 10;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->max_clients(), target);
  }

  // optional int32 max_classes = 11;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->max_classes(), target);
  }

  // optional int32 player_slot = 12;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->player_slot(), target);
  }

  // optional float tick_interval = 13;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->tick_interval(), target);
  }

  // optional string game_dir = 14;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->game_dir().data(), static_cast<int>(this->game_dir().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_ServerInfo.game_dir");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->game_dir(), target);
  }

  // optional string map_name = 15;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->map_name().data(), static_cast<int>(this->map_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_ServerInfo.map_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->map_name(), target);
  }

  // optional string sky_name = 16;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sky_name().data(), static_cast<int>(this->sky_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_ServerInfo.sky_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->sky_name(), target);
  }

  // optional string host_name = 17;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_name().data(), static_cast<int>(this->host_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_ServerInfo.host_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->host_name(), target);
  }

  // optional string addon_name = 18;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->addon_name().data(), static_cast<int>(this->addon_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_ServerInfo.addon_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->addon_name(), target);
  }

  // optional .CSVCMsg_GameSessionConfiguration game_session_config = 19;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_game_session_config(), deterministic, target);
  }

  // optional bytes game_session_manifest = 20;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        20, this->game_session_manifest(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_ServerInfo)
  return target;
}

size_t CSVCMsg_ServerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_ServerInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string game_dir = 14;
    if (has_game_dir()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->game_dir());
    }

    // optional string map_name = 15;
    if (has_map_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->map_name());
    }

    // optional string sky_name = 16;
    if (has_sky_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sky_name());
    }

    // optional string host_name = 17;
    if (has_host_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->host_name());
    }

    // optional string addon_name = 18;
    if (has_addon_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->addon_name());
    }

    // optional bytes game_session_manifest = 20;
    if (has_game_session_manifest()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->game_session_manifest());
    }

    // optional .CSVCMsg_GameSessionConfiguration game_session_config = 19;
    if (has_game_session_config()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *game_session_config_);
    }

    // optional int32 protocol = 1;
    if (has_protocol()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->protocol());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional int32 server_count = 2;
    if (has_server_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->server_count());
    }

    // optional bool is_dedicated = 3;
    if (has_is_dedicated()) {
      total_size += 1 + 1;
    }

    // optional bool is_hltv = 4;
    if (has_is_hltv()) {
      total_size += 1 + 1;
    }

    // optional bool is_replay = 5;
    if (has_is_replay()) {
      total_size += 1 + 1;
    }

    // optional int32 c_os = 6;
    if (has_c_os()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->c_os());
    }

    // optional int32 max_clients = 10;
    if (has_max_clients()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_clients());
    }

    // optional int32 max_classes = 11;
    if (has_max_classes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_classes());
    }

    // optional int32 player_slot = 12;
    if (has_player_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player_slot());
    }

  }
  // optional float tick_interval = 13;
  if (has_tick_interval()) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_ServerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_ServerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_ServerInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_ServerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_ServerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_ServerInfo)
    MergeFrom(*source);
  }
}

void CSVCMsg_ServerInfo::MergeFrom(const CSVCMsg_ServerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_ServerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_game_dir();
      game_dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_dir_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_map_name();
      map_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.map_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_sky_name();
      sky_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sky_name_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_host_name();
      host_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_name_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_addon_name();
      addon_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addon_name_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_game_session_manifest();
      game_session_manifest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_session_manifest_);
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_game_session_config()->::CSVCMsg_GameSessionConfiguration::MergeFrom(from.game_session_config());
    }
    if (cached_has_bits & 0x00000080u) {
      protocol_ = from.protocol_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      server_count_ = from.server_count_;
    }
    if (cached_has_bits & 0x00000200u) {
      is_dedicated_ = from.is_dedicated_;
    }
    if (cached_has_bits & 0x00000400u) {
      is_hltv_ = from.is_hltv_;
    }
    if (cached_has_bits & 0x00000800u) {
      is_replay_ = from.is_replay_;
    }
    if (cached_has_bits & 0x00001000u) {
      c_os_ = from.c_os_;
    }
    if (cached_has_bits & 0x00002000u) {
      max_clients_ = from.max_clients_;
    }
    if (cached_has_bits & 0x00004000u) {
      max_classes_ = from.max_classes_;
    }
    if (cached_has_bits & 0x00008000u) {
      player_slot_ = from.player_slot_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00010000u) {
    set_tick_interval(from.tick_interval());
  }
}

void CSVCMsg_ServerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_ServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_ServerInfo::CopyFrom(const CSVCMsg_ServerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_ServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_ServerInfo::IsInitialized() const {
  return true;
}

void CSVCMsg_ServerInfo::Swap(CSVCMsg_ServerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_ServerInfo::InternalSwap(CSVCMsg_ServerInfo* other) {
  using std::swap;
  game_dir_.Swap(&other->game_dir_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  map_name_.Swap(&other->map_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sky_name_.Swap(&other->sky_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  host_name_.Swap(&other->host_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  addon_name_.Swap(&other->addon_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  game_session_manifest_.Swap(&other->game_session_manifest_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(game_session_config_, other->game_session_config_);
  swap(protocol_, other->protocol_);
  swap(server_count_, other->server_count_);
  swap(is_dedicated_, other->is_dedicated_);
  swap(is_hltv_, other->is_hltv_);
  swap(is_replay_, other->is_replay_);
  swap(c_os_, other->c_os_);
  swap(max_clients_, other->max_clients_);
  swap(max_classes_, other->max_classes_);
  swap(player_slot_, other->player_slot_);
  swap(tick_interval_, other->tick_interval_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_ServerInfo::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_ClassInfo_class_t::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_ClassInfo_class_t::kClassIdFieldNumber;
const int CSVCMsg_ClassInfo_class_t::kDataTableNameFieldNumber;
const int CSVCMsg_ClassInfo_class_t::kClassNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_ClassInfo_class_t::CSVCMsg_ClassInfo_class_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_ClassInfo_class_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_ClassInfo.class_t)
}
CSVCMsg_ClassInfo_class_t::CSVCMsg_ClassInfo_class_t(const CSVCMsg_ClassInfo_class_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_table_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data_table_name()) {
    data_table_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_table_name_);
  }
  class_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_class_name()) {
    class_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.class_name_);
  }
  class_id_ = from.class_id_;
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_ClassInfo.class_t)
}

void CSVCMsg_ClassInfo_class_t::SharedCtor() {
  data_table_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  class_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  class_id_ = 0;
}

CSVCMsg_ClassInfo_class_t::~CSVCMsg_ClassInfo_class_t() {
  // @@protoc_insertion_point(destructor:CSVCMsg_ClassInfo.class_t)
  SharedDtor();
}

void CSVCMsg_ClassInfo_class_t::SharedDtor() {
  data_table_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  class_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CSVCMsg_ClassInfo_class_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_ClassInfo_class_t::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_ClassInfo_class_t& CSVCMsg_ClassInfo_class_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_ClassInfo_class_t.base);
  return *internal_default_instance();
}


void CSVCMsg_ClassInfo_class_t::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_ClassInfo.class_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      data_table_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      class_name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  class_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_ClassInfo_class_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_ClassInfo.class_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 class_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_class_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &class_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string data_table_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data_table_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data_table_name().data(), static_cast<int>(this->data_table_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSVCMsg_ClassInfo.class_t.data_table_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string class_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_class_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->class_name().data(), static_cast<int>(this->class_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSVCMsg_ClassInfo.class_t.class_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_ClassInfo.class_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_ClassInfo.class_t)
  return false;
#undef DO_
}

void CSVCMsg_ClassInfo_class_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_ClassInfo.class_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 class_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->class_id(), output);
  }

  // optional string data_table_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data_table_name().data(), static_cast<int>(this->data_table_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_ClassInfo.class_t.data_table_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->data_table_name(), output);
  }

  // optional string class_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->class_name().data(), static_cast<int>(this->class_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_ClassInfo.class_t.class_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->class_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_ClassInfo.class_t)
}

::google::protobuf::uint8* CSVCMsg_ClassInfo_class_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_ClassInfo.class_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 class_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->class_id(), target);
  }

  // optional string data_table_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data_table_name().data(), static_cast<int>(this->data_table_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_ClassInfo.class_t.data_table_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->data_table_name(), target);
  }

  // optional string class_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->class_name().data(), static_cast<int>(this->class_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_ClassInfo.class_t.class_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->class_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_ClassInfo.class_t)
  return target;
}

size_t CSVCMsg_ClassInfo_class_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_ClassInfo.class_t)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string data_table_name = 2;
    if (has_data_table_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->data_table_name());
    }

    // optional string class_name = 3;
    if (has_class_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->class_name());
    }

    // optional int32 class_id = 1;
    if (has_class_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->class_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_ClassInfo_class_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_ClassInfo.class_t)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_ClassInfo_class_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_ClassInfo_class_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_ClassInfo.class_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_ClassInfo.class_t)
    MergeFrom(*source);
  }
}

void CSVCMsg_ClassInfo_class_t::MergeFrom(const CSVCMsg_ClassInfo_class_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_ClassInfo.class_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_data_table_name();
      data_table_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_table_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_class_name();
      class_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.class_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      class_id_ = from.class_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSVCMsg_ClassInfo_class_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_ClassInfo.class_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_ClassInfo_class_t::CopyFrom(const CSVCMsg_ClassInfo_class_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_ClassInfo.class_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_ClassInfo_class_t::IsInitialized() const {
  return true;
}

void CSVCMsg_ClassInfo_class_t::Swap(CSVCMsg_ClassInfo_class_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_ClassInfo_class_t::InternalSwap(CSVCMsg_ClassInfo_class_t* other) {
  using std::swap;
  data_table_name_.Swap(&other->data_table_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  class_name_.Swap(&other->class_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(class_id_, other->class_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_ClassInfo_class_t::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_ClassInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_ClassInfo::kCreateOnClientFieldNumber;
const int CSVCMsg_ClassInfo::kClassesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_ClassInfo::CSVCMsg_ClassInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_ClassInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_ClassInfo)
}
CSVCMsg_ClassInfo::CSVCMsg_ClassInfo(const CSVCMsg_ClassInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      classes_(from.classes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  create_on_client_ = from.create_on_client_;
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_ClassInfo)
}

void CSVCMsg_ClassInfo::SharedCtor() {
  create_on_client_ = false;
}

CSVCMsg_ClassInfo::~CSVCMsg_ClassInfo() {
  // @@protoc_insertion_point(destructor:CSVCMsg_ClassInfo)
  SharedDtor();
}

void CSVCMsg_ClassInfo::SharedDtor() {
}

void CSVCMsg_ClassInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_ClassInfo::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_ClassInfo& CSVCMsg_ClassInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_ClassInfo.base);
  return *internal_default_instance();
}


void CSVCMsg_ClassInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_ClassInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  classes_.Clear();
  create_on_client_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_ClassInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_ClassInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool create_on_client = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_create_on_client();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &create_on_client_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CSVCMsg_ClassInfo.class_t classes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_classes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_ClassInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_ClassInfo)
  return false;
#undef DO_
}

void CSVCMsg_ClassInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_ClassInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool create_on_client = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->create_on_client(), output);
  }

  // repeated .CSVCMsg_ClassInfo.class_t classes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->classes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->classes(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_ClassInfo)
}

::google::protobuf::uint8* CSVCMsg_ClassInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_ClassInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool create_on_client = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->create_on_client(), target);
  }

  // repeated .CSVCMsg_ClassInfo.class_t classes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->classes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->classes(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_ClassInfo)
  return target;
}

size_t CSVCMsg_ClassInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_ClassInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CSVCMsg_ClassInfo.class_t classes = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->classes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->classes(static_cast<int>(i)));
    }
  }

  // optional bool create_on_client = 1;
  if (has_create_on_client()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_ClassInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_ClassInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_ClassInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_ClassInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_ClassInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_ClassInfo)
    MergeFrom(*source);
  }
}

void CSVCMsg_ClassInfo::MergeFrom(const CSVCMsg_ClassInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_ClassInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  classes_.MergeFrom(from.classes_);
  if (from.has_create_on_client()) {
    set_create_on_client(from.create_on_client());
  }
}

void CSVCMsg_ClassInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_ClassInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_ClassInfo::CopyFrom(const CSVCMsg_ClassInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_ClassInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_ClassInfo::IsInitialized() const {
  return true;
}

void CSVCMsg_ClassInfo::Swap(CSVCMsg_ClassInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_ClassInfo::InternalSwap(CSVCMsg_ClassInfo* other) {
  using std::swap;
  CastToBase(&classes_)->InternalSwap(CastToBase(&other->classes_));
  swap(create_on_client_, other->create_on_client_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_ClassInfo::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_SetPause::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_SetPause::kPausedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_SetPause::CSVCMsg_SetPause()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_SetPause.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_SetPause)
}
CSVCMsg_SetPause::CSVCMsg_SetPause(const CSVCMsg_SetPause& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  paused_ = from.paused_;
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_SetPause)
}

void CSVCMsg_SetPause::SharedCtor() {
  paused_ = false;
}

CSVCMsg_SetPause::~CSVCMsg_SetPause() {
  // @@protoc_insertion_point(destructor:CSVCMsg_SetPause)
  SharedDtor();
}

void CSVCMsg_SetPause::SharedDtor() {
}

void CSVCMsg_SetPause::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_SetPause::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_SetPause& CSVCMsg_SetPause::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_SetPause.base);
  return *internal_default_instance();
}


void CSVCMsg_SetPause::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_SetPause)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  paused_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_SetPause::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_SetPause)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool paused = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_paused();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &paused_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_SetPause)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_SetPause)
  return false;
#undef DO_
}

void CSVCMsg_SetPause::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_SetPause)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool paused = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->paused(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_SetPause)
}

::google::protobuf::uint8* CSVCMsg_SetPause::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_SetPause)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool paused = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->paused(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_SetPause)
  return target;
}

size_t CSVCMsg_SetPause::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_SetPause)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bool paused = 1;
  if (has_paused()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_SetPause::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_SetPause)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_SetPause* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_SetPause>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_SetPause)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_SetPause)
    MergeFrom(*source);
  }
}

void CSVCMsg_SetPause::MergeFrom(const CSVCMsg_SetPause& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_SetPause)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_paused()) {
    set_paused(from.paused());
  }
}

void CSVCMsg_SetPause::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_SetPause)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_SetPause::CopyFrom(const CSVCMsg_SetPause& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_SetPause)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_SetPause::IsInitialized() const {
  return true;
}

void CSVCMsg_SetPause::Swap(CSVCMsg_SetPause* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_SetPause::InternalSwap(CSVCMsg_SetPause* other) {
  using std::swap;
  swap(paused_, other->paused_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_SetPause::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_VoiceInit::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_VoiceInit::kQualityFieldNumber;
const int CSVCMsg_VoiceInit::kCodecFieldNumber;
const int CSVCMsg_VoiceInit::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_VoiceInit::CSVCMsg_VoiceInit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_VoiceInit.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_VoiceInit)
}
CSVCMsg_VoiceInit::CSVCMsg_VoiceInit(const CSVCMsg_VoiceInit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  codec_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_codec()) {
    codec_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.codec_);
  }
  ::memcpy(&quality_, &from.quality_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&quality_)) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_VoiceInit)
}

void CSVCMsg_VoiceInit::SharedCtor() {
  codec_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&quality_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&quality_)) + sizeof(version_));
}

CSVCMsg_VoiceInit::~CSVCMsg_VoiceInit() {
  // @@protoc_insertion_point(destructor:CSVCMsg_VoiceInit)
  SharedDtor();
}

void CSVCMsg_VoiceInit::SharedDtor() {
  codec_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CSVCMsg_VoiceInit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_VoiceInit::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_VoiceInit& CSVCMsg_VoiceInit::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_VoiceInit.base);
  return *internal_default_instance();
}


void CSVCMsg_VoiceInit::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_VoiceInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    codec_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&quality_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&version_) -
        reinterpret_cast<char*>(&quality_)) + sizeof(version_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_VoiceInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_VoiceInit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 quality = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_quality();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &quality_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string codec = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_codec()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->codec().data(), static_cast<int>(this->codec().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSVCMsg_VoiceInit.codec");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 version = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_VoiceInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_VoiceInit)
  return false;
#undef DO_
}

void CSVCMsg_VoiceInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_VoiceInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 quality = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->quality(), output);
  }

  // optional string codec = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->codec().data(), static_cast<int>(this->codec().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_VoiceInit.codec");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->codec(), output);
  }

  // optional int32 version = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_VoiceInit)
}

::google::protobuf::uint8* CSVCMsg_VoiceInit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_VoiceInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 quality = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->quality(), target);
  }

  // optional string codec = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->codec().data(), static_cast<int>(this->codec().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_VoiceInit.codec");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->codec(), target);
  }

  // optional int32 version = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_VoiceInit)
  return target;
}

size_t CSVCMsg_VoiceInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_VoiceInit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string codec = 2;
    if (has_codec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->codec());
    }

    // optional int32 quality = 1;
    if (has_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->quality());
    }

    // optional int32 version = 3 [default = 0];
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->version());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_VoiceInit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_VoiceInit)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_VoiceInit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_VoiceInit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_VoiceInit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_VoiceInit)
    MergeFrom(*source);
  }
}

void CSVCMsg_VoiceInit::MergeFrom(const CSVCMsg_VoiceInit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_VoiceInit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_codec();
      codec_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.codec_);
    }
    if (cached_has_bits & 0x00000002u) {
      quality_ = from.quality_;
    }
    if (cached_has_bits & 0x00000004u) {
      version_ = from.version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSVCMsg_VoiceInit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_VoiceInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_VoiceInit::CopyFrom(const CSVCMsg_VoiceInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_VoiceInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_VoiceInit::IsInitialized() const {
  return true;
}

void CSVCMsg_VoiceInit::Swap(CSVCMsg_VoiceInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_VoiceInit::InternalSwap(CSVCMsg_VoiceInit* other) {
  using std::swap;
  codec_.Swap(&other->codec_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(quality_, other->quality_);
  swap(version_, other->version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_VoiceInit::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_Print::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_Print::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_Print::CSVCMsg_Print()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_Print.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_Print)
}
CSVCMsg_Print::CSVCMsg_Print(const CSVCMsg_Print& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_Print)
}

void CSVCMsg_Print::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CSVCMsg_Print::~CSVCMsg_Print() {
  // @@protoc_insertion_point(destructor:CSVCMsg_Print)
  SharedDtor();
}

void CSVCMsg_Print::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CSVCMsg_Print::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_Print::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_Print& CSVCMsg_Print::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_Print.base);
  return *internal_default_instance();
}


void CSVCMsg_Print::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_Print)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    text_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_Print::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_Print)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSVCMsg_Print.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_Print)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_Print)
  return false;
#undef DO_
}

void CSVCMsg_Print::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_Print)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_Print.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_Print)
}

::google::protobuf::uint8* CSVCMsg_Print::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_Print)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_Print.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_Print)
  return target;
}

size_t CSVCMsg_Print::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_Print)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string text = 1;
  if (has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_Print::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_Print)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_Print* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_Print>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_Print)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_Print)
    MergeFrom(*source);
  }
}

void CSVCMsg_Print::MergeFrom(const CSVCMsg_Print& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_Print)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_text()) {
    set_has_text();
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
}

void CSVCMsg_Print::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_Print)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_Print::CopyFrom(const CSVCMsg_Print& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_Print)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_Print::IsInitialized() const {
  return true;
}

void CSVCMsg_Print::Swap(CSVCMsg_Print* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_Print::InternalSwap(CSVCMsg_Print* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_Print::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_Sounds_sounddata_t::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_Sounds_sounddata_t::kOriginXFieldNumber;
const int CSVCMsg_Sounds_sounddata_t::kOriginYFieldNumber;
const int CSVCMsg_Sounds_sounddata_t::kOriginZFieldNumber;
const int CSVCMsg_Sounds_sounddata_t::kVolumeFieldNumber;
const int CSVCMsg_Sounds_sounddata_t::kDelayValueFieldNumber;
const int CSVCMsg_Sounds_sounddata_t::kSequenceNumberFieldNumber;
const int CSVCMsg_Sounds_sounddata_t::kEntityIndexFieldNumber;
const int CSVCMsg_Sounds_sounddata_t::kChannelFieldNumber;
const int CSVCMsg_Sounds_sounddata_t::kPitchFieldNumber;
const int CSVCMsg_Sounds_sounddata_t::kFlagsFieldNumber;
const int CSVCMsg_Sounds_sounddata_t::kSoundNumFieldNumber;
const int CSVCMsg_Sounds_sounddata_t::kSoundNumHandleFieldNumber;
const int CSVCMsg_Sounds_sounddata_t::kSpeakerEntityFieldNumber;
const int CSVCMsg_Sounds_sounddata_t::kRandomSeedFieldNumber;
const int CSVCMsg_Sounds_sounddata_t::kSoundLevelFieldNumber;
const int CSVCMsg_Sounds_sounddata_t::kIsSentenceFieldNumber;
const int CSVCMsg_Sounds_sounddata_t::kIsAmbientFieldNumber;
const int CSVCMsg_Sounds_sounddata_t::kGuidFieldNumber;
const int CSVCMsg_Sounds_sounddata_t::kSoundResourceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_Sounds_sounddata_t::CSVCMsg_Sounds_sounddata_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_Sounds_sounddata_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_Sounds.sounddata_t)
}
CSVCMsg_Sounds_sounddata_t::CSVCMsg_Sounds_sounddata_t(const CSVCMsg_Sounds_sounddata_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&origin_x_, &from.origin_x_,
    static_cast<size_t>(reinterpret_cast<char*>(&guid_) -
    reinterpret_cast<char*>(&origin_x_)) + sizeof(guid_));
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_Sounds.sounddata_t)
}

void CSVCMsg_Sounds_sounddata_t::SharedCtor() {
  ::memset(&origin_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guid_) -
      reinterpret_cast<char*>(&origin_x_)) + sizeof(guid_));
}

CSVCMsg_Sounds_sounddata_t::~CSVCMsg_Sounds_sounddata_t() {
  // @@protoc_insertion_point(destructor:CSVCMsg_Sounds.sounddata_t)
  SharedDtor();
}

void CSVCMsg_Sounds_sounddata_t::SharedDtor() {
}

void CSVCMsg_Sounds_sounddata_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_Sounds_sounddata_t::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_Sounds_sounddata_t& CSVCMsg_Sounds_sounddata_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_Sounds_sounddata_t.base);
  return *internal_default_instance();
}


void CSVCMsg_Sounds_sounddata_t::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_Sounds.sounddata_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&origin_x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&channel_) -
        reinterpret_cast<char*>(&origin_x_)) + sizeof(channel_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&pitch_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_sentence_) -
        reinterpret_cast<char*>(&pitch_)) + sizeof(is_sentence_));
  }
  if (cached_has_bits & 458752u) {
    ::memset(&is_ambient_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&guid_) -
        reinterpret_cast<char*>(&is_ambient_)) + sizeof(guid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_Sounds_sounddata_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_Sounds.sounddata_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 origin_x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_origin_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &origin_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 origin_y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_origin_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &origin_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 origin_z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_origin_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &origin_z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 volume = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_volume();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &volume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float delay_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_delay_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &delay_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 sequence_number = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_sequence_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sequence_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 entity_index = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_entity_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entity_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 channel = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_channel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 pitch = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_pitch();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pitch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 flags = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sound_num = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_sound_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sound_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 sound_num_handle = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {
          set_has_sound_num_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &sound_num_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 speaker_entity = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_speaker_entity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &speaker_entity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 random_seed = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_random_seed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &random_seed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 sound_level = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_sound_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sound_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_sentence = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_is_sentence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_sentence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_ambient = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_is_ambient();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_ambient_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 guid = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          set_has_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 sound_resource_id = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(153u /* 153 & 0xFF */)) {
          set_has_sound_resource_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &sound_resource_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_Sounds.sounddata_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_Sounds.sounddata_t)
  return false;
#undef DO_
}

void CSVCMsg_Sounds_sounddata_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_Sounds.sounddata_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 origin_x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->origin_x(), output);
  }

  // optional sint32 origin_y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->origin_y(), output);
  }

  // optional sint32 origin_z = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->origin_z(), output);
  }

  // optional uint32 volume = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->volume(), output);
  }

  // optional float delay_value = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->delay_value(), output);
  }

  // optional int32 sequence_number = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->sequence_number(), output);
  }

  // optional int32 entity_index = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->entity_index(), output);
  }

  // optional int32 channel = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->channel(), output);
  }

  // optional int32 pitch = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->pitch(), output);
  }

  // optional int32 flags = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->flags(), output);
  }

  // optional uint32 sound_num = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->sound_num(), output);
  }

  // optional fixed32 sound_num_handle = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(12, this->sound_num_handle(), output);
  }

  // optional int32 speaker_entity = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->speaker_entity(), output);
  }

  // optional int32 random_seed = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->random_seed(), output);
  }

  // optional int32 sound_level = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->sound_level(), output);
  }

  // optional bool is_sentence = 16;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->is_sentence(), output);
  }

  // optional bool is_ambient = 17;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->is_ambient(), output);
  }

  // optional uint32 guid = 18;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->guid(), output);
  }

  // optional fixed64 sound_resource_id = 19;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(19, this->sound_resource_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_Sounds.sounddata_t)
}

::google::protobuf::uint8* CSVCMsg_Sounds_sounddata_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_Sounds.sounddata_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 origin_x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->origin_x(), target);
  }

  // optional sint32 origin_y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->origin_y(), target);
  }

  // optional sint32 origin_z = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->origin_z(), target);
  }

  // optional uint32 volume = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->volume(), target);
  }

  // optional float delay_value = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->delay_value(), target);
  }

  // optional int32 sequence_number = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->sequence_number(), target);
  }

  // optional int32 entity_index = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->entity_index(), target);
  }

  // optional int32 channel = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->channel(), target);
  }

  // optional int32 pitch = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->pitch(), target);
  }

  // optional int32 flags = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->flags(), target);
  }

  // optional uint32 sound_num = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->sound_num(), target);
  }

  // optional fixed32 sound_num_handle = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(12, this->sound_num_handle(), target);
  }

  // optional int32 speaker_entity = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->speaker_entity(), target);
  }

  // optional int32 random_seed = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->random_seed(), target);
  }

  // optional int32 sound_level = 15;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->sound_level(), target);
  }

  // optional bool is_sentence = 16;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->is_sentence(), target);
  }

  // optional bool is_ambient = 17;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->is_ambient(), target);
  }

  // optional uint32 guid = 18;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->guid(), target);
  }

  // optional fixed64 sound_resource_id = 19;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(19, this->sound_resource_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_Sounds.sounddata_t)
  return target;
}

size_t CSVCMsg_Sounds_sounddata_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_Sounds.sounddata_t)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional sint32 origin_x = 1;
    if (has_origin_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->origin_x());
    }

    // optional sint32 origin_y = 2;
    if (has_origin_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->origin_y());
    }

    // optional sint32 origin_z = 3;
    if (has_origin_z()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->origin_z());
    }

    // optional uint32 volume = 4;
    if (has_volume()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->volume());
    }

    // optional float delay_value = 5;
    if (has_delay_value()) {
      total_size += 1 + 4;
    }

    // optional int32 sequence_number = 6;
    if (has_sequence_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sequence_number());
    }

    // optional int32 entity_index = 7;
    if (has_entity_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entity_index());
    }

    // optional int32 channel = 8;
    if (has_channel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->channel());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional int32 pitch = 9;
    if (has_pitch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pitch());
    }

    // optional int32 flags = 10;
    if (has_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flags());
    }

    // optional uint32 sound_num = 11;
    if (has_sound_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sound_num());
    }

    // optional fixed32 sound_num_handle = 12;
    if (has_sound_num_handle()) {
      total_size += 1 + 4;
    }

    // optional int32 speaker_entity = 13;
    if (has_speaker_entity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->speaker_entity());
    }

    // optional int32 random_seed = 14;
    if (has_random_seed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->random_seed());
    }

    // optional int32 sound_level = 15;
    if (has_sound_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sound_level());
    }

    // optional bool is_sentence = 16;
    if (has_is_sentence()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[16 / 32] & 458752u) {
    // optional bool is_ambient = 17;
    if (has_is_ambient()) {
      total_size += 2 + 1;
    }

    // optional fixed64 sound_resource_id = 19;
    if (has_sound_resource_id()) {
      total_size += 2 + 8;
    }

    // optional uint32 guid = 18;
    if (has_guid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->guid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_Sounds_sounddata_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_Sounds.sounddata_t)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_Sounds_sounddata_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_Sounds_sounddata_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_Sounds.sounddata_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_Sounds.sounddata_t)
    MergeFrom(*source);
  }
}

void CSVCMsg_Sounds_sounddata_t::MergeFrom(const CSVCMsg_Sounds_sounddata_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_Sounds.sounddata_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      origin_x_ = from.origin_x_;
    }
    if (cached_has_bits & 0x00000002u) {
      origin_y_ = from.origin_y_;
    }
    if (cached_has_bits & 0x00000004u) {
      origin_z_ = from.origin_z_;
    }
    if (cached_has_bits & 0x00000008u) {
      volume_ = from.volume_;
    }
    if (cached_has_bits & 0x00000010u) {
      delay_value_ = from.delay_value_;
    }
    if (cached_has_bits & 0x00000020u) {
      sequence_number_ = from.sequence_number_;
    }
    if (cached_has_bits & 0x00000040u) {
      entity_index_ = from.entity_index_;
    }
    if (cached_has_bits & 0x00000080u) {
      channel_ = from.channel_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      pitch_ = from.pitch_;
    }
    if (cached_has_bits & 0x00000200u) {
      flags_ = from.flags_;
    }
    if (cached_has_bits & 0x00000400u) {
      sound_num_ = from.sound_num_;
    }
    if (cached_has_bits & 0x00000800u) {
      sound_num_handle_ = from.sound_num_handle_;
    }
    if (cached_has_bits & 0x00001000u) {
      speaker_entity_ = from.speaker_entity_;
    }
    if (cached_has_bits & 0x00002000u) {
      random_seed_ = from.random_seed_;
    }
    if (cached_has_bits & 0x00004000u) {
      sound_level_ = from.sound_level_;
    }
    if (cached_has_bits & 0x00008000u) {
      is_sentence_ = from.is_sentence_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 458752u) {
    if (cached_has_bits & 0x00010000u) {
      is_ambient_ = from.is_ambient_;
    }
    if (cached_has_bits & 0x00020000u) {
      sound_resource_id_ = from.sound_resource_id_;
    }
    if (cached_has_bits & 0x00040000u) {
      guid_ = from.guid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSVCMsg_Sounds_sounddata_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_Sounds.sounddata_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_Sounds_sounddata_t::CopyFrom(const CSVCMsg_Sounds_sounddata_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_Sounds.sounddata_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_Sounds_sounddata_t::IsInitialized() const {
  return true;
}

void CSVCMsg_Sounds_sounddata_t::Swap(CSVCMsg_Sounds_sounddata_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_Sounds_sounddata_t::InternalSwap(CSVCMsg_Sounds_sounddata_t* other) {
  using std::swap;
  swap(origin_x_, other->origin_x_);
  swap(origin_y_, other->origin_y_);
  swap(origin_z_, other->origin_z_);
  swap(volume_, other->volume_);
  swap(delay_value_, other->delay_value_);
  swap(sequence_number_, other->sequence_number_);
  swap(entity_index_, other->entity_index_);
  swap(channel_, other->channel_);
  swap(pitch_, other->pitch_);
  swap(flags_, other->flags_);
  swap(sound_num_, other->sound_num_);
  swap(sound_num_handle_, other->sound_num_handle_);
  swap(speaker_entity_, other->speaker_entity_);
  swap(random_seed_, other->random_seed_);
  swap(sound_level_, other->sound_level_);
  swap(is_sentence_, other->is_sentence_);
  swap(is_ambient_, other->is_ambient_);
  swap(sound_resource_id_, other->sound_resource_id_);
  swap(guid_, other->guid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_Sounds_sounddata_t::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_Sounds::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_Sounds::kReliableSoundFieldNumber;
const int CSVCMsg_Sounds::kSoundsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_Sounds::CSVCMsg_Sounds()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_Sounds.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_Sounds)
}
CSVCMsg_Sounds::CSVCMsg_Sounds(const CSVCMsg_Sounds& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      sounds_(from.sounds_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reliable_sound_ = from.reliable_sound_;
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_Sounds)
}

void CSVCMsg_Sounds::SharedCtor() {
  reliable_sound_ = false;
}

CSVCMsg_Sounds::~CSVCMsg_Sounds() {
  // @@protoc_insertion_point(destructor:CSVCMsg_Sounds)
  SharedDtor();
}

void CSVCMsg_Sounds::SharedDtor() {
}

void CSVCMsg_Sounds::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_Sounds::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_Sounds& CSVCMsg_Sounds::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_Sounds.base);
  return *internal_default_instance();
}


void CSVCMsg_Sounds::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_Sounds)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sounds_.Clear();
  reliable_sound_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_Sounds::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_Sounds)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool reliable_sound = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_reliable_sound();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reliable_sound_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CSVCMsg_Sounds.sounddata_t sounds = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sounds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_Sounds)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_Sounds)
  return false;
#undef DO_
}

void CSVCMsg_Sounds::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_Sounds)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool reliable_sound = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->reliable_sound(), output);
  }

  // repeated .CSVCMsg_Sounds.sounddata_t sounds = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sounds_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->sounds(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_Sounds)
}

::google::protobuf::uint8* CSVCMsg_Sounds::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_Sounds)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool reliable_sound = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->reliable_sound(), target);
  }

  // repeated .CSVCMsg_Sounds.sounddata_t sounds = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sounds_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->sounds(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_Sounds)
  return target;
}

size_t CSVCMsg_Sounds::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_Sounds)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CSVCMsg_Sounds.sounddata_t sounds = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->sounds_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sounds(static_cast<int>(i)));
    }
  }

  // optional bool reliable_sound = 1;
  if (has_reliable_sound()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_Sounds::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_Sounds)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_Sounds* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_Sounds>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_Sounds)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_Sounds)
    MergeFrom(*source);
  }
}

void CSVCMsg_Sounds::MergeFrom(const CSVCMsg_Sounds& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_Sounds)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sounds_.MergeFrom(from.sounds_);
  if (from.has_reliable_sound()) {
    set_reliable_sound(from.reliable_sound());
  }
}

void CSVCMsg_Sounds::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_Sounds)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_Sounds::CopyFrom(const CSVCMsg_Sounds& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_Sounds)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_Sounds::IsInitialized() const {
  return true;
}

void CSVCMsg_Sounds::Swap(CSVCMsg_Sounds* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_Sounds::InternalSwap(CSVCMsg_Sounds* other) {
  using std::swap;
  CastToBase(&sounds_)->InternalSwap(CastToBase(&other->sounds_));
  swap(reliable_sound_, other->reliable_sound_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_Sounds::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_Prefetch::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_Prefetch::kSoundIndexFieldNumber;
const int CSVCMsg_Prefetch::kResourceTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_Prefetch::CSVCMsg_Prefetch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_Prefetch.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_Prefetch)
}
CSVCMsg_Prefetch::CSVCMsg_Prefetch(const CSVCMsg_Prefetch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sound_index_, &from.sound_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&resource_type_) -
    reinterpret_cast<char*>(&sound_index_)) + sizeof(resource_type_));
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_Prefetch)
}

void CSVCMsg_Prefetch::SharedCtor() {
  ::memset(&sound_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resource_type_) -
      reinterpret_cast<char*>(&sound_index_)) + sizeof(resource_type_));
}

CSVCMsg_Prefetch::~CSVCMsg_Prefetch() {
  // @@protoc_insertion_point(destructor:CSVCMsg_Prefetch)
  SharedDtor();
}

void CSVCMsg_Prefetch::SharedDtor() {
}

void CSVCMsg_Prefetch::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_Prefetch::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_Prefetch& CSVCMsg_Prefetch::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_Prefetch.base);
  return *internal_default_instance();
}


void CSVCMsg_Prefetch::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_Prefetch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&sound_index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&resource_type_) -
        reinterpret_cast<char*>(&sound_index_)) + sizeof(resource_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_Prefetch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_Prefetch)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 sound_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_sound_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sound_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PrefetchType resource_type = 2 [default = PFT_SOUND];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PrefetchType_IsValid(value)) {
            set_resource_type(static_cast< ::PrefetchType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_Prefetch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_Prefetch)
  return false;
#undef DO_
}

void CSVCMsg_Prefetch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_Prefetch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 sound_index = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sound_index(), output);
  }

  // optional .PrefetchType resource_type = 2 [default = PFT_SOUND];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->resource_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_Prefetch)
}

::google::protobuf::uint8* CSVCMsg_Prefetch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_Prefetch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 sound_index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sound_index(), target);
  }

  // optional .PrefetchType resource_type = 2 [default = PFT_SOUND];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->resource_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_Prefetch)
  return target;
}

size_t CSVCMsg_Prefetch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_Prefetch)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 sound_index = 1;
    if (has_sound_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sound_index());
    }

    // optional .PrefetchType resource_type = 2 [default = PFT_SOUND];
    if (has_resource_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->resource_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_Prefetch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_Prefetch)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_Prefetch* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_Prefetch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_Prefetch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_Prefetch)
    MergeFrom(*source);
  }
}

void CSVCMsg_Prefetch::MergeFrom(const CSVCMsg_Prefetch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_Prefetch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      sound_index_ = from.sound_index_;
    }
    if (cached_has_bits & 0x00000002u) {
      resource_type_ = from.resource_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSVCMsg_Prefetch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_Prefetch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_Prefetch::CopyFrom(const CSVCMsg_Prefetch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_Prefetch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_Prefetch::IsInitialized() const {
  return true;
}

void CSVCMsg_Prefetch::Swap(CSVCMsg_Prefetch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_Prefetch::InternalSwap(CSVCMsg_Prefetch* other) {
  using std::swap;
  swap(sound_index_, other->sound_index_);
  swap(resource_type_, other->resource_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_Prefetch::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_SetView::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_SetView::kEntityIndexFieldNumber;
const int CSVCMsg_SetView::kSlotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_SetView::CSVCMsg_SetView()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_SetView.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_SetView)
}
CSVCMsg_SetView::CSVCMsg_SetView(const CSVCMsg_SetView& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&entity_index_, &from.entity_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&slot_) -
    reinterpret_cast<char*>(&entity_index_)) + sizeof(slot_));
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_SetView)
}

void CSVCMsg_SetView::SharedCtor() {
  ::memset(&entity_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&slot_) -
      reinterpret_cast<char*>(&entity_index_)) + sizeof(slot_));
}

CSVCMsg_SetView::~CSVCMsg_SetView() {
  // @@protoc_insertion_point(destructor:CSVCMsg_SetView)
  SharedDtor();
}

void CSVCMsg_SetView::SharedDtor() {
}

void CSVCMsg_SetView::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_SetView::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_SetView& CSVCMsg_SetView::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_SetView.base);
  return *internal_default_instance();
}


void CSVCMsg_SetView::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_SetView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&entity_index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&slot_) -
        reinterpret_cast<char*>(&entity_index_)) + sizeof(slot_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_SetView::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_SetView)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 entity_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_entity_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entity_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 slot = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_slot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_SetView)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_SetView)
  return false;
#undef DO_
}

void CSVCMsg_SetView::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_SetView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 entity_index = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->entity_index(), output);
  }

  // optional int32 slot = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->slot(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_SetView)
}

::google::protobuf::uint8* CSVCMsg_SetView::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_SetView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 entity_index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->entity_index(), target);
  }

  // optional int32 slot = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->slot(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_SetView)
  return target;
}

size_t CSVCMsg_SetView::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_SetView)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 entity_index = 1;
    if (has_entity_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entity_index());
    }

    // optional int32 slot = 2;
    if (has_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slot());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_SetView::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_SetView)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_SetView* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_SetView>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_SetView)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_SetView)
    MergeFrom(*source);
  }
}

void CSVCMsg_SetView::MergeFrom(const CSVCMsg_SetView& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_SetView)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      entity_index_ = from.entity_index_;
    }
    if (cached_has_bits & 0x00000002u) {
      slot_ = from.slot_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSVCMsg_SetView::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_SetView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_SetView::CopyFrom(const CSVCMsg_SetView& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_SetView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_SetView::IsInitialized() const {
  return true;
}

void CSVCMsg_SetView::Swap(CSVCMsg_SetView* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_SetView::InternalSwap(CSVCMsg_SetView* other) {
  using std::swap;
  swap(entity_index_, other->entity_index_);
  swap(slot_, other->slot_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_SetView::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_FixAngle::InitAsDefaultInstance() {
  ::_CSVCMsg_FixAngle_default_instance_._instance.get_mutable()->angle_ = const_cast< ::CMsgQAngle*>(
      ::CMsgQAngle::internal_default_instance());
}
void CSVCMsg_FixAngle::clear_angle() {
  if (angle_ != NULL) angle_->Clear();
  clear_has_angle();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_FixAngle::kRelativeFieldNumber;
const int CSVCMsg_FixAngle::kAngleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_FixAngle::CSVCMsg_FixAngle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_FixAngle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_FixAngle)
}
CSVCMsg_FixAngle::CSVCMsg_FixAngle(const CSVCMsg_FixAngle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_angle()) {
    angle_ = new ::CMsgQAngle(*from.angle_);
  } else {
    angle_ = NULL;
  }
  relative_ = from.relative_;
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_FixAngle)
}

void CSVCMsg_FixAngle::SharedCtor() {
  ::memset(&angle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&relative_) -
      reinterpret_cast<char*>(&angle_)) + sizeof(relative_));
}

CSVCMsg_FixAngle::~CSVCMsg_FixAngle() {
  // @@protoc_insertion_point(destructor:CSVCMsg_FixAngle)
  SharedDtor();
}

void CSVCMsg_FixAngle::SharedDtor() {
  if (this != internal_default_instance()) delete angle_;
}

void CSVCMsg_FixAngle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_FixAngle::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_FixAngle& CSVCMsg_FixAngle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_FixAngle.base);
  return *internal_default_instance();
}


void CSVCMsg_FixAngle::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_FixAngle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(angle_ != NULL);
    angle_->Clear();
  }
  relative_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_FixAngle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_FixAngle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool relative = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_relative();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &relative_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgQAngle angle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_angle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_FixAngle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_FixAngle)
  return false;
#undef DO_
}

void CSVCMsg_FixAngle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_FixAngle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool relative = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->relative(), output);
  }

  // optional .CMsgQAngle angle = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_angle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_FixAngle)
}

::google::protobuf::uint8* CSVCMsg_FixAngle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_FixAngle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool relative = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->relative(), target);
  }

  // optional .CMsgQAngle angle = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_angle(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_FixAngle)
  return target;
}

size_t CSVCMsg_FixAngle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_FixAngle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .CMsgQAngle angle = 2;
    if (has_angle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *angle_);
    }

    // optional bool relative = 1;
    if (has_relative()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_FixAngle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_FixAngle)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_FixAngle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_FixAngle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_FixAngle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_FixAngle)
    MergeFrom(*source);
  }
}

void CSVCMsg_FixAngle::MergeFrom(const CSVCMsg_FixAngle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_FixAngle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_angle()->::CMsgQAngle::MergeFrom(from.angle());
    }
    if (cached_has_bits & 0x00000002u) {
      relative_ = from.relative_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSVCMsg_FixAngle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_FixAngle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_FixAngle::CopyFrom(const CSVCMsg_FixAngle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_FixAngle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_FixAngle::IsInitialized() const {
  return true;
}

void CSVCMsg_FixAngle::Swap(CSVCMsg_FixAngle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_FixAngle::InternalSwap(CSVCMsg_FixAngle* other) {
  using std::swap;
  swap(angle_, other->angle_);
  swap(relative_, other->relative_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_FixAngle::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_CrosshairAngle::InitAsDefaultInstance() {
  ::_CSVCMsg_CrosshairAngle_default_instance_._instance.get_mutable()->angle_ = const_cast< ::CMsgQAngle*>(
      ::CMsgQAngle::internal_default_instance());
}
void CSVCMsg_CrosshairAngle::clear_angle() {
  if (angle_ != NULL) angle_->Clear();
  clear_has_angle();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_CrosshairAngle::kAngleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_CrosshairAngle::CSVCMsg_CrosshairAngle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_CrosshairAngle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_CrosshairAngle)
}
CSVCMsg_CrosshairAngle::CSVCMsg_CrosshairAngle(const CSVCMsg_CrosshairAngle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_angle()) {
    angle_ = new ::CMsgQAngle(*from.angle_);
  } else {
    angle_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_CrosshairAngle)
}

void CSVCMsg_CrosshairAngle::SharedCtor() {
  angle_ = NULL;
}

CSVCMsg_CrosshairAngle::~CSVCMsg_CrosshairAngle() {
  // @@protoc_insertion_point(destructor:CSVCMsg_CrosshairAngle)
  SharedDtor();
}

void CSVCMsg_CrosshairAngle::SharedDtor() {
  if (this != internal_default_instance()) delete angle_;
}

void CSVCMsg_CrosshairAngle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_CrosshairAngle::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_CrosshairAngle& CSVCMsg_CrosshairAngle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_CrosshairAngle.base);
  return *internal_default_instance();
}


void CSVCMsg_CrosshairAngle::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_CrosshairAngle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(angle_ != NULL);
    angle_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_CrosshairAngle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_CrosshairAngle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsgQAngle angle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_angle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_CrosshairAngle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_CrosshairAngle)
  return false;
#undef DO_
}

void CSVCMsg_CrosshairAngle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_CrosshairAngle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgQAngle angle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_angle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_CrosshairAngle)
}

::google::protobuf::uint8* CSVCMsg_CrosshairAngle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_CrosshairAngle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgQAngle angle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_angle(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_CrosshairAngle)
  return target;
}

size_t CSVCMsg_CrosshairAngle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_CrosshairAngle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .CMsgQAngle angle = 1;
  if (has_angle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *angle_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_CrosshairAngle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_CrosshairAngle)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_CrosshairAngle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_CrosshairAngle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_CrosshairAngle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_CrosshairAngle)
    MergeFrom(*source);
  }
}

void CSVCMsg_CrosshairAngle::MergeFrom(const CSVCMsg_CrosshairAngle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_CrosshairAngle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_angle()) {
    mutable_angle()->::CMsgQAngle::MergeFrom(from.angle());
  }
}

void CSVCMsg_CrosshairAngle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_CrosshairAngle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_CrosshairAngle::CopyFrom(const CSVCMsg_CrosshairAngle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_CrosshairAngle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_CrosshairAngle::IsInitialized() const {
  return true;
}

void CSVCMsg_CrosshairAngle::Swap(CSVCMsg_CrosshairAngle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_CrosshairAngle::InternalSwap(CSVCMsg_CrosshairAngle* other) {
  using std::swap;
  swap(angle_, other->angle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_CrosshairAngle::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_BSPDecal::InitAsDefaultInstance() {
  ::_CSVCMsg_BSPDecal_default_instance_._instance.get_mutable()->pos_ = const_cast< ::CMsgVector*>(
      ::CMsgVector::internal_default_instance());
}
void CSVCMsg_BSPDecal::clear_pos() {
  if (pos_ != NULL) pos_->Clear();
  clear_has_pos();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_BSPDecal::kPosFieldNumber;
const int CSVCMsg_BSPDecal::kDecalTextureIndexFieldNumber;
const int CSVCMsg_BSPDecal::kEntityIndexFieldNumber;
const int CSVCMsg_BSPDecal::kModelIndexFieldNumber;
const int CSVCMsg_BSPDecal::kLowPriorityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_BSPDecal::CSVCMsg_BSPDecal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_BSPDecal.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_BSPDecal)
}
CSVCMsg_BSPDecal::CSVCMsg_BSPDecal(const CSVCMsg_BSPDecal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::CMsgVector(*from.pos_);
  } else {
    pos_ = NULL;
  }
  ::memcpy(&decal_texture_index_, &from.decal_texture_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&low_priority_) -
    reinterpret_cast<char*>(&decal_texture_index_)) + sizeof(low_priority_));
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_BSPDecal)
}

void CSVCMsg_BSPDecal::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&low_priority_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(low_priority_));
}

CSVCMsg_BSPDecal::~CSVCMsg_BSPDecal() {
  // @@protoc_insertion_point(destructor:CSVCMsg_BSPDecal)
  SharedDtor();
}

void CSVCMsg_BSPDecal::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
}

void CSVCMsg_BSPDecal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_BSPDecal::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_BSPDecal& CSVCMsg_BSPDecal::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_BSPDecal.base);
  return *internal_default_instance();
}


void CSVCMsg_BSPDecal::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_BSPDecal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(pos_ != NULL);
    pos_->Clear();
  }
  if (cached_has_bits & 30u) {
    ::memset(&decal_texture_index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&low_priority_) -
        reinterpret_cast<char*>(&decal_texture_index_)) + sizeof(low_priority_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_BSPDecal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_BSPDecal)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsgVector pos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 decal_texture_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_decal_texture_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &decal_texture_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 entity_index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_entity_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entity_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 model_index = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_model_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &model_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool low_priority = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_low_priority();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &low_priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_BSPDecal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_BSPDecal)
  return false;
#undef DO_
}

void CSVCMsg_BSPDecal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_BSPDecal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgVector pos = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pos(), output);
  }

  // optional int32 decal_texture_index = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->decal_texture_index(), output);
  }

  // optional int32 entity_index = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->entity_index(), output);
  }

  // optional int32 model_index = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->model_index(), output);
  }

  // optional bool low_priority = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->low_priority(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_BSPDecal)
}

::google::protobuf::uint8* CSVCMsg_BSPDecal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_BSPDecal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgVector pos = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pos(), deterministic, target);
  }

  // optional int32 decal_texture_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->decal_texture_index(), target);
  }

  // optional int32 entity_index = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->entity_index(), target);
  }

  // optional int32 model_index = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->model_index(), target);
  }

  // optional bool low_priority = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->low_priority(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_BSPDecal)
  return target;
}

size_t CSVCMsg_BSPDecal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_BSPDecal)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional .CMsgVector pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pos_);
    }

    // optional int32 decal_texture_index = 2;
    if (has_decal_texture_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->decal_texture_index());
    }

    // optional int32 entity_index = 3;
    if (has_entity_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entity_index());
    }

    // optional int32 model_index = 4;
    if (has_model_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->model_index());
    }

    // optional bool low_priority = 5;
    if (has_low_priority()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_BSPDecal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_BSPDecal)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_BSPDecal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_BSPDecal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_BSPDecal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_BSPDecal)
    MergeFrom(*source);
  }
}

void CSVCMsg_BSPDecal::MergeFrom(const CSVCMsg_BSPDecal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_BSPDecal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pos()->::CMsgVector::MergeFrom(from.pos());
    }
    if (cached_has_bits & 0x00000002u) {
      decal_texture_index_ = from.decal_texture_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      entity_index_ = from.entity_index_;
    }
    if (cached_has_bits & 0x00000008u) {
      model_index_ = from.model_index_;
    }
    if (cached_has_bits & 0x00000010u) {
      low_priority_ = from.low_priority_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSVCMsg_BSPDecal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_BSPDecal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_BSPDecal::CopyFrom(const CSVCMsg_BSPDecal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_BSPDecal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_BSPDecal::IsInitialized() const {
  return true;
}

void CSVCMsg_BSPDecal::Swap(CSVCMsg_BSPDecal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_BSPDecal::InternalSwap(CSVCMsg_BSPDecal* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(decal_texture_index_, other->decal_texture_index_);
  swap(entity_index_, other->entity_index_);
  swap(model_index_, other->model_index_);
  swap(low_priority_, other->low_priority_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_BSPDecal::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_SplitScreen::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_SplitScreen::kTypeFieldNumber;
const int CSVCMsg_SplitScreen::kSlotFieldNumber;
const int CSVCMsg_SplitScreen::kPlayerIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_SplitScreen::CSVCMsg_SplitScreen()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_SplitScreen.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_SplitScreen)
}
CSVCMsg_SplitScreen::CSVCMsg_SplitScreen(const CSVCMsg_SplitScreen& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&player_index_) -
    reinterpret_cast<char*>(&type_)) + sizeof(player_index_));
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_SplitScreen)
}

void CSVCMsg_SplitScreen::SharedCtor() {
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_index_) -
      reinterpret_cast<char*>(&type_)) + sizeof(player_index_));
}

CSVCMsg_SplitScreen::~CSVCMsg_SplitScreen() {
  // @@protoc_insertion_point(destructor:CSVCMsg_SplitScreen)
  SharedDtor();
}

void CSVCMsg_SplitScreen::SharedDtor() {
}

void CSVCMsg_SplitScreen::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_SplitScreen::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_SplitScreen& CSVCMsg_SplitScreen::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_SplitScreen.base);
  return *internal_default_instance();
}


void CSVCMsg_SplitScreen::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_SplitScreen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&player_index_) -
        reinterpret_cast<char*>(&type_)) + sizeof(player_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_SplitScreen::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_SplitScreen)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ESplitScreenMessageType type = 1 [default = MSG_SPLITSCREEN_ADDUSER];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ESplitScreenMessageType_IsValid(value)) {
            set_type(static_cast< ::ESplitScreenMessageType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 slot = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_slot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 player_index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_player_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_SplitScreen)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_SplitScreen)
  return false;
#undef DO_
}

void CSVCMsg_SplitScreen::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_SplitScreen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ESplitScreenMessageType type = 1 [default = MSG_SPLITSCREEN_ADDUSER];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional int32 slot = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->slot(), output);
  }

  // optional int32 player_index = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->player_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_SplitScreen)
}

::google::protobuf::uint8* CSVCMsg_SplitScreen::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_SplitScreen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ESplitScreenMessageType type = 1 [default = MSG_SPLITSCREEN_ADDUSER];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional int32 slot = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->slot(), target);
  }

  // optional int32 player_index = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->player_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_SplitScreen)
  return target;
}

size_t CSVCMsg_SplitScreen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_SplitScreen)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .ESplitScreenMessageType type = 1 [default = MSG_SPLITSCREEN_ADDUSER];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional int32 slot = 2;
    if (has_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slot());
    }

    // optional int32 player_index = 3;
    if (has_player_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_SplitScreen::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_SplitScreen)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_SplitScreen* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_SplitScreen>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_SplitScreen)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_SplitScreen)
    MergeFrom(*source);
  }
}

void CSVCMsg_SplitScreen::MergeFrom(const CSVCMsg_SplitScreen& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_SplitScreen)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000002u) {
      slot_ = from.slot_;
    }
    if (cached_has_bits & 0x00000004u) {
      player_index_ = from.player_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSVCMsg_SplitScreen::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_SplitScreen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_SplitScreen::CopyFrom(const CSVCMsg_SplitScreen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_SplitScreen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_SplitScreen::IsInitialized() const {
  return true;
}

void CSVCMsg_SplitScreen::Swap(CSVCMsg_SplitScreen* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_SplitScreen::InternalSwap(CSVCMsg_SplitScreen* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(slot_, other->slot_);
  swap(player_index_, other->player_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_SplitScreen::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_GetCvarValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_GetCvarValue::kCookieFieldNumber;
const int CSVCMsg_GetCvarValue::kCvarNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_GetCvarValue::CSVCMsg_GetCvarValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_GetCvarValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_GetCvarValue)
}
CSVCMsg_GetCvarValue::CSVCMsg_GetCvarValue(const CSVCMsg_GetCvarValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cvar_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cvar_name()) {
    cvar_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cvar_name_);
  }
  cookie_ = from.cookie_;
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_GetCvarValue)
}

void CSVCMsg_GetCvarValue::SharedCtor() {
  cvar_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cookie_ = 0;
}

CSVCMsg_GetCvarValue::~CSVCMsg_GetCvarValue() {
  // @@protoc_insertion_point(destructor:CSVCMsg_GetCvarValue)
  SharedDtor();
}

void CSVCMsg_GetCvarValue::SharedDtor() {
  cvar_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CSVCMsg_GetCvarValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_GetCvarValue::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_GetCvarValue& CSVCMsg_GetCvarValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_GetCvarValue.base);
  return *internal_default_instance();
}


void CSVCMsg_GetCvarValue::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_GetCvarValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    cvar_name_.ClearNonDefaultToEmptyNoArena();
  }
  cookie_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_GetCvarValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_GetCvarValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cookie = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_cookie();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cookie_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string cvar_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cvar_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cvar_name().data(), static_cast<int>(this->cvar_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSVCMsg_GetCvarValue.cvar_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_GetCvarValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_GetCvarValue)
  return false;
#undef DO_
}

void CSVCMsg_GetCvarValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_GetCvarValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 cookie = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cookie(), output);
  }

  // optional string cvar_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cvar_name().data(), static_cast<int>(this->cvar_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_GetCvarValue.cvar_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cvar_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_GetCvarValue)
}

::google::protobuf::uint8* CSVCMsg_GetCvarValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_GetCvarValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 cookie = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cookie(), target);
  }

  // optional string cvar_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cvar_name().data(), static_cast<int>(this->cvar_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_GetCvarValue.cvar_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cvar_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_GetCvarValue)
  return target;
}

size_t CSVCMsg_GetCvarValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_GetCvarValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string cvar_name = 2;
    if (has_cvar_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cvar_name());
    }

    // optional int32 cookie = 1;
    if (has_cookie()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cookie());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_GetCvarValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_GetCvarValue)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_GetCvarValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_GetCvarValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_GetCvarValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_GetCvarValue)
    MergeFrom(*source);
  }
}

void CSVCMsg_GetCvarValue::MergeFrom(const CSVCMsg_GetCvarValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_GetCvarValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_cvar_name();
      cvar_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cvar_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      cookie_ = from.cookie_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSVCMsg_GetCvarValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_GetCvarValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_GetCvarValue::CopyFrom(const CSVCMsg_GetCvarValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_GetCvarValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_GetCvarValue::IsInitialized() const {
  return true;
}

void CSVCMsg_GetCvarValue::Swap(CSVCMsg_GetCvarValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_GetCvarValue::InternalSwap(CSVCMsg_GetCvarValue* other) {
  using std::swap;
  cvar_name_.Swap(&other->cvar_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cookie_, other->cookie_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_GetCvarValue::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_Menu::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_Menu::kDialogTypeFieldNumber;
const int CSVCMsg_Menu::kMenuKeyValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_Menu::CSVCMsg_Menu()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_Menu.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_Menu)
}
CSVCMsg_Menu::CSVCMsg_Menu(const CSVCMsg_Menu& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  menu_key_values_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_menu_key_values()) {
    menu_key_values_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.menu_key_values_);
  }
  dialog_type_ = from.dialog_type_;
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_Menu)
}

void CSVCMsg_Menu::SharedCtor() {
  menu_key_values_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dialog_type_ = 0;
}

CSVCMsg_Menu::~CSVCMsg_Menu() {
  // @@protoc_insertion_point(destructor:CSVCMsg_Menu)
  SharedDtor();
}

void CSVCMsg_Menu::SharedDtor() {
  menu_key_values_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CSVCMsg_Menu::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_Menu::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_Menu& CSVCMsg_Menu::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_Menu.base);
  return *internal_default_instance();
}


void CSVCMsg_Menu::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_Menu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    menu_key_values_.ClearNonDefaultToEmptyNoArena();
  }
  dialog_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_Menu::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_Menu)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 dialog_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dialog_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dialog_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes menu_key_values = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_menu_key_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_Menu)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_Menu)
  return false;
#undef DO_
}

void CSVCMsg_Menu::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_Menu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 dialog_type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dialog_type(), output);
  }

  // optional bytes menu_key_values = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->menu_key_values(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_Menu)
}

::google::protobuf::uint8* CSVCMsg_Menu::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_Menu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 dialog_type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dialog_type(), target);
  }

  // optional bytes menu_key_values = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->menu_key_values(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_Menu)
  return target;
}

size_t CSVCMsg_Menu::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_Menu)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes menu_key_values = 2;
    if (has_menu_key_values()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->menu_key_values());
    }

    // optional int32 dialog_type = 1;
    if (has_dialog_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dialog_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_Menu::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_Menu)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_Menu* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_Menu>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_Menu)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_Menu)
    MergeFrom(*source);
  }
}

void CSVCMsg_Menu::MergeFrom(const CSVCMsg_Menu& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_Menu)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_menu_key_values();
      menu_key_values_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.menu_key_values_);
    }
    if (cached_has_bits & 0x00000002u) {
      dialog_type_ = from.dialog_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSVCMsg_Menu::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_Menu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_Menu::CopyFrom(const CSVCMsg_Menu& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_Menu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_Menu::IsInitialized() const {
  return true;
}

void CSVCMsg_Menu::Swap(CSVCMsg_Menu* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_Menu::InternalSwap(CSVCMsg_Menu* other) {
  using std::swap;
  menu_key_values_.Swap(&other->menu_key_values_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(dialog_type_, other->dialog_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_Menu::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_SendTable_sendprop_t::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_SendTable_sendprop_t::kTypeFieldNumber;
const int CSVCMsg_SendTable_sendprop_t::kVarNameFieldNumber;
const int CSVCMsg_SendTable_sendprop_t::kFlagsFieldNumber;
const int CSVCMsg_SendTable_sendprop_t::kPriorityFieldNumber;
const int CSVCMsg_SendTable_sendprop_t::kDtNameFieldNumber;
const int CSVCMsg_SendTable_sendprop_t::kNumElementsFieldNumber;
const int CSVCMsg_SendTable_sendprop_t::kLowValueFieldNumber;
const int CSVCMsg_SendTable_sendprop_t::kHighValueFieldNumber;
const int CSVCMsg_SendTable_sendprop_t::kNumBitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_SendTable_sendprop_t::CSVCMsg_SendTable_sendprop_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_SendTable_sendprop_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_SendTable.sendprop_t)
}
CSVCMsg_SendTable_sendprop_t::CSVCMsg_SendTable_sendprop_t(const CSVCMsg_SendTable_sendprop_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  var_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_var_name()) {
    var_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.var_name_);
  }
  dt_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dt_name()) {
    dt_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dt_name_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_bits_) -
    reinterpret_cast<char*>(&type_)) + sizeof(num_bits_));
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_SendTable.sendprop_t)
}

void CSVCMsg_SendTable_sendprop_t::SharedCtor() {
  var_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dt_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_bits_) -
      reinterpret_cast<char*>(&type_)) + sizeof(num_bits_));
}

CSVCMsg_SendTable_sendprop_t::~CSVCMsg_SendTable_sendprop_t() {
  // @@protoc_insertion_point(destructor:CSVCMsg_SendTable.sendprop_t)
  SharedDtor();
}

void CSVCMsg_SendTable_sendprop_t::SharedDtor() {
  var_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dt_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CSVCMsg_SendTable_sendprop_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_SendTable_sendprop_t::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_SendTable_sendprop_t& CSVCMsg_SendTable_sendprop_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_SendTable_sendprop_t.base);
  return *internal_default_instance();
}


void CSVCMsg_SendTable_sendprop_t::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_SendTable.sendprop_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      var_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      dt_name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&high_value_) -
        reinterpret_cast<char*>(&type_)) + sizeof(high_value_));
  }
  num_bits_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_SendTable_sendprop_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_SendTable.sendprop_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string var_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_var_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->var_name().data(), static_cast<int>(this->var_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSVCMsg_SendTable.sendprop_t.var_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 flags = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 priority = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_priority();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string dt_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dt_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dt_name().data(), static_cast<int>(this->dt_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSVCMsg_SendTable.sendprop_t.dt_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_elements = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_num_elements();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_elements_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float low_value = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          set_has_low_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &low_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float high_value = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {
          set_has_high_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &high_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_bits = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_num_bits();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_bits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_SendTable.sendprop_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_SendTable.sendprop_t)
  return false;
#undef DO_
}

void CSVCMsg_SendTable_sendprop_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_SendTable.sendprop_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 type = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional string var_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->var_name().data(), static_cast<int>(this->var_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_SendTable.sendprop_t.var_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->var_name(), output);
  }

  // optional int32 flags = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->flags(), output);
  }

  // optional int32 priority = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->priority(), output);
  }

  // optional string dt_name = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dt_name().data(), static_cast<int>(this->dt_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_SendTable.sendprop_t.dt_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->dt_name(), output);
  }

  // optional int32 num_elements = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->num_elements(), output);
  }

  // optional float low_value = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->low_value(), output);
  }

  // optional float high_value = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->high_value(), output);
  }

  // optional int32 num_bits = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->num_bits(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_SendTable.sendprop_t)
}

::google::protobuf::uint8* CSVCMsg_SendTable_sendprop_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_SendTable.sendprop_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 type = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional string var_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->var_name().data(), static_cast<int>(this->var_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_SendTable.sendprop_t.var_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->var_name(), target);
  }

  // optional int32 flags = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->flags(), target);
  }

  // optional int32 priority = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->priority(), target);
  }

  // optional string dt_name = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dt_name().data(), static_cast<int>(this->dt_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_SendTable.sendprop_t.dt_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->dt_name(), target);
  }

  // optional int32 num_elements = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->num_elements(), target);
  }

  // optional float low_value = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->low_value(), target);
  }

  // optional float high_value = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->high_value(), target);
  }

  // optional int32 num_bits = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->num_bits(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_SendTable.sendprop_t)
  return target;
}

size_t CSVCMsg_SendTable_sendprop_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_SendTable.sendprop_t)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string var_name = 2;
    if (has_var_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->var_name());
    }

    // optional string dt_name = 5;
    if (has_dt_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dt_name());
    }

    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 flags = 3;
    if (has_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flags());
    }

    // optional int32 priority = 4;
    if (has_priority()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->priority());
    }

    // optional int32 num_elements = 6;
    if (has_num_elements()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_elements());
    }

    // optional float low_value = 7;
    if (has_low_value()) {
      total_size += 1 + 4;
    }

    // optional float high_value = 8;
    if (has_high_value()) {
      total_size += 1 + 4;
    }

  }
  // optional int32 num_bits = 9;
  if (has_num_bits()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_bits());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_SendTable_sendprop_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_SendTable.sendprop_t)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_SendTable_sendprop_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_SendTable_sendprop_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_SendTable.sendprop_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_SendTable.sendprop_t)
    MergeFrom(*source);
  }
}

void CSVCMsg_SendTable_sendprop_t::MergeFrom(const CSVCMsg_SendTable_sendprop_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_SendTable.sendprop_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_var_name();
      var_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.var_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_dt_name();
      dt_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dt_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000008u) {
      flags_ = from.flags_;
    }
    if (cached_has_bits & 0x00000010u) {
      priority_ = from.priority_;
    }
    if (cached_has_bits & 0x00000020u) {
      num_elements_ = from.num_elements_;
    }
    if (cached_has_bits & 0x00000040u) {
      low_value_ = from.low_value_;
    }
    if (cached_has_bits & 0x00000080u) {
      high_value_ = from.high_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_num_bits(from.num_bits());
  }
}

void CSVCMsg_SendTable_sendprop_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_SendTable.sendprop_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_SendTable_sendprop_t::CopyFrom(const CSVCMsg_SendTable_sendprop_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_SendTable.sendprop_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_SendTable_sendprop_t::IsInitialized() const {
  return true;
}

void CSVCMsg_SendTable_sendprop_t::Swap(CSVCMsg_SendTable_sendprop_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_SendTable_sendprop_t::InternalSwap(CSVCMsg_SendTable_sendprop_t* other) {
  using std::swap;
  var_name_.Swap(&other->var_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  dt_name_.Swap(&other->dt_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(flags_, other->flags_);
  swap(priority_, other->priority_);
  swap(num_elements_, other->num_elements_);
  swap(low_value_, other->low_value_);
  swap(high_value_, other->high_value_);
  swap(num_bits_, other->num_bits_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_SendTable_sendprop_t::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_SendTable::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_SendTable::kIsEndFieldNumber;
const int CSVCMsg_SendTable::kNetTableNameFieldNumber;
const int CSVCMsg_SendTable::kNeedsDecoderFieldNumber;
const int CSVCMsg_SendTable::kPropsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_SendTable::CSVCMsg_SendTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_SendTable.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_SendTable)
}
CSVCMsg_SendTable::CSVCMsg_SendTable(const CSVCMsg_SendTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      props_(from.props_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  net_table_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_net_table_name()) {
    net_table_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.net_table_name_);
  }
  ::memcpy(&is_end_, &from.is_end_,
    static_cast<size_t>(reinterpret_cast<char*>(&needs_decoder_) -
    reinterpret_cast<char*>(&is_end_)) + sizeof(needs_decoder_));
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_SendTable)
}

void CSVCMsg_SendTable::SharedCtor() {
  net_table_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_end_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&needs_decoder_) -
      reinterpret_cast<char*>(&is_end_)) + sizeof(needs_decoder_));
}

CSVCMsg_SendTable::~CSVCMsg_SendTable() {
  // @@protoc_insertion_point(destructor:CSVCMsg_SendTable)
  SharedDtor();
}

void CSVCMsg_SendTable::SharedDtor() {
  net_table_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CSVCMsg_SendTable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_SendTable::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_SendTable& CSVCMsg_SendTable::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_SendTable.base);
  return *internal_default_instance();
}


void CSVCMsg_SendTable::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_SendTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  props_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    net_table_name_.ClearNonDefaultToEmptyNoArena();
  }
  ::memset(&is_end_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&needs_decoder_) -
      reinterpret_cast<char*>(&is_end_)) + sizeof(needs_decoder_));
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_SendTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_SendTable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool is_end = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_is_end();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string net_table_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_net_table_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->net_table_name().data(), static_cast<int>(this->net_table_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSVCMsg_SendTable.net_table_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool needs_decoder = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_needs_decoder();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &needs_decoder_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CSVCMsg_SendTable.sendprop_t props = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_props()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_SendTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_SendTable)
  return false;
#undef DO_
}

void CSVCMsg_SendTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_SendTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool is_end = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_end(), output);
  }

  // optional string net_table_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->net_table_name().data(), static_cast<int>(this->net_table_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_SendTable.net_table_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->net_table_name(), output);
  }

  // optional bool needs_decoder = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->needs_decoder(), output);
  }

  // repeated .CSVCMsg_SendTable.sendprop_t props = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->props_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->props(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_SendTable)
}

::google::protobuf::uint8* CSVCMsg_SendTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_SendTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool is_end = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_end(), target);
  }

  // optional string net_table_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->net_table_name().data(), static_cast<int>(this->net_table_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_SendTable.net_table_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->net_table_name(), target);
  }

  // optional bool needs_decoder = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->needs_decoder(), target);
  }

  // repeated .CSVCMsg_SendTable.sendprop_t props = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->props_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->props(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_SendTable)
  return target;
}

size_t CSVCMsg_SendTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_SendTable)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CSVCMsg_SendTable.sendprop_t props = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->props_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->props(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string net_table_name = 2;
    if (has_net_table_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->net_table_name());
    }

    // optional bool is_end = 1;
    if (has_is_end()) {
      total_size += 1 + 1;
    }

    // optional bool needs_decoder = 3;
    if (has_needs_decoder()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_SendTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_SendTable)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_SendTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_SendTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_SendTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_SendTable)
    MergeFrom(*source);
  }
}

void CSVCMsg_SendTable::MergeFrom(const CSVCMsg_SendTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_SendTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  props_.MergeFrom(from.props_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_net_table_name();
      net_table_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.net_table_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      is_end_ = from.is_end_;
    }
    if (cached_has_bits & 0x00000004u) {
      needs_decoder_ = from.needs_decoder_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSVCMsg_SendTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_SendTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_SendTable::CopyFrom(const CSVCMsg_SendTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_SendTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_SendTable::IsInitialized() const {
  return true;
}

void CSVCMsg_SendTable::Swap(CSVCMsg_SendTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_SendTable::InternalSwap(CSVCMsg_SendTable* other) {
  using std::swap;
  CastToBase(&props_)->InternalSwap(CastToBase(&other->props_));
  net_table_name_.Swap(&other->net_table_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_end_, other->is_end_);
  swap(needs_decoder_, other->needs_decoder_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_SendTable::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_GameEventList_key_t::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_GameEventList_key_t::kTypeFieldNumber;
const int CSVCMsg_GameEventList_key_t::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_GameEventList_key_t::CSVCMsg_GameEventList_key_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_GameEventList_key_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_GameEventList.key_t)
}
CSVCMsg_GameEventList_key_t::CSVCMsg_GameEventList_key_t(const CSVCMsg_GameEventList_key_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_GameEventList.key_t)
}

void CSVCMsg_GameEventList_key_t::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

CSVCMsg_GameEventList_key_t::~CSVCMsg_GameEventList_key_t() {
  // @@protoc_insertion_point(destructor:CSVCMsg_GameEventList.key_t)
  SharedDtor();
}

void CSVCMsg_GameEventList_key_t::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CSVCMsg_GameEventList_key_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_GameEventList_key_t::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_GameEventList_key_t& CSVCMsg_GameEventList_key_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_GameEventList_key_t.base);
  return *internal_default_instance();
}


void CSVCMsg_GameEventList_key_t::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_GameEventList.key_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_GameEventList_key_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_GameEventList.key_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSVCMsg_GameEventList.key_t.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_GameEventList.key_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_GameEventList.key_t)
  return false;
#undef DO_
}

void CSVCMsg_GameEventList_key_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_GameEventList.key_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_GameEventList.key_t.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_GameEventList.key_t)
}

::google::protobuf::uint8* CSVCMsg_GameEventList_key_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_GameEventList.key_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_GameEventList.key_t.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_GameEventList.key_t)
  return target;
}

size_t CSVCMsg_GameEventList_key_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_GameEventList.key_t)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_GameEventList_key_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_GameEventList.key_t)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_GameEventList_key_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_GameEventList_key_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_GameEventList.key_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_GameEventList.key_t)
    MergeFrom(*source);
  }
}

void CSVCMsg_GameEventList_key_t::MergeFrom(const CSVCMsg_GameEventList_key_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_GameEventList.key_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSVCMsg_GameEventList_key_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_GameEventList.key_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_GameEventList_key_t::CopyFrom(const CSVCMsg_GameEventList_key_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_GameEventList.key_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_GameEventList_key_t::IsInitialized() const {
  return true;
}

void CSVCMsg_GameEventList_key_t::Swap(CSVCMsg_GameEventList_key_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_GameEventList_key_t::InternalSwap(CSVCMsg_GameEventList_key_t* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_GameEventList_key_t::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_GameEventList_descriptor_t::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_GameEventList_descriptor_t::kEventidFieldNumber;
const int CSVCMsg_GameEventList_descriptor_t::kNameFieldNumber;
const int CSVCMsg_GameEventList_descriptor_t::kKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_GameEventList_descriptor_t::CSVCMsg_GameEventList_descriptor_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_GameEventList_descriptor_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_GameEventList.descriptor_t)
}
CSVCMsg_GameEventList_descriptor_t::CSVCMsg_GameEventList_descriptor_t(const CSVCMsg_GameEventList_descriptor_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  eventid_ = from.eventid_;
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_GameEventList.descriptor_t)
}

void CSVCMsg_GameEventList_descriptor_t::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eventid_ = 0;
}

CSVCMsg_GameEventList_descriptor_t::~CSVCMsg_GameEventList_descriptor_t() {
  // @@protoc_insertion_point(destructor:CSVCMsg_GameEventList.descriptor_t)
  SharedDtor();
}

void CSVCMsg_GameEventList_descriptor_t::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CSVCMsg_GameEventList_descriptor_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_GameEventList_descriptor_t::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_GameEventList_descriptor_t& CSVCMsg_GameEventList_descriptor_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_GameEventList_descriptor_t.base);
  return *internal_default_instance();
}


void CSVCMsg_GameEventList_descriptor_t::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_GameEventList.descriptor_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  eventid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_GameEventList_descriptor_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_GameEventList.descriptor_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eventid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eventid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eventid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSVCMsg_GameEventList.descriptor_t.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CSVCMsg_GameEventList.key_t keys = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_GameEventList.descriptor_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_GameEventList.descriptor_t)
  return false;
#undef DO_
}

void CSVCMsg_GameEventList_descriptor_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_GameEventList.descriptor_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eventid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eventid(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_GameEventList.descriptor_t.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated .CSVCMsg_GameEventList.key_t keys = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->keys(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_GameEventList.descriptor_t)
}

::google::protobuf::uint8* CSVCMsg_GameEventList_descriptor_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_GameEventList.descriptor_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eventid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eventid(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_GameEventList.descriptor_t.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated .CSVCMsg_GameEventList.key_t keys = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->keys(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_GameEventList.descriptor_t)
  return target;
}

size_t CSVCMsg_GameEventList_descriptor_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_GameEventList.descriptor_t)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CSVCMsg_GameEventList.key_t keys = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->keys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->keys(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 eventid = 1;
    if (has_eventid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eventid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_GameEventList_descriptor_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_GameEventList.descriptor_t)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_GameEventList_descriptor_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_GameEventList_descriptor_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_GameEventList.descriptor_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_GameEventList.descriptor_t)
    MergeFrom(*source);
  }
}

void CSVCMsg_GameEventList_descriptor_t::MergeFrom(const CSVCMsg_GameEventList_descriptor_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_GameEventList.descriptor_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      eventid_ = from.eventid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSVCMsg_GameEventList_descriptor_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_GameEventList.descriptor_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_GameEventList_descriptor_t::CopyFrom(const CSVCMsg_GameEventList_descriptor_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_GameEventList.descriptor_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_GameEventList_descriptor_t::IsInitialized() const {
  return true;
}

void CSVCMsg_GameEventList_descriptor_t::Swap(CSVCMsg_GameEventList_descriptor_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_GameEventList_descriptor_t::InternalSwap(CSVCMsg_GameEventList_descriptor_t* other) {
  using std::swap;
  CastToBase(&keys_)->InternalSwap(CastToBase(&other->keys_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(eventid_, other->eventid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_GameEventList_descriptor_t::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_GameEventList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_GameEventList::kDescriptorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_GameEventList::CSVCMsg_GameEventList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_GameEventList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_GameEventList)
}
CSVCMsg_GameEventList::CSVCMsg_GameEventList(const CSVCMsg_GameEventList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      descriptors_(from.descriptors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_GameEventList)
}

void CSVCMsg_GameEventList::SharedCtor() {
}

CSVCMsg_GameEventList::~CSVCMsg_GameEventList() {
  // @@protoc_insertion_point(destructor:CSVCMsg_GameEventList)
  SharedDtor();
}

void CSVCMsg_GameEventList::SharedDtor() {
}

void CSVCMsg_GameEventList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_GameEventList::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_GameEventList& CSVCMsg_GameEventList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_GameEventList.base);
  return *internal_default_instance();
}


void CSVCMsg_GameEventList::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_GameEventList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  descriptors_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_GameEventList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_GameEventList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CSVCMsg_GameEventList.descriptor_t descriptors = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_descriptors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_GameEventList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_GameEventList)
  return false;
#undef DO_
}

void CSVCMsg_GameEventList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_GameEventList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CSVCMsg_GameEventList.descriptor_t descriptors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->descriptors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->descriptors(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_GameEventList)
}

::google::protobuf::uint8* CSVCMsg_GameEventList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_GameEventList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CSVCMsg_GameEventList.descriptor_t descriptors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->descriptors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->descriptors(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_GameEventList)
  return target;
}

size_t CSVCMsg_GameEventList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_GameEventList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CSVCMsg_GameEventList.descriptor_t descriptors = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->descriptors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->descriptors(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_GameEventList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_GameEventList)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_GameEventList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_GameEventList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_GameEventList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_GameEventList)
    MergeFrom(*source);
  }
}

void CSVCMsg_GameEventList::MergeFrom(const CSVCMsg_GameEventList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_GameEventList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  descriptors_.MergeFrom(from.descriptors_);
}

void CSVCMsg_GameEventList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_GameEventList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_GameEventList::CopyFrom(const CSVCMsg_GameEventList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_GameEventList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_GameEventList::IsInitialized() const {
  return true;
}

void CSVCMsg_GameEventList::Swap(CSVCMsg_GameEventList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_GameEventList::InternalSwap(CSVCMsg_GameEventList* other) {
  using std::swap;
  CastToBase(&descriptors_)->InternalSwap(CastToBase(&other->descriptors_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_GameEventList::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_PacketEntities::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_PacketEntities::kMaxEntriesFieldNumber;
const int CSVCMsg_PacketEntities::kUpdatedEntriesFieldNumber;
const int CSVCMsg_PacketEntities::kIsDeltaFieldNumber;
const int CSVCMsg_PacketEntities::kUpdateBaselineFieldNumber;
const int CSVCMsg_PacketEntities::kBaselineFieldNumber;
const int CSVCMsg_PacketEntities::kDeltaFromFieldNumber;
const int CSVCMsg_PacketEntities::kEntityDataFieldNumber;
const int CSVCMsg_PacketEntities::kPendingFullFrameFieldNumber;
const int CSVCMsg_PacketEntities::kActiveSpawngroupHandleFieldNumber;
const int CSVCMsg_PacketEntities::kMaxSpawngroupCreationsequenceFieldNumber;
const int CSVCMsg_PacketEntities::kLastCmdNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_PacketEntities::CSVCMsg_PacketEntities()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_PacketEntities.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_PacketEntities)
}
CSVCMsg_PacketEntities::CSVCMsg_PacketEntities(const CSVCMsg_PacketEntities& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entity_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_entity_data()) {
    entity_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entity_data_);
  }
  ::memcpy(&max_entries_, &from.max_entries_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_cmd_number_) -
    reinterpret_cast<char*>(&max_entries_)) + sizeof(last_cmd_number_));
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_PacketEntities)
}

void CSVCMsg_PacketEntities::SharedCtor() {
  entity_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&max_entries_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_cmd_number_) -
      reinterpret_cast<char*>(&max_entries_)) + sizeof(last_cmd_number_));
}

CSVCMsg_PacketEntities::~CSVCMsg_PacketEntities() {
  // @@protoc_insertion_point(destructor:CSVCMsg_PacketEntities)
  SharedDtor();
}

void CSVCMsg_PacketEntities::SharedDtor() {
  entity_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CSVCMsg_PacketEntities::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_PacketEntities::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_PacketEntities& CSVCMsg_PacketEntities::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_PacketEntities.base);
  return *internal_default_instance();
}


void CSVCMsg_PacketEntities::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_PacketEntities)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    entity_data_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 254u) {
    ::memset(&max_entries_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&delta_from_) -
        reinterpret_cast<char*>(&max_entries_)) + sizeof(delta_from_));
  }
  if (cached_has_bits & 1792u) {
    ::memset(&active_spawngroup_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&last_cmd_number_) -
        reinterpret_cast<char*>(&active_spawngroup_handle_)) + sizeof(last_cmd_number_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_PacketEntities::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_PacketEntities)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 max_entries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_max_entries();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_entries_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 updated_entries = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_updated_entries();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &updated_entries_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_delta = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_is_delta();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_delta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool update_baseline = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_update_baseline();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_baseline_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 baseline = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_baseline();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &baseline_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 delta_from = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_delta_from();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delta_from_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes entity_data = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_entity_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool pending_full_frame = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_pending_full_frame();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pending_full_frame_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 active_spawngroup_handle = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_active_spawngroup_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &active_spawngroup_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 max_spawngroup_creationsequence = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_max_spawngroup_creationsequence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_spawngroup_creationsequence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_cmd_number = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_last_cmd_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_cmd_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_PacketEntities)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_PacketEntities)
  return false;
#undef DO_
}

void CSVCMsg_PacketEntities::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_PacketEntities)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 max_entries = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->max_entries(), output);
  }

  // optional int32 updated_entries = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->updated_entries(), output);
  }

  // optional bool is_delta = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_delta(), output);
  }

  // optional bool update_baseline = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->update_baseline(), output);
  }

  // optional int32 baseline = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->baseline(), output);
  }

  // optional int32 delta_from = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->delta_from(), output);
  }

  // optional bytes entity_data = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->entity_data(), output);
  }

  // optional bool pending_full_frame = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->pending_full_frame(), output);
  }

  // optional uint32 active_spawngroup_handle = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->active_spawngroup_handle(), output);
  }

  // optional uint32 max_spawngroup_creationsequence = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->max_spawngroup_creationsequence(), output);
  }

  // optional uint32 last_cmd_number = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->last_cmd_number(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_PacketEntities)
}

::google::protobuf::uint8* CSVCMsg_PacketEntities::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_PacketEntities)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 max_entries = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->max_entries(), target);
  }

  // optional int32 updated_entries = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->updated_entries(), target);
  }

  // optional bool is_delta = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_delta(), target);
  }

  // optional bool update_baseline = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->update_baseline(), target);
  }

  // optional int32 baseline = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->baseline(), target);
  }

  // optional int32 delta_from = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->delta_from(), target);
  }

  // optional bytes entity_data = 7;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->entity_data(), target);
  }

  // optional bool pending_full_frame = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->pending_full_frame(), target);
  }

  // optional uint32 active_spawngroup_handle = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->active_spawngroup_handle(), target);
  }

  // optional uint32 max_spawngroup_creationsequence = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->max_spawngroup_creationsequence(), target);
  }

  // optional uint32 last_cmd_number = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->last_cmd_number(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_PacketEntities)
  return target;
}

size_t CSVCMsg_PacketEntities::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_PacketEntities)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes entity_data = 7;
    if (has_entity_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->entity_data());
    }

    // optional int32 max_entries = 1;
    if (has_max_entries()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_entries());
    }

    // optional int32 updated_entries = 2;
    if (has_updated_entries()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->updated_entries());
    }

    // optional int32 baseline = 5;
    if (has_baseline()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->baseline());
    }

    // optional bool is_delta = 3;
    if (has_is_delta()) {
      total_size += 1 + 1;
    }

    // optional bool update_baseline = 4;
    if (has_update_baseline()) {
      total_size += 1 + 1;
    }

    // optional bool pending_full_frame = 8;
    if (has_pending_full_frame()) {
      total_size += 1 + 1;
    }

    // optional int32 delta_from = 6;
    if (has_delta_from()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delta_from());
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional uint32 active_spawngroup_handle = 9;
    if (has_active_spawngroup_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->active_spawngroup_handle());
    }

    // optional uint32 max_spawngroup_creationsequence = 10;
    if (has_max_spawngroup_creationsequence()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->max_spawngroup_creationsequence());
    }

    // optional uint32 last_cmd_number = 11;
    if (has_last_cmd_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_cmd_number());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_PacketEntities::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_PacketEntities)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_PacketEntities* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_PacketEntities>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_PacketEntities)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_PacketEntities)
    MergeFrom(*source);
  }
}

void CSVCMsg_PacketEntities::MergeFrom(const CSVCMsg_PacketEntities& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_PacketEntities)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_entity_data();
      entity_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entity_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      max_entries_ = from.max_entries_;
    }
    if (cached_has_bits & 0x00000004u) {
      updated_entries_ = from.updated_entries_;
    }
    if (cached_has_bits & 0x00000008u) {
      baseline_ = from.baseline_;
    }
    if (cached_has_bits & 0x00000010u) {
      is_delta_ = from.is_delta_;
    }
    if (cached_has_bits & 0x00000020u) {
      update_baseline_ = from.update_baseline_;
    }
    if (cached_has_bits & 0x00000040u) {
      pending_full_frame_ = from.pending_full_frame_;
    }
    if (cached_has_bits & 0x00000080u) {
      delta_from_ = from.delta_from_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      active_spawngroup_handle_ = from.active_spawngroup_handle_;
    }
    if (cached_has_bits & 0x00000200u) {
      max_spawngroup_creationsequence_ = from.max_spawngroup_creationsequence_;
    }
    if (cached_has_bits & 0x00000400u) {
      last_cmd_number_ = from.last_cmd_number_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSVCMsg_PacketEntities::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_PacketEntities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_PacketEntities::CopyFrom(const CSVCMsg_PacketEntities& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_PacketEntities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_PacketEntities::IsInitialized() const {
  return true;
}

void CSVCMsg_PacketEntities::Swap(CSVCMsg_PacketEntities* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_PacketEntities::InternalSwap(CSVCMsg_PacketEntities* other) {
  using std::swap;
  entity_data_.Swap(&other->entity_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(max_entries_, other->max_entries_);
  swap(updated_entries_, other->updated_entries_);
  swap(baseline_, other->baseline_);
  swap(is_delta_, other->is_delta_);
  swap(update_baseline_, other->update_baseline_);
  swap(pending_full_frame_, other->pending_full_frame_);
  swap(delta_from_, other->delta_from_);
  swap(active_spawngroup_handle_, other->active_spawngroup_handle_);
  swap(max_spawngroup_creationsequence_, other->max_spawngroup_creationsequence_);
  swap(last_cmd_number_, other->last_cmd_number_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_PacketEntities::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_TempEntities::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_TempEntities::kReliableFieldNumber;
const int CSVCMsg_TempEntities::kNumEntriesFieldNumber;
const int CSVCMsg_TempEntities::kEntityDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_TempEntities::CSVCMsg_TempEntities()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_TempEntities.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_TempEntities)
}
CSVCMsg_TempEntities::CSVCMsg_TempEntities(const CSVCMsg_TempEntities& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entity_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_entity_data()) {
    entity_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entity_data_);
  }
  ::memcpy(&reliable_, &from.reliable_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_entries_) -
    reinterpret_cast<char*>(&reliable_)) + sizeof(num_entries_));
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_TempEntities)
}

void CSVCMsg_TempEntities::SharedCtor() {
  entity_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&reliable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_entries_) -
      reinterpret_cast<char*>(&reliable_)) + sizeof(num_entries_));
}

CSVCMsg_TempEntities::~CSVCMsg_TempEntities() {
  // @@protoc_insertion_point(destructor:CSVCMsg_TempEntities)
  SharedDtor();
}

void CSVCMsg_TempEntities::SharedDtor() {
  entity_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CSVCMsg_TempEntities::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_TempEntities::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_TempEntities& CSVCMsg_TempEntities::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_TempEntities.base);
  return *internal_default_instance();
}


void CSVCMsg_TempEntities::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_TempEntities)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    entity_data_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&reliable_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&num_entries_) -
        reinterpret_cast<char*>(&reliable_)) + sizeof(num_entries_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_TempEntities::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_TempEntities)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool reliable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_reliable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reliable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_entries = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_num_entries();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_entries_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes entity_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_entity_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_TempEntities)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_TempEntities)
  return false;
#undef DO_
}

void CSVCMsg_TempEntities::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_TempEntities)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool reliable = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->reliable(), output);
  }

  // optional int32 num_entries = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num_entries(), output);
  }

  // optional bytes entity_data = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->entity_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_TempEntities)
}

::google::protobuf::uint8* CSVCMsg_TempEntities::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_TempEntities)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool reliable = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->reliable(), target);
  }

  // optional int32 num_entries = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num_entries(), target);
  }

  // optional bytes entity_data = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->entity_data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_TempEntities)
  return target;
}

size_t CSVCMsg_TempEntities::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_TempEntities)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes entity_data = 3;
    if (has_entity_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->entity_data());
    }

    // optional bool reliable = 1;
    if (has_reliable()) {
      total_size += 1 + 1;
    }

    // optional int32 num_entries = 2;
    if (has_num_entries()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_entries());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_TempEntities::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_TempEntities)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_TempEntities* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_TempEntities>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_TempEntities)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_TempEntities)
    MergeFrom(*source);
  }
}

void CSVCMsg_TempEntities::MergeFrom(const CSVCMsg_TempEntities& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_TempEntities)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_entity_data();
      entity_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entity_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      reliable_ = from.reliable_;
    }
    if (cached_has_bits & 0x00000004u) {
      num_entries_ = from.num_entries_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSVCMsg_TempEntities::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_TempEntities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_TempEntities::CopyFrom(const CSVCMsg_TempEntities& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_TempEntities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_TempEntities::IsInitialized() const {
  return true;
}

void CSVCMsg_TempEntities::Swap(CSVCMsg_TempEntities* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_TempEntities::InternalSwap(CSVCMsg_TempEntities* other) {
  using std::swap;
  entity_data_.Swap(&other->entity_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(reliable_, other->reliable_);
  swap(num_entries_, other->num_entries_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_TempEntities::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_CreateStringTable::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_CreateStringTable::kNameFieldNumber;
const int CSVCMsg_CreateStringTable::kNumEntriesFieldNumber;
const int CSVCMsg_CreateStringTable::kUserDataFixedSizeFieldNumber;
const int CSVCMsg_CreateStringTable::kUserDataSizeFieldNumber;
const int CSVCMsg_CreateStringTable::kUserDataSizeBitsFieldNumber;
const int CSVCMsg_CreateStringTable::kFlagsFieldNumber;
const int CSVCMsg_CreateStringTable::kStringDataFieldNumber;
const int CSVCMsg_CreateStringTable::kUncompressedSizeFieldNumber;
const int CSVCMsg_CreateStringTable::kDataCompressedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_CreateStringTable::CSVCMsg_CreateStringTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_CreateStringTable.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_CreateStringTable)
}
CSVCMsg_CreateStringTable::CSVCMsg_CreateStringTable(const CSVCMsg_CreateStringTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  string_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_string_data()) {
    string_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_data_);
  }
  ::memcpy(&num_entries_, &from.num_entries_,
    static_cast<size_t>(reinterpret_cast<char*>(&uncompressed_size_) -
    reinterpret_cast<char*>(&num_entries_)) + sizeof(uncompressed_size_));
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_CreateStringTable)
}

void CSVCMsg_CreateStringTable::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  string_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&num_entries_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uncompressed_size_) -
      reinterpret_cast<char*>(&num_entries_)) + sizeof(uncompressed_size_));
}

CSVCMsg_CreateStringTable::~CSVCMsg_CreateStringTable() {
  // @@protoc_insertion_point(destructor:CSVCMsg_CreateStringTable)
  SharedDtor();
}

void CSVCMsg_CreateStringTable::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  string_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CSVCMsg_CreateStringTable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_CreateStringTable::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_CreateStringTable& CSVCMsg_CreateStringTable::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_CreateStringTable.base);
  return *internal_default_instance();
}


void CSVCMsg_CreateStringTable::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_CreateStringTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      string_data_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&num_entries_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&data_compressed_) -
        reinterpret_cast<char*>(&num_entries_)) + sizeof(data_compressed_));
  }
  uncompressed_size_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_CreateStringTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_CreateStringTable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSVCMsg_CreateStringTable.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_entries = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_num_entries();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_entries_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool user_data_fixed_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_user_data_fixed_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &user_data_fixed_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 user_data_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_user_data_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_data_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 user_data_size_bits = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_user_data_size_bits();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_data_size_bits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 flags = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes string_data = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_string_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 uncompressed_size = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_uncompressed_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uncompressed_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool data_compressed = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_data_compressed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &data_compressed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_CreateStringTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_CreateStringTable)
  return false;
#undef DO_
}

void CSVCMsg_CreateStringTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_CreateStringTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_CreateStringTable.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int32 num_entries = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num_entries(), output);
  }

  // optional bool user_data_fixed_size = 3;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->user_data_fixed_size(), output);
  }

  // optional int32 user_data_size = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->user_data_size(), output);
  }

  // optional int32 user_data_size_bits = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->user_data_size_bits(), output);
  }

  // optional int32 flags = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->flags(), output);
  }

  // optional bytes string_data = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->string_data(), output);
  }

  // optional int32 uncompressed_size = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->uncompressed_size(), output);
  }

  // optional bool data_compressed = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->data_compressed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_CreateStringTable)
}

::google::protobuf::uint8* CSVCMsg_CreateStringTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_CreateStringTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_CreateStringTable.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional int32 num_entries = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num_entries(), target);
  }

  // optional bool user_data_fixed_size = 3;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->user_data_fixed_size(), target);
  }

  // optional int32 user_data_size = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->user_data_size(), target);
  }

  // optional int32 user_data_size_bits = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->user_data_size_bits(), target);
  }

  // optional int32 flags = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->flags(), target);
  }

  // optional bytes string_data = 7;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->string_data(), target);
  }

  // optional int32 uncompressed_size = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->uncompressed_size(), target);
  }

  // optional bool data_compressed = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->data_compressed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_CreateStringTable)
  return target;
}

size_t CSVCMsg_CreateStringTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_CreateStringTable)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional bytes string_data = 7;
    if (has_string_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->string_data());
    }

    // optional int32 num_entries = 2;
    if (has_num_entries()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_entries());
    }

    // optional int32 user_data_size = 4;
    if (has_user_data_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->user_data_size());
    }

    // optional int32 user_data_size_bits = 5;
    if (has_user_data_size_bits()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->user_data_size_bits());
    }

    // optional int32 flags = 6;
    if (has_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flags());
    }

    // optional bool user_data_fixed_size = 3;
    if (has_user_data_fixed_size()) {
      total_size += 1 + 1;
    }

    // optional bool data_compressed = 9;
    if (has_data_compressed()) {
      total_size += 1 + 1;
    }

  }
  // optional int32 uncompressed_size = 8;
  if (has_uncompressed_size()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uncompressed_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_CreateStringTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_CreateStringTable)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_CreateStringTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_CreateStringTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_CreateStringTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_CreateStringTable)
    MergeFrom(*source);
  }
}

void CSVCMsg_CreateStringTable::MergeFrom(const CSVCMsg_CreateStringTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_CreateStringTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_string_data();
      string_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_data_);
    }
    if (cached_has_bits & 0x00000004u) {
      num_entries_ = from.num_entries_;
    }
    if (cached_has_bits & 0x00000008u) {
      user_data_size_ = from.user_data_size_;
    }
    if (cached_has_bits & 0x00000010u) {
      user_data_size_bits_ = from.user_data_size_bits_;
    }
    if (cached_has_bits & 0x00000020u) {
      flags_ = from.flags_;
    }
    if (cached_has_bits & 0x00000040u) {
      user_data_fixed_size_ = from.user_data_fixed_size_;
    }
    if (cached_has_bits & 0x00000080u) {
      data_compressed_ = from.data_compressed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_uncompressed_size(from.uncompressed_size());
  }
}

void CSVCMsg_CreateStringTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_CreateStringTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_CreateStringTable::CopyFrom(const CSVCMsg_CreateStringTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_CreateStringTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_CreateStringTable::IsInitialized() const {
  return true;
}

void CSVCMsg_CreateStringTable::Swap(CSVCMsg_CreateStringTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_CreateStringTable::InternalSwap(CSVCMsg_CreateStringTable* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  string_data_.Swap(&other->string_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(num_entries_, other->num_entries_);
  swap(user_data_size_, other->user_data_size_);
  swap(user_data_size_bits_, other->user_data_size_bits_);
  swap(flags_, other->flags_);
  swap(user_data_fixed_size_, other->user_data_fixed_size_);
  swap(data_compressed_, other->data_compressed_);
  swap(uncompressed_size_, other->uncompressed_size_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_CreateStringTable::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_UpdateStringTable::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_UpdateStringTable::kTableIdFieldNumber;
const int CSVCMsg_UpdateStringTable::kNumChangedEntriesFieldNumber;
const int CSVCMsg_UpdateStringTable::kStringDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_UpdateStringTable::CSVCMsg_UpdateStringTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_UpdateStringTable.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_UpdateStringTable)
}
CSVCMsg_UpdateStringTable::CSVCMsg_UpdateStringTable(const CSVCMsg_UpdateStringTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  string_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_string_data()) {
    string_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_data_);
  }
  ::memcpy(&table_id_, &from.table_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_changed_entries_) -
    reinterpret_cast<char*>(&table_id_)) + sizeof(num_changed_entries_));
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_UpdateStringTable)
}

void CSVCMsg_UpdateStringTable::SharedCtor() {
  string_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&table_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_changed_entries_) -
      reinterpret_cast<char*>(&table_id_)) + sizeof(num_changed_entries_));
}

CSVCMsg_UpdateStringTable::~CSVCMsg_UpdateStringTable() {
  // @@protoc_insertion_point(destructor:CSVCMsg_UpdateStringTable)
  SharedDtor();
}

void CSVCMsg_UpdateStringTable::SharedDtor() {
  string_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CSVCMsg_UpdateStringTable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_UpdateStringTable::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_UpdateStringTable& CSVCMsg_UpdateStringTable::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_UpdateStringTable.base);
  return *internal_default_instance();
}


void CSVCMsg_UpdateStringTable::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_UpdateStringTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    string_data_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&table_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&num_changed_entries_) -
        reinterpret_cast<char*>(&table_id_)) + sizeof(num_changed_entries_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_UpdateStringTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_UpdateStringTable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 table_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_table_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &table_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_changed_entries = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_num_changed_entries();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_changed_entries_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes string_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_string_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_UpdateStringTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_UpdateStringTable)
  return false;
#undef DO_
}

void CSVCMsg_UpdateStringTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_UpdateStringTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 table_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->table_id(), output);
  }

  // optional int32 num_changed_entries = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num_changed_entries(), output);
  }

  // optional bytes string_data = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->string_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_UpdateStringTable)
}

::google::protobuf::uint8* CSVCMsg_UpdateStringTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_UpdateStringTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 table_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->table_id(), target);
  }

  // optional int32 num_changed_entries = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num_changed_entries(), target);
  }

  // optional bytes string_data = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->string_data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_UpdateStringTable)
  return target;
}

size_t CSVCMsg_UpdateStringTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_UpdateStringTable)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes string_data = 3;
    if (has_string_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->string_data());
    }

    // optional int32 table_id = 1;
    if (has_table_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->table_id());
    }

    // optional int32 num_changed_entries = 2;
    if (has_num_changed_entries()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_changed_entries());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_UpdateStringTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_UpdateStringTable)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_UpdateStringTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_UpdateStringTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_UpdateStringTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_UpdateStringTable)
    MergeFrom(*source);
  }
}

void CSVCMsg_UpdateStringTable::MergeFrom(const CSVCMsg_UpdateStringTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_UpdateStringTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_string_data();
      string_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      table_id_ = from.table_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      num_changed_entries_ = from.num_changed_entries_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSVCMsg_UpdateStringTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_UpdateStringTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_UpdateStringTable::CopyFrom(const CSVCMsg_UpdateStringTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_UpdateStringTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_UpdateStringTable::IsInitialized() const {
  return true;
}

void CSVCMsg_UpdateStringTable::Swap(CSVCMsg_UpdateStringTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_UpdateStringTable::InternalSwap(CSVCMsg_UpdateStringTable* other) {
  using std::swap;
  string_data_.Swap(&other->string_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(table_id_, other->table_id_);
  swap(num_changed_entries_, other->num_changed_entries_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_UpdateStringTable::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_VoiceData::InitAsDefaultInstance() {
  ::_CSVCMsg_VoiceData_default_instance_._instance.get_mutable()->audio_ = const_cast< ::CMsgVoiceAudio*>(
      ::CMsgVoiceAudio::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_VoiceData::kAudioFieldNumber;
const int CSVCMsg_VoiceData::kClientFieldNumber;
const int CSVCMsg_VoiceData::kProximityFieldNumber;
const int CSVCMsg_VoiceData::kXuidFieldNumber;
const int CSVCMsg_VoiceData::kAudibleMaskFieldNumber;
const int CSVCMsg_VoiceData::kTickFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_VoiceData::CSVCMsg_VoiceData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_VoiceData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_VoiceData)
}
CSVCMsg_VoiceData::CSVCMsg_VoiceData(const CSVCMsg_VoiceData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_audio()) {
    audio_ = new ::CMsgVoiceAudio(*from.audio_);
  } else {
    audio_ = NULL;
  }
  ::memcpy(&client_, &from.client_,
    static_cast<size_t>(reinterpret_cast<char*>(&tick_) -
    reinterpret_cast<char*>(&client_)) + sizeof(tick_));
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_VoiceData)
}

void CSVCMsg_VoiceData::SharedCtor() {
  ::memset(&audio_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tick_) -
      reinterpret_cast<char*>(&audio_)) + sizeof(tick_));
}

CSVCMsg_VoiceData::~CSVCMsg_VoiceData() {
  // @@protoc_insertion_point(destructor:CSVCMsg_VoiceData)
  SharedDtor();
}

void CSVCMsg_VoiceData::SharedDtor() {
  if (this != internal_default_instance()) delete audio_;
}

void CSVCMsg_VoiceData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_VoiceData::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_VoiceData& CSVCMsg_VoiceData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_VoiceData.base);
  return *internal_default_instance();
}


void CSVCMsg_VoiceData::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_VoiceData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(audio_ != NULL);
    audio_->Clear();
  }
  if (cached_has_bits & 62u) {
    ::memset(&client_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tick_) -
        reinterpret_cast<char*>(&client_)) + sizeof(tick_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_VoiceData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_VoiceData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsgVoiceAudio audio = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_audio()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 client = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_client();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool proximity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_proximity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &proximity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 xuid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_xuid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &xuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 audible_mask = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_audible_mask();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &audible_mask_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 tick = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_tick();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tick_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_VoiceData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_VoiceData)
  return false;
#undef DO_
}

void CSVCMsg_VoiceData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_VoiceData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgVoiceAudio audio = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_audio(), output);
  }

  // optional int32 client = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->client(), output);
  }

  // optional bool proximity = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->proximity(), output);
  }

  // optional fixed64 xuid = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->xuid(), output);
  }

  // optional int32 audible_mask = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->audible_mask(), output);
  }

  // optional uint32 tick = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->tick(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_VoiceData)
}

::google::protobuf::uint8* CSVCMsg_VoiceData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_VoiceData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgVoiceAudio audio = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_audio(), deterministic, target);
  }

  // optional int32 client = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->client(), target);
  }

  // optional bool proximity = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->proximity(), target);
  }

  // optional fixed64 xuid = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->xuid(), target);
  }

  // optional int32 audible_mask = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->audible_mask(), target);
  }

  // optional uint32 tick = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->tick(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_VoiceData)
  return target;
}

size_t CSVCMsg_VoiceData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_VoiceData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional .CMsgVoiceAudio audio = 1;
    if (has_audio()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *audio_);
    }

    // optional int32 client = 2;
    if (has_client()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->client());
    }

    // optional bool proximity = 3;
    if (has_proximity()) {
      total_size += 1 + 1;
    }

    // optional fixed64 xuid = 4;
    if (has_xuid()) {
      total_size += 1 + 8;
    }

    // optional int32 audible_mask = 5;
    if (has_audible_mask()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->audible_mask());
    }

    // optional uint32 tick = 6;
    if (has_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tick());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_VoiceData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_VoiceData)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_VoiceData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_VoiceData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_VoiceData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_VoiceData)
    MergeFrom(*source);
  }
}

void CSVCMsg_VoiceData::MergeFrom(const CSVCMsg_VoiceData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_VoiceData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_audio()->::CMsgVoiceAudio::MergeFrom(from.audio());
    }
    if (cached_has_bits & 0x00000002u) {
      client_ = from.client_;
    }
    if (cached_has_bits & 0x00000004u) {
      proximity_ = from.proximity_;
    }
    if (cached_has_bits & 0x00000008u) {
      xuid_ = from.xuid_;
    }
    if (cached_has_bits & 0x00000010u) {
      audible_mask_ = from.audible_mask_;
    }
    if (cached_has_bits & 0x00000020u) {
      tick_ = from.tick_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSVCMsg_VoiceData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_VoiceData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_VoiceData::CopyFrom(const CSVCMsg_VoiceData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_VoiceData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_VoiceData::IsInitialized() const {
  return true;
}

void CSVCMsg_VoiceData::Swap(CSVCMsg_VoiceData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_VoiceData::InternalSwap(CSVCMsg_VoiceData* other) {
  using std::swap;
  swap(audio_, other->audio_);
  swap(client_, other->client_);
  swap(proximity_, other->proximity_);
  swap(xuid_, other->xuid_);
  swap(audible_mask_, other->audible_mask_);
  swap(tick_, other->tick_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_VoiceData::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_PacketReliable::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_PacketReliable::kTickFieldNumber;
const int CSVCMsg_PacketReliable::kMessagessizeFieldNumber;
const int CSVCMsg_PacketReliable::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_PacketReliable::CSVCMsg_PacketReliable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_PacketReliable.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_PacketReliable)
}
CSVCMsg_PacketReliable::CSVCMsg_PacketReliable(const CSVCMsg_PacketReliable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&tick_, &from.tick_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&tick_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_PacketReliable)
}

void CSVCMsg_PacketReliable::SharedCtor() {
  ::memset(&tick_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&tick_)) + sizeof(state_));
}

CSVCMsg_PacketReliable::~CSVCMsg_PacketReliable() {
  // @@protoc_insertion_point(destructor:CSVCMsg_PacketReliable)
  SharedDtor();
}

void CSVCMsg_PacketReliable::SharedDtor() {
}

void CSVCMsg_PacketReliable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_PacketReliable::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_PacketReliable& CSVCMsg_PacketReliable::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_PacketReliable.base);
  return *internal_default_instance();
}


void CSVCMsg_PacketReliable::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_PacketReliable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&tick_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&state_) -
        reinterpret_cast<char*>(&tick_)) + sizeof(state_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_PacketReliable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_PacketReliable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 tick = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tick();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tick_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 messagessize = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_messagessize();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &messagessize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_PacketReliable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_PacketReliable)
  return false;
#undef DO_
}

void CSVCMsg_PacketReliable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_PacketReliable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 tick = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tick(), output);
  }

  // optional int32 messagessize = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->messagessize(), output);
  }

  // optional bool state = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_PacketReliable)
}

::google::protobuf::uint8* CSVCMsg_PacketReliable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_PacketReliable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 tick = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->tick(), target);
  }

  // optional int32 messagessize = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->messagessize(), target);
  }

  // optional bool state = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_PacketReliable)
  return target;
}

size_t CSVCMsg_PacketReliable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_PacketReliable)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 tick = 1;
    if (has_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tick());
    }

    // optional int32 messagessize = 2;
    if (has_messagessize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->messagessize());
    }

    // optional bool state = 3;
    if (has_state()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_PacketReliable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_PacketReliable)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_PacketReliable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_PacketReliable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_PacketReliable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_PacketReliable)
    MergeFrom(*source);
  }
}

void CSVCMsg_PacketReliable::MergeFrom(const CSVCMsg_PacketReliable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_PacketReliable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      tick_ = from.tick_;
    }
    if (cached_has_bits & 0x00000002u) {
      messagessize_ = from.messagessize_;
    }
    if (cached_has_bits & 0x00000004u) {
      state_ = from.state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSVCMsg_PacketReliable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_PacketReliable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_PacketReliable::CopyFrom(const CSVCMsg_PacketReliable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_PacketReliable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_PacketReliable::IsInitialized() const {
  return true;
}

void CSVCMsg_PacketReliable::Swap(CSVCMsg_PacketReliable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_PacketReliable::InternalSwap(CSVCMsg_PacketReliable* other) {
  using std::swap;
  swap(tick_, other->tick_);
  swap(messagessize_, other->messagessize_);
  swap(state_, other->state_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_PacketReliable::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_FullFrameSplit::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_FullFrameSplit::kTickFieldNumber;
const int CSVCMsg_FullFrameSplit::kSectionFieldNumber;
const int CSVCMsg_FullFrameSplit::kTotalFieldNumber;
const int CSVCMsg_FullFrameSplit::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_FullFrameSplit::CSVCMsg_FullFrameSplit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_FullFrameSplit.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_FullFrameSplit)
}
CSVCMsg_FullFrameSplit::CSVCMsg_FullFrameSplit(const CSVCMsg_FullFrameSplit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  ::memcpy(&tick_, &from.tick_,
    static_cast<size_t>(reinterpret_cast<char*>(&total_) -
    reinterpret_cast<char*>(&tick_)) + sizeof(total_));
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_FullFrameSplit)
}

void CSVCMsg_FullFrameSplit::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tick_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_) -
      reinterpret_cast<char*>(&tick_)) + sizeof(total_));
}

CSVCMsg_FullFrameSplit::~CSVCMsg_FullFrameSplit() {
  // @@protoc_insertion_point(destructor:CSVCMsg_FullFrameSplit)
  SharedDtor();
}

void CSVCMsg_FullFrameSplit::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CSVCMsg_FullFrameSplit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_FullFrameSplit::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_FullFrameSplit& CSVCMsg_FullFrameSplit::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_FullFrameSplit.base);
  return *internal_default_instance();
}


void CSVCMsg_FullFrameSplit::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_FullFrameSplit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    data_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&tick_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&total_) -
        reinterpret_cast<char*>(&tick_)) + sizeof(total_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_FullFrameSplit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_FullFrameSplit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 tick = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tick();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tick_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 section = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_section();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &section_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 total = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_total();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_FullFrameSplit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_FullFrameSplit)
  return false;
#undef DO_
}

void CSVCMsg_FullFrameSplit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_FullFrameSplit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 tick = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tick(), output);
  }

  // optional int32 section = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->section(), output);
  }

  // optional int32 total = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->total(), output);
  }

  // optional bytes data = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_FullFrameSplit)
}

::google::protobuf::uint8* CSVCMsg_FullFrameSplit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_FullFrameSplit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 tick = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->tick(), target);
  }

  // optional int32 section = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->section(), target);
  }

  // optional int32 total = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->total(), target);
  }

  // optional bytes data = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_FullFrameSplit)
  return target;
}

size_t CSVCMsg_FullFrameSplit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_FullFrameSplit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional bytes data = 4;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

    // optional int32 tick = 1;
    if (has_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tick());
    }

    // optional int32 section = 2;
    if (has_section()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->section());
    }

    // optional int32 total = 3;
    if (has_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_FullFrameSplit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_FullFrameSplit)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_FullFrameSplit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_FullFrameSplit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_FullFrameSplit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_FullFrameSplit)
    MergeFrom(*source);
  }
}

void CSVCMsg_FullFrameSplit::MergeFrom(const CSVCMsg_FullFrameSplit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_FullFrameSplit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
    if (cached_has_bits & 0x00000002u) {
      tick_ = from.tick_;
    }
    if (cached_has_bits & 0x00000004u) {
      section_ = from.section_;
    }
    if (cached_has_bits & 0x00000008u) {
      total_ = from.total_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSVCMsg_FullFrameSplit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_FullFrameSplit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_FullFrameSplit::CopyFrom(const CSVCMsg_FullFrameSplit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_FullFrameSplit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_FullFrameSplit::IsInitialized() const {
  return true;
}

void CSVCMsg_FullFrameSplit::Swap(CSVCMsg_FullFrameSplit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_FullFrameSplit::InternalSwap(CSVCMsg_FullFrameSplit* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(tick_, other->tick_);
  swap(section_, other->section_);
  swap(total_, other->total_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_FullFrameSplit::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_HLTVStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_HLTVStatus::kMasterFieldNumber;
const int CSVCMsg_HLTVStatus::kClientsFieldNumber;
const int CSVCMsg_HLTVStatus::kSlotsFieldNumber;
const int CSVCMsg_HLTVStatus::kProxiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_HLTVStatus::CSVCMsg_HLTVStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_HLTVStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_HLTVStatus)
}
CSVCMsg_HLTVStatus::CSVCMsg_HLTVStatus(const CSVCMsg_HLTVStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  master_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_master()) {
    master_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.master_);
  }
  ::memcpy(&clients_, &from.clients_,
    static_cast<size_t>(reinterpret_cast<char*>(&proxies_) -
    reinterpret_cast<char*>(&clients_)) + sizeof(proxies_));
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_HLTVStatus)
}

void CSVCMsg_HLTVStatus::SharedCtor() {
  master_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&clients_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&proxies_) -
      reinterpret_cast<char*>(&clients_)) + sizeof(proxies_));
}

CSVCMsg_HLTVStatus::~CSVCMsg_HLTVStatus() {
  // @@protoc_insertion_point(destructor:CSVCMsg_HLTVStatus)
  SharedDtor();
}

void CSVCMsg_HLTVStatus::SharedDtor() {
  master_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CSVCMsg_HLTVStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_HLTVStatus::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_HLTVStatus& CSVCMsg_HLTVStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_HLTVStatus.base);
  return *internal_default_instance();
}


void CSVCMsg_HLTVStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_HLTVStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    master_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&clients_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&proxies_) -
        reinterpret_cast<char*>(&clients_)) + sizeof(proxies_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_HLTVStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_HLTVStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string master = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_master()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->master().data(), static_cast<int>(this->master().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSVCMsg_HLTVStatus.master");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 clients = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_clients();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clients_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 slots = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_slots();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slots_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 proxies = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_proxies();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &proxies_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_HLTVStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_HLTVStatus)
  return false;
#undef DO_
}

void CSVCMsg_HLTVStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_HLTVStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string master = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->master().data(), static_cast<int>(this->master().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_HLTVStatus.master");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->master(), output);
  }

  // optional int32 clients = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->clients(), output);
  }

  // optional int32 slots = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->slots(), output);
  }

  // optional int32 proxies = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->proxies(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_HLTVStatus)
}

::google::protobuf::uint8* CSVCMsg_HLTVStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_HLTVStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string master = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->master().data(), static_cast<int>(this->master().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_HLTVStatus.master");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->master(), target);
  }

  // optional int32 clients = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->clients(), target);
  }

  // optional int32 slots = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->slots(), target);
  }

  // optional int32 proxies = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->proxies(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_HLTVStatus)
  return target;
}

size_t CSVCMsg_HLTVStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_HLTVStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string master = 1;
    if (has_master()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->master());
    }

    // optional int32 clients = 2;
    if (has_clients()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->clients());
    }

    // optional int32 slots = 3;
    if (has_slots()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slots());
    }

    // optional int32 proxies = 4;
    if (has_proxies()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->proxies());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_HLTVStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_HLTVStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_HLTVStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_HLTVStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_HLTVStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_HLTVStatus)
    MergeFrom(*source);
  }
}

void CSVCMsg_HLTVStatus::MergeFrom(const CSVCMsg_HLTVStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_HLTVStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_master();
      master_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.master_);
    }
    if (cached_has_bits & 0x00000002u) {
      clients_ = from.clients_;
    }
    if (cached_has_bits & 0x00000004u) {
      slots_ = from.slots_;
    }
    if (cached_has_bits & 0x00000008u) {
      proxies_ = from.proxies_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSVCMsg_HLTVStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_HLTVStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_HLTVStatus::CopyFrom(const CSVCMsg_HLTVStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_HLTVStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_HLTVStatus::IsInitialized() const {
  return true;
}

void CSVCMsg_HLTVStatus::Swap(CSVCMsg_HLTVStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_HLTVStatus::InternalSwap(CSVCMsg_HLTVStatus* other) {
  using std::swap;
  master_.Swap(&other->master_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(clients_, other->clients_);
  swap(slots_, other->slots_);
  swap(proxies_, other->proxies_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_HLTVStatus::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_ServerSteamID::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_ServerSteamID::kSteamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_ServerSteamID::CSVCMsg_ServerSteamID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_ServerSteamID.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_ServerSteamID)
}
CSVCMsg_ServerSteamID::CSVCMsg_ServerSteamID(const CSVCMsg_ServerSteamID& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steam_id_ = from.steam_id_;
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_ServerSteamID)
}

void CSVCMsg_ServerSteamID::SharedCtor() {
  steam_id_ = GOOGLE_ULONGLONG(0);
}

CSVCMsg_ServerSteamID::~CSVCMsg_ServerSteamID() {
  // @@protoc_insertion_point(destructor:CSVCMsg_ServerSteamID)
  SharedDtor();
}

void CSVCMsg_ServerSteamID::SharedDtor() {
}

void CSVCMsg_ServerSteamID::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_ServerSteamID::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_ServerSteamID& CSVCMsg_ServerSteamID::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_ServerSteamID.base);
  return *internal_default_instance();
}


void CSVCMsg_ServerSteamID::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_ServerSteamID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steam_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_ServerSteamID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_ServerSteamID)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_ServerSteamID)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_ServerSteamID)
  return false;
#undef DO_
}

void CSVCMsg_ServerSteamID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_ServerSteamID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->steam_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_ServerSteamID)
}

::google::protobuf::uint8* CSVCMsg_ServerSteamID::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_ServerSteamID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->steam_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_ServerSteamID)
  return target;
}

size_t CSVCMsg_ServerSteamID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_ServerSteamID)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint64 steam_id = 1;
  if (has_steam_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->steam_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_ServerSteamID::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_ServerSteamID)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_ServerSteamID* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_ServerSteamID>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_ServerSteamID)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_ServerSteamID)
    MergeFrom(*source);
  }
}

void CSVCMsg_ServerSteamID::MergeFrom(const CSVCMsg_ServerSteamID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_ServerSteamID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_steam_id()) {
    set_steam_id(from.steam_id());
  }
}

void CSVCMsg_ServerSteamID::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_ServerSteamID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_ServerSteamID::CopyFrom(const CSVCMsg_ServerSteamID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_ServerSteamID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_ServerSteamID::IsInitialized() const {
  return true;
}

void CSVCMsg_ServerSteamID::Swap(CSVCMsg_ServerSteamID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_ServerSteamID::InternalSwap(CSVCMsg_ServerSteamID* other) {
  using std::swap;
  swap(steam_id_, other->steam_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_ServerSteamID::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_CmdKeyValues::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_CmdKeyValues::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_CmdKeyValues::CSVCMsg_CmdKeyValues()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_CmdKeyValues.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_CmdKeyValues)
}
CSVCMsg_CmdKeyValues::CSVCMsg_CmdKeyValues(const CSVCMsg_CmdKeyValues& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_CmdKeyValues)
}

void CSVCMsg_CmdKeyValues::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CSVCMsg_CmdKeyValues::~CSVCMsg_CmdKeyValues() {
  // @@protoc_insertion_point(destructor:CSVCMsg_CmdKeyValues)
  SharedDtor();
}

void CSVCMsg_CmdKeyValues::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CSVCMsg_CmdKeyValues::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_CmdKeyValues::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_CmdKeyValues& CSVCMsg_CmdKeyValues::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_CmdKeyValues.base);
  return *internal_default_instance();
}


void CSVCMsg_CmdKeyValues::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_CmdKeyValues)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    data_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_CmdKeyValues::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_CmdKeyValues)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_CmdKeyValues)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_CmdKeyValues)
  return false;
#undef DO_
}

void CSVCMsg_CmdKeyValues::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_CmdKeyValues)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes data = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_CmdKeyValues)
}

::google::protobuf::uint8* CSVCMsg_CmdKeyValues::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_CmdKeyValues)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes data = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_CmdKeyValues)
  return target;
}

size_t CSVCMsg_CmdKeyValues::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_CmdKeyValues)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bytes data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_CmdKeyValues::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_CmdKeyValues)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_CmdKeyValues* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_CmdKeyValues>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_CmdKeyValues)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_CmdKeyValues)
    MergeFrom(*source);
  }
}

void CSVCMsg_CmdKeyValues::MergeFrom(const CSVCMsg_CmdKeyValues& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_CmdKeyValues)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    set_has_data();
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void CSVCMsg_CmdKeyValues::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_CmdKeyValues)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_CmdKeyValues::CopyFrom(const CSVCMsg_CmdKeyValues& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_CmdKeyValues)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_CmdKeyValues::IsInitialized() const {
  return true;
}

void CSVCMsg_CmdKeyValues::Swap(CSVCMsg_CmdKeyValues* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_CmdKeyValues::InternalSwap(CSVCMsg_CmdKeyValues* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_CmdKeyValues::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgIPCAddress::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgIPCAddress::kComputerGuidFieldNumber;
const int CMsgIPCAddress::kProcessIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgIPCAddress::CMsgIPCAddress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CMsgIPCAddress.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgIPCAddress)
}
CMsgIPCAddress::CMsgIPCAddress(const CMsgIPCAddress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&computer_guid_, &from.computer_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&process_id_) -
    reinterpret_cast<char*>(&computer_guid_)) + sizeof(process_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgIPCAddress)
}

void CMsgIPCAddress::SharedCtor() {
  ::memset(&computer_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&process_id_) -
      reinterpret_cast<char*>(&computer_guid_)) + sizeof(process_id_));
}

CMsgIPCAddress::~CMsgIPCAddress() {
  // @@protoc_insertion_point(destructor:CMsgIPCAddress)
  SharedDtor();
}

void CMsgIPCAddress::SharedDtor() {
}

void CMsgIPCAddress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgIPCAddress::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgIPCAddress& CMsgIPCAddress::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CMsgIPCAddress.base);
  return *internal_default_instance();
}


void CMsgIPCAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgIPCAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&computer_guid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&process_id_) -
        reinterpret_cast<char*>(&computer_guid_)) + sizeof(process_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgIPCAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgIPCAddress)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 computer_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_computer_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &computer_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 process_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_process_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &process_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgIPCAddress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgIPCAddress)
  return false;
#undef DO_
}

void CMsgIPCAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgIPCAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 computer_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->computer_guid(), output);
  }

  // optional uint32 process_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->process_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgIPCAddress)
}

::google::protobuf::uint8* CMsgIPCAddress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgIPCAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 computer_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->computer_guid(), target);
  }

  // optional uint32 process_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->process_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgIPCAddress)
  return target;
}

size_t CMsgIPCAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgIPCAddress)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 computer_guid = 1;
    if (has_computer_guid()) {
      total_size += 1 + 8;
    }

    // optional uint32 process_id = 2;
    if (has_process_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->process_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgIPCAddress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgIPCAddress)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgIPCAddress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgIPCAddress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgIPCAddress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgIPCAddress)
    MergeFrom(*source);
  }
}

void CMsgIPCAddress::MergeFrom(const CMsgIPCAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgIPCAddress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      computer_guid_ = from.computer_guid_;
    }
    if (cached_has_bits & 0x00000002u) {
      process_id_ = from.process_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgIPCAddress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgIPCAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgIPCAddress::CopyFrom(const CMsgIPCAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgIPCAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgIPCAddress::IsInitialized() const {
  return true;
}

void CMsgIPCAddress::Swap(CMsgIPCAddress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgIPCAddress::InternalSwap(CMsgIPCAddress* other) {
  using std::swap;
  swap(computer_guid_, other->computer_guid_);
  swap(process_id_, other->process_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgIPCAddress::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgServerPeer::InitAsDefaultInstance() {
  ::_CMsgServerPeer_default_instance_._instance.get_mutable()->ipc_ = const_cast< ::CMsgIPCAddress*>(
      ::CMsgIPCAddress::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgServerPeer::kPlayerSlotFieldNumber;
const int CMsgServerPeer::kSteamidFieldNumber;
const int CMsgServerPeer::kIpcFieldNumber;
const int CMsgServerPeer::kTheyHearYouFieldNumber;
const int CMsgServerPeer::kYouHearThemFieldNumber;
const int CMsgServerPeer::kIsListenserverHostFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgServerPeer::CMsgServerPeer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CMsgServerPeer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgServerPeer)
}
CMsgServerPeer::CMsgServerPeer(const CMsgServerPeer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ipc()) {
    ipc_ = new ::CMsgIPCAddress(*from.ipc_);
  } else {
    ipc_ = NULL;
  }
  ::memcpy(&steamid_, &from.steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_listenserver_host_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(is_listenserver_host_));
  // @@protoc_insertion_point(copy_constructor:CMsgServerPeer)
}

void CMsgServerPeer::SharedCtor() {
  ::memset(&ipc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_listenserver_host_) -
      reinterpret_cast<char*>(&ipc_)) + sizeof(is_listenserver_host_));
}

CMsgServerPeer::~CMsgServerPeer() {
  // @@protoc_insertion_point(destructor:CMsgServerPeer)
  SharedDtor();
}

void CMsgServerPeer::SharedDtor() {
  if (this != internal_default_instance()) delete ipc_;
}

void CMsgServerPeer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgServerPeer::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgServerPeer& CMsgServerPeer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CMsgServerPeer.base);
  return *internal_default_instance();
}


void CMsgServerPeer::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgServerPeer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(ipc_ != NULL);
    ipc_->Clear();
  }
  if (cached_has_bits & 62u) {
    ::memset(&steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_listenserver_host_) -
        reinterpret_cast<char*>(&steamid_)) + sizeof(is_listenserver_host_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgServerPeer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgServerPeer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 player_slot = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_slot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_slot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steamid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgIPCAddress ipc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ipc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool they_hear_you = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_they_hear_you();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &they_hear_you_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool you_hear_them = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_you_hear_them();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &you_hear_them_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_listenserver_host = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_is_listenserver_host();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_listenserver_host_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgServerPeer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgServerPeer)
  return false;
#undef DO_
}

void CMsgServerPeer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgServerPeer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 player_slot = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->player_slot(), output);
  }

  // optional fixed64 steamid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steamid(), output);
  }

  // optional .CMsgIPCAddress ipc = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_ipc(), output);
  }

  // optional bool they_hear_you = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->they_hear_you(), output);
  }

  // optional bool you_hear_them = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->you_hear_them(), output);
  }

  // optional bool is_listenserver_host = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_listenserver_host(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgServerPeer)
}

::google::protobuf::uint8* CMsgServerPeer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgServerPeer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 player_slot = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->player_slot(), target);
  }

  // optional fixed64 steamid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steamid(), target);
  }

  // optional .CMsgIPCAddress ipc = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_ipc(), deterministic, target);
  }

  // optional bool they_hear_you = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->they_hear_you(), target);
  }

  // optional bool you_hear_them = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->you_hear_them(), target);
  }

  // optional bool is_listenserver_host = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_listenserver_host(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgServerPeer)
  return target;
}

size_t CMsgServerPeer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgServerPeer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional .CMsgIPCAddress ipc = 3;
    if (has_ipc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ipc_);
    }

    // optional fixed64 steamid = 2;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional int32 player_slot = 1;
    if (has_player_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player_slot());
    }

    // optional bool they_hear_you = 4;
    if (has_they_hear_you()) {
      total_size += 1 + 1;
    }

    // optional bool you_hear_them = 5;
    if (has_you_hear_them()) {
      total_size += 1 + 1;
    }

    // optional bool is_listenserver_host = 6;
    if (has_is_listenserver_host()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgServerPeer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgServerPeer)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgServerPeer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgServerPeer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgServerPeer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgServerPeer)
    MergeFrom(*source);
  }
}

void CMsgServerPeer::MergeFrom(const CMsgServerPeer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgServerPeer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_ipc()->::CMsgIPCAddress::MergeFrom(from.ipc());
    }
    if (cached_has_bits & 0x00000002u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000004u) {
      player_slot_ = from.player_slot_;
    }
    if (cached_has_bits & 0x00000008u) {
      they_hear_you_ = from.they_hear_you_;
    }
    if (cached_has_bits & 0x00000010u) {
      you_hear_them_ = from.you_hear_them_;
    }
    if (cached_has_bits & 0x00000020u) {
      is_listenserver_host_ = from.is_listenserver_host_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgServerPeer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgServerPeer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgServerPeer::CopyFrom(const CMsgServerPeer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgServerPeer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgServerPeer::IsInitialized() const {
  return true;
}

void CMsgServerPeer::Swap(CMsgServerPeer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgServerPeer::InternalSwap(CMsgServerPeer* other) {
  using std::swap;
  swap(ipc_, other->ipc_);
  swap(steamid_, other->steamid_);
  swap(player_slot_, other->player_slot_);
  swap(they_hear_you_, other->they_hear_you_);
  swap(you_hear_them_, other->you_hear_them_);
  swap(is_listenserver_host_, other->is_listenserver_host_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgServerPeer::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_PeerList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_PeerList::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_PeerList::CSVCMsg_PeerList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_PeerList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_PeerList)
}
CSVCMsg_PeerList::CSVCMsg_PeerList(const CSVCMsg_PeerList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      peer_(from.peer_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_PeerList)
}

void CSVCMsg_PeerList::SharedCtor() {
}

CSVCMsg_PeerList::~CSVCMsg_PeerList() {
  // @@protoc_insertion_point(destructor:CSVCMsg_PeerList)
  SharedDtor();
}

void CSVCMsg_PeerList::SharedDtor() {
}

void CSVCMsg_PeerList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_PeerList::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_PeerList& CSVCMsg_PeerList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_PeerList.base);
  return *internal_default_instance();
}


void CSVCMsg_PeerList::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_PeerList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  peer_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_PeerList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_PeerList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgServerPeer peer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_peer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_PeerList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_PeerList)
  return false;
#undef DO_
}

void CSVCMsg_PeerList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_PeerList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgServerPeer peer = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->peer_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->peer(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_PeerList)
}

::google::protobuf::uint8* CSVCMsg_PeerList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_PeerList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgServerPeer peer = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->peer_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->peer(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_PeerList)
  return target;
}

size_t CSVCMsg_PeerList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_PeerList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgServerPeer peer = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->peer_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->peer(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_PeerList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_PeerList)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_PeerList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_PeerList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_PeerList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_PeerList)
    MergeFrom(*source);
  }
}

void CSVCMsg_PeerList::MergeFrom(const CSVCMsg_PeerList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_PeerList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  peer_.MergeFrom(from.peer_);
}

void CSVCMsg_PeerList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_PeerList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_PeerList::CopyFrom(const CSVCMsg_PeerList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_PeerList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_PeerList::IsInitialized() const {
  return true;
}

void CSVCMsg_PeerList::Swap(CSVCMsg_PeerList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_PeerList::InternalSwap(CSVCMsg_PeerList* other) {
  using std::swap;
  CastToBase(&peer_)->InternalSwap(CastToBase(&other->peer_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_PeerList::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_ClearAllStringTables::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_ClearAllStringTables::kMapnameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_ClearAllStringTables::CSVCMsg_ClearAllStringTables()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_ClearAllStringTables.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_ClearAllStringTables)
}
CSVCMsg_ClearAllStringTables::CSVCMsg_ClearAllStringTables(const CSVCMsg_ClearAllStringTables& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mapname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mapname()) {
    mapname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mapname_);
  }
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_ClearAllStringTables)
}

void CSVCMsg_ClearAllStringTables::SharedCtor() {
  mapname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CSVCMsg_ClearAllStringTables::~CSVCMsg_ClearAllStringTables() {
  // @@protoc_insertion_point(destructor:CSVCMsg_ClearAllStringTables)
  SharedDtor();
}

void CSVCMsg_ClearAllStringTables::SharedDtor() {
  mapname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CSVCMsg_ClearAllStringTables::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_ClearAllStringTables::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_ClearAllStringTables& CSVCMsg_ClearAllStringTables::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_ClearAllStringTables.base);
  return *internal_default_instance();
}


void CSVCMsg_ClearAllStringTables::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_ClearAllStringTables)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    mapname_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_ClearAllStringTables::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_ClearAllStringTables)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string mapname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mapname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mapname().data(), static_cast<int>(this->mapname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSVCMsg_ClearAllStringTables.mapname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_ClearAllStringTables)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_ClearAllStringTables)
  return false;
#undef DO_
}

void CSVCMsg_ClearAllStringTables::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_ClearAllStringTables)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string mapname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mapname().data(), static_cast<int>(this->mapname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_ClearAllStringTables.mapname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mapname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_ClearAllStringTables)
}

::google::protobuf::uint8* CSVCMsg_ClearAllStringTables::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_ClearAllStringTables)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string mapname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mapname().data(), static_cast<int>(this->mapname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_ClearAllStringTables.mapname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mapname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_ClearAllStringTables)
  return target;
}

size_t CSVCMsg_ClearAllStringTables::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_ClearAllStringTables)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string mapname = 1;
  if (has_mapname()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mapname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_ClearAllStringTables::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_ClearAllStringTables)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_ClearAllStringTables* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_ClearAllStringTables>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_ClearAllStringTables)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_ClearAllStringTables)
    MergeFrom(*source);
  }
}

void CSVCMsg_ClearAllStringTables::MergeFrom(const CSVCMsg_ClearAllStringTables& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_ClearAllStringTables)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mapname()) {
    set_has_mapname();
    mapname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mapname_);
  }
}

void CSVCMsg_ClearAllStringTables::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_ClearAllStringTables)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_ClearAllStringTables::CopyFrom(const CSVCMsg_ClearAllStringTables& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_ClearAllStringTables)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_ClearAllStringTables::IsInitialized() const {
  return true;
}

void CSVCMsg_ClearAllStringTables::Swap(CSVCMsg_ClearAllStringTables* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_ClearAllStringTables::InternalSwap(CSVCMsg_ClearAllStringTables* other) {
  using std::swap;
  mapname_.Swap(&other->mapname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_ClearAllStringTables::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProtoFlattenedSerializerField_t::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoFlattenedSerializerField_t::kVarTypeSymFieldNumber;
const int ProtoFlattenedSerializerField_t::kVarNameSymFieldNumber;
const int ProtoFlattenedSerializerField_t::kBitCountFieldNumber;
const int ProtoFlattenedSerializerField_t::kLowValueFieldNumber;
const int ProtoFlattenedSerializerField_t::kHighValueFieldNumber;
const int ProtoFlattenedSerializerField_t::kEncodeFlagsFieldNumber;
const int ProtoFlattenedSerializerField_t::kFieldSerializerNameSymFieldNumber;
const int ProtoFlattenedSerializerField_t::kFieldSerializerVersionFieldNumber;
const int ProtoFlattenedSerializerField_t::kSendNodeSymFieldNumber;
const int ProtoFlattenedSerializerField_t::kVarEncoderSymFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoFlattenedSerializerField_t::ProtoFlattenedSerializerField_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_ProtoFlattenedSerializerField_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoFlattenedSerializerField_t)
}
ProtoFlattenedSerializerField_t::ProtoFlattenedSerializerField_t(const ProtoFlattenedSerializerField_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&var_type_sym_, &from.var_type_sym_,
    static_cast<size_t>(reinterpret_cast<char*>(&var_encoder_sym_) -
    reinterpret_cast<char*>(&var_type_sym_)) + sizeof(var_encoder_sym_));
  // @@protoc_insertion_point(copy_constructor:ProtoFlattenedSerializerField_t)
}

void ProtoFlattenedSerializerField_t::SharedCtor() {
  ::memset(&var_type_sym_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&var_encoder_sym_) -
      reinterpret_cast<char*>(&var_type_sym_)) + sizeof(var_encoder_sym_));
}

ProtoFlattenedSerializerField_t::~ProtoFlattenedSerializerField_t() {
  // @@protoc_insertion_point(destructor:ProtoFlattenedSerializerField_t)
  SharedDtor();
}

void ProtoFlattenedSerializerField_t::SharedDtor() {
}

void ProtoFlattenedSerializerField_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProtoFlattenedSerializerField_t::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtoFlattenedSerializerField_t& ProtoFlattenedSerializerField_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_ProtoFlattenedSerializerField_t.base);
  return *internal_default_instance();
}


void ProtoFlattenedSerializerField_t::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoFlattenedSerializerField_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&var_type_sym_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&field_serializer_version_) -
        reinterpret_cast<char*>(&var_type_sym_)) + sizeof(field_serializer_version_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&send_node_sym_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&var_encoder_sym_) -
        reinterpret_cast<char*>(&send_node_sym_)) + sizeof(var_encoder_sym_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProtoFlattenedSerializerField_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoFlattenedSerializerField_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 var_type_sym = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_var_type_sym();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &var_type_sym_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 var_name_sym = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_var_name_sym();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &var_name_sym_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 bit_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_bit_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bit_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float low_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_low_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &low_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float high_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_high_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &high_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 encode_flags = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_encode_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &encode_flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 field_serializer_name_sym = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_field_serializer_name_sym();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field_serializer_name_sym_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 field_serializer_version = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_field_serializer_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field_serializer_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 send_node_sym = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_send_node_sym();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &send_node_sym_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 var_encoder_sym = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_var_encoder_sym();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &var_encoder_sym_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoFlattenedSerializerField_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoFlattenedSerializerField_t)
  return false;
#undef DO_
}

void ProtoFlattenedSerializerField_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoFlattenedSerializerField_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 var_type_sym = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->var_type_sym(), output);
  }

  // optional int32 var_name_sym = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->var_name_sym(), output);
  }

  // optional int32 bit_count = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->bit_count(), output);
  }

  // optional float low_value = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->low_value(), output);
  }

  // optional float high_value = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->high_value(), output);
  }

  // optional int32 encode_flags = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->encode_flags(), output);
  }

  // optional int32 field_serializer_name_sym = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->field_serializer_name_sym(), output);
  }

  // optional int32 field_serializer_version = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->field_serializer_version(), output);
  }

  // optional int32 send_node_sym = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->send_node_sym(), output);
  }

  // optional int32 var_encoder_sym = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->var_encoder_sym(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoFlattenedSerializerField_t)
}

::google::protobuf::uint8* ProtoFlattenedSerializerField_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoFlattenedSerializerField_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 var_type_sym = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->var_type_sym(), target);
  }

  // optional int32 var_name_sym = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->var_name_sym(), target);
  }

  // optional int32 bit_count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->bit_count(), target);
  }

  // optional float low_value = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->low_value(), target);
  }

  // optional float high_value = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->high_value(), target);
  }

  // optional int32 encode_flags = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->encode_flags(), target);
  }

  // optional int32 field_serializer_name_sym = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->field_serializer_name_sym(), target);
  }

  // optional int32 field_serializer_version = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->field_serializer_version(), target);
  }

  // optional int32 send_node_sym = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->send_node_sym(), target);
  }

  // optional int32 var_encoder_sym = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->var_encoder_sym(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoFlattenedSerializerField_t)
  return target;
}

size_t ProtoFlattenedSerializerField_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoFlattenedSerializerField_t)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 var_type_sym = 1;
    if (has_var_type_sym()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->var_type_sym());
    }

    // optional int32 var_name_sym = 2;
    if (has_var_name_sym()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->var_name_sym());
    }

    // optional int32 bit_count = 3;
    if (has_bit_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bit_count());
    }

    // optional float low_value = 4;
    if (has_low_value()) {
      total_size += 1 + 4;
    }

    // optional float high_value = 5;
    if (has_high_value()) {
      total_size += 1 + 4;
    }

    // optional int32 encode_flags = 6;
    if (has_encode_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->encode_flags());
    }

    // optional int32 field_serializer_name_sym = 7;
    if (has_field_serializer_name_sym()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field_serializer_name_sym());
    }

    // optional int32 field_serializer_version = 8;
    if (has_field_serializer_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->field_serializer_version());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional int32 send_node_sym = 9;
    if (has_send_node_sym()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->send_node_sym());
    }

    // optional int32 var_encoder_sym = 10;
    if (has_var_encoder_sym()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->var_encoder_sym());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoFlattenedSerializerField_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoFlattenedSerializerField_t)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoFlattenedSerializerField_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoFlattenedSerializerField_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoFlattenedSerializerField_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoFlattenedSerializerField_t)
    MergeFrom(*source);
  }
}

void ProtoFlattenedSerializerField_t::MergeFrom(const ProtoFlattenedSerializerField_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoFlattenedSerializerField_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      var_type_sym_ = from.var_type_sym_;
    }
    if (cached_has_bits & 0x00000002u) {
      var_name_sym_ = from.var_name_sym_;
    }
    if (cached_has_bits & 0x00000004u) {
      bit_count_ = from.bit_count_;
    }
    if (cached_has_bits & 0x00000008u) {
      low_value_ = from.low_value_;
    }
    if (cached_has_bits & 0x00000010u) {
      high_value_ = from.high_value_;
    }
    if (cached_has_bits & 0x00000020u) {
      encode_flags_ = from.encode_flags_;
    }
    if (cached_has_bits & 0x00000040u) {
      field_serializer_name_sym_ = from.field_serializer_name_sym_;
    }
    if (cached_has_bits & 0x00000080u) {
      field_serializer_version_ = from.field_serializer_version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      send_node_sym_ = from.send_node_sym_;
    }
    if (cached_has_bits & 0x00000200u) {
      var_encoder_sym_ = from.var_encoder_sym_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoFlattenedSerializerField_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoFlattenedSerializerField_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoFlattenedSerializerField_t::CopyFrom(const ProtoFlattenedSerializerField_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoFlattenedSerializerField_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoFlattenedSerializerField_t::IsInitialized() const {
  return true;
}

void ProtoFlattenedSerializerField_t::Swap(ProtoFlattenedSerializerField_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoFlattenedSerializerField_t::InternalSwap(ProtoFlattenedSerializerField_t* other) {
  using std::swap;
  swap(var_type_sym_, other->var_type_sym_);
  swap(var_name_sym_, other->var_name_sym_);
  swap(bit_count_, other->bit_count_);
  swap(low_value_, other->low_value_);
  swap(high_value_, other->high_value_);
  swap(encode_flags_, other->encode_flags_);
  swap(field_serializer_name_sym_, other->field_serializer_name_sym_);
  swap(field_serializer_version_, other->field_serializer_version_);
  swap(send_node_sym_, other->send_node_sym_);
  swap(var_encoder_sym_, other->var_encoder_sym_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProtoFlattenedSerializerField_t::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProtoFlattenedSerializer_t::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoFlattenedSerializer_t::kSerializerNameSymFieldNumber;
const int ProtoFlattenedSerializer_t::kSerializerVersionFieldNumber;
const int ProtoFlattenedSerializer_t::kFieldsIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoFlattenedSerializer_t::ProtoFlattenedSerializer_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_ProtoFlattenedSerializer_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoFlattenedSerializer_t)
}
ProtoFlattenedSerializer_t::ProtoFlattenedSerializer_t(const ProtoFlattenedSerializer_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      fields_index_(from.fields_index_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&serializer_name_sym_, &from.serializer_name_sym_,
    static_cast<size_t>(reinterpret_cast<char*>(&serializer_version_) -
    reinterpret_cast<char*>(&serializer_name_sym_)) + sizeof(serializer_version_));
  // @@protoc_insertion_point(copy_constructor:ProtoFlattenedSerializer_t)
}

void ProtoFlattenedSerializer_t::SharedCtor() {
  ::memset(&serializer_name_sym_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serializer_version_) -
      reinterpret_cast<char*>(&serializer_name_sym_)) + sizeof(serializer_version_));
}

ProtoFlattenedSerializer_t::~ProtoFlattenedSerializer_t() {
  // @@protoc_insertion_point(destructor:ProtoFlattenedSerializer_t)
  SharedDtor();
}

void ProtoFlattenedSerializer_t::SharedDtor() {
}

void ProtoFlattenedSerializer_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProtoFlattenedSerializer_t::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtoFlattenedSerializer_t& ProtoFlattenedSerializer_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_ProtoFlattenedSerializer_t.base);
  return *internal_default_instance();
}


void ProtoFlattenedSerializer_t::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoFlattenedSerializer_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fields_index_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&serializer_name_sym_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&serializer_version_) -
        reinterpret_cast<char*>(&serializer_name_sym_)) + sizeof(serializer_version_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProtoFlattenedSerializer_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoFlattenedSerializer_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 serializer_name_sym = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_serializer_name_sym();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serializer_name_sym_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 serializer_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_serializer_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serializer_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 fields_index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24u, input, this->mutable_fields_index())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_fields_index())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoFlattenedSerializer_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoFlattenedSerializer_t)
  return false;
#undef DO_
}

void ProtoFlattenedSerializer_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoFlattenedSerializer_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 serializer_name_sym = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serializer_name_sym(), output);
  }

  // optional int32 serializer_version = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->serializer_version(), output);
  }

  // repeated int32 fields_index = 3;
  for (int i = 0, n = this->fields_index_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->fields_index(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoFlattenedSerializer_t)
}

::google::protobuf::uint8* ProtoFlattenedSerializer_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoFlattenedSerializer_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 serializer_name_sym = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serializer_name_sym(), target);
  }

  // optional int32 serializer_version = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->serializer_version(), target);
  }

  // repeated int32 fields_index = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(3, this->fields_index_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoFlattenedSerializer_t)
  return target;
}

size_t ProtoFlattenedSerializer_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoFlattenedSerializer_t)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 fields_index = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->fields_index_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->fields_index_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 serializer_name_sym = 1;
    if (has_serializer_name_sym()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->serializer_name_sym());
    }

    // optional int32 serializer_version = 2;
    if (has_serializer_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->serializer_version());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoFlattenedSerializer_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoFlattenedSerializer_t)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoFlattenedSerializer_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoFlattenedSerializer_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoFlattenedSerializer_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoFlattenedSerializer_t)
    MergeFrom(*source);
  }
}

void ProtoFlattenedSerializer_t::MergeFrom(const ProtoFlattenedSerializer_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoFlattenedSerializer_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fields_index_.MergeFrom(from.fields_index_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      serializer_name_sym_ = from.serializer_name_sym_;
    }
    if (cached_has_bits & 0x00000002u) {
      serializer_version_ = from.serializer_version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoFlattenedSerializer_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoFlattenedSerializer_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoFlattenedSerializer_t::CopyFrom(const ProtoFlattenedSerializer_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoFlattenedSerializer_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoFlattenedSerializer_t::IsInitialized() const {
  return true;
}

void ProtoFlattenedSerializer_t::Swap(ProtoFlattenedSerializer_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoFlattenedSerializer_t::InternalSwap(ProtoFlattenedSerializer_t* other) {
  using std::swap;
  fields_index_.InternalSwap(&other->fields_index_);
  swap(serializer_name_sym_, other->serializer_name_sym_);
  swap(serializer_version_, other->serializer_version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProtoFlattenedSerializer_t::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_FlattenedSerializer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_FlattenedSerializer::kSerializersFieldNumber;
const int CSVCMsg_FlattenedSerializer::kSymbolsFieldNumber;
const int CSVCMsg_FlattenedSerializer::kFieldsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_FlattenedSerializer::CSVCMsg_FlattenedSerializer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_FlattenedSerializer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_FlattenedSerializer)
}
CSVCMsg_FlattenedSerializer::CSVCMsg_FlattenedSerializer(const CSVCMsg_FlattenedSerializer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      serializers_(from.serializers_),
      symbols_(from.symbols_),
      fields_(from.fields_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_FlattenedSerializer)
}

void CSVCMsg_FlattenedSerializer::SharedCtor() {
}

CSVCMsg_FlattenedSerializer::~CSVCMsg_FlattenedSerializer() {
  // @@protoc_insertion_point(destructor:CSVCMsg_FlattenedSerializer)
  SharedDtor();
}

void CSVCMsg_FlattenedSerializer::SharedDtor() {
}

void CSVCMsg_FlattenedSerializer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_FlattenedSerializer::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_FlattenedSerializer& CSVCMsg_FlattenedSerializer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_FlattenedSerializer.base);
  return *internal_default_instance();
}


void CSVCMsg_FlattenedSerializer::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_FlattenedSerializer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  serializers_.Clear();
  symbols_.Clear();
  fields_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_FlattenedSerializer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_FlattenedSerializer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoFlattenedSerializer_t serializers = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_serializers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string symbols = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_symbols()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->symbols(this->symbols_size() - 1).data(),
            static_cast<int>(this->symbols(this->symbols_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSVCMsg_FlattenedSerializer.symbols");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ProtoFlattenedSerializerField_t fields = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_fields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_FlattenedSerializer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_FlattenedSerializer)
  return false;
#undef DO_
}

void CSVCMsg_FlattenedSerializer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_FlattenedSerializer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ProtoFlattenedSerializer_t serializers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->serializers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->serializers(static_cast<int>(i)),
      output);
  }

  // repeated string symbols = 2;
  for (int i = 0, n = this->symbols_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->symbols(i).data(), static_cast<int>(this->symbols(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_FlattenedSerializer.symbols");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->symbols(i), output);
  }

  // repeated .ProtoFlattenedSerializerField_t fields = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->fields(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_FlattenedSerializer)
}

::google::protobuf::uint8* CSVCMsg_FlattenedSerializer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_FlattenedSerializer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ProtoFlattenedSerializer_t serializers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->serializers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->serializers(static_cast<int>(i)), deterministic, target);
  }

  // repeated string symbols = 2;
  for (int i = 0, n = this->symbols_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->symbols(i).data(), static_cast<int>(this->symbols(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_FlattenedSerializer.symbols");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->symbols(i), target);
  }

  // repeated .ProtoFlattenedSerializerField_t fields = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->fields(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_FlattenedSerializer)
  return target;
}

size_t CSVCMsg_FlattenedSerializer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_FlattenedSerializer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .ProtoFlattenedSerializer_t serializers = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->serializers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->serializers(static_cast<int>(i)));
    }
  }

  // repeated string symbols = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->symbols_size());
  for (int i = 0, n = this->symbols_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->symbols(i));
  }

  // repeated .ProtoFlattenedSerializerField_t fields = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->fields_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->fields(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_FlattenedSerializer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_FlattenedSerializer)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_FlattenedSerializer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_FlattenedSerializer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_FlattenedSerializer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_FlattenedSerializer)
    MergeFrom(*source);
  }
}

void CSVCMsg_FlattenedSerializer::MergeFrom(const CSVCMsg_FlattenedSerializer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_FlattenedSerializer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  serializers_.MergeFrom(from.serializers_);
  symbols_.MergeFrom(from.symbols_);
  fields_.MergeFrom(from.fields_);
}

void CSVCMsg_FlattenedSerializer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_FlattenedSerializer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_FlattenedSerializer::CopyFrom(const CSVCMsg_FlattenedSerializer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_FlattenedSerializer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_FlattenedSerializer::IsInitialized() const {
  return true;
}

void CSVCMsg_FlattenedSerializer::Swap(CSVCMsg_FlattenedSerializer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_FlattenedSerializer::InternalSwap(CSVCMsg_FlattenedSerializer* other) {
  using std::swap;
  CastToBase(&serializers_)->InternalSwap(CastToBase(&other->serializers_));
  symbols_.InternalSwap(CastToBase(&other->symbols_));
  CastToBase(&fields_)->InternalSwap(CastToBase(&other->fields_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_FlattenedSerializer::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_StopSound::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_StopSound::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_StopSound::CSVCMsg_StopSound()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CSVCMsg_StopSound.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_StopSound)
}
CSVCMsg_StopSound::CSVCMsg_StopSound(const CSVCMsg_StopSound& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_ = from.guid_;
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_StopSound)
}

void CSVCMsg_StopSound::SharedCtor() {
  guid_ = 0u;
}

CSVCMsg_StopSound::~CSVCMsg_StopSound() {
  // @@protoc_insertion_point(destructor:CSVCMsg_StopSound)
  SharedDtor();
}

void CSVCMsg_StopSound::SharedDtor() {
}

void CSVCMsg_StopSound::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_StopSound::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_StopSound& CSVCMsg_StopSound::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CSVCMsg_StopSound.base);
  return *internal_default_instance();
}


void CSVCMsg_StopSound::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_StopSound)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_StopSound::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_StopSound)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed32 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_StopSound)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_StopSound)
  return false;
#undef DO_
}

void CSVCMsg_StopSound::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_StopSound)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_StopSound)
}

::google::protobuf::uint8* CSVCMsg_StopSound::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_StopSound)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_StopSound)
  return target;
}

size_t CSVCMsg_StopSound::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_StopSound)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional fixed32 guid = 1;
  if (has_guid()) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_StopSound::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_StopSound)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_StopSound* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_StopSound>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_StopSound)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_StopSound)
    MergeFrom(*source);
  }
}

void CSVCMsg_StopSound::MergeFrom(const CSVCMsg_StopSound& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_StopSound)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_guid()) {
    set_guid(from.guid());
  }
}

void CSVCMsg_StopSound::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_StopSound)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_StopSound::CopyFrom(const CSVCMsg_StopSound& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_StopSound)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_StopSound::IsInitialized() const {
  return true;
}

void CSVCMsg_StopSound::Swap(CSVCMsg_StopSound* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_StopSound::InternalSwap(CSVCMsg_StopSound* other) {
  using std::swap;
  swap(guid_, other->guid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_StopSound::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CBidirMsg_RebroadcastGameEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CBidirMsg_RebroadcastGameEvent::kPosttoserverFieldNumber;
const int CBidirMsg_RebroadcastGameEvent::kBuftypeFieldNumber;
const int CBidirMsg_RebroadcastGameEvent::kClientbitcountFieldNumber;
const int CBidirMsg_RebroadcastGameEvent::kReceivingclientsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CBidirMsg_RebroadcastGameEvent::CBidirMsg_RebroadcastGameEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CBidirMsg_RebroadcastGameEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CBidirMsg_RebroadcastGameEvent)
}
CBidirMsg_RebroadcastGameEvent::CBidirMsg_RebroadcastGameEvent(const CBidirMsg_RebroadcastGameEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&posttoserver_, &from.posttoserver_,
    static_cast<size_t>(reinterpret_cast<char*>(&clientbitcount_) -
    reinterpret_cast<char*>(&posttoserver_)) + sizeof(clientbitcount_));
  // @@protoc_insertion_point(copy_constructor:CBidirMsg_RebroadcastGameEvent)
}

void CBidirMsg_RebroadcastGameEvent::SharedCtor() {
  ::memset(&posttoserver_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clientbitcount_) -
      reinterpret_cast<char*>(&posttoserver_)) + sizeof(clientbitcount_));
}

CBidirMsg_RebroadcastGameEvent::~CBidirMsg_RebroadcastGameEvent() {
  // @@protoc_insertion_point(destructor:CBidirMsg_RebroadcastGameEvent)
  SharedDtor();
}

void CBidirMsg_RebroadcastGameEvent::SharedDtor() {
}

void CBidirMsg_RebroadcastGameEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CBidirMsg_RebroadcastGameEvent::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CBidirMsg_RebroadcastGameEvent& CBidirMsg_RebroadcastGameEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CBidirMsg_RebroadcastGameEvent.base);
  return *internal_default_instance();
}


void CBidirMsg_RebroadcastGameEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:CBidirMsg_RebroadcastGameEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&posttoserver_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&clientbitcount_) -
        reinterpret_cast<char*>(&posttoserver_)) + sizeof(clientbitcount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CBidirMsg_RebroadcastGameEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CBidirMsg_RebroadcastGameEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool posttoserver = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_posttoserver();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &posttoserver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 buftype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_buftype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buftype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 clientbitcount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_clientbitcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &clientbitcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 receivingclients = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_receivingclients();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &receivingclients_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CBidirMsg_RebroadcastGameEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CBidirMsg_RebroadcastGameEvent)
  return false;
#undef DO_
}

void CBidirMsg_RebroadcastGameEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CBidirMsg_RebroadcastGameEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool posttoserver = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->posttoserver(), output);
  }

  // optional int32 buftype = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->buftype(), output);
  }

  // optional uint32 clientbitcount = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->clientbitcount(), output);
  }

  // optional uint64 receivingclients = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->receivingclients(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CBidirMsg_RebroadcastGameEvent)
}

::google::protobuf::uint8* CBidirMsg_RebroadcastGameEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CBidirMsg_RebroadcastGameEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool posttoserver = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->posttoserver(), target);
  }

  // optional int32 buftype = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->buftype(), target);
  }

  // optional uint32 clientbitcount = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->clientbitcount(), target);
  }

  // optional uint64 receivingclients = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->receivingclients(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CBidirMsg_RebroadcastGameEvent)
  return target;
}

size_t CBidirMsg_RebroadcastGameEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CBidirMsg_RebroadcastGameEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional bool posttoserver = 1;
    if (has_posttoserver()) {
      total_size += 1 + 1;
    }

    // optional int32 buftype = 2;
    if (has_buftype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buftype());
    }

    // optional uint64 receivingclients = 4;
    if (has_receivingclients()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->receivingclients());
    }

    // optional uint32 clientbitcount = 3;
    if (has_clientbitcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->clientbitcount());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CBidirMsg_RebroadcastGameEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CBidirMsg_RebroadcastGameEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const CBidirMsg_RebroadcastGameEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CBidirMsg_RebroadcastGameEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CBidirMsg_RebroadcastGameEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CBidirMsg_RebroadcastGameEvent)
    MergeFrom(*source);
  }
}

void CBidirMsg_RebroadcastGameEvent::MergeFrom(const CBidirMsg_RebroadcastGameEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CBidirMsg_RebroadcastGameEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      posttoserver_ = from.posttoserver_;
    }
    if (cached_has_bits & 0x00000002u) {
      buftype_ = from.buftype_;
    }
    if (cached_has_bits & 0x00000004u) {
      receivingclients_ = from.receivingclients_;
    }
    if (cached_has_bits & 0x00000008u) {
      clientbitcount_ = from.clientbitcount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CBidirMsg_RebroadcastGameEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CBidirMsg_RebroadcastGameEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CBidirMsg_RebroadcastGameEvent::CopyFrom(const CBidirMsg_RebroadcastGameEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CBidirMsg_RebroadcastGameEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CBidirMsg_RebroadcastGameEvent::IsInitialized() const {
  return true;
}

void CBidirMsg_RebroadcastGameEvent::Swap(CBidirMsg_RebroadcastGameEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CBidirMsg_RebroadcastGameEvent::InternalSwap(CBidirMsg_RebroadcastGameEvent* other) {
  using std::swap;
  swap(posttoserver_, other->posttoserver_);
  swap(buftype_, other->buftype_);
  swap(receivingclients_, other->receivingclients_);
  swap(clientbitcount_, other->clientbitcount_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CBidirMsg_RebroadcastGameEvent::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CBidirMsg_RebroadcastSource::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CBidirMsg_RebroadcastSource::kEventsourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CBidirMsg_RebroadcastSource::CBidirMsg_RebroadcastSource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CBidirMsg_RebroadcastSource.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CBidirMsg_RebroadcastSource)
}
CBidirMsg_RebroadcastSource::CBidirMsg_RebroadcastSource(const CBidirMsg_RebroadcastSource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eventsource_ = from.eventsource_;
  // @@protoc_insertion_point(copy_constructor:CBidirMsg_RebroadcastSource)
}

void CBidirMsg_RebroadcastSource::SharedCtor() {
  eventsource_ = 0;
}

CBidirMsg_RebroadcastSource::~CBidirMsg_RebroadcastSource() {
  // @@protoc_insertion_point(destructor:CBidirMsg_RebroadcastSource)
  SharedDtor();
}

void CBidirMsg_RebroadcastSource::SharedDtor() {
}

void CBidirMsg_RebroadcastSource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CBidirMsg_RebroadcastSource::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CBidirMsg_RebroadcastSource& CBidirMsg_RebroadcastSource::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CBidirMsg_RebroadcastSource.base);
  return *internal_default_instance();
}


void CBidirMsg_RebroadcastSource::Clear() {
// @@protoc_insertion_point(message_clear_start:CBidirMsg_RebroadcastSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eventsource_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CBidirMsg_RebroadcastSource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CBidirMsg_RebroadcastSource)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eventsource = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eventsource();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eventsource_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CBidirMsg_RebroadcastSource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CBidirMsg_RebroadcastSource)
  return false;
#undef DO_
}

void CBidirMsg_RebroadcastSource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CBidirMsg_RebroadcastSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eventsource = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eventsource(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CBidirMsg_RebroadcastSource)
}

::google::protobuf::uint8* CBidirMsg_RebroadcastSource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CBidirMsg_RebroadcastSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eventsource = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eventsource(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CBidirMsg_RebroadcastSource)
  return target;
}

size_t CBidirMsg_RebroadcastSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CBidirMsg_RebroadcastSource)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 eventsource = 1;
  if (has_eventsource()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eventsource());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CBidirMsg_RebroadcastSource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CBidirMsg_RebroadcastSource)
  GOOGLE_DCHECK_NE(&from, this);
  const CBidirMsg_RebroadcastSource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CBidirMsg_RebroadcastSource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CBidirMsg_RebroadcastSource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CBidirMsg_RebroadcastSource)
    MergeFrom(*source);
  }
}

void CBidirMsg_RebroadcastSource::MergeFrom(const CBidirMsg_RebroadcastSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CBidirMsg_RebroadcastSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eventsource()) {
    set_eventsource(from.eventsource());
  }
}

void CBidirMsg_RebroadcastSource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CBidirMsg_RebroadcastSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CBidirMsg_RebroadcastSource::CopyFrom(const CBidirMsg_RebroadcastSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CBidirMsg_RebroadcastSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CBidirMsg_RebroadcastSource::IsInitialized() const {
  return true;
}

void CBidirMsg_RebroadcastSource::Swap(CBidirMsg_RebroadcastSource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CBidirMsg_RebroadcastSource::InternalSwap(CBidirMsg_RebroadcastSource* other) {
  using std::swap;
  swap(eventsource_, other->eventsource_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CBidirMsg_RebroadcastSource::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SerializedNetAddress_t::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SerializedNetAddress_t::kSerializedAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SerializedNetAddress_t::SerializedNetAddress_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_SerializedNetAddress_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SerializedNetAddress_t)
}
SerializedNetAddress_t::SerializedNetAddress_t(const SerializedNetAddress_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  serializedaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_serializedaddress()) {
    serializedaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serializedaddress_);
  }
  // @@protoc_insertion_point(copy_constructor:SerializedNetAddress_t)
}

void SerializedNetAddress_t::SharedCtor() {
  serializedaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SerializedNetAddress_t::~SerializedNetAddress_t() {
  // @@protoc_insertion_point(destructor:SerializedNetAddress_t)
  SharedDtor();
}

void SerializedNetAddress_t::SharedDtor() {
  serializedaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SerializedNetAddress_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SerializedNetAddress_t::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SerializedNetAddress_t& SerializedNetAddress_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_SerializedNetAddress_t.base);
  return *internal_default_instance();
}


void SerializedNetAddress_t::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedNetAddress_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    serializedaddress_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SerializedNetAddress_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SerializedNetAddress_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes serializedAddress = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_serializedaddress()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SerializedNetAddress_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SerializedNetAddress_t)
  return false;
#undef DO_
}

void SerializedNetAddress_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SerializedNetAddress_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes serializedAddress = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->serializedaddress(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SerializedNetAddress_t)
}

::google::protobuf::uint8* SerializedNetAddress_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SerializedNetAddress_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes serializedAddress = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->serializedaddress(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedNetAddress_t)
  return target;
}

size_t SerializedNetAddress_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedNetAddress_t)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bytes serializedAddress = 1;
  if (has_serializedaddress()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->serializedaddress());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SerializedNetAddress_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SerializedNetAddress_t)
  GOOGLE_DCHECK_NE(&from, this);
  const SerializedNetAddress_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SerializedNetAddress_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SerializedNetAddress_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SerializedNetAddress_t)
    MergeFrom(*source);
  }
}

void SerializedNetAddress_t::MergeFrom(const SerializedNetAddress_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SerializedNetAddress_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_serializedaddress()) {
    set_has_serializedaddress();
    serializedaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serializedaddress_);
  }
}

void SerializedNetAddress_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SerializedNetAddress_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SerializedNetAddress_t::CopyFrom(const SerializedNetAddress_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedNetAddress_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SerializedNetAddress_t::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void SerializedNetAddress_t::Swap(SerializedNetAddress_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SerializedNetAddress_t::InternalSwap(SerializedNetAddress_t* other) {
  using std::swap;
  serializedaddress_.Swap(&other->serializedaddress_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SerializedNetAddress_t::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CBidirMsg_RelayInfo::InitAsDefaultInstance() {
  ::_CBidirMsg_RelayInfo_default_instance_._instance.get_mutable()->serializedtargetaddress_ = const_cast< ::SerializedNetAddress_t*>(
      ::SerializedNetAddress_t::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CBidirMsg_RelayInfo::kOperationFieldNumber;
const int CBidirMsg_RelayInfo::kSerializedTargetAddressFieldNumber;
const int CBidirMsg_RelayInfo::kAdditionalHopsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CBidirMsg_RelayInfo::CBidirMsg_RelayInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CBidirMsg_RelayInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CBidirMsg_RelayInfo)
}
CBidirMsg_RelayInfo::CBidirMsg_RelayInfo(const CBidirMsg_RelayInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_serializedtargetaddress()) {
    serializedtargetaddress_ = new ::SerializedNetAddress_t(*from.serializedtargetaddress_);
  } else {
    serializedtargetaddress_ = NULL;
  }
  ::memcpy(&operation_, &from.operation_,
    static_cast<size_t>(reinterpret_cast<char*>(&additionalhops_) -
    reinterpret_cast<char*>(&operation_)) + sizeof(additionalhops_));
  // @@protoc_insertion_point(copy_constructor:CBidirMsg_RelayInfo)
}

void CBidirMsg_RelayInfo::SharedCtor() {
  ::memset(&serializedtargetaddress_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&additionalhops_) -
      reinterpret_cast<char*>(&serializedtargetaddress_)) + sizeof(additionalhops_));
}

CBidirMsg_RelayInfo::~CBidirMsg_RelayInfo() {
  // @@protoc_insertion_point(destructor:CBidirMsg_RelayInfo)
  SharedDtor();
}

void CBidirMsg_RelayInfo::SharedDtor() {
  if (this != internal_default_instance()) delete serializedtargetaddress_;
}

void CBidirMsg_RelayInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CBidirMsg_RelayInfo::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CBidirMsg_RelayInfo& CBidirMsg_RelayInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CBidirMsg_RelayInfo.base);
  return *internal_default_instance();
}


void CBidirMsg_RelayInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CBidirMsg_RelayInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(serializedtargetaddress_ != NULL);
    serializedtargetaddress_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&operation_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&additionalhops_) -
        reinterpret_cast<char*>(&operation_)) + sizeof(additionalhops_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CBidirMsg_RelayInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CBidirMsg_RelayInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .CBidirMsg_RelayInfo.Operation_t operation = 1 [default = RIO_REQUEST_RELAY];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CBidirMsg_RelayInfo_Operation_t_IsValid(value)) {
            set_operation(static_cast< ::CBidirMsg_RelayInfo_Operation_t >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .SerializedNetAddress_t serializedTargetAddress = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_serializedtargetaddress()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 additionalHops = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_additionalhops();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &additionalhops_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CBidirMsg_RelayInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CBidirMsg_RelayInfo)
  return false;
#undef DO_
}

void CBidirMsg_RelayInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CBidirMsg_RelayInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .CBidirMsg_RelayInfo.Operation_t operation = 1 [default = RIO_REQUEST_RELAY];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->operation(), output);
  }

  // optional .SerializedNetAddress_t serializedTargetAddress = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_serializedtargetaddress(), output);
  }

  // optional uint32 additionalHops = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->additionalhops(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CBidirMsg_RelayInfo)
}

::google::protobuf::uint8* CBidirMsg_RelayInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CBidirMsg_RelayInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .CBidirMsg_RelayInfo.Operation_t operation = 1 [default = RIO_REQUEST_RELAY];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->operation(), target);
  }

  // optional .SerializedNetAddress_t serializedTargetAddress = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_serializedtargetaddress(), deterministic, target);
  }

  // optional uint32 additionalHops = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->additionalhops(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CBidirMsg_RelayInfo)
  return target;
}

size_t CBidirMsg_RelayInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CBidirMsg_RelayInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .CBidirMsg_RelayInfo.Operation_t operation = 1 [default = RIO_REQUEST_RELAY];
  if (has_operation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->operation());
  }
  // optional .SerializedNetAddress_t serializedTargetAddress = 2;
  if (has_serializedtargetaddress()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *serializedtargetaddress_);
  }

  // optional uint32 additionalHops = 3;
  if (has_additionalhops()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->additionalhops());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CBidirMsg_RelayInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CBidirMsg_RelayInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CBidirMsg_RelayInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CBidirMsg_RelayInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CBidirMsg_RelayInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CBidirMsg_RelayInfo)
    MergeFrom(*source);
  }
}

void CBidirMsg_RelayInfo::MergeFrom(const CBidirMsg_RelayInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CBidirMsg_RelayInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_serializedtargetaddress()->::SerializedNetAddress_t::MergeFrom(from.serializedtargetaddress());
    }
    if (cached_has_bits & 0x00000002u) {
      operation_ = from.operation_;
    }
    if (cached_has_bits & 0x00000004u) {
      additionalhops_ = from.additionalhops_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CBidirMsg_RelayInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CBidirMsg_RelayInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CBidirMsg_RelayInfo::CopyFrom(const CBidirMsg_RelayInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CBidirMsg_RelayInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CBidirMsg_RelayInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_serializedtargetaddress()) {
    if (!this->serializedtargetaddress_->IsInitialized()) return false;
  }
  return true;
}

void CBidirMsg_RelayInfo::Swap(CBidirMsg_RelayInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CBidirMsg_RelayInfo::InternalSwap(CBidirMsg_RelayInfo* other) {
  using std::swap;
  swap(serializedtargetaddress_, other->serializedtargetaddress_);
  swap(operation_, other->operation_);
  swap(additionalhops_, other->additionalhops_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CBidirMsg_RelayInfo::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SignedPayload_t::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignedPayload_t::kPayloadDataFieldNumber;
const int SignedPayload_t::kSignatureFieldNumber;
const int SignedPayload_t::kBPayloadEncryptedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignedPayload_t::SignedPayload_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_SignedPayload_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SignedPayload_t)
}
SignedPayload_t::SignedPayload_t(const SignedPayload_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  payloaddata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_payloaddata()) {
    payloaddata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payloaddata_);
  }
  ::memcpy(&signature_, &from.signature_,
    static_cast<size_t>(reinterpret_cast<char*>(&bpayloadencrypted_) -
    reinterpret_cast<char*>(&signature_)) + sizeof(bpayloadencrypted_));
  // @@protoc_insertion_point(copy_constructor:SignedPayload_t)
}

void SignedPayload_t::SharedCtor() {
  payloaddata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&signature_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bpayloadencrypted_) -
      reinterpret_cast<char*>(&signature_)) + sizeof(bpayloadencrypted_));
}

SignedPayload_t::~SignedPayload_t() {
  // @@protoc_insertion_point(destructor:SignedPayload_t)
  SharedDtor();
}

void SignedPayload_t::SharedDtor() {
  payloaddata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SignedPayload_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SignedPayload_t::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SignedPayload_t& SignedPayload_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_SignedPayload_t.base);
  return *internal_default_instance();
}


void SignedPayload_t::Clear() {
// @@protoc_insertion_point(message_clear_start:SignedPayload_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    payloaddata_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&signature_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bpayloadencrypted_) -
        reinterpret_cast<char*>(&signature_)) + sizeof(bpayloadencrypted_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SignedPayload_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SignedPayload_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes payloadData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_payloaddata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 signature = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_signature();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &signature_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool bPayloadEncrypted = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_bpayloadencrypted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bpayloadencrypted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SignedPayload_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SignedPayload_t)
  return false;
#undef DO_
}

void SignedPayload_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SignedPayload_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes payloadData = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->payloaddata(), output);
  }

  // required uint32 signature = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->signature(), output);
  }

  // required bool bPayloadEncrypted = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->bpayloadencrypted(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SignedPayload_t)
}

::google::protobuf::uint8* SignedPayload_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SignedPayload_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes payloadData = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->payloaddata(), target);
  }

  // required uint32 signature = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->signature(), target);
  }

  // required bool bPayloadEncrypted = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->bpayloadencrypted(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SignedPayload_t)
  return target;
}

size_t SignedPayload_t::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:SignedPayload_t)
  size_t total_size = 0;

  if (has_payloaddata()) {
    // required bytes payloadData = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->payloaddata());
  }

  if (has_signature()) {
    // required uint32 signature = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->signature());
  }

  if (has_bpayloadencrypted()) {
    // required bool bPayloadEncrypted = 3;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t SignedPayload_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SignedPayload_t)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required bytes payloadData = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->payloaddata());

    // required uint32 signature = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->signature());

    // required bool bPayloadEncrypted = 3;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignedPayload_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SignedPayload_t)
  GOOGLE_DCHECK_NE(&from, this);
  const SignedPayload_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignedPayload_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SignedPayload_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SignedPayload_t)
    MergeFrom(*source);
  }
}

void SignedPayload_t::MergeFrom(const SignedPayload_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SignedPayload_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_payloaddata();
      payloaddata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payloaddata_);
    }
    if (cached_has_bits & 0x00000002u) {
      signature_ = from.signature_;
    }
    if (cached_has_bits & 0x00000004u) {
      bpayloadencrypted_ = from.bpayloadencrypted_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SignedPayload_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SignedPayload_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignedPayload_t::CopyFrom(const SignedPayload_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SignedPayload_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignedPayload_t::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void SignedPayload_t::Swap(SignedPayload_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignedPayload_t::InternalSwap(SignedPayload_t* other) {
  using std::swap;
  payloaddata_.Swap(&other->payloaddata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(signature_, other->signature_);
  swap(bpayloadencrypted_, other->bpayloadencrypted_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SignedPayload_t::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CBidirMsg_RelayPacket_SignedDestinationAddress_t::InitAsDefaultInstance() {
  ::_CBidirMsg_RelayPacket_SignedDestinationAddress_t_default_instance_._instance.get_mutable()->serializedaddr_ = const_cast< ::SerializedNetAddress_t*>(
      ::SerializedNetAddress_t::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CBidirMsg_RelayPacket_SignedDestinationAddress_t::kSerializedAddrFieldNumber;
const int CBidirMsg_RelayPacket_SignedDestinationAddress_t::kSignatureFieldNumber;
const int CBidirMsg_RelayPacket_SignedDestinationAddress_t::kEncryptedPayloadKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CBidirMsg_RelayPacket_SignedDestinationAddress_t::CBidirMsg_RelayPacket_SignedDestinationAddress_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CBidirMsg_RelayPacket_SignedDestinationAddress_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CBidirMsg_RelayPacket.SignedDestinationAddress_t)
}
CBidirMsg_RelayPacket_SignedDestinationAddress_t::CBidirMsg_RelayPacket_SignedDestinationAddress_t(const CBidirMsg_RelayPacket_SignedDestinationAddress_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  encryptedpayloadkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_encryptedpayloadkey()) {
    encryptedpayloadkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encryptedpayloadkey_);
  }
  if (from.has_serializedaddr()) {
    serializedaddr_ = new ::SerializedNetAddress_t(*from.serializedaddr_);
  } else {
    serializedaddr_ = NULL;
  }
  signature_ = from.signature_;
  // @@protoc_insertion_point(copy_constructor:CBidirMsg_RelayPacket.SignedDestinationAddress_t)
}

void CBidirMsg_RelayPacket_SignedDestinationAddress_t::SharedCtor() {
  encryptedpayloadkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&serializedaddr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&signature_) -
      reinterpret_cast<char*>(&serializedaddr_)) + sizeof(signature_));
}

CBidirMsg_RelayPacket_SignedDestinationAddress_t::~CBidirMsg_RelayPacket_SignedDestinationAddress_t() {
  // @@protoc_insertion_point(destructor:CBidirMsg_RelayPacket.SignedDestinationAddress_t)
  SharedDtor();
}

void CBidirMsg_RelayPacket_SignedDestinationAddress_t::SharedDtor() {
  encryptedpayloadkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete serializedaddr_;
}

void CBidirMsg_RelayPacket_SignedDestinationAddress_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CBidirMsg_RelayPacket_SignedDestinationAddress_t::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CBidirMsg_RelayPacket_SignedDestinationAddress_t& CBidirMsg_RelayPacket_SignedDestinationAddress_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CBidirMsg_RelayPacket_SignedDestinationAddress_t.base);
  return *internal_default_instance();
}


void CBidirMsg_RelayPacket_SignedDestinationAddress_t::Clear() {
// @@protoc_insertion_point(message_clear_start:CBidirMsg_RelayPacket.SignedDestinationAddress_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      encryptedpayloadkey_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(serializedaddr_ != NULL);
      serializedaddr_->Clear();
    }
  }
  signature_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CBidirMsg_RelayPacket_SignedDestinationAddress_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CBidirMsg_RelayPacket.SignedDestinationAddress_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .SerializedNetAddress_t serializedAddr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_serializedaddr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 signature = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_signature();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &signature_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes encryptedPayloadKey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_encryptedpayloadkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CBidirMsg_RelayPacket.SignedDestinationAddress_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CBidirMsg_RelayPacket.SignedDestinationAddress_t)
  return false;
#undef DO_
}

void CBidirMsg_RelayPacket_SignedDestinationAddress_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CBidirMsg_RelayPacket.SignedDestinationAddress_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .SerializedNetAddress_t serializedAddr = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_serializedaddr(), output);
  }

  // required uint32 signature = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->signature(), output);
  }

  // optional bytes encryptedPayloadKey = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->encryptedpayloadkey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CBidirMsg_RelayPacket.SignedDestinationAddress_t)
}

::google::protobuf::uint8* CBidirMsg_RelayPacket_SignedDestinationAddress_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CBidirMsg_RelayPacket.SignedDestinationAddress_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .SerializedNetAddress_t serializedAddr = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_serializedaddr(), deterministic, target);
  }

  // required uint32 signature = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->signature(), target);
  }

  // optional bytes encryptedPayloadKey = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->encryptedpayloadkey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CBidirMsg_RelayPacket.SignedDestinationAddress_t)
  return target;
}

size_t CBidirMsg_RelayPacket_SignedDestinationAddress_t::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CBidirMsg_RelayPacket.SignedDestinationAddress_t)
  size_t total_size = 0;

  if (has_serializedaddr()) {
    // required .SerializedNetAddress_t serializedAddr = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *serializedaddr_);
  }

  if (has_signature()) {
    // required uint32 signature = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->signature());
  }

  return total_size;
}
size_t CBidirMsg_RelayPacket_SignedDestinationAddress_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CBidirMsg_RelayPacket.SignedDestinationAddress_t)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required .SerializedNetAddress_t serializedAddr = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *serializedaddr_);

    // required uint32 signature = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->signature());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional bytes encryptedPayloadKey = 3;
  if (has_encryptedpayloadkey()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->encryptedpayloadkey());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CBidirMsg_RelayPacket_SignedDestinationAddress_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CBidirMsg_RelayPacket.SignedDestinationAddress_t)
  GOOGLE_DCHECK_NE(&from, this);
  const CBidirMsg_RelayPacket_SignedDestinationAddress_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CBidirMsg_RelayPacket_SignedDestinationAddress_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CBidirMsg_RelayPacket.SignedDestinationAddress_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CBidirMsg_RelayPacket.SignedDestinationAddress_t)
    MergeFrom(*source);
  }
}

void CBidirMsg_RelayPacket_SignedDestinationAddress_t::MergeFrom(const CBidirMsg_RelayPacket_SignedDestinationAddress_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CBidirMsg_RelayPacket.SignedDestinationAddress_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_encryptedpayloadkey();
      encryptedpayloadkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encryptedpayloadkey_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_serializedaddr()->::SerializedNetAddress_t::MergeFrom(from.serializedaddr());
    }
    if (cached_has_bits & 0x00000004u) {
      signature_ = from.signature_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CBidirMsg_RelayPacket_SignedDestinationAddress_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CBidirMsg_RelayPacket.SignedDestinationAddress_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CBidirMsg_RelayPacket_SignedDestinationAddress_t::CopyFrom(const CBidirMsg_RelayPacket_SignedDestinationAddress_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CBidirMsg_RelayPacket.SignedDestinationAddress_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CBidirMsg_RelayPacket_SignedDestinationAddress_t::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  if (has_serializedaddr()) {
    if (!this->serializedaddr_->IsInitialized()) return false;
  }
  return true;
}

void CBidirMsg_RelayPacket_SignedDestinationAddress_t::Swap(CBidirMsg_RelayPacket_SignedDestinationAddress_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CBidirMsg_RelayPacket_SignedDestinationAddress_t::InternalSwap(CBidirMsg_RelayPacket_SignedDestinationAddress_t* other) {
  using std::swap;
  encryptedpayloadkey_.Swap(&other->encryptedpayloadkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(serializedaddr_, other->serializedaddr_);
  swap(signature_, other->signature_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CBidirMsg_RelayPacket_SignedDestinationAddress_t::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CBidirMsg_RelayPacket::InitAsDefaultInstance() {
  ::_CBidirMsg_RelayPacket_default_instance_._instance.get_mutable()->originalsender_ = const_cast< ::SerializedNetAddress_t*>(
      ::SerializedNetAddress_t::internal_default_instance());
  ::_CBidirMsg_RelayPacket_default_instance_._instance.get_mutable()->signedpayload_ = const_cast< ::SignedPayload_t*>(
      ::SignedPayload_t::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CBidirMsg_RelayPacket::kPrevhopcountFieldNumber;
const int CBidirMsg_RelayPacket::kOriginalSenderFieldNumber;
const int CBidirMsg_RelayPacket::kSignedPayloadFieldNumber;
const int CBidirMsg_RelayPacket::kRecipientListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CBidirMsg_RelayPacket::CBidirMsg_RelayPacket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CBidirMsg_RelayPacket.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CBidirMsg_RelayPacket)
}
CBidirMsg_RelayPacket::CBidirMsg_RelayPacket(const CBidirMsg_RelayPacket& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      recipientlist_(from.recipientlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_originalsender()) {
    originalsender_ = new ::SerializedNetAddress_t(*from.originalsender_);
  } else {
    originalsender_ = NULL;
  }
  if (from.has_signedpayload()) {
    signedpayload_ = new ::SignedPayload_t(*from.signedpayload_);
  } else {
    signedpayload_ = NULL;
  }
  prevhopcount_ = from.prevhopcount_;
  // @@protoc_insertion_point(copy_constructor:CBidirMsg_RelayPacket)
}

void CBidirMsg_RelayPacket::SharedCtor() {
  ::memset(&originalsender_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prevhopcount_) -
      reinterpret_cast<char*>(&originalsender_)) + sizeof(prevhopcount_));
}

CBidirMsg_RelayPacket::~CBidirMsg_RelayPacket() {
  // @@protoc_insertion_point(destructor:CBidirMsg_RelayPacket)
  SharedDtor();
}

void CBidirMsg_RelayPacket::SharedDtor() {
  if (this != internal_default_instance()) delete originalsender_;
  if (this != internal_default_instance()) delete signedpayload_;
}

void CBidirMsg_RelayPacket::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CBidirMsg_RelayPacket::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CBidirMsg_RelayPacket& CBidirMsg_RelayPacket::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CBidirMsg_RelayPacket.base);
  return *internal_default_instance();
}


void CBidirMsg_RelayPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:CBidirMsg_RelayPacket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recipientlist_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(originalsender_ != NULL);
      originalsender_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(signedpayload_ != NULL);
      signedpayload_->Clear();
    }
  }
  prevhopcount_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CBidirMsg_RelayPacket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CBidirMsg_RelayPacket)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 prevhopcount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_prevhopcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prevhopcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .SerializedNetAddress_t originalSender = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_originalsender()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .SignedPayload_t signedPayload = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_signedpayload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CBidirMsg_RelayPacket.SignedDestinationAddress_t recipientList = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_recipientlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CBidirMsg_RelayPacket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CBidirMsg_RelayPacket)
  return false;
#undef DO_
}

void CBidirMsg_RelayPacket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CBidirMsg_RelayPacket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 prevhopcount = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->prevhopcount(), output);
  }

  // required .SerializedNetAddress_t originalSender = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_originalsender(), output);
  }

  // required .SignedPayload_t signedPayload = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_signedpayload(), output);
  }

  // repeated .CBidirMsg_RelayPacket.SignedDestinationAddress_t recipientList = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->recipientlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->recipientlist(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CBidirMsg_RelayPacket)
}

::google::protobuf::uint8* CBidirMsg_RelayPacket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CBidirMsg_RelayPacket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 prevhopcount = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->prevhopcount(), target);
  }

  // required .SerializedNetAddress_t originalSender = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_originalsender(), deterministic, target);
  }

  // required .SignedPayload_t signedPayload = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_signedpayload(), deterministic, target);
  }

  // repeated .CBidirMsg_RelayPacket.SignedDestinationAddress_t recipientList = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->recipientlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->recipientlist(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CBidirMsg_RelayPacket)
  return target;
}

size_t CBidirMsg_RelayPacket::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CBidirMsg_RelayPacket)
  size_t total_size = 0;

  if (has_originalsender()) {
    // required .SerializedNetAddress_t originalSender = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *originalsender_);
  }

  if (has_signedpayload()) {
    // required .SignedPayload_t signedPayload = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *signedpayload_);
  }

  if (has_prevhopcount()) {
    // required uint32 prevhopcount = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prevhopcount());
  }

  return total_size;
}
size_t CBidirMsg_RelayPacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CBidirMsg_RelayPacket)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .SerializedNetAddress_t originalSender = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *originalsender_);

    // required .SignedPayload_t signedPayload = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *signedpayload_);

    // required uint32 prevhopcount = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prevhopcount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .CBidirMsg_RelayPacket.SignedDestinationAddress_t recipientList = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->recipientlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->recipientlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CBidirMsg_RelayPacket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CBidirMsg_RelayPacket)
  GOOGLE_DCHECK_NE(&from, this);
  const CBidirMsg_RelayPacket* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CBidirMsg_RelayPacket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CBidirMsg_RelayPacket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CBidirMsg_RelayPacket)
    MergeFrom(*source);
  }
}

void CBidirMsg_RelayPacket::MergeFrom(const CBidirMsg_RelayPacket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CBidirMsg_RelayPacket)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  recipientlist_.MergeFrom(from.recipientlist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_originalsender()->::SerializedNetAddress_t::MergeFrom(from.originalsender());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_signedpayload()->::SignedPayload_t::MergeFrom(from.signedpayload());
    }
    if (cached_has_bits & 0x00000004u) {
      prevhopcount_ = from.prevhopcount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CBidirMsg_RelayPacket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CBidirMsg_RelayPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CBidirMsg_RelayPacket::CopyFrom(const CBidirMsg_RelayPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CBidirMsg_RelayPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CBidirMsg_RelayPacket::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->recipientlist())) return false;
  if (has_originalsender()) {
    if (!this->originalsender_->IsInitialized()) return false;
  }
  if (has_signedpayload()) {
    if (!this->signedpayload_->IsInitialized()) return false;
  }
  return true;
}

void CBidirMsg_RelayPacket::Swap(CBidirMsg_RelayPacket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CBidirMsg_RelayPacket::InternalSwap(CBidirMsg_RelayPacket* other) {
  using std::swap;
  CastToBase(&recipientlist_)->InternalSwap(CastToBase(&other->recipientlist_));
  swap(originalsender_, other->originalsender_);
  swap(signedpayload_, other->signedpayload_);
  swap(prevhopcount_, other->prevhopcount_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CBidirMsg_RelayPacket::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgServerNetworkStats_Port::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgServerNetworkStats_Port::kPortFieldNumber;
const int CMsgServerNetworkStats_Port::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgServerNetworkStats_Port::CMsgServerNetworkStats_Port()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CMsgServerNetworkStats_Port.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgServerNetworkStats.Port)
}
CMsgServerNetworkStats_Port::CMsgServerNetworkStats_Port(const CMsgServerNetworkStats_Port& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:CMsgServerNetworkStats.Port)
}

void CMsgServerNetworkStats_Port::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
}

CMsgServerNetworkStats_Port::~CMsgServerNetworkStats_Port() {
  // @@protoc_insertion_point(destructor:CMsgServerNetworkStats.Port)
  SharedDtor();
}

void CMsgServerNetworkStats_Port::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgServerNetworkStats_Port::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgServerNetworkStats_Port::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgServerNetworkStats_Port& CMsgServerNetworkStats_Port::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CMsgServerNetworkStats_Port.base);
  return *internal_default_instance();
}


void CMsgServerNetworkStats_Port::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgServerNetworkStats.Port)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  port_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgServerNetworkStats_Port::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgServerNetworkStats.Port)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 port = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgServerNetworkStats.Port.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgServerNetworkStats.Port)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgServerNetworkStats.Port)
  return false;
#undef DO_
}

void CMsgServerNetworkStats_Port::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgServerNetworkStats.Port)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 port = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->port(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgServerNetworkStats.Port.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgServerNetworkStats.Port)
}

::google::protobuf::uint8* CMsgServerNetworkStats_Port::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgServerNetworkStats.Port)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 port = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->port(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgServerNetworkStats.Port.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgServerNetworkStats.Port)
  return target;
}

size_t CMsgServerNetworkStats_Port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgServerNetworkStats.Port)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 port = 1;
    if (has_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->port());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgServerNetworkStats_Port::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgServerNetworkStats.Port)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgServerNetworkStats_Port* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgServerNetworkStats_Port>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgServerNetworkStats.Port)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgServerNetworkStats.Port)
    MergeFrom(*source);
  }
}

void CMsgServerNetworkStats_Port::MergeFrom(const CMsgServerNetworkStats_Port& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgServerNetworkStats.Port)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      port_ = from.port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgServerNetworkStats_Port::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgServerNetworkStats.Port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgServerNetworkStats_Port::CopyFrom(const CMsgServerNetworkStats_Port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgServerNetworkStats.Port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgServerNetworkStats_Port::IsInitialized() const {
  return true;
}

void CMsgServerNetworkStats_Port::Swap(CMsgServerNetworkStats_Port* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgServerNetworkStats_Port::InternalSwap(CMsgServerNetworkStats_Port* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(port_, other->port_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgServerNetworkStats_Port::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgServerNetworkStats_Player::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgServerNetworkStats_Player::kSteamidFieldNumber;
const int CMsgServerNetworkStats_Player::kRemoteAddrFieldNumber;
const int CMsgServerNetworkStats_Player::kPingStddevMsFieldNumber;
const int CMsgServerNetworkStats_Player::kPingAvgMsFieldNumber;
const int CMsgServerNetworkStats_Player::kPacketLossPctFieldNumber;
const int CMsgServerNetworkStats_Player::kIsBotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgServerNetworkStats_Player::CMsgServerNetworkStats_Player()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CMsgServerNetworkStats_Player.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgServerNetworkStats.Player)
}
CMsgServerNetworkStats_Player::CMsgServerNetworkStats_Player(const CMsgServerNetworkStats_Player& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  remote_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_remote_addr()) {
    remote_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remote_addr_);
  }
  ::memcpy(&steamid_, &from.steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_bot_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(is_bot_));
  // @@protoc_insertion_point(copy_constructor:CMsgServerNetworkStats.Player)
}

void CMsgServerNetworkStats_Player::SharedCtor() {
  remote_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_bot_) -
      reinterpret_cast<char*>(&steamid_)) + sizeof(is_bot_));
}

CMsgServerNetworkStats_Player::~CMsgServerNetworkStats_Player() {
  // @@protoc_insertion_point(destructor:CMsgServerNetworkStats.Player)
  SharedDtor();
}

void CMsgServerNetworkStats_Player::SharedDtor() {
  remote_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgServerNetworkStats_Player::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgServerNetworkStats_Player::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgServerNetworkStats_Player& CMsgServerNetworkStats_Player::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CMsgServerNetworkStats_Player.base);
  return *internal_default_instance();
}


void CMsgServerNetworkStats_Player::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgServerNetworkStats.Player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    remote_addr_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 62u) {
    ::memset(&steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_bot_) -
        reinterpret_cast<char*>(&steamid_)) + sizeof(is_bot_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgServerNetworkStats_Player::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgServerNetworkStats.Player)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string remote_addr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remote_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->remote_addr().data(), static_cast<int>(this->remote_addr().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgServerNetworkStats.Player.remote_addr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ping_stddev_ms = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_ping_stddev_ms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ping_stddev_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ping_avg_ms = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_ping_avg_ms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ping_avg_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float packet_loss_pct = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_packet_loss_pct();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &packet_loss_pct_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_bot = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_is_bot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_bot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgServerNetworkStats.Player)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgServerNetworkStats.Player)
  return false;
#undef DO_
}

void CMsgServerNetworkStats_Player::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgServerNetworkStats.Player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 steamid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->steamid(), output);
  }

  // optional string remote_addr = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->remote_addr().data(), static_cast<int>(this->remote_addr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgServerNetworkStats.Player.remote_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->remote_addr(), output);
  }

  // optional int32 ping_stddev_ms = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ping_stddev_ms(), output);
  }

  // optional int32 ping_avg_ms = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->ping_avg_ms(), output);
  }

  // optional float packet_loss_pct = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->packet_loss_pct(), output);
  }

  // optional bool is_bot = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_bot(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgServerNetworkStats.Player)
}

::google::protobuf::uint8* CMsgServerNetworkStats_Player::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgServerNetworkStats.Player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 steamid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->steamid(), target);
  }

  // optional string remote_addr = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->remote_addr().data(), static_cast<int>(this->remote_addr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgServerNetworkStats.Player.remote_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->remote_addr(), target);
  }

  // optional int32 ping_stddev_ms = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ping_stddev_ms(), target);
  }

  // optional int32 ping_avg_ms = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->ping_avg_ms(), target);
  }

  // optional float packet_loss_pct = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->packet_loss_pct(), target);
  }

  // optional bool is_bot = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_bot(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgServerNetworkStats.Player)
  return target;
}

size_t CMsgServerNetworkStats_Player::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgServerNetworkStats.Player)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string remote_addr = 2;
    if (has_remote_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->remote_addr());
    }

    // optional uint64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->steamid());
    }

    // optional int32 ping_stddev_ms = 3;
    if (has_ping_stddev_ms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ping_stddev_ms());
    }

    // optional int32 ping_avg_ms = 4;
    if (has_ping_avg_ms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ping_avg_ms());
    }

    // optional float packet_loss_pct = 5;
    if (has_packet_loss_pct()) {
      total_size += 1 + 4;
    }

    // optional bool is_bot = 6;
    if (has_is_bot()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgServerNetworkStats_Player::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgServerNetworkStats.Player)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgServerNetworkStats_Player* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgServerNetworkStats_Player>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgServerNetworkStats.Player)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgServerNetworkStats.Player)
    MergeFrom(*source);
  }
}

void CMsgServerNetworkStats_Player::MergeFrom(const CMsgServerNetworkStats_Player& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgServerNetworkStats.Player)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_remote_addr();
      remote_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remote_addr_);
    }
    if (cached_has_bits & 0x00000002u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000004u) {
      ping_stddev_ms_ = from.ping_stddev_ms_;
    }
    if (cached_has_bits & 0x00000008u) {
      ping_avg_ms_ = from.ping_avg_ms_;
    }
    if (cached_has_bits & 0x00000010u) {
      packet_loss_pct_ = from.packet_loss_pct_;
    }
    if (cached_has_bits & 0x00000020u) {
      is_bot_ = from.is_bot_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgServerNetworkStats_Player::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgServerNetworkStats.Player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgServerNetworkStats_Player::CopyFrom(const CMsgServerNetworkStats_Player& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgServerNetworkStats.Player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgServerNetworkStats_Player::IsInitialized() const {
  return true;
}

void CMsgServerNetworkStats_Player::Swap(CMsgServerNetworkStats_Player* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgServerNetworkStats_Player::InternalSwap(CMsgServerNetworkStats_Player* other) {
  using std::swap;
  remote_addr_.Swap(&other->remote_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steamid_, other->steamid_);
  swap(ping_stddev_ms_, other->ping_stddev_ms_);
  swap(ping_avg_ms_, other->ping_avg_ms_);
  swap(packet_loss_pct_, other->packet_loss_pct_);
  swap(is_bot_, other->is_bot_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgServerNetworkStats_Player::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgServerNetworkStats::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgServerNetworkStats::kDedicatedFieldNumber;
const int CMsgServerNetworkStats::kCpuUsageFieldNumber;
const int CMsgServerNetworkStats::kMemoryUsedMbFieldNumber;
const int CMsgServerNetworkStats::kMemoryFreeMbFieldNumber;
const int CMsgServerNetworkStats::kUptimeFieldNumber;
const int CMsgServerNetworkStats::kSpawnCountFieldNumber;
const int CMsgServerNetworkStats::kNumClientsFieldNumber;
const int CMsgServerNetworkStats::kNumBotsFieldNumber;
const int CMsgServerNetworkStats::kNumSpectatorsFieldNumber;
const int CMsgServerNetworkStats::kNumTvRelaysFieldNumber;
const int CMsgServerNetworkStats::kFpsFieldNumber;
const int CMsgServerNetworkStats::kPortsFieldNumber;
const int CMsgServerNetworkStats::kAvgLatencyOutFieldNumber;
const int CMsgServerNetworkStats::kAvgLatencyInFieldNumber;
const int CMsgServerNetworkStats::kAvgPacketsOutFieldNumber;
const int CMsgServerNetworkStats::kAvgPacketsInFieldNumber;
const int CMsgServerNetworkStats::kAvgLossOutFieldNumber;
const int CMsgServerNetworkStats::kAvgLossInFieldNumber;
const int CMsgServerNetworkStats::kAvgDataOutFieldNumber;
const int CMsgServerNetworkStats::kAvgDataInFieldNumber;
const int CMsgServerNetworkStats::kTotalDataInFieldNumber;
const int CMsgServerNetworkStats::kTotalPacketsInFieldNumber;
const int CMsgServerNetworkStats::kTotalDataOutFieldNumber;
const int CMsgServerNetworkStats::kTotalPacketsOutFieldNumber;
const int CMsgServerNetworkStats::kPlayersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgServerNetworkStats::CMsgServerNetworkStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_netmessages_2eproto::scc_info_CMsgServerNetworkStats.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgServerNetworkStats)
}
CMsgServerNetworkStats::CMsgServerNetworkStats(const CMsgServerNetworkStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      ports_(from.ports_),
      players_(from.players_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dedicated_, &from.dedicated_,
    static_cast<size_t>(reinterpret_cast<char*>(&total_packets_out_) -
    reinterpret_cast<char*>(&dedicated_)) + sizeof(total_packets_out_));
  // @@protoc_insertion_point(copy_constructor:CMsgServerNetworkStats)
}

void CMsgServerNetworkStats::SharedCtor() {
  ::memset(&dedicated_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_packets_out_) -
      reinterpret_cast<char*>(&dedicated_)) + sizeof(total_packets_out_));
}

CMsgServerNetworkStats::~CMsgServerNetworkStats() {
  // @@protoc_insertion_point(destructor:CMsgServerNetworkStats)
  SharedDtor();
}

void CMsgServerNetworkStats::SharedDtor() {
}

void CMsgServerNetworkStats::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgServerNetworkStats::descriptor() {
  ::protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgServerNetworkStats& CMsgServerNetworkStats::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_netmessages_2eproto::scc_info_CMsgServerNetworkStats.base);
  return *internal_default_instance();
}


void CMsgServerNetworkStats::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgServerNetworkStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ports_.Clear();
  players_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&dedicated_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&num_bots_) -
        reinterpret_cast<char*>(&dedicated_)) + sizeof(num_bots_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&num_spectators_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&avg_loss_out_) -
        reinterpret_cast<char*>(&num_spectators_)) + sizeof(avg_loss_out_));
  }
  if (cached_has_bits & 8323072u) {
    ::memset(&avg_loss_in_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&total_packets_out_) -
        reinterpret_cast<char*>(&avg_loss_in_)) + sizeof(total_packets_out_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgServerNetworkStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgServerNetworkStats)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool dedicated = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dedicated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dedicated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cpu_usage = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_cpu_usage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cpu_usage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 memory_used_mb = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_memory_used_mb();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &memory_used_mb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 memory_free_mb = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_memory_free_mb();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &memory_free_mb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 uptime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_uptime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uptime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 spawn_count = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_spawn_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &spawn_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_clients = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_num_clients();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_clients_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_bots = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_num_bots();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_bots_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_spectators = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_num_spectators();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_spectators_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_tv_relays = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_num_tv_relays();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_tv_relays_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float fps = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {
          set_has_fps();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgServerNetworkStats.Port ports = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ports()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float avg_latency_out = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(149u /* 149 & 0xFF */)) {
          set_has_avg_latency_out();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &avg_latency_out_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float avg_latency_in = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(157u /* 157 & 0xFF */)) {
          set_has_avg_latency_in();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &avg_latency_in_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float avg_packets_out = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(165u /* 165 & 0xFF */)) {
          set_has_avg_packets_out();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &avg_packets_out_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float avg_packets_in = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(173u /* 173 & 0xFF */)) {
          set_has_avg_packets_in();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &avg_packets_in_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float avg_loss_out = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(181u /* 181 & 0xFF */)) {
          set_has_avg_loss_out();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &avg_loss_out_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float avg_loss_in = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(189u /* 189 & 0xFF */)) {
          set_has_avg_loss_in();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &avg_loss_in_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float avg_data_out = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(197u /* 197 & 0xFF */)) {
          set_has_avg_data_out();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &avg_data_out_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float avg_data_in = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(205u /* 205 & 0xFF */)) {
          set_has_avg_data_in();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &avg_data_in_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 total_data_in = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {
          set_has_total_data_in();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_data_in_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 total_packets_in = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {
          set_has_total_packets_in();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_packets_in_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 total_data_out = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {
          set_has_total_data_out();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_data_out_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 total_packets_out = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 232 & 0xFF */)) {
          set_has_total_packets_out();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_packets_out_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgServerNetworkStats.Player players = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_players()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgServerNetworkStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgServerNetworkStats)
  return false;
#undef DO_
}

void CMsgServerNetworkStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgServerNetworkStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool dedicated = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->dedicated(), output);
  }

  // optional int32 cpu_usage = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cpu_usage(), output);
  }

  // optional int32 memory_used_mb = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->memory_used_mb(), output);
  }

  // optional int32 memory_free_mb = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->memory_free_mb(), output);
  }

  // optional int32 uptime = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->uptime(), output);
  }

  // optional int32 spawn_count = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->spawn_count(), output);
  }

  // optional int32 num_clients = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->num_clients(), output);
  }

  // optional int32 num_bots = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->num_bots(), output);
  }

  // optional int32 num_spectators = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->num_spectators(), output);
  }

  // optional int32 num_tv_relays = 11;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->num_tv_relays(), output);
  }

  // optional float fps = 12;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->fps(), output);
  }

  // repeated .CMsgServerNetworkStats.Port ports = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ports_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17,
      this->ports(static_cast<int>(i)),
      output);
  }

  // optional float avg_latency_out = 18;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(18, this->avg_latency_out(), output);
  }

  // optional float avg_latency_in = 19;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(19, this->avg_latency_in(), output);
  }

  // optional float avg_packets_out = 20;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(20, this->avg_packets_out(), output);
  }

  // optional float avg_packets_in = 21;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(21, this->avg_packets_in(), output);
  }

  // optional float avg_loss_out = 22;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(22, this->avg_loss_out(), output);
  }

  // optional float avg_loss_in = 23;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(23, this->avg_loss_in(), output);
  }

  // optional float avg_data_out = 24;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(24, this->avg_data_out(), output);
  }

  // optional float avg_data_in = 25;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(25, this->avg_data_in(), output);
  }

  // optional uint64 total_data_in = 26;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(26, this->total_data_in(), output);
  }

  // optional uint64 total_packets_in = 27;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(27, this->total_packets_in(), output);
  }

  // optional uint64 total_data_out = 28;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(28, this->total_data_out(), output);
  }

  // optional uint64 total_packets_out = 29;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(29, this->total_packets_out(), output);
  }

  // repeated .CMsgServerNetworkStats.Player players = 30;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30,
      this->players(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgServerNetworkStats)
}

::google::protobuf::uint8* CMsgServerNetworkStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgServerNetworkStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool dedicated = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->dedicated(), target);
  }

  // optional int32 cpu_usage = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cpu_usage(), target);
  }

  // optional int32 memory_used_mb = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->memory_used_mb(), target);
  }

  // optional int32 memory_free_mb = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->memory_free_mb(), target);
  }

  // optional int32 uptime = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->uptime(), target);
  }

  // optional int32 spawn_count = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->spawn_count(), target);
  }

  // optional int32 num_clients = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->num_clients(), target);
  }

  // optional int32 num_bots = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->num_bots(), target);
  }

  // optional int32 num_spectators = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->num_spectators(), target);
  }

  // optional int32 num_tv_relays = 11;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->num_tv_relays(), target);
  }

  // optional float fps = 12;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->fps(), target);
  }

  // repeated .CMsgServerNetworkStats.Port ports = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ports_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->ports(static_cast<int>(i)), deterministic, target);
  }

  // optional float avg_latency_out = 18;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(18, this->avg_latency_out(), target);
  }

  // optional float avg_latency_in = 19;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(19, this->avg_latency_in(), target);
  }

  // optional float avg_packets_out = 20;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(20, this->avg_packets_out(), target);
  }

  // optional float avg_packets_in = 21;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(21, this->avg_packets_in(), target);
  }

  // optional float avg_loss_out = 22;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(22, this->avg_loss_out(), target);
  }

  // optional float avg_loss_in = 23;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(23, this->avg_loss_in(), target);
  }

  // optional float avg_data_out = 24;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(24, this->avg_data_out(), target);
  }

  // optional float avg_data_in = 25;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(25, this->avg_data_in(), target);
  }

  // optional uint64 total_data_in = 26;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(26, this->total_data_in(), target);
  }

  // optional uint64 total_packets_in = 27;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(27, this->total_packets_in(), target);
  }

  // optional uint64 total_data_out = 28;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(28, this->total_data_out(), target);
  }

  // optional uint64 total_packets_out = 29;
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(29, this->total_packets_out(), target);
  }

  // repeated .CMsgServerNetworkStats.Player players = 30;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, this->players(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgServerNetworkStats)
  return target;
}

size_t CMsgServerNetworkStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgServerNetworkStats)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgServerNetworkStats.Port ports = 17;
  {
    unsigned int count = static_cast<unsigned int>(this->ports_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ports(static_cast<int>(i)));
    }
  }

  // repeated .CMsgServerNetworkStats.Player players = 30;
  {
    unsigned int count = static_cast<unsigned int>(this->players_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->players(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional bool dedicated = 1;
    if (has_dedicated()) {
      total_size += 1 + 1;
    }

    // optional int32 cpu_usage = 2;
    if (has_cpu_usage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cpu_usage());
    }

    // optional int32 memory_used_mb = 3;
    if (has_memory_used_mb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->memory_used_mb());
    }

    // optional int32 memory_free_mb = 4;
    if (has_memory_free_mb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->memory_free_mb());
    }

    // optional int32 uptime = 5;
    if (has_uptime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->uptime());
    }

    // optional int32 spawn_count = 6;
    if (has_spawn_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->spawn_count());
    }

    // optional int32 num_clients = 8;
    if (has_num_clients()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_clients());
    }

    // optional int32 num_bots = 9;
    if (has_num_bots()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_bots());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional int32 num_spectators = 10;
    if (has_num_spectators()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_spectators());
    }

    // optional int32 num_tv_relays = 11;
    if (has_num_tv_relays()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_tv_relays());
    }

    // optional float fps = 12;
    if (has_fps()) {
      total_size += 1 + 4;
    }

    // optional float avg_latency_out = 18;
    if (has_avg_latency_out()) {
      total_size += 2 + 4;
    }

    // optional float avg_latency_in = 19;
    if (has_avg_latency_in()) {
      total_size += 2 + 4;
    }

    // optional float avg_packets_out = 20;
    if (has_avg_packets_out()) {
      total_size += 2 + 4;
    }

    // optional float avg_packets_in = 21;
    if (has_avg_packets_in()) {
      total_size += 2 + 4;
    }

    // optional float avg_loss_out = 22;
    if (has_avg_loss_out()) {
      total_size += 2 + 4;
    }

  }
  if (_has_bits_[16 / 32] & 8323072u) {
    // optional float avg_loss_in = 23;
    if (has_avg_loss_in()) {
      total_size += 2 + 4;
    }

    // optional float avg_data_out = 24;
    if (has_avg_data_out()) {
      total_size += 2 + 4;
    }

    // optional uint64 total_data_in = 26;
    if (has_total_data_in()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->total_data_in());
    }

    // optional float avg_data_in = 25;
    if (has_avg_data_in()) {
      total_size += 2 + 4;
    }

    // optional uint64 total_packets_in = 27;
    if (has_total_packets_in()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->total_packets_in());
    }

    // optional uint64 total_data_out = 28;
    if (has_total_data_out()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->total_data_out());
    }

    // optional uint64 total_packets_out = 29;
    if (has_total_packets_out()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->total_packets_out());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgServerNetworkStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgServerNetworkStats)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgServerNetworkStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgServerNetworkStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgServerNetworkStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgServerNetworkStats)
    MergeFrom(*source);
  }
}

void CMsgServerNetworkStats::MergeFrom(const CMsgServerNetworkStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgServerNetworkStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ports_.MergeFrom(from.ports_);
  players_.MergeFrom(from.players_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      dedicated_ = from.dedicated_;
    }
    if (cached_has_bits & 0x00000002u) {
      cpu_usage_ = from.cpu_usage_;
    }
    if (cached_has_bits & 0x00000004u) {
      memory_used_mb_ = from.memory_used_mb_;
    }
    if (cached_has_bits & 0x00000008u) {
      memory_free_mb_ = from.memory_free_mb_;
    }
    if (cached_has_bits & 0x00000010u) {
      uptime_ = from.uptime_;
    }
    if (cached_has_bits & 0x00000020u) {
      spawn_count_ = from.spawn_count_;
    }
    if (cached_has_bits & 0x00000040u) {
      num_clients_ = from.num_clients_;
    }
    if (cached_has_bits & 0x00000080u) {
      num_bots_ = from.num_bots_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      num_spectators_ = from.num_spectators_;
    }
    if (cached_has_bits & 0x00000200u) {
      num_tv_relays_ = from.num_tv_relays_;
    }
    if (cached_has_bits & 0x00000400u) {
      fps_ = from.fps_;
    }
    if (cached_has_bits & 0x00000800u) {
      avg_latency_out_ = from.avg_latency_out_;
    }
    if (cached_has_bits & 0x00001000u) {
      avg_latency_in_ = from.avg_latency_in_;
    }
    if (cached_has_bits & 0x00002000u) {
      avg_packets_out_ = from.avg_packets_out_;
    }
    if (cached_has_bits & 0x00004000u) {
      avg_packets_in_ = from.avg_packets_in_;
    }
    if (cached_has_bits & 0x00008000u) {
      avg_loss_out_ = from.avg_loss_out_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 8323072u) {
    if (cached_has_bits & 0x00010000u) {
      avg_loss_in_ = from.avg_loss_in_;
    }
    if (cached_has_bits & 0x00020000u) {
      avg_data_out_ = from.avg_data_out_;
    }
    if (cached_has_bits & 0x00040000u) {
      total_data_in_ = from.total_data_in_;
    }
    if (cached_has_bits & 0x00080000u) {
      avg_data_in_ = from.avg_data_in_;
    }
    if (cached_has_bits & 0x00100000u) {
      total_packets_in_ = from.total_packets_in_;
    }
    if (cached_has_bits & 0x00200000u) {
      total_data_out_ = from.total_data_out_;
    }
    if (cached_has_bits & 0x00400000u) {
      total_packets_out_ = from.total_packets_out_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgServerNetworkStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgServerNetworkStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgServerNetworkStats::CopyFrom(const CMsgServerNetworkStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgServerNetworkStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgServerNetworkStats::IsInitialized() const {
  return true;
}

void CMsgServerNetworkStats::Swap(CMsgServerNetworkStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgServerNetworkStats::InternalSwap(CMsgServerNetworkStats* other) {
  using std::swap;
  CastToBase(&ports_)->InternalSwap(CastToBase(&other->ports_));
  CastToBase(&players_)->InternalSwap(CastToBase(&other->players_));
  swap(dedicated_, other->dedicated_);
  swap(cpu_usage_, other->cpu_usage_);
  swap(memory_used_mb_, other->memory_used_mb_);
  swap(memory_free_mb_, other->memory_free_mb_);
  swap(uptime_, other->uptime_);
  swap(spawn_count_, other->spawn_count_);
  swap(num_clients_, other->num_clients_);
  swap(num_bots_, other->num_bots_);
  swap(num_spectators_, other->num_spectators_);
  swap(num_tv_relays_, other->num_tv_relays_);
  swap(fps_, other->fps_);
  swap(avg_latency_out_, other->avg_latency_out_);
  swap(avg_latency_in_, other->avg_latency_in_);
  swap(avg_packets_out_, other->avg_packets_out_);
  swap(avg_packets_in_, other->avg_packets_in_);
  swap(avg_loss_out_, other->avg_loss_out_);
  swap(avg_loss_in_, other->avg_loss_in_);
  swap(avg_data_out_, other->avg_data_out_);
  swap(total_data_in_, other->total_data_in_);
  swap(avg_data_in_, other->avg_data_in_);
  swap(total_packets_in_, other->total_packets_in_);
  swap(total_data_out_, other->total_data_out_);
  swap(total_packets_out_, other->total_packets_out_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgServerNetworkStats::GetMetadata() const {
  protobuf_netmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CCLCMsg_ClientInfo* Arena::CreateMaybeMessage< ::CCLCMsg_ClientInfo >(Arena* arena) {
  return Arena::CreateInternal< ::CCLCMsg_ClientInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CCLCMsg_Move* Arena::CreateMaybeMessage< ::CCLCMsg_Move >(Arena* arena) {
  return Arena::CreateInternal< ::CCLCMsg_Move >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgVoiceAudio* Arena::CreateMaybeMessage< ::CMsgVoiceAudio >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgVoiceAudio >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CCLCMsg_VoiceData* Arena::CreateMaybeMessage< ::CCLCMsg_VoiceData >(Arena* arena) {
  return Arena::CreateInternal< ::CCLCMsg_VoiceData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CCLCMsg_BaselineAck* Arena::CreateMaybeMessage< ::CCLCMsg_BaselineAck >(Arena* arena) {
  return Arena::CreateInternal< ::CCLCMsg_BaselineAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CCLCMsg_ListenEvents* Arena::CreateMaybeMessage< ::CCLCMsg_ListenEvents >(Arena* arena) {
  return Arena::CreateInternal< ::CCLCMsg_ListenEvents >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CCLCMsg_RespondCvarValue* Arena::CreateMaybeMessage< ::CCLCMsg_RespondCvarValue >(Arena* arena) {
  return Arena::CreateInternal< ::CCLCMsg_RespondCvarValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CCLCMsg_FileCRCCheck* Arena::CreateMaybeMessage< ::CCLCMsg_FileCRCCheck >(Arena* arena) {
  return Arena::CreateInternal< ::CCLCMsg_FileCRCCheck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CCLCMsg_LoadingProgress* Arena::CreateMaybeMessage< ::CCLCMsg_LoadingProgress >(Arena* arena) {
  return Arena::CreateInternal< ::CCLCMsg_LoadingProgress >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CCLCMsg_SplitPlayerConnect* Arena::CreateMaybeMessage< ::CCLCMsg_SplitPlayerConnect >(Arena* arena) {
  return Arena::CreateInternal< ::CCLCMsg_SplitPlayerConnect >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CCLCMsg_ClientMessage* Arena::CreateMaybeMessage< ::CCLCMsg_ClientMessage >(Arena* arena) {
  return Arena::CreateInternal< ::CCLCMsg_ClientMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CCLCMsg_SplitPlayerDisconnect* Arena::CreateMaybeMessage< ::CCLCMsg_SplitPlayerDisconnect >(Arena* arena) {
  return Arena::CreateInternal< ::CCLCMsg_SplitPlayerDisconnect >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CCLCMsg_ServerStatus* Arena::CreateMaybeMessage< ::CCLCMsg_ServerStatus >(Arena* arena) {
  return Arena::CreateInternal< ::CCLCMsg_ServerStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CCLCMsg_ServerPing* Arena::CreateMaybeMessage< ::CCLCMsg_ServerPing >(Arena* arena) {
  return Arena::CreateInternal< ::CCLCMsg_ServerPing >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CCLCMsg_RequestPause* Arena::CreateMaybeMessage< ::CCLCMsg_RequestPause >(Arena* arena) {
  return Arena::CreateInternal< ::CCLCMsg_RequestPause >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CCLCMsg_CmdKeyValues* Arena::CreateMaybeMessage< ::CCLCMsg_CmdKeyValues >(Arena* arena) {
  return Arena::CreateInternal< ::CCLCMsg_CmdKeyValues >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_ServerInfo* Arena::CreateMaybeMessage< ::CSVCMsg_ServerInfo >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_ServerInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_ClassInfo_class_t* Arena::CreateMaybeMessage< ::CSVCMsg_ClassInfo_class_t >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_ClassInfo_class_t >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_ClassInfo* Arena::CreateMaybeMessage< ::CSVCMsg_ClassInfo >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_ClassInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_SetPause* Arena::CreateMaybeMessage< ::CSVCMsg_SetPause >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_SetPause >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_VoiceInit* Arena::CreateMaybeMessage< ::CSVCMsg_VoiceInit >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_VoiceInit >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_Print* Arena::CreateMaybeMessage< ::CSVCMsg_Print >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_Print >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_Sounds_sounddata_t* Arena::CreateMaybeMessage< ::CSVCMsg_Sounds_sounddata_t >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_Sounds_sounddata_t >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_Sounds* Arena::CreateMaybeMessage< ::CSVCMsg_Sounds >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_Sounds >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_Prefetch* Arena::CreateMaybeMessage< ::CSVCMsg_Prefetch >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_Prefetch >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_SetView* Arena::CreateMaybeMessage< ::CSVCMsg_SetView >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_SetView >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_FixAngle* Arena::CreateMaybeMessage< ::CSVCMsg_FixAngle >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_FixAngle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_CrosshairAngle* Arena::CreateMaybeMessage< ::CSVCMsg_CrosshairAngle >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_CrosshairAngle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_BSPDecal* Arena::CreateMaybeMessage< ::CSVCMsg_BSPDecal >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_BSPDecal >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_SplitScreen* Arena::CreateMaybeMessage< ::CSVCMsg_SplitScreen >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_SplitScreen >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_GetCvarValue* Arena::CreateMaybeMessage< ::CSVCMsg_GetCvarValue >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_GetCvarValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_Menu* Arena::CreateMaybeMessage< ::CSVCMsg_Menu >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_Menu >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_SendTable_sendprop_t* Arena::CreateMaybeMessage< ::CSVCMsg_SendTable_sendprop_t >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_SendTable_sendprop_t >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_SendTable* Arena::CreateMaybeMessage< ::CSVCMsg_SendTable >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_SendTable >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_GameEventList_key_t* Arena::CreateMaybeMessage< ::CSVCMsg_GameEventList_key_t >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_GameEventList_key_t >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_GameEventList_descriptor_t* Arena::CreateMaybeMessage< ::CSVCMsg_GameEventList_descriptor_t >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_GameEventList_descriptor_t >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_GameEventList* Arena::CreateMaybeMessage< ::CSVCMsg_GameEventList >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_GameEventList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_PacketEntities* Arena::CreateMaybeMessage< ::CSVCMsg_PacketEntities >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_PacketEntities >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_TempEntities* Arena::CreateMaybeMessage< ::CSVCMsg_TempEntities >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_TempEntities >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_CreateStringTable* Arena::CreateMaybeMessage< ::CSVCMsg_CreateStringTable >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_CreateStringTable >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_UpdateStringTable* Arena::CreateMaybeMessage< ::CSVCMsg_UpdateStringTable >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_UpdateStringTable >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_VoiceData* Arena::CreateMaybeMessage< ::CSVCMsg_VoiceData >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_VoiceData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_PacketReliable* Arena::CreateMaybeMessage< ::CSVCMsg_PacketReliable >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_PacketReliable >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_FullFrameSplit* Arena::CreateMaybeMessage< ::CSVCMsg_FullFrameSplit >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_FullFrameSplit >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_HLTVStatus* Arena::CreateMaybeMessage< ::CSVCMsg_HLTVStatus >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_HLTVStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_ServerSteamID* Arena::CreateMaybeMessage< ::CSVCMsg_ServerSteamID >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_ServerSteamID >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_CmdKeyValues* Arena::CreateMaybeMessage< ::CSVCMsg_CmdKeyValues >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_CmdKeyValues >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgIPCAddress* Arena::CreateMaybeMessage< ::CMsgIPCAddress >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgIPCAddress >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgServerPeer* Arena::CreateMaybeMessage< ::CMsgServerPeer >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgServerPeer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_PeerList* Arena::CreateMaybeMessage< ::CSVCMsg_PeerList >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_PeerList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_ClearAllStringTables* Arena::CreateMaybeMessage< ::CSVCMsg_ClearAllStringTables >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_ClearAllStringTables >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoFlattenedSerializerField_t* Arena::CreateMaybeMessage< ::ProtoFlattenedSerializerField_t >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoFlattenedSerializerField_t >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoFlattenedSerializer_t* Arena::CreateMaybeMessage< ::ProtoFlattenedSerializer_t >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoFlattenedSerializer_t >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_FlattenedSerializer* Arena::CreateMaybeMessage< ::CSVCMsg_FlattenedSerializer >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_FlattenedSerializer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_StopSound* Arena::CreateMaybeMessage< ::CSVCMsg_StopSound >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_StopSound >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CBidirMsg_RebroadcastGameEvent* Arena::CreateMaybeMessage< ::CBidirMsg_RebroadcastGameEvent >(Arena* arena) {
  return Arena::CreateInternal< ::CBidirMsg_RebroadcastGameEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CBidirMsg_RebroadcastSource* Arena::CreateMaybeMessage< ::CBidirMsg_RebroadcastSource >(Arena* arena) {
  return Arena::CreateInternal< ::CBidirMsg_RebroadcastSource >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SerializedNetAddress_t* Arena::CreateMaybeMessage< ::SerializedNetAddress_t >(Arena* arena) {
  return Arena::CreateInternal< ::SerializedNetAddress_t >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CBidirMsg_RelayInfo* Arena::CreateMaybeMessage< ::CBidirMsg_RelayInfo >(Arena* arena) {
  return Arena::CreateInternal< ::CBidirMsg_RelayInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SignedPayload_t* Arena::CreateMaybeMessage< ::SignedPayload_t >(Arena* arena) {
  return Arena::CreateInternal< ::SignedPayload_t >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CBidirMsg_RelayPacket_SignedDestinationAddress_t* Arena::CreateMaybeMessage< ::CBidirMsg_RelayPacket_SignedDestinationAddress_t >(Arena* arena) {
  return Arena::CreateInternal< ::CBidirMsg_RelayPacket_SignedDestinationAddress_t >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CBidirMsg_RelayPacket* Arena::CreateMaybeMessage< ::CBidirMsg_RelayPacket >(Arena* arena) {
  return Arena::CreateInternal< ::CBidirMsg_RelayPacket >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgServerNetworkStats_Port* Arena::CreateMaybeMessage< ::CMsgServerNetworkStats_Port >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgServerNetworkStats_Port >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgServerNetworkStats_Player* Arena::CreateMaybeMessage< ::CMsgServerNetworkStats_Player >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgServerNetworkStats_Player >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgServerNetworkStats* Arena::CreateMaybeMessage< ::CMsgServerNetworkStats >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgServerNetworkStats >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
