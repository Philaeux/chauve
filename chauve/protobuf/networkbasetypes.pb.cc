// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: networkbasetypes.proto

#include "networkbasetypes.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_networkbasetypes_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_networkbasetypes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgQAngle;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_networkbasetypes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgVector;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_networkbasetypes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsg_CVars_CVar;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_networkbasetypes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_GameEvent_key_t;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_networkbasetypes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_UserMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_networkbasetypes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CMsg_CVars;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_networkbasetypes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CSVCMsgList_GameEvents_event_t;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_networkbasetypes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CSVCMsgList_UserMessages_usermsg_t;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_networkbasetypes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CSVCMsg_GameEvent;
}  // namespace protobuf_networkbasetypes_2eproto
class CMsgVectorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgVector>
      _instance;
} _CMsgVector_default_instance_;
class CMsgVector2DDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgVector2D>
      _instance;
} _CMsgVector2D_default_instance_;
class CMsgQAngleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgQAngle>
      _instance;
} _CMsgQAngle_default_instance_;
class CMsgPlayerInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgPlayerInfo>
      _instance;
} _CMsgPlayerInfo_default_instance_;
class CMsg_CVars_CVarDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsg_CVars_CVar>
      _instance;
} _CMsg_CVars_CVar_default_instance_;
class CMsg_CVarsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsg_CVars>
      _instance;
} _CMsg_CVars_default_instance_;
class CNETMsg_NOPDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CNETMsg_NOP>
      _instance;
} _CNETMsg_NOP_default_instance_;
class CNETMsg_SplitScreenUserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CNETMsg_SplitScreenUser>
      _instance;
} _CNETMsg_SplitScreenUser_default_instance_;
class CNETMsg_DisconnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CNETMsg_Disconnect>
      _instance;
} _CNETMsg_Disconnect_default_instance_;
class CNETMsg_TickDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CNETMsg_Tick>
      _instance;
} _CNETMsg_Tick_default_instance_;
class CNETMsg_StringCmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CNETMsg_StringCmd>
      _instance;
} _CNETMsg_StringCmd_default_instance_;
class CNETMsg_SetConVarDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CNETMsg_SetConVar>
      _instance;
} _CNETMsg_SetConVar_default_instance_;
class CNETMsg_SignonStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CNETMsg_SignonState>
      _instance;
} _CNETMsg_SignonState_default_instance_;
class CSVCMsg_GameEvent_key_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_GameEvent_key_t>
      _instance;
} _CSVCMsg_GameEvent_key_t_default_instance_;
class CSVCMsg_GameEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_GameEvent>
      _instance;
} _CSVCMsg_GameEvent_default_instance_;
class CSVCMsgList_GameEvents_event_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsgList_GameEvents_event_t>
      _instance;
} _CSVCMsgList_GameEvents_event_t_default_instance_;
class CSVCMsgList_GameEventsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsgList_GameEvents>
      _instance;
} _CSVCMsgList_GameEvents_default_instance_;
class CSVCMsg_UserMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_UserMessage>
      _instance;
} _CSVCMsg_UserMessage_default_instance_;
class CSVCMsgList_UserMessages_usermsg_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsgList_UserMessages_usermsg_t>
      _instance;
} _CSVCMsgList_UserMessages_usermsg_t_default_instance_;
class CSVCMsgList_UserMessagesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsgList_UserMessages>
      _instance;
} _CSVCMsgList_UserMessages_default_instance_;
class CNETMsg_SpawnGroup_LoadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CNETMsg_SpawnGroup_Load>
      _instance;
} _CNETMsg_SpawnGroup_Load_default_instance_;
class CNETMsg_SpawnGroup_ManifestUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CNETMsg_SpawnGroup_ManifestUpdate>
      _instance;
} _CNETMsg_SpawnGroup_ManifestUpdate_default_instance_;
class CNETMsg_SpawnGroup_SetCreationTickDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CNETMsg_SpawnGroup_SetCreationTick>
      _instance;
} _CNETMsg_SpawnGroup_SetCreationTick_default_instance_;
class CNETMsg_SpawnGroup_UnloadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CNETMsg_SpawnGroup_Unload>
      _instance;
} _CNETMsg_SpawnGroup_Unload_default_instance_;
class CNETMsg_SpawnGroup_LoadCompletedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CNETMsg_SpawnGroup_LoadCompleted>
      _instance;
} _CNETMsg_SpawnGroup_LoadCompleted_default_instance_;
class CSVCMsg_GameSessionConfigurationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSVCMsg_GameSessionConfiguration>
      _instance;
} _CSVCMsg_GameSessionConfiguration_default_instance_;
namespace protobuf_networkbasetypes_2eproto {
static void InitDefaultsCMsgVector() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgVector_default_instance_;
    new (ptr) ::CMsgVector();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgVector::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgVector =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgVector}, {}};

static void InitDefaultsCMsgVector2D() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgVector2D_default_instance_;
    new (ptr) ::CMsgVector2D();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgVector2D::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgVector2D =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgVector2D}, {}};

static void InitDefaultsCMsgQAngle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgQAngle_default_instance_;
    new (ptr) ::CMsgQAngle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgQAngle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgQAngle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgQAngle}, {}};

static void InitDefaultsCMsgPlayerInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgPlayerInfo_default_instance_;
    new (ptr) ::CMsgPlayerInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgPlayerInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgPlayerInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgPlayerInfo}, {}};

static void InitDefaultsCMsg_CVars_CVar() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsg_CVars_CVar_default_instance_;
    new (ptr) ::CMsg_CVars_CVar();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsg_CVars_CVar::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsg_CVars_CVar =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsg_CVars_CVar}, {}};

static void InitDefaultsCMsg_CVars() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsg_CVars_default_instance_;
    new (ptr) ::CMsg_CVars();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsg_CVars::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsg_CVars =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsg_CVars}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CMsg_CVars_CVar.base,}};

static void InitDefaultsCNETMsg_NOP() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CNETMsg_NOP_default_instance_;
    new (ptr) ::CNETMsg_NOP();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CNETMsg_NOP::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CNETMsg_NOP =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCNETMsg_NOP}, {}};

static void InitDefaultsCNETMsg_SplitScreenUser() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CNETMsg_SplitScreenUser_default_instance_;
    new (ptr) ::CNETMsg_SplitScreenUser();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CNETMsg_SplitScreenUser::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CNETMsg_SplitScreenUser =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCNETMsg_SplitScreenUser}, {}};

static void InitDefaultsCNETMsg_Disconnect() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CNETMsg_Disconnect_default_instance_;
    new (ptr) ::CNETMsg_Disconnect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CNETMsg_Disconnect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CNETMsg_Disconnect =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCNETMsg_Disconnect}, {}};

static void InitDefaultsCNETMsg_Tick() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CNETMsg_Tick_default_instance_;
    new (ptr) ::CNETMsg_Tick();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CNETMsg_Tick::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CNETMsg_Tick =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCNETMsg_Tick}, {}};

static void InitDefaultsCNETMsg_StringCmd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CNETMsg_StringCmd_default_instance_;
    new (ptr) ::CNETMsg_StringCmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CNETMsg_StringCmd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CNETMsg_StringCmd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCNETMsg_StringCmd}, {}};

static void InitDefaultsCNETMsg_SetConVar() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CNETMsg_SetConVar_default_instance_;
    new (ptr) ::CNETMsg_SetConVar();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CNETMsg_SetConVar::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CNETMsg_SetConVar =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCNETMsg_SetConVar}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CMsg_CVars.base,}};

static void InitDefaultsCNETMsg_SignonState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CNETMsg_SignonState_default_instance_;
    new (ptr) ::CNETMsg_SignonState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CNETMsg_SignonState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CNETMsg_SignonState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCNETMsg_SignonState}, {}};

static void InitDefaultsCSVCMsg_GameEvent_key_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_GameEvent_key_t_default_instance_;
    new (ptr) ::CSVCMsg_GameEvent_key_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_GameEvent_key_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_GameEvent_key_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCSVCMsg_GameEvent_key_t}, {}};

static void InitDefaultsCSVCMsg_GameEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_GameEvent_default_instance_;
    new (ptr) ::CSVCMsg_GameEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_GameEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CSVCMsg_GameEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCSVCMsg_GameEvent}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CSVCMsg_GameEvent_key_t.base,}};

static void InitDefaultsCSVCMsgList_GameEvents_event_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsgList_GameEvents_event_t_default_instance_;
    new (ptr) ::CSVCMsgList_GameEvents_event_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsgList_GameEvents_event_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CSVCMsgList_GameEvents_event_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCSVCMsgList_GameEvents_event_t}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CSVCMsg_GameEvent.base,}};

static void InitDefaultsCSVCMsgList_GameEvents() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsgList_GameEvents_default_instance_;
    new (ptr) ::CSVCMsgList_GameEvents();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsgList_GameEvents::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CSVCMsgList_GameEvents =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCSVCMsgList_GameEvents}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CSVCMsgList_GameEvents_event_t.base,}};

static void InitDefaultsCSVCMsg_UserMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_UserMessage_default_instance_;
    new (ptr) ::CSVCMsg_UserMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_UserMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_UserMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCSVCMsg_UserMessage}, {}};

static void InitDefaultsCSVCMsgList_UserMessages_usermsg_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsgList_UserMessages_usermsg_t_default_instance_;
    new (ptr) ::CSVCMsgList_UserMessages_usermsg_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsgList_UserMessages_usermsg_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CSVCMsgList_UserMessages_usermsg_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCSVCMsgList_UserMessages_usermsg_t}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CSVCMsg_UserMessage.base,}};

static void InitDefaultsCSVCMsgList_UserMessages() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsgList_UserMessages_default_instance_;
    new (ptr) ::CSVCMsgList_UserMessages();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsgList_UserMessages::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CSVCMsgList_UserMessages =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCSVCMsgList_UserMessages}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CSVCMsgList_UserMessages_usermsg_t.base,}};

static void InitDefaultsCNETMsg_SpawnGroup_Load() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CNETMsg_SpawnGroup_Load_default_instance_;
    new (ptr) ::CNETMsg_SpawnGroup_Load();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CNETMsg_SpawnGroup_Load::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CNETMsg_SpawnGroup_Load =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCNETMsg_SpawnGroup_Load}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgVector.base,
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgQAngle.base,}};

static void InitDefaultsCNETMsg_SpawnGroup_ManifestUpdate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CNETMsg_SpawnGroup_ManifestUpdate_default_instance_;
    new (ptr) ::CNETMsg_SpawnGroup_ManifestUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CNETMsg_SpawnGroup_ManifestUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CNETMsg_SpawnGroup_ManifestUpdate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCNETMsg_SpawnGroup_ManifestUpdate}, {}};

static void InitDefaultsCNETMsg_SpawnGroup_SetCreationTick() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CNETMsg_SpawnGroup_SetCreationTick_default_instance_;
    new (ptr) ::CNETMsg_SpawnGroup_SetCreationTick();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CNETMsg_SpawnGroup_SetCreationTick::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CNETMsg_SpawnGroup_SetCreationTick =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCNETMsg_SpawnGroup_SetCreationTick}, {}};

static void InitDefaultsCNETMsg_SpawnGroup_Unload() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CNETMsg_SpawnGroup_Unload_default_instance_;
    new (ptr) ::CNETMsg_SpawnGroup_Unload();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CNETMsg_SpawnGroup_Unload::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CNETMsg_SpawnGroup_Unload =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCNETMsg_SpawnGroup_Unload}, {}};

static void InitDefaultsCNETMsg_SpawnGroup_LoadCompleted() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CNETMsg_SpawnGroup_LoadCompleted_default_instance_;
    new (ptr) ::CNETMsg_SpawnGroup_LoadCompleted();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CNETMsg_SpawnGroup_LoadCompleted::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CNETMsg_SpawnGroup_LoadCompleted =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCNETMsg_SpawnGroup_LoadCompleted}, {}};

static void InitDefaultsCSVCMsg_GameSessionConfiguration() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSVCMsg_GameSessionConfiguration_default_instance_;
    new (ptr) ::CSVCMsg_GameSessionConfiguration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSVCMsg_GameSessionConfiguration::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CSVCMsg_GameSessionConfiguration =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCSVCMsg_GameSessionConfiguration}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgVector.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgVector2D.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgQAngle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgPlayerInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsg_CVars_CVar.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsg_CVars.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CNETMsg_NOP.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CNETMsg_SplitScreenUser.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CNETMsg_Disconnect.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CNETMsg_Tick.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CNETMsg_StringCmd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CNETMsg_SetConVar.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CNETMsg_SignonState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_GameEvent_key_t.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_GameEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsgList_GameEvents_event_t.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsgList_GameEvents.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_UserMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsgList_UserMessages_usermsg_t.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsgList_UserMessages.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CNETMsg_SpawnGroup_Load.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CNETMsg_SpawnGroup_ManifestUpdate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CNETMsg_SpawnGroup_SetCreationTick.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CNETMsg_SpawnGroup_Unload.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CNETMsg_SpawnGroup_LoadCompleted.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSVCMsg_GameSessionConfiguration.base);
}

::google::protobuf::Metadata file_level_metadata[26];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgVector, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgVector, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgVector, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgVector, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgVector, z_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgVector2D, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgVector2D, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgVector2D, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgVector2D, y_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgQAngle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgQAngle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgQAngle, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgQAngle, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgQAngle, z_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPlayerInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPlayerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPlayerInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPlayerInfo, xuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPlayerInfo, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPlayerInfo, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPlayerInfo, fakeplayer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPlayerInfo, ishltv_),
  0,
  1,
  3,
  2,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsg_CVars_CVar, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsg_CVars_CVar, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsg_CVars_CVar, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsg_CVars_CVar, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsg_CVars, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsg_CVars, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsg_CVars, cvars_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_NOP, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_NOP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SplitScreenUser, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SplitScreenUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SplitScreenUser, slot_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_Disconnect, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_Disconnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_Disconnect, reason_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_Tick, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_Tick, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_Tick, tick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_Tick, host_frametime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_Tick, host_frametime_std_deviation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_Tick, host_computationtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_Tick, host_computationtime_std_deviation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_Tick, host_framestarttime_std_deviation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_Tick, host_loss_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_StringCmd, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_StringCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_StringCmd, command_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SetConVar, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SetConVar, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SetConVar, convars_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SignonState, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SignonState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SignonState, signon_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SignonState, spawn_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SignonState, num_server_players_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SignonState, players_networkids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SignonState, map_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SignonState, addons_),
  2,
  3,
  4,
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameEvent_key_t, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameEvent_key_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameEvent_key_t, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameEvent_key_t, val_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameEvent_key_t, val_float_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameEvent_key_t, val_long_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameEvent_key_t, val_short_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameEvent_key_t, val_byte_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameEvent_key_t, val_bool_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameEvent_key_t, val_uint64_),
  1,
  0,
  2,
  3,
  4,
  5,
  6,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameEvent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameEvent, event_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameEvent, eventid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameEvent, keys_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsgList_GameEvents_event_t, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsgList_GameEvents_event_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsgList_GameEvents_event_t, tick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsgList_GameEvents_event_t, event_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsgList_GameEvents, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsgList_GameEvents, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsgList_GameEvents, events_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_UserMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_UserMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_UserMessage, msg_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_UserMessage, msg_data_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsgList_UserMessages_usermsg_t, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsgList_UserMessages_usermsg_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsgList_UserMessages_usermsg_t, tick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsgList_UserMessages_usermsg_t, msg_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsgList_UserMessages, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsgList_UserMessages, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsgList_UserMessages, usermsgs_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, worldname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, entitylumpname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, entityfiltername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, spawngrouphandle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, spawngroupownerhandle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, world_offset_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, world_offset_angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, spawngroupmanifest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, tickcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, manifestincomplete_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, localnamefixup_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, parentnamefixup_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, manifestloadpriority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, worldgroupid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, creationsequence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, savegamefilename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_Load, spawngroupparenthandle_),
  0,
  1,
  2,
  9,
  10,
  7,
  8,
  3,
  11,
  12,
  13,
  4,
  5,
  14,
  15,
  16,
  6,
  17,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_ManifestUpdate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_ManifestUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_ManifestUpdate, spawngrouphandle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_ManifestUpdate, spawngroupmanifest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_ManifestUpdate, manifestincomplete_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_SetCreationTick, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_SetCreationTick, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_SetCreationTick, spawngrouphandle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_SetCreationTick, tickcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_SetCreationTick, creationsequence_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_Unload, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_Unload, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_Unload, spawngrouphandle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_Unload, flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_Unload, tickcount_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_LoadCompleted, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_LoadCompleted, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SpawnGroup_LoadCompleted, spawngrouphandle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, is_multiplayer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, is_loadsavegame_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, is_background_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, is_headless_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, min_client_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, max_client_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, max_clients_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, tick_interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, hostname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, savegamename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, s1_mapname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, gamemode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, server_ip_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, is_localonly_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, is_transition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, previouslevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSVCMsg_GameSessionConfiguration, landmarkname_),
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  0,
  1,
  2,
  3,
  4,
  5,
  16,
  17,
  6,
  7,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::CMsgVector)},
  { 11, 18, sizeof(::CMsgVector2D)},
  { 20, 28, sizeof(::CMsgQAngle)},
  { 31, 42, sizeof(::CMsgPlayerInfo)},
  { 48, 55, sizeof(::CMsg_CVars_CVar)},
  { 57, 63, sizeof(::CMsg_CVars)},
  { 64, 69, sizeof(::CNETMsg_NOP)},
  { 69, 75, sizeof(::CNETMsg_SplitScreenUser)},
  { 76, 82, sizeof(::CNETMsg_Disconnect)},
  { 83, 95, sizeof(::CNETMsg_Tick)},
  { 102, 108, sizeof(::CNETMsg_StringCmd)},
  { 109, 115, sizeof(::CNETMsg_SetConVar)},
  { 116, 127, sizeof(::CNETMsg_SignonState)},
  { 133, 146, sizeof(::CSVCMsg_GameEvent_key_t)},
  { 154, 162, sizeof(::CSVCMsg_GameEvent)},
  { 165, 172, sizeof(::CSVCMsgList_GameEvents_event_t)},
  { 174, 180, sizeof(::CSVCMsgList_GameEvents)},
  { 181, 188, sizeof(::CSVCMsg_UserMessage)},
  { 190, 197, sizeof(::CSVCMsgList_UserMessages_usermsg_t)},
  { 199, 205, sizeof(::CSVCMsgList_UserMessages)},
  { 206, 229, sizeof(::CNETMsg_SpawnGroup_Load)},
  { 247, 255, sizeof(::CNETMsg_SpawnGroup_ManifestUpdate)},
  { 258, 266, sizeof(::CNETMsg_SpawnGroup_SetCreationTick)},
  { 269, 277, sizeof(::CNETMsg_SpawnGroup_Unload)},
  { 280, 286, sizeof(::CNETMsg_SpawnGroup_LoadCompleted)},
  { 287, 310, sizeof(::CSVCMsg_GameSessionConfiguration)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgVector_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgVector2D_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgQAngle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgPlayerInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsg_CVars_CVar_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsg_CVars_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CNETMsg_NOP_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CNETMsg_SplitScreenUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CNETMsg_Disconnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CNETMsg_Tick_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CNETMsg_StringCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CNETMsg_SetConVar_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CNETMsg_SignonState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_GameEvent_key_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_GameEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsgList_GameEvents_event_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsgList_GameEvents_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_UserMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsgList_UserMessages_usermsg_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsgList_UserMessages_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CNETMsg_SpawnGroup_Load_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CNETMsg_SpawnGroup_ManifestUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CNETMsg_SpawnGroup_SetCreationTick_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CNETMsg_SpawnGroup_Unload_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CNETMsg_SpawnGroup_LoadCompleted_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSVCMsg_GameSessionConfiguration_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "networkbasetypes.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 26);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026networkbasetypes.proto\032\030network_connec"
      "tion.proto\"-\n\nCMsgVector\022\t\n\001x\030\001 \001(\002\022\t\n\001y"
      "\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"$\n\014CMsgVector2D\022\t\n\001x\030\001"
      " \001(\002\022\t\n\001y\030\002 \001(\002\"-\n\nCMsgQAngle\022\t\n\001x\030\001 \001(\002"
      "\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"q\n\016CMsgPlayerInfo"
      "\022\014\n\004name\030\001 \001(\t\022\014\n\004xuid\030\002 \001(\006\022\016\n\006userid\030\003"
      " \001(\005\022\017\n\007steamid\030\004 \001(\006\022\022\n\nfakeplayer\030\005 \001("
      "\010\022\016\n\006ishltv\030\006 \001(\010\"R\n\nCMsg_CVars\022\037\n\005cvars"
      "\030\001 \003(\0132\020.CMsg_CVars.CVar\032#\n\004CVar\022\014\n\004name"
      "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\"\r\n\013CNETMsg_NOP\"\'\n\027"
      "CNETMsg_SplitScreenUser\022\014\n\004slot\030\001 \001(\005\"^\n"
      "\022CNETMsg_Disconnect\022H\n\006reason\030\002 \001(\0162\034.EN"
      "etworkDisconnectionReason:\032NETWORK_DISCO"
      "NNECT_INVALID\"\342\001\n\014CNETMsg_Tick\022\014\n\004tick\030\001"
      " \001(\r\022\026\n\016host_frametime\030\002 \001(\r\022$\n\034host_fra"
      "metime_std_deviation\030\003 \001(\r\022\034\n\024host_compu"
      "tationtime\030\004 \001(\r\022*\n\"host_computationtime"
      "_std_deviation\030\005 \001(\r\022)\n!host_framestartt"
      "ime_std_deviation\030\006 \001(\r\022\021\n\thost_loss\030\007 \001"
      "(\r\"$\n\021CNETMsg_StringCmd\022\017\n\007command\030\001 \001(\t"
      "\"1\n\021CNETMsg_SetConVar\022\034\n\007convars\030\001 \001(\0132\013"
      ".CMsg_CVars\"\232\001\n\023CNETMsg_SignonState\022\024\n\014s"
      "ignon_state\030\001 \001(\r\022\023\n\013spawn_count\030\002 \001(\r\022\032"
      "\n\022num_server_players\030\003 \001(\r\022\032\n\022players_ne"
      "tworkids\030\004 \003(\t\022\020\n\010map_name\030\005 \001(\t\022\016\n\006addo"
      "ns\030\006 \001(\t\"\374\001\n\021CSVCMsg_GameEvent\022\022\n\nevent_"
      "name\030\001 \001(\t\022\017\n\007eventid\030\002 \001(\005\022&\n\004keys\030\003 \003("
      "\0132\030.CSVCMsg_GameEvent.key_t\032\231\001\n\005key_t\022\014\n"
      "\004type\030\001 \001(\005\022\022\n\nval_string\030\002 \001(\t\022\021\n\tval_f"
      "loat\030\003 \001(\002\022\020\n\010val_long\030\004 \001(\005\022\021\n\tval_shor"
      "t\030\005 \001(\005\022\020\n\010val_byte\030\006 \001(\005\022\020\n\010val_bool\030\007 "
      "\001(\010\022\022\n\nval_uint64\030\010 \001(\004\"\205\001\n\026CSVCMsgList_"
      "GameEvents\022/\n\006events\030\001 \003(\0132\037.CSVCMsgList"
      "_GameEvents.event_t\032:\n\007event_t\022\014\n\004tick\030\001"
      " \001(\005\022!\n\005event\030\002 \001(\0132\022.CSVCMsg_GameEvent\""
      "9\n\023CSVCMsg_UserMessage\022\020\n\010msg_type\030\001 \001(\005"
      "\022\020\n\010msg_data\030\002 \001(\014\"\217\001\n\030CSVCMsgList_UserM"
      "essages\0225\n\010usermsgs\030\001 \003(\0132#.CSVCMsgList_"
      "UserMessages.usermsg_t\032<\n\tusermsg_t\022\014\n\004t"
      "ick\030\001 \001(\005\022!\n\003msg\030\002 \001(\0132\024.CSVCMsg_UserMes"
      "sage\"\372\003\n\027CNETMsg_SpawnGroup_Load\022\021\n\tworl"
      "dname\030\001 \001(\t\022\026\n\016entitylumpname\030\002 \001(\t\022\030\n\020e"
      "ntityfiltername\030\003 \001(\t\022\030\n\020spawngrouphandl"
      "e\030\004 \001(\r\022\035\n\025spawngroupownerhandle\030\005 \001(\r\022%"
      "\n\020world_offset_pos\030\006 \001(\0132\013.CMsgVector\022\'\n"
      "\022world_offset_angle\030\007 \001(\0132\013.CMsgQAngle\022\032"
      "\n\022spawngroupmanifest\030\010 \001(\014\022\r\n\005flags\030\t \001("
      "\r\022\021\n\ttickcount\030\n \001(\005\022\032\n\022manifestincomple"
      "te\030\013 \001(\010\022\026\n\016localnamefixup\030\014 \001(\t\022\027\n\017pare"
      "ntnamefixup\030\r \001(\t\022\034\n\024manifestloadpriorit"
      "y\030\016 \001(\005\022\024\n\014worldgroupid\030\017 \001(\r\022\030\n\020creatio"
      "nsequence\030\020 \001(\r\022\030\n\020savegamefilename\030\021 \001("
      "\t\022\036\n\026spawngroupparenthandle\030\022 \001(\r\"u\n!CNE"
      "TMsg_SpawnGroup_ManifestUpdate\022\030\n\020spawng"
      "rouphandle\030\001 \001(\r\022\032\n\022spawngroupmanifest\030\002"
      " \001(\014\022\032\n\022manifestincomplete\030\003 \001(\010\"k\n\"CNET"
      "Msg_SpawnGroup_SetCreationTick\022\030\n\020spawng"
      "rouphandle\030\001 \001(\r\022\021\n\ttickcount\030\002 \001(\005\022\030\n\020c"
      "reationsequence\030\003 \001(\r\"W\n\031CNETMsg_SpawnGr"
      "oup_Unload\022\030\n\020spawngrouphandle\030\001 \001(\r\022\r\n\005"
      "flags\030\002 \001(\r\022\021\n\ttickcount\030\003 \001(\005\"<\n CNETMs"
      "g_SpawnGroup_LoadCompleted\022\030\n\020spawngroup"
      "handle\030\001 \001(\r\"\264\003\n CSVCMsg_GameSessionConf"
      "iguration\022\026\n\016is_multiplayer\030\001 \001(\010\022\027\n\017is_"
      "loadsavegame\030\002 \001(\010\022\031\n\021is_background_map\030"
      "\003 \001(\010\022\023\n\013is_headless\030\004 \001(\010\022\030\n\020min_client"
      "_limit\030\005 \001(\r\022\030\n\020max_client_limit\030\006 \001(\r\022\023"
      "\n\013max_clients\030\007 \001(\r\022\025\n\rtick_interval\030\010 \001"
      "(\007\022\020\n\010hostname\030\t \001(\t\022\024\n\014savegamename\030\n \001"
      "(\t\022\022\n\ns1_mapname\030\013 \001(\t\022\020\n\010gamemode\030\014 \001(\t"
      "\022\031\n\021server_ip_address\030\r \001(\t\022\014\n\004data\030\016 \001("
      "\014\022\024\n\014is_localonly\030\017 \001(\010\022\025\n\ris_transition"
      "\030\020 \001(\010\022\025\n\rpreviouslevel\030\021 \001(\t\022\024\n\014landmar"
      "kname\030\022 \001(\t*\256\002\n\014NET_Messages\022\013\n\007net_NOP\020"
      "\000\022\022\n\016net_Disconnect\020\001\022\027\n\023net_SplitScreen"
      "User\020\003\022\014\n\010net_Tick\020\004\022\021\n\rnet_StringCmd\020\005\022"
      "\021\n\rnet_SetConVar\020\006\022\023\n\017net_SignonState\020\007\022"
      "\027\n\023net_SpawnGroup_Load\020\010\022!\n\035net_SpawnGro"
      "up_ManifestUpdate\020\t\022\"\n\036net_SpawnGroup_Se"
      "tCreationTick\020\013\022\031\n\025net_SpawnGroup_Unload"
      "\020\014\022 \n\034net_SpawnGroup_LoadCompleted\020\r*\314\002\n"
      "\021SpawnGroupFlags_t\022\'\n#SPAWN_GROUP_LOAD_E"
      "NTITIES_FROM_SAVE\020\001\022#\n\037SPAWN_GROUP_DONT_"
      "SPAWN_ENTITIES\020\002\022!\n\035SPAWN_GROUP_SYNCHRON"
      "OUS_SPAWN\020\004\022&\n\"SPAWN_GROUP_IS_INITIAL_SP"
      "AWN_GROUP\020\010\022+\n\'SPAWN_GROUP_CREATE_CLIENT"
      "_ONLY_ENTITIES\020\020\022\"\n\036SPAWN_GROUP_BLOCK_UN"
      "TIL_LOADED\020@\022$\n\037SPAWN_GROUP_LOAD_STREAMI"
      "NG_DATA\020\200\001\022\'\n\"SPAWN_GROUP_CREATE_NEW_SCE"
      "NE_WORLD\020\200\002B\003\200\001\000"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3576);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "networkbasetypes.proto", &protobuf_RegisterTypes);
  ::protobuf_network_5fconnection_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_networkbasetypes_2eproto
const ::google::protobuf::EnumDescriptor* NET_Messages_descriptor() {
  protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_networkbasetypes_2eproto::file_level_enum_descriptors[0];
}
bool NET_Messages_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SpawnGroupFlags_t_descriptor() {
  protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_networkbasetypes_2eproto::file_level_enum_descriptors[1];
}
bool SpawnGroupFlags_t_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 64:
    case 128:
    case 256:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CMsgVector::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgVector::kXFieldNumber;
const int CMsgVector::kYFieldNumber;
const int CMsgVector::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgVector::CMsgVector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgVector.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgVector)
}
CMsgVector::CMsgVector(const CMsgVector& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:CMsgVector)
}

void CMsgVector::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

CMsgVector::~CMsgVector() {
  // @@protoc_insertion_point(destructor:CMsgVector)
  SharedDtor();
}

void CMsgVector::SharedDtor() {
}

void CMsgVector::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgVector::descriptor() {
  ::protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgVector& CMsgVector::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_networkbasetypes_2eproto::scc_info_CMsgVector.base);
  return *internal_default_instance();
}


void CMsgVector::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgVector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&z_) -
        reinterpret_cast<char*>(&x_)) + sizeof(z_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgVector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgVector)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgVector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgVector)
  return false;
#undef DO_
}

void CMsgVector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgVector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // optional float y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // optional float z = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgVector)
}

::google::protobuf::uint8* CMsgVector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgVector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // optional float y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // optional float z = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgVector)
  return target;
}

size_t CMsgVector::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgVector)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional float x = 1;
    if (has_x()) {
      total_size += 1 + 4;
    }

    // optional float y = 2;
    if (has_y()) {
      total_size += 1 + 4;
    }

    // optional float z = 3;
    if (has_z()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgVector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgVector)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgVector* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgVector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgVector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgVector)
    MergeFrom(*source);
  }
}

void CMsgVector::MergeFrom(const CMsgVector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgVector)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      z_ = from.z_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgVector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgVector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgVector::CopyFrom(const CMsgVector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgVector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgVector::IsInitialized() const {
  return true;
}

void CMsgVector::Swap(CMsgVector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgVector::InternalSwap(CMsgVector* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgVector::GetMetadata() const {
  protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgVector2D::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgVector2D::kXFieldNumber;
const int CMsgVector2D::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgVector2D::CMsgVector2D()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgVector2D.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgVector2D)
}
CMsgVector2D::CMsgVector2D(const CMsgVector2D& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:CMsgVector2D)
}

void CMsgVector2D::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

CMsgVector2D::~CMsgVector2D() {
  // @@protoc_insertion_point(destructor:CMsgVector2D)
  SharedDtor();
}

void CMsgVector2D::SharedDtor() {
}

void CMsgVector2D::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgVector2D::descriptor() {
  ::protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgVector2D& CMsgVector2D::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_networkbasetypes_2eproto::scc_info_CMsgVector2D.base);
  return *internal_default_instance();
}


void CMsgVector2D::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgVector2D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&x_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgVector2D::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgVector2D)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgVector2D)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgVector2D)
  return false;
#undef DO_
}

void CMsgVector2D::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgVector2D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // optional float y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgVector2D)
}

::google::protobuf::uint8* CMsgVector2D::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgVector2D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // optional float y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgVector2D)
  return target;
}

size_t CMsgVector2D::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgVector2D)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional float x = 1;
    if (has_x()) {
      total_size += 1 + 4;
    }

    // optional float y = 2;
    if (has_y()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgVector2D::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgVector2D)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgVector2D* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgVector2D>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgVector2D)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgVector2D)
    MergeFrom(*source);
  }
}

void CMsgVector2D::MergeFrom(const CMsgVector2D& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgVector2D)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgVector2D::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgVector2D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgVector2D::CopyFrom(const CMsgVector2D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgVector2D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgVector2D::IsInitialized() const {
  return true;
}

void CMsgVector2D::Swap(CMsgVector2D* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgVector2D::InternalSwap(CMsgVector2D* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgVector2D::GetMetadata() const {
  protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgQAngle::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgQAngle::kXFieldNumber;
const int CMsgQAngle::kYFieldNumber;
const int CMsgQAngle::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgQAngle::CMsgQAngle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgQAngle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgQAngle)
}
CMsgQAngle::CMsgQAngle(const CMsgQAngle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:CMsgQAngle)
}

void CMsgQAngle::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

CMsgQAngle::~CMsgQAngle() {
  // @@protoc_insertion_point(destructor:CMsgQAngle)
  SharedDtor();
}

void CMsgQAngle::SharedDtor() {
}

void CMsgQAngle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgQAngle::descriptor() {
  ::protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgQAngle& CMsgQAngle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_networkbasetypes_2eproto::scc_info_CMsgQAngle.base);
  return *internal_default_instance();
}


void CMsgQAngle::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgQAngle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&z_) -
        reinterpret_cast<char*>(&x_)) + sizeof(z_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgQAngle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgQAngle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgQAngle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgQAngle)
  return false;
#undef DO_
}

void CMsgQAngle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgQAngle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // optional float y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // optional float z = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgQAngle)
}

::google::protobuf::uint8* CMsgQAngle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgQAngle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // optional float y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // optional float z = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgQAngle)
  return target;
}

size_t CMsgQAngle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgQAngle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional float x = 1;
    if (has_x()) {
      total_size += 1 + 4;
    }

    // optional float y = 2;
    if (has_y()) {
      total_size += 1 + 4;
    }

    // optional float z = 3;
    if (has_z()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgQAngle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgQAngle)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgQAngle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgQAngle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgQAngle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgQAngle)
    MergeFrom(*source);
  }
}

void CMsgQAngle::MergeFrom(const CMsgQAngle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgQAngle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      z_ = from.z_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgQAngle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgQAngle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgQAngle::CopyFrom(const CMsgQAngle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgQAngle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgQAngle::IsInitialized() const {
  return true;
}

void CMsgQAngle::Swap(CMsgQAngle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgQAngle::InternalSwap(CMsgQAngle* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgQAngle::GetMetadata() const {
  protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgPlayerInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgPlayerInfo::kNameFieldNumber;
const int CMsgPlayerInfo::kXuidFieldNumber;
const int CMsgPlayerInfo::kUseridFieldNumber;
const int CMsgPlayerInfo::kSteamidFieldNumber;
const int CMsgPlayerInfo::kFakeplayerFieldNumber;
const int CMsgPlayerInfo::kIshltvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgPlayerInfo::CMsgPlayerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgPlayerInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgPlayerInfo)
}
CMsgPlayerInfo::CMsgPlayerInfo(const CMsgPlayerInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&xuid_, &from.xuid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ishltv_) -
    reinterpret_cast<char*>(&xuid_)) + sizeof(ishltv_));
  // @@protoc_insertion_point(copy_constructor:CMsgPlayerInfo)
}

void CMsgPlayerInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&xuid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ishltv_) -
      reinterpret_cast<char*>(&xuid_)) + sizeof(ishltv_));
}

CMsgPlayerInfo::~CMsgPlayerInfo() {
  // @@protoc_insertion_point(destructor:CMsgPlayerInfo)
  SharedDtor();
}

void CMsgPlayerInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgPlayerInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgPlayerInfo::descriptor() {
  ::protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgPlayerInfo& CMsgPlayerInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_networkbasetypes_2eproto::scc_info_CMsgPlayerInfo.base);
  return *internal_default_instance();
}


void CMsgPlayerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgPlayerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 62u) {
    ::memset(&xuid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ishltv_) -
        reinterpret_cast<char*>(&xuid_)) + sizeof(ishltv_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgPlayerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgPlayerInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgPlayerInfo.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 xuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_xuid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &xuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 userid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steamid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool fakeplayer = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_fakeplayer();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &fakeplayer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool ishltv = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_ishltv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ishltv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgPlayerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgPlayerInfo)
  return false;
#undef DO_
}

void CMsgPlayerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgPlayerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgPlayerInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional fixed64 xuid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->xuid(), output);
  }

  // optional int32 userid = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->userid(), output);
  }

  // optional fixed64 steamid = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->steamid(), output);
  }

  // optional bool fakeplayer = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->fakeplayer(), output);
  }

  // optional bool ishltv = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->ishltv(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgPlayerInfo)
}

::google::protobuf::uint8* CMsgPlayerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgPlayerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgPlayerInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional fixed64 xuid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->xuid(), target);
  }

  // optional int32 userid = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->userid(), target);
  }

  // optional fixed64 steamid = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->steamid(), target);
  }

  // optional bool fakeplayer = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->fakeplayer(), target);
  }

  // optional bool ishltv = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->ishltv(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgPlayerInfo)
  return target;
}

size_t CMsgPlayerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgPlayerInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional fixed64 xuid = 2;
    if (has_xuid()) {
      total_size += 1 + 8;
    }

    // optional fixed64 steamid = 4;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional int32 userid = 3;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional bool fakeplayer = 5;
    if (has_fakeplayer()) {
      total_size += 1 + 1;
    }

    // optional bool ishltv = 6;
    if (has_ishltv()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgPlayerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgPlayerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgPlayerInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgPlayerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgPlayerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgPlayerInfo)
    MergeFrom(*source);
  }
}

void CMsgPlayerInfo::MergeFrom(const CMsgPlayerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgPlayerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      xuid_ = from.xuid_;
    }
    if (cached_has_bits & 0x00000004u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000008u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000010u) {
      fakeplayer_ = from.fakeplayer_;
    }
    if (cached_has_bits & 0x00000020u) {
      ishltv_ = from.ishltv_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgPlayerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgPlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgPlayerInfo::CopyFrom(const CMsgPlayerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgPlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgPlayerInfo::IsInitialized() const {
  return true;
}

void CMsgPlayerInfo::Swap(CMsgPlayerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgPlayerInfo::InternalSwap(CMsgPlayerInfo* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(xuid_, other->xuid_);
  swap(steamid_, other->steamid_);
  swap(userid_, other->userid_);
  swap(fakeplayer_, other->fakeplayer_);
  swap(ishltv_, other->ishltv_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgPlayerInfo::GetMetadata() const {
  protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsg_CVars_CVar::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsg_CVars_CVar::kNameFieldNumber;
const int CMsg_CVars_CVar::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsg_CVars_CVar::CMsg_CVars_CVar()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_networkbasetypes_2eproto::scc_info_CMsg_CVars_CVar.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsg_CVars.CVar)
}
CMsg_CVars_CVar::CMsg_CVars_CVar(const CMsg_CVars_CVar& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsg_CVars.CVar)
}

void CMsg_CVars_CVar::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsg_CVars_CVar::~CMsg_CVars_CVar() {
  // @@protoc_insertion_point(destructor:CMsg_CVars.CVar)
  SharedDtor();
}

void CMsg_CVars_CVar::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsg_CVars_CVar::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsg_CVars_CVar::descriptor() {
  ::protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsg_CVars_CVar& CMsg_CVars_CVar::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_networkbasetypes_2eproto::scc_info_CMsg_CVars_CVar.base);
  return *internal_default_instance();
}


void CMsg_CVars_CVar::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsg_CVars.CVar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsg_CVars_CVar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsg_CVars.CVar)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsg_CVars.CVar.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsg_CVars.CVar.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsg_CVars.CVar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsg_CVars.CVar)
  return false;
#undef DO_
}

void CMsg_CVars_CVar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsg_CVars.CVar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsg_CVars.CVar.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsg_CVars.CVar.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsg_CVars.CVar)
}

::google::protobuf::uint8* CMsg_CVars_CVar::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsg_CVars.CVar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsg_CVars.CVar.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsg_CVars.CVar.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsg_CVars.CVar)
  return target;
}

size_t CMsg_CVars_CVar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsg_CVars.CVar)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsg_CVars_CVar::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsg_CVars.CVar)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsg_CVars_CVar* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsg_CVars_CVar>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsg_CVars.CVar)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsg_CVars.CVar)
    MergeFrom(*source);
  }
}

void CMsg_CVars_CVar::MergeFrom(const CMsg_CVars_CVar& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsg_CVars.CVar)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void CMsg_CVars_CVar::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsg_CVars.CVar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsg_CVars_CVar::CopyFrom(const CMsg_CVars_CVar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsg_CVars.CVar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsg_CVars_CVar::IsInitialized() const {
  return true;
}

void CMsg_CVars_CVar::Swap(CMsg_CVars_CVar* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsg_CVars_CVar::InternalSwap(CMsg_CVars_CVar* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsg_CVars_CVar::GetMetadata() const {
  protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsg_CVars::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsg_CVars::kCvarsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsg_CVars::CMsg_CVars()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_networkbasetypes_2eproto::scc_info_CMsg_CVars.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsg_CVars)
}
CMsg_CVars::CMsg_CVars(const CMsg_CVars& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      cvars_(from.cvars_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsg_CVars)
}

void CMsg_CVars::SharedCtor() {
}

CMsg_CVars::~CMsg_CVars() {
  // @@protoc_insertion_point(destructor:CMsg_CVars)
  SharedDtor();
}

void CMsg_CVars::SharedDtor() {
}

void CMsg_CVars::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsg_CVars::descriptor() {
  ::protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsg_CVars& CMsg_CVars::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_networkbasetypes_2eproto::scc_info_CMsg_CVars.base);
  return *internal_default_instance();
}


void CMsg_CVars::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsg_CVars)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cvars_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsg_CVars::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsg_CVars)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsg_CVars.CVar cvars = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_cvars()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsg_CVars)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsg_CVars)
  return false;
#undef DO_
}

void CMsg_CVars::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsg_CVars)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsg_CVars.CVar cvars = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cvars_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->cvars(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsg_CVars)
}

::google::protobuf::uint8* CMsg_CVars::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsg_CVars)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsg_CVars.CVar cvars = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cvars_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->cvars(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsg_CVars)
  return target;
}

size_t CMsg_CVars::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsg_CVars)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsg_CVars.CVar cvars = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->cvars_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->cvars(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsg_CVars::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsg_CVars)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsg_CVars* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsg_CVars>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsg_CVars)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsg_CVars)
    MergeFrom(*source);
  }
}

void CMsg_CVars::MergeFrom(const CMsg_CVars& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsg_CVars)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cvars_.MergeFrom(from.cvars_);
}

void CMsg_CVars::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsg_CVars)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsg_CVars::CopyFrom(const CMsg_CVars& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsg_CVars)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsg_CVars::IsInitialized() const {
  return true;
}

void CMsg_CVars::Swap(CMsg_CVars* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsg_CVars::InternalSwap(CMsg_CVars* other) {
  using std::swap;
  CastToBase(&cvars_)->InternalSwap(CastToBase(&other->cvars_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsg_CVars::GetMetadata() const {
  protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CNETMsg_NOP::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CNETMsg_NOP::CNETMsg_NOP()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_networkbasetypes_2eproto::scc_info_CNETMsg_NOP.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CNETMsg_NOP)
}
CNETMsg_NOP::CNETMsg_NOP(const CNETMsg_NOP& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CNETMsg_NOP)
}

void CNETMsg_NOP::SharedCtor() {
}

CNETMsg_NOP::~CNETMsg_NOP() {
  // @@protoc_insertion_point(destructor:CNETMsg_NOP)
  SharedDtor();
}

void CNETMsg_NOP::SharedDtor() {
}

void CNETMsg_NOP::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CNETMsg_NOP::descriptor() {
  ::protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CNETMsg_NOP& CNETMsg_NOP::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_networkbasetypes_2eproto::scc_info_CNETMsg_NOP.base);
  return *internal_default_instance();
}


void CNETMsg_NOP::Clear() {
// @@protoc_insertion_point(message_clear_start:CNETMsg_NOP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CNETMsg_NOP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CNETMsg_NOP)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CNETMsg_NOP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CNETMsg_NOP)
  return false;
#undef DO_
}

void CNETMsg_NOP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CNETMsg_NOP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CNETMsg_NOP)
}

::google::protobuf::uint8* CNETMsg_NOP::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CNETMsg_NOP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CNETMsg_NOP)
  return target;
}

size_t CNETMsg_NOP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CNETMsg_NOP)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CNETMsg_NOP::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CNETMsg_NOP)
  GOOGLE_DCHECK_NE(&from, this);
  const CNETMsg_NOP* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CNETMsg_NOP>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CNETMsg_NOP)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CNETMsg_NOP)
    MergeFrom(*source);
  }
}

void CNETMsg_NOP::MergeFrom(const CNETMsg_NOP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CNETMsg_NOP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CNETMsg_NOP::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CNETMsg_NOP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CNETMsg_NOP::CopyFrom(const CNETMsg_NOP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CNETMsg_NOP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CNETMsg_NOP::IsInitialized() const {
  return true;
}

void CNETMsg_NOP::Swap(CNETMsg_NOP* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CNETMsg_NOP::InternalSwap(CNETMsg_NOP* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CNETMsg_NOP::GetMetadata() const {
  protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CNETMsg_SplitScreenUser::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CNETMsg_SplitScreenUser::kSlotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CNETMsg_SplitScreenUser::CNETMsg_SplitScreenUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_networkbasetypes_2eproto::scc_info_CNETMsg_SplitScreenUser.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CNETMsg_SplitScreenUser)
}
CNETMsg_SplitScreenUser::CNETMsg_SplitScreenUser(const CNETMsg_SplitScreenUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  slot_ = from.slot_;
  // @@protoc_insertion_point(copy_constructor:CNETMsg_SplitScreenUser)
}

void CNETMsg_SplitScreenUser::SharedCtor() {
  slot_ = 0;
}

CNETMsg_SplitScreenUser::~CNETMsg_SplitScreenUser() {
  // @@protoc_insertion_point(destructor:CNETMsg_SplitScreenUser)
  SharedDtor();
}

void CNETMsg_SplitScreenUser::SharedDtor() {
}

void CNETMsg_SplitScreenUser::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CNETMsg_SplitScreenUser::descriptor() {
  ::protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CNETMsg_SplitScreenUser& CNETMsg_SplitScreenUser::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_networkbasetypes_2eproto::scc_info_CNETMsg_SplitScreenUser.base);
  return *internal_default_instance();
}


void CNETMsg_SplitScreenUser::Clear() {
// @@protoc_insertion_point(message_clear_start:CNETMsg_SplitScreenUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  slot_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CNETMsg_SplitScreenUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CNETMsg_SplitScreenUser)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 slot = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_slot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CNETMsg_SplitScreenUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CNETMsg_SplitScreenUser)
  return false;
#undef DO_
}

void CNETMsg_SplitScreenUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CNETMsg_SplitScreenUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 slot = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->slot(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CNETMsg_SplitScreenUser)
}

::google::protobuf::uint8* CNETMsg_SplitScreenUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CNETMsg_SplitScreenUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 slot = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->slot(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CNETMsg_SplitScreenUser)
  return target;
}

size_t CNETMsg_SplitScreenUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CNETMsg_SplitScreenUser)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 slot = 1;
  if (has_slot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->slot());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CNETMsg_SplitScreenUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CNETMsg_SplitScreenUser)
  GOOGLE_DCHECK_NE(&from, this);
  const CNETMsg_SplitScreenUser* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CNETMsg_SplitScreenUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CNETMsg_SplitScreenUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CNETMsg_SplitScreenUser)
    MergeFrom(*source);
  }
}

void CNETMsg_SplitScreenUser::MergeFrom(const CNETMsg_SplitScreenUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CNETMsg_SplitScreenUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_slot()) {
    set_slot(from.slot());
  }
}

void CNETMsg_SplitScreenUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CNETMsg_SplitScreenUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CNETMsg_SplitScreenUser::CopyFrom(const CNETMsg_SplitScreenUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CNETMsg_SplitScreenUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CNETMsg_SplitScreenUser::IsInitialized() const {
  return true;
}

void CNETMsg_SplitScreenUser::Swap(CNETMsg_SplitScreenUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CNETMsg_SplitScreenUser::InternalSwap(CNETMsg_SplitScreenUser* other) {
  using std::swap;
  swap(slot_, other->slot_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CNETMsg_SplitScreenUser::GetMetadata() const {
  protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CNETMsg_Disconnect::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CNETMsg_Disconnect::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CNETMsg_Disconnect::CNETMsg_Disconnect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_networkbasetypes_2eproto::scc_info_CNETMsg_Disconnect.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CNETMsg_Disconnect)
}
CNETMsg_Disconnect::CNETMsg_Disconnect(const CNETMsg_Disconnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_ = from.reason_;
  // @@protoc_insertion_point(copy_constructor:CNETMsg_Disconnect)
}

void CNETMsg_Disconnect::SharedCtor() {
  reason_ = 0;
}

CNETMsg_Disconnect::~CNETMsg_Disconnect() {
  // @@protoc_insertion_point(destructor:CNETMsg_Disconnect)
  SharedDtor();
}

void CNETMsg_Disconnect::SharedDtor() {
}

void CNETMsg_Disconnect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CNETMsg_Disconnect::descriptor() {
  ::protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CNETMsg_Disconnect& CNETMsg_Disconnect::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_networkbasetypes_2eproto::scc_info_CNETMsg_Disconnect.base);
  return *internal_default_instance();
}


void CNETMsg_Disconnect::Clear() {
// @@protoc_insertion_point(message_clear_start:CNETMsg_Disconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CNETMsg_Disconnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CNETMsg_Disconnect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ENetworkDisconnectionReason reason = 2 [default = NETWORK_DISCONNECT_INVALID];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ENetworkDisconnectionReason_IsValid(value)) {
            set_reason(static_cast< ::ENetworkDisconnectionReason >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CNETMsg_Disconnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CNETMsg_Disconnect)
  return false;
#undef DO_
}

void CNETMsg_Disconnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CNETMsg_Disconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ENetworkDisconnectionReason reason = 2 [default = NETWORK_DISCONNECT_INVALID];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->reason(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CNETMsg_Disconnect)
}

::google::protobuf::uint8* CNETMsg_Disconnect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CNETMsg_Disconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ENetworkDisconnectionReason reason = 2 [default = NETWORK_DISCONNECT_INVALID];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->reason(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CNETMsg_Disconnect)
  return target;
}

size_t CNETMsg_Disconnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CNETMsg_Disconnect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .ENetworkDisconnectionReason reason = 2 [default = NETWORK_DISCONNECT_INVALID];
  if (has_reason()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CNETMsg_Disconnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CNETMsg_Disconnect)
  GOOGLE_DCHECK_NE(&from, this);
  const CNETMsg_Disconnect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CNETMsg_Disconnect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CNETMsg_Disconnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CNETMsg_Disconnect)
    MergeFrom(*source);
  }
}

void CNETMsg_Disconnect::MergeFrom(const CNETMsg_Disconnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CNETMsg_Disconnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_reason()) {
    set_reason(from.reason());
  }
}

void CNETMsg_Disconnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CNETMsg_Disconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CNETMsg_Disconnect::CopyFrom(const CNETMsg_Disconnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CNETMsg_Disconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CNETMsg_Disconnect::IsInitialized() const {
  return true;
}

void CNETMsg_Disconnect::Swap(CNETMsg_Disconnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CNETMsg_Disconnect::InternalSwap(CNETMsg_Disconnect* other) {
  using std::swap;
  swap(reason_, other->reason_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CNETMsg_Disconnect::GetMetadata() const {
  protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CNETMsg_Tick::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CNETMsg_Tick::kTickFieldNumber;
const int CNETMsg_Tick::kHostFrametimeFieldNumber;
const int CNETMsg_Tick::kHostFrametimeStdDeviationFieldNumber;
const int CNETMsg_Tick::kHostComputationtimeFieldNumber;
const int CNETMsg_Tick::kHostComputationtimeStdDeviationFieldNumber;
const int CNETMsg_Tick::kHostFramestarttimeStdDeviationFieldNumber;
const int CNETMsg_Tick::kHostLossFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CNETMsg_Tick::CNETMsg_Tick()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_networkbasetypes_2eproto::scc_info_CNETMsg_Tick.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CNETMsg_Tick)
}
CNETMsg_Tick::CNETMsg_Tick(const CNETMsg_Tick& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&tick_, &from.tick_,
    static_cast<size_t>(reinterpret_cast<char*>(&host_loss_) -
    reinterpret_cast<char*>(&tick_)) + sizeof(host_loss_));
  // @@protoc_insertion_point(copy_constructor:CNETMsg_Tick)
}

void CNETMsg_Tick::SharedCtor() {
  ::memset(&tick_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&host_loss_) -
      reinterpret_cast<char*>(&tick_)) + sizeof(host_loss_));
}

CNETMsg_Tick::~CNETMsg_Tick() {
  // @@protoc_insertion_point(destructor:CNETMsg_Tick)
  SharedDtor();
}

void CNETMsg_Tick::SharedDtor() {
}

void CNETMsg_Tick::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CNETMsg_Tick::descriptor() {
  ::protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CNETMsg_Tick& CNETMsg_Tick::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_networkbasetypes_2eproto::scc_info_CNETMsg_Tick.base);
  return *internal_default_instance();
}


void CNETMsg_Tick::Clear() {
// @@protoc_insertion_point(message_clear_start:CNETMsg_Tick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    ::memset(&tick_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&host_loss_) -
        reinterpret_cast<char*>(&tick_)) + sizeof(host_loss_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CNETMsg_Tick::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CNETMsg_Tick)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tick = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tick();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tick_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 host_frametime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_host_frametime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &host_frametime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 host_frametime_std_deviation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_host_frametime_std_deviation();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &host_frametime_std_deviation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 host_computationtime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_host_computationtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &host_computationtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 host_computationtime_std_deviation = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_host_computationtime_std_deviation();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &host_computationtime_std_deviation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 host_framestarttime_std_deviation = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_host_framestarttime_std_deviation();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &host_framestarttime_std_deviation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 host_loss = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_host_loss();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &host_loss_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CNETMsg_Tick)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CNETMsg_Tick)
  return false;
#undef DO_
}

void CNETMsg_Tick::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CNETMsg_Tick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tick = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tick(), output);
  }

  // optional uint32 host_frametime = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->host_frametime(), output);
  }

  // optional uint32 host_frametime_std_deviation = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->host_frametime_std_deviation(), output);
  }

  // optional uint32 host_computationtime = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->host_computationtime(), output);
  }

  // optional uint32 host_computationtime_std_deviation = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->host_computationtime_std_deviation(), output);
  }

  // optional uint32 host_framestarttime_std_deviation = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->host_framestarttime_std_deviation(), output);
  }

  // optional uint32 host_loss = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->host_loss(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CNETMsg_Tick)
}

::google::protobuf::uint8* CNETMsg_Tick::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CNETMsg_Tick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tick = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tick(), target);
  }

  // optional uint32 host_frametime = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->host_frametime(), target);
  }

  // optional uint32 host_frametime_std_deviation = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->host_frametime_std_deviation(), target);
  }

  // optional uint32 host_computationtime = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->host_computationtime(), target);
  }

  // optional uint32 host_computationtime_std_deviation = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->host_computationtime_std_deviation(), target);
  }

  // optional uint32 host_framestarttime_std_deviation = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->host_framestarttime_std_deviation(), target);
  }

  // optional uint32 host_loss = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->host_loss(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CNETMsg_Tick)
  return target;
}

size_t CNETMsg_Tick::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CNETMsg_Tick)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional uint32 tick = 1;
    if (has_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tick());
    }

    // optional uint32 host_frametime = 2;
    if (has_host_frametime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->host_frametime());
    }

    // optional uint32 host_frametime_std_deviation = 3;
    if (has_host_frametime_std_deviation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->host_frametime_std_deviation());
    }

    // optional uint32 host_computationtime = 4;
    if (has_host_computationtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->host_computationtime());
    }

    // optional uint32 host_computationtime_std_deviation = 5;
    if (has_host_computationtime_std_deviation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->host_computationtime_std_deviation());
    }

    // optional uint32 host_framestarttime_std_deviation = 6;
    if (has_host_framestarttime_std_deviation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->host_framestarttime_std_deviation());
    }

    // optional uint32 host_loss = 7;
    if (has_host_loss()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->host_loss());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CNETMsg_Tick::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CNETMsg_Tick)
  GOOGLE_DCHECK_NE(&from, this);
  const CNETMsg_Tick* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CNETMsg_Tick>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CNETMsg_Tick)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CNETMsg_Tick)
    MergeFrom(*source);
  }
}

void CNETMsg_Tick::MergeFrom(const CNETMsg_Tick& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CNETMsg_Tick)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      tick_ = from.tick_;
    }
    if (cached_has_bits & 0x00000002u) {
      host_frametime_ = from.host_frametime_;
    }
    if (cached_has_bits & 0x00000004u) {
      host_frametime_std_deviation_ = from.host_frametime_std_deviation_;
    }
    if (cached_has_bits & 0x00000008u) {
      host_computationtime_ = from.host_computationtime_;
    }
    if (cached_has_bits & 0x00000010u) {
      host_computationtime_std_deviation_ = from.host_computationtime_std_deviation_;
    }
    if (cached_has_bits & 0x00000020u) {
      host_framestarttime_std_deviation_ = from.host_framestarttime_std_deviation_;
    }
    if (cached_has_bits & 0x00000040u) {
      host_loss_ = from.host_loss_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CNETMsg_Tick::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CNETMsg_Tick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CNETMsg_Tick::CopyFrom(const CNETMsg_Tick& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CNETMsg_Tick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CNETMsg_Tick::IsInitialized() const {
  return true;
}

void CNETMsg_Tick::Swap(CNETMsg_Tick* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CNETMsg_Tick::InternalSwap(CNETMsg_Tick* other) {
  using std::swap;
  swap(tick_, other->tick_);
  swap(host_frametime_, other->host_frametime_);
  swap(host_frametime_std_deviation_, other->host_frametime_std_deviation_);
  swap(host_computationtime_, other->host_computationtime_);
  swap(host_computationtime_std_deviation_, other->host_computationtime_std_deviation_);
  swap(host_framestarttime_std_deviation_, other->host_framestarttime_std_deviation_);
  swap(host_loss_, other->host_loss_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CNETMsg_Tick::GetMetadata() const {
  protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CNETMsg_StringCmd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CNETMsg_StringCmd::kCommandFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CNETMsg_StringCmd::CNETMsg_StringCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_networkbasetypes_2eproto::scc_info_CNETMsg_StringCmd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CNETMsg_StringCmd)
}
CNETMsg_StringCmd::CNETMsg_StringCmd(const CNETMsg_StringCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_command()) {
    command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_);
  }
  // @@protoc_insertion_point(copy_constructor:CNETMsg_StringCmd)
}

void CNETMsg_StringCmd::SharedCtor() {
  command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CNETMsg_StringCmd::~CNETMsg_StringCmd() {
  // @@protoc_insertion_point(destructor:CNETMsg_StringCmd)
  SharedDtor();
}

void CNETMsg_StringCmd::SharedDtor() {
  command_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CNETMsg_StringCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CNETMsg_StringCmd::descriptor() {
  ::protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CNETMsg_StringCmd& CNETMsg_StringCmd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_networkbasetypes_2eproto::scc_info_CNETMsg_StringCmd.base);
  return *internal_default_instance();
}


void CNETMsg_StringCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:CNETMsg_StringCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    command_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CNETMsg_StringCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CNETMsg_StringCmd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string command = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_command()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->command().data(), static_cast<int>(this->command().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CNETMsg_StringCmd.command");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CNETMsg_StringCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CNETMsg_StringCmd)
  return false;
#undef DO_
}

void CNETMsg_StringCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CNETMsg_StringCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string command = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command().data(), static_cast<int>(this->command().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CNETMsg_StringCmd.command");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->command(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CNETMsg_StringCmd)
}

::google::protobuf::uint8* CNETMsg_StringCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CNETMsg_StringCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string command = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command().data(), static_cast<int>(this->command().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CNETMsg_StringCmd.command");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->command(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CNETMsg_StringCmd)
  return target;
}

size_t CNETMsg_StringCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CNETMsg_StringCmd)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string command = 1;
  if (has_command()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->command());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CNETMsg_StringCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CNETMsg_StringCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const CNETMsg_StringCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CNETMsg_StringCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CNETMsg_StringCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CNETMsg_StringCmd)
    MergeFrom(*source);
  }
}

void CNETMsg_StringCmd::MergeFrom(const CNETMsg_StringCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CNETMsg_StringCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_command()) {
    set_has_command();
    command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_);
  }
}

void CNETMsg_StringCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CNETMsg_StringCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CNETMsg_StringCmd::CopyFrom(const CNETMsg_StringCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CNETMsg_StringCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CNETMsg_StringCmd::IsInitialized() const {
  return true;
}

void CNETMsg_StringCmd::Swap(CNETMsg_StringCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CNETMsg_StringCmd::InternalSwap(CNETMsg_StringCmd* other) {
  using std::swap;
  command_.Swap(&other->command_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CNETMsg_StringCmd::GetMetadata() const {
  protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CNETMsg_SetConVar::InitAsDefaultInstance() {
  ::_CNETMsg_SetConVar_default_instance_._instance.get_mutable()->convars_ = const_cast< ::CMsg_CVars*>(
      ::CMsg_CVars::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CNETMsg_SetConVar::kConvarsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CNETMsg_SetConVar::CNETMsg_SetConVar()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_networkbasetypes_2eproto::scc_info_CNETMsg_SetConVar.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CNETMsg_SetConVar)
}
CNETMsg_SetConVar::CNETMsg_SetConVar(const CNETMsg_SetConVar& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_convars()) {
    convars_ = new ::CMsg_CVars(*from.convars_);
  } else {
    convars_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CNETMsg_SetConVar)
}

void CNETMsg_SetConVar::SharedCtor() {
  convars_ = NULL;
}

CNETMsg_SetConVar::~CNETMsg_SetConVar() {
  // @@protoc_insertion_point(destructor:CNETMsg_SetConVar)
  SharedDtor();
}

void CNETMsg_SetConVar::SharedDtor() {
  if (this != internal_default_instance()) delete convars_;
}

void CNETMsg_SetConVar::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CNETMsg_SetConVar::descriptor() {
  ::protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CNETMsg_SetConVar& CNETMsg_SetConVar::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_networkbasetypes_2eproto::scc_info_CNETMsg_SetConVar.base);
  return *internal_default_instance();
}


void CNETMsg_SetConVar::Clear() {
// @@protoc_insertion_point(message_clear_start:CNETMsg_SetConVar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(convars_ != NULL);
    convars_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CNETMsg_SetConVar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CNETMsg_SetConVar)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsg_CVars convars = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_convars()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CNETMsg_SetConVar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CNETMsg_SetConVar)
  return false;
#undef DO_
}

void CNETMsg_SetConVar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CNETMsg_SetConVar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsg_CVars convars = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_convars(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CNETMsg_SetConVar)
}

::google::protobuf::uint8* CNETMsg_SetConVar::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CNETMsg_SetConVar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsg_CVars convars = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_convars(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CNETMsg_SetConVar)
  return target;
}

size_t CNETMsg_SetConVar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CNETMsg_SetConVar)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .CMsg_CVars convars = 1;
  if (has_convars()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *convars_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CNETMsg_SetConVar::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CNETMsg_SetConVar)
  GOOGLE_DCHECK_NE(&from, this);
  const CNETMsg_SetConVar* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CNETMsg_SetConVar>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CNETMsg_SetConVar)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CNETMsg_SetConVar)
    MergeFrom(*source);
  }
}

void CNETMsg_SetConVar::MergeFrom(const CNETMsg_SetConVar& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CNETMsg_SetConVar)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_convars()) {
    mutable_convars()->::CMsg_CVars::MergeFrom(from.convars());
  }
}

void CNETMsg_SetConVar::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CNETMsg_SetConVar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CNETMsg_SetConVar::CopyFrom(const CNETMsg_SetConVar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CNETMsg_SetConVar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CNETMsg_SetConVar::IsInitialized() const {
  return true;
}

void CNETMsg_SetConVar::Swap(CNETMsg_SetConVar* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CNETMsg_SetConVar::InternalSwap(CNETMsg_SetConVar* other) {
  using std::swap;
  swap(convars_, other->convars_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CNETMsg_SetConVar::GetMetadata() const {
  protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CNETMsg_SignonState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CNETMsg_SignonState::kSignonStateFieldNumber;
const int CNETMsg_SignonState::kSpawnCountFieldNumber;
const int CNETMsg_SignonState::kNumServerPlayersFieldNumber;
const int CNETMsg_SignonState::kPlayersNetworkidsFieldNumber;
const int CNETMsg_SignonState::kMapNameFieldNumber;
const int CNETMsg_SignonState::kAddonsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CNETMsg_SignonState::CNETMsg_SignonState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_networkbasetypes_2eproto::scc_info_CNETMsg_SignonState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CNETMsg_SignonState)
}
CNETMsg_SignonState::CNETMsg_SignonState(const CNETMsg_SignonState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      players_networkids_(from.players_networkids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  map_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_map_name()) {
    map_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.map_name_);
  }
  addons_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_addons()) {
    addons_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addons_);
  }
  ::memcpy(&signon_state_, &from.signon_state_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_server_players_) -
    reinterpret_cast<char*>(&signon_state_)) + sizeof(num_server_players_));
  // @@protoc_insertion_point(copy_constructor:CNETMsg_SignonState)
}

void CNETMsg_SignonState::SharedCtor() {
  map_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addons_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&signon_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_server_players_) -
      reinterpret_cast<char*>(&signon_state_)) + sizeof(num_server_players_));
}

CNETMsg_SignonState::~CNETMsg_SignonState() {
  // @@protoc_insertion_point(destructor:CNETMsg_SignonState)
  SharedDtor();
}

void CNETMsg_SignonState::SharedDtor() {
  map_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addons_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CNETMsg_SignonState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CNETMsg_SignonState::descriptor() {
  ::protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CNETMsg_SignonState& CNETMsg_SignonState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_networkbasetypes_2eproto::scc_info_CNETMsg_SignonState.base);
  return *internal_default_instance();
}


void CNETMsg_SignonState::Clear() {
// @@protoc_insertion_point(message_clear_start:CNETMsg_SignonState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  players_networkids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      map_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      addons_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&signon_state_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&num_server_players_) -
        reinterpret_cast<char*>(&signon_state_)) + sizeof(num_server_players_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CNETMsg_SignonState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CNETMsg_SignonState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 signon_state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_signon_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &signon_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 spawn_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_spawn_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spawn_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 num_server_players = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_num_server_players();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_server_players_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string players_networkids = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_players_networkids()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->players_networkids(this->players_networkids_size() - 1).data(),
            static_cast<int>(this->players_networkids(this->players_networkids_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CNETMsg_SignonState.players_networkids");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string map_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_map_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->map_name().data(), static_cast<int>(this->map_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CNETMsg_SignonState.map_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string addons = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_addons()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->addons().data(), static_cast<int>(this->addons().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CNETMsg_SignonState.addons");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CNETMsg_SignonState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CNETMsg_SignonState)
  return false;
#undef DO_
}

void CNETMsg_SignonState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CNETMsg_SignonState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 signon_state = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->signon_state(), output);
  }

  // optional uint32 spawn_count = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->spawn_count(), output);
  }

  // optional uint32 num_server_players = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->num_server_players(), output);
  }

  // repeated string players_networkids = 4;
  for (int i = 0, n = this->players_networkids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->players_networkids(i).data(), static_cast<int>(this->players_networkids(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CNETMsg_SignonState.players_networkids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->players_networkids(i), output);
  }

  // optional string map_name = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->map_name().data(), static_cast<int>(this->map_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CNETMsg_SignonState.map_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->map_name(), output);
  }

  // optional string addons = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->addons().data(), static_cast<int>(this->addons().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CNETMsg_SignonState.addons");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->addons(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CNETMsg_SignonState)
}

::google::protobuf::uint8* CNETMsg_SignonState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CNETMsg_SignonState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 signon_state = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->signon_state(), target);
  }

  // optional uint32 spawn_count = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->spawn_count(), target);
  }

  // optional uint32 num_server_players = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->num_server_players(), target);
  }

  // repeated string players_networkids = 4;
  for (int i = 0, n = this->players_networkids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->players_networkids(i).data(), static_cast<int>(this->players_networkids(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CNETMsg_SignonState.players_networkids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->players_networkids(i), target);
  }

  // optional string map_name = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->map_name().data(), static_cast<int>(this->map_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CNETMsg_SignonState.map_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->map_name(), target);
  }

  // optional string addons = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->addons().data(), static_cast<int>(this->addons().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CNETMsg_SignonState.addons");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->addons(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CNETMsg_SignonState)
  return target;
}

size_t CNETMsg_SignonState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CNETMsg_SignonState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string players_networkids = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->players_networkids_size());
  for (int i = 0, n = this->players_networkids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->players_networkids(i));
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional string map_name = 5;
    if (has_map_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->map_name());
    }

    // optional string addons = 6;
    if (has_addons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->addons());
    }

    // optional uint32 signon_state = 1;
    if (has_signon_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->signon_state());
    }

    // optional uint32 spawn_count = 2;
    if (has_spawn_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->spawn_count());
    }

    // optional uint32 num_server_players = 3;
    if (has_num_server_players()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_server_players());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CNETMsg_SignonState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CNETMsg_SignonState)
  GOOGLE_DCHECK_NE(&from, this);
  const CNETMsg_SignonState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CNETMsg_SignonState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CNETMsg_SignonState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CNETMsg_SignonState)
    MergeFrom(*source);
  }
}

void CNETMsg_SignonState::MergeFrom(const CNETMsg_SignonState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CNETMsg_SignonState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  players_networkids_.MergeFrom(from.players_networkids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_map_name();
      map_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.map_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_addons();
      addons_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addons_);
    }
    if (cached_has_bits & 0x00000004u) {
      signon_state_ = from.signon_state_;
    }
    if (cached_has_bits & 0x00000008u) {
      spawn_count_ = from.spawn_count_;
    }
    if (cached_has_bits & 0x00000010u) {
      num_server_players_ = from.num_server_players_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CNETMsg_SignonState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CNETMsg_SignonState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CNETMsg_SignonState::CopyFrom(const CNETMsg_SignonState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CNETMsg_SignonState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CNETMsg_SignonState::IsInitialized() const {
  return true;
}

void CNETMsg_SignonState::Swap(CNETMsg_SignonState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CNETMsg_SignonState::InternalSwap(CNETMsg_SignonState* other) {
  using std::swap;
  players_networkids_.InternalSwap(CastToBase(&other->players_networkids_));
  map_name_.Swap(&other->map_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  addons_.Swap(&other->addons_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(signon_state_, other->signon_state_);
  swap(spawn_count_, other->spawn_count_);
  swap(num_server_players_, other->num_server_players_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CNETMsg_SignonState::GetMetadata() const {
  protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_GameEvent_key_t::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_GameEvent_key_t::kTypeFieldNumber;
const int CSVCMsg_GameEvent_key_t::kValStringFieldNumber;
const int CSVCMsg_GameEvent_key_t::kValFloatFieldNumber;
const int CSVCMsg_GameEvent_key_t::kValLongFieldNumber;
const int CSVCMsg_GameEvent_key_t::kValShortFieldNumber;
const int CSVCMsg_GameEvent_key_t::kValByteFieldNumber;
const int CSVCMsg_GameEvent_key_t::kValBoolFieldNumber;
const int CSVCMsg_GameEvent_key_t::kValUint64FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_GameEvent_key_t::CSVCMsg_GameEvent_key_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_networkbasetypes_2eproto::scc_info_CSVCMsg_GameEvent_key_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_GameEvent.key_t)
}
CSVCMsg_GameEvent_key_t::CSVCMsg_GameEvent_key_t(const CSVCMsg_GameEvent_key_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  val_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_val_string()) {
    val_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.val_string_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&val_uint64_) -
    reinterpret_cast<char*>(&type_)) + sizeof(val_uint64_));
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_GameEvent.key_t)
}

void CSVCMsg_GameEvent_key_t::SharedCtor() {
  val_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&val_uint64_) -
      reinterpret_cast<char*>(&type_)) + sizeof(val_uint64_));
}

CSVCMsg_GameEvent_key_t::~CSVCMsg_GameEvent_key_t() {
  // @@protoc_insertion_point(destructor:CSVCMsg_GameEvent.key_t)
  SharedDtor();
}

void CSVCMsg_GameEvent_key_t::SharedDtor() {
  val_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CSVCMsg_GameEvent_key_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_GameEvent_key_t::descriptor() {
  ::protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_GameEvent_key_t& CSVCMsg_GameEvent_key_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_networkbasetypes_2eproto::scc_info_CSVCMsg_GameEvent_key_t.base);
  return *internal_default_instance();
}


void CSVCMsg_GameEvent_key_t::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_GameEvent.key_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    val_string_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 254u) {
    ::memset(&type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&val_uint64_) -
        reinterpret_cast<char*>(&type_)) + sizeof(val_uint64_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_GameEvent_key_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_GameEvent.key_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string val_string = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_val_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->val_string().data(), static_cast<int>(this->val_string().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSVCMsg_GameEvent.key_t.val_string");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float val_float = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_val_float();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &val_float_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 val_long = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_val_long();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &val_long_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 val_short = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_val_short();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &val_short_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 val_byte = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_val_byte();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &val_byte_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool val_bool = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_val_bool();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &val_bool_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 val_uint64 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_val_uint64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &val_uint64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_GameEvent.key_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_GameEvent.key_t)
  return false;
#undef DO_
}

void CSVCMsg_GameEvent_key_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_GameEvent.key_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional string val_string = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->val_string().data(), static_cast<int>(this->val_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_GameEvent.key_t.val_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->val_string(), output);
  }

  // optional float val_float = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->val_float(), output);
  }

  // optional int32 val_long = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->val_long(), output);
  }

  // optional int32 val_short = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->val_short(), output);
  }

  // optional int32 val_byte = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->val_byte(), output);
  }

  // optional bool val_bool = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->val_bool(), output);
  }

  // optional uint64 val_uint64 = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->val_uint64(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_GameEvent.key_t)
}

::google::protobuf::uint8* CSVCMsg_GameEvent_key_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_GameEvent.key_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional string val_string = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->val_string().data(), static_cast<int>(this->val_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_GameEvent.key_t.val_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->val_string(), target);
  }

  // optional float val_float = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->val_float(), target);
  }

  // optional int32 val_long = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->val_long(), target);
  }

  // optional int32 val_short = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->val_short(), target);
  }

  // optional int32 val_byte = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->val_byte(), target);
  }

  // optional bool val_bool = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->val_bool(), target);
  }

  // optional uint64 val_uint64 = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->val_uint64(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_GameEvent.key_t)
  return target;
}

size_t CSVCMsg_GameEvent_key_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_GameEvent.key_t)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string val_string = 2;
    if (has_val_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->val_string());
    }

    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional float val_float = 3;
    if (has_val_float()) {
      total_size += 1 + 4;
    }

    // optional int32 val_long = 4;
    if (has_val_long()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->val_long());
    }

    // optional int32 val_short = 5;
    if (has_val_short()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->val_short());
    }

    // optional int32 val_byte = 6;
    if (has_val_byte()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->val_byte());
    }

    // optional bool val_bool = 7;
    if (has_val_bool()) {
      total_size += 1 + 1;
    }

    // optional uint64 val_uint64 = 8;
    if (has_val_uint64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->val_uint64());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_GameEvent_key_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_GameEvent.key_t)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_GameEvent_key_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_GameEvent_key_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_GameEvent.key_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_GameEvent.key_t)
    MergeFrom(*source);
  }
}

void CSVCMsg_GameEvent_key_t::MergeFrom(const CSVCMsg_GameEvent_key_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_GameEvent.key_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_val_string();
      val_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.val_string_);
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000004u) {
      val_float_ = from.val_float_;
    }
    if (cached_has_bits & 0x00000008u) {
      val_long_ = from.val_long_;
    }
    if (cached_has_bits & 0x00000010u) {
      val_short_ = from.val_short_;
    }
    if (cached_has_bits & 0x00000020u) {
      val_byte_ = from.val_byte_;
    }
    if (cached_has_bits & 0x00000040u) {
      val_bool_ = from.val_bool_;
    }
    if (cached_has_bits & 0x00000080u) {
      val_uint64_ = from.val_uint64_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSVCMsg_GameEvent_key_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_GameEvent.key_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_GameEvent_key_t::CopyFrom(const CSVCMsg_GameEvent_key_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_GameEvent.key_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_GameEvent_key_t::IsInitialized() const {
  return true;
}

void CSVCMsg_GameEvent_key_t::Swap(CSVCMsg_GameEvent_key_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_GameEvent_key_t::InternalSwap(CSVCMsg_GameEvent_key_t* other) {
  using std::swap;
  val_string_.Swap(&other->val_string_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(val_float_, other->val_float_);
  swap(val_long_, other->val_long_);
  swap(val_short_, other->val_short_);
  swap(val_byte_, other->val_byte_);
  swap(val_bool_, other->val_bool_);
  swap(val_uint64_, other->val_uint64_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_GameEvent_key_t::GetMetadata() const {
  protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_GameEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_GameEvent::kEventNameFieldNumber;
const int CSVCMsg_GameEvent::kEventidFieldNumber;
const int CSVCMsg_GameEvent::kKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_GameEvent::CSVCMsg_GameEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_networkbasetypes_2eproto::scc_info_CSVCMsg_GameEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_GameEvent)
}
CSVCMsg_GameEvent::CSVCMsg_GameEvent(const CSVCMsg_GameEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  event_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_event_name()) {
    event_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_name_);
  }
  eventid_ = from.eventid_;
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_GameEvent)
}

void CSVCMsg_GameEvent::SharedCtor() {
  event_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eventid_ = 0;
}

CSVCMsg_GameEvent::~CSVCMsg_GameEvent() {
  // @@protoc_insertion_point(destructor:CSVCMsg_GameEvent)
  SharedDtor();
}

void CSVCMsg_GameEvent::SharedDtor() {
  event_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CSVCMsg_GameEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_GameEvent::descriptor() {
  ::protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_GameEvent& CSVCMsg_GameEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_networkbasetypes_2eproto::scc_info_CSVCMsg_GameEvent.base);
  return *internal_default_instance();
}


void CSVCMsg_GameEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_GameEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    event_name_.ClearNonDefaultToEmptyNoArena();
  }
  eventid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_GameEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_GameEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string event_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->event_name().data(), static_cast<int>(this->event_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSVCMsg_GameEvent.event_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 eventid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_eventid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eventid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CSVCMsg_GameEvent.key_t keys = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_GameEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_GameEvent)
  return false;
#undef DO_
}

void CSVCMsg_GameEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_GameEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string event_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->event_name().data(), static_cast<int>(this->event_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_GameEvent.event_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->event_name(), output);
  }

  // optional int32 eventid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->eventid(), output);
  }

  // repeated .CSVCMsg_GameEvent.key_t keys = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->keys(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_GameEvent)
}

::google::protobuf::uint8* CSVCMsg_GameEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_GameEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string event_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->event_name().data(), static_cast<int>(this->event_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_GameEvent.event_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->event_name(), target);
  }

  // optional int32 eventid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->eventid(), target);
  }

  // repeated .CSVCMsg_GameEvent.key_t keys = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->keys(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_GameEvent)
  return target;
}

size_t CSVCMsg_GameEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_GameEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CSVCMsg_GameEvent.key_t keys = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->keys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->keys(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string event_name = 1;
    if (has_event_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->event_name());
    }

    // optional int32 eventid = 2;
    if (has_eventid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eventid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_GameEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_GameEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_GameEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_GameEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_GameEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_GameEvent)
    MergeFrom(*source);
  }
}

void CSVCMsg_GameEvent::MergeFrom(const CSVCMsg_GameEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_GameEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_event_name();
      event_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      eventid_ = from.eventid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSVCMsg_GameEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_GameEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_GameEvent::CopyFrom(const CSVCMsg_GameEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_GameEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_GameEvent::IsInitialized() const {
  return true;
}

void CSVCMsg_GameEvent::Swap(CSVCMsg_GameEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_GameEvent::InternalSwap(CSVCMsg_GameEvent* other) {
  using std::swap;
  CastToBase(&keys_)->InternalSwap(CastToBase(&other->keys_));
  event_name_.Swap(&other->event_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(eventid_, other->eventid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_GameEvent::GetMetadata() const {
  protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsgList_GameEvents_event_t::InitAsDefaultInstance() {
  ::_CSVCMsgList_GameEvents_event_t_default_instance_._instance.get_mutable()->event_ = const_cast< ::CSVCMsg_GameEvent*>(
      ::CSVCMsg_GameEvent::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsgList_GameEvents_event_t::kTickFieldNumber;
const int CSVCMsgList_GameEvents_event_t::kEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsgList_GameEvents_event_t::CSVCMsgList_GameEvents_event_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_networkbasetypes_2eproto::scc_info_CSVCMsgList_GameEvents_event_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsgList_GameEvents.event_t)
}
CSVCMsgList_GameEvents_event_t::CSVCMsgList_GameEvents_event_t(const CSVCMsgList_GameEvents_event_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_event()) {
    event_ = new ::CSVCMsg_GameEvent(*from.event_);
  } else {
    event_ = NULL;
  }
  tick_ = from.tick_;
  // @@protoc_insertion_point(copy_constructor:CSVCMsgList_GameEvents.event_t)
}

void CSVCMsgList_GameEvents_event_t::SharedCtor() {
  ::memset(&event_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tick_) -
      reinterpret_cast<char*>(&event_)) + sizeof(tick_));
}

CSVCMsgList_GameEvents_event_t::~CSVCMsgList_GameEvents_event_t() {
  // @@protoc_insertion_point(destructor:CSVCMsgList_GameEvents.event_t)
  SharedDtor();
}

void CSVCMsgList_GameEvents_event_t::SharedDtor() {
  if (this != internal_default_instance()) delete event_;
}

void CSVCMsgList_GameEvents_event_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsgList_GameEvents_event_t::descriptor() {
  ::protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsgList_GameEvents_event_t& CSVCMsgList_GameEvents_event_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_networkbasetypes_2eproto::scc_info_CSVCMsgList_GameEvents_event_t.base);
  return *internal_default_instance();
}


void CSVCMsgList_GameEvents_event_t::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsgList_GameEvents.event_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(event_ != NULL);
    event_->Clear();
  }
  tick_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsgList_GameEvents_event_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsgList_GameEvents.event_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 tick = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tick();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tick_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CSVCMsg_GameEvent event = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsgList_GameEvents.event_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsgList_GameEvents.event_t)
  return false;
#undef DO_
}

void CSVCMsgList_GameEvents_event_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsgList_GameEvents.event_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 tick = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tick(), output);
  }

  // optional .CSVCMsg_GameEvent event = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_event(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsgList_GameEvents.event_t)
}

::google::protobuf::uint8* CSVCMsgList_GameEvents_event_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsgList_GameEvents.event_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 tick = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->tick(), target);
  }

  // optional .CSVCMsg_GameEvent event = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_event(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsgList_GameEvents.event_t)
  return target;
}

size_t CSVCMsgList_GameEvents_event_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsgList_GameEvents.event_t)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .CSVCMsg_GameEvent event = 2;
    if (has_event()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *event_);
    }

    // optional int32 tick = 1;
    if (has_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tick());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsgList_GameEvents_event_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsgList_GameEvents.event_t)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsgList_GameEvents_event_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsgList_GameEvents_event_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsgList_GameEvents.event_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsgList_GameEvents.event_t)
    MergeFrom(*source);
  }
}

void CSVCMsgList_GameEvents_event_t::MergeFrom(const CSVCMsgList_GameEvents_event_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsgList_GameEvents.event_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_event()->::CSVCMsg_GameEvent::MergeFrom(from.event());
    }
    if (cached_has_bits & 0x00000002u) {
      tick_ = from.tick_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSVCMsgList_GameEvents_event_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsgList_GameEvents.event_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsgList_GameEvents_event_t::CopyFrom(const CSVCMsgList_GameEvents_event_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsgList_GameEvents.event_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsgList_GameEvents_event_t::IsInitialized() const {
  return true;
}

void CSVCMsgList_GameEvents_event_t::Swap(CSVCMsgList_GameEvents_event_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsgList_GameEvents_event_t::InternalSwap(CSVCMsgList_GameEvents_event_t* other) {
  using std::swap;
  swap(event_, other->event_);
  swap(tick_, other->tick_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsgList_GameEvents_event_t::GetMetadata() const {
  protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsgList_GameEvents::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsgList_GameEvents::kEventsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsgList_GameEvents::CSVCMsgList_GameEvents()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_networkbasetypes_2eproto::scc_info_CSVCMsgList_GameEvents.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsgList_GameEvents)
}
CSVCMsgList_GameEvents::CSVCMsgList_GameEvents(const CSVCMsgList_GameEvents& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      events_(from.events_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CSVCMsgList_GameEvents)
}

void CSVCMsgList_GameEvents::SharedCtor() {
}

CSVCMsgList_GameEvents::~CSVCMsgList_GameEvents() {
  // @@protoc_insertion_point(destructor:CSVCMsgList_GameEvents)
  SharedDtor();
}

void CSVCMsgList_GameEvents::SharedDtor() {
}

void CSVCMsgList_GameEvents::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsgList_GameEvents::descriptor() {
  ::protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsgList_GameEvents& CSVCMsgList_GameEvents::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_networkbasetypes_2eproto::scc_info_CSVCMsgList_GameEvents.base);
  return *internal_default_instance();
}


void CSVCMsgList_GameEvents::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsgList_GameEvents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  events_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsgList_GameEvents::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsgList_GameEvents)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CSVCMsgList_GameEvents.event_t events = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_events()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsgList_GameEvents)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsgList_GameEvents)
  return false;
#undef DO_
}

void CSVCMsgList_GameEvents::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsgList_GameEvents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CSVCMsgList_GameEvents.event_t events = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->events(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsgList_GameEvents)
}

::google::protobuf::uint8* CSVCMsgList_GameEvents::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsgList_GameEvents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CSVCMsgList_GameEvents.event_t events = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->events(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsgList_GameEvents)
  return target;
}

size_t CSVCMsgList_GameEvents::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsgList_GameEvents)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CSVCMsgList_GameEvents.event_t events = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->events_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->events(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsgList_GameEvents::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsgList_GameEvents)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsgList_GameEvents* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsgList_GameEvents>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsgList_GameEvents)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsgList_GameEvents)
    MergeFrom(*source);
  }
}

void CSVCMsgList_GameEvents::MergeFrom(const CSVCMsgList_GameEvents& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsgList_GameEvents)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  events_.MergeFrom(from.events_);
}

void CSVCMsgList_GameEvents::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsgList_GameEvents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsgList_GameEvents::CopyFrom(const CSVCMsgList_GameEvents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsgList_GameEvents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsgList_GameEvents::IsInitialized() const {
  return true;
}

void CSVCMsgList_GameEvents::Swap(CSVCMsgList_GameEvents* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsgList_GameEvents::InternalSwap(CSVCMsgList_GameEvents* other) {
  using std::swap;
  CastToBase(&events_)->InternalSwap(CastToBase(&other->events_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsgList_GameEvents::GetMetadata() const {
  protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_UserMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_UserMessage::kMsgTypeFieldNumber;
const int CSVCMsg_UserMessage::kMsgDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_UserMessage::CSVCMsg_UserMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_networkbasetypes_2eproto::scc_info_CSVCMsg_UserMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_UserMessage)
}
CSVCMsg_UserMessage::CSVCMsg_UserMessage(const CSVCMsg_UserMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg_data()) {
    msg_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_data_);
  }
  msg_type_ = from.msg_type_;
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_UserMessage)
}

void CSVCMsg_UserMessage::SharedCtor() {
  msg_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_type_ = 0;
}

CSVCMsg_UserMessage::~CSVCMsg_UserMessage() {
  // @@protoc_insertion_point(destructor:CSVCMsg_UserMessage)
  SharedDtor();
}

void CSVCMsg_UserMessage::SharedDtor() {
  msg_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CSVCMsg_UserMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_UserMessage::descriptor() {
  ::protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_UserMessage& CSVCMsg_UserMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_networkbasetypes_2eproto::scc_info_CSVCMsg_UserMessage.base);
  return *internal_default_instance();
}


void CSVCMsg_UserMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_UserMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_data_.ClearNonDefaultToEmptyNoArena();
  }
  msg_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_UserMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_UserMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 msg_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_msg_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msg_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes msg_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msg_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_UserMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_UserMessage)
  return false;
#undef DO_
}

void CSVCMsg_UserMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_UserMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 msg_type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->msg_type(), output);
  }

  // optional bytes msg_data = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->msg_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_UserMessage)
}

::google::protobuf::uint8* CSVCMsg_UserMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_UserMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 msg_type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->msg_type(), target);
  }

  // optional bytes msg_data = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->msg_data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_UserMessage)
  return target;
}

size_t CSVCMsg_UserMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_UserMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes msg_data = 2;
    if (has_msg_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->msg_data());
    }

    // optional int32 msg_type = 1;
    if (has_msg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->msg_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_UserMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_UserMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_UserMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_UserMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_UserMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_UserMessage)
    MergeFrom(*source);
  }
}

void CSVCMsg_UserMessage::MergeFrom(const CSVCMsg_UserMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_UserMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg_data();
      msg_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      msg_type_ = from.msg_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSVCMsg_UserMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_UserMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_UserMessage::CopyFrom(const CSVCMsg_UserMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_UserMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_UserMessage::IsInitialized() const {
  return true;
}

void CSVCMsg_UserMessage::Swap(CSVCMsg_UserMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_UserMessage::InternalSwap(CSVCMsg_UserMessage* other) {
  using std::swap;
  msg_data_.Swap(&other->msg_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msg_type_, other->msg_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_UserMessage::GetMetadata() const {
  protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsgList_UserMessages_usermsg_t::InitAsDefaultInstance() {
  ::_CSVCMsgList_UserMessages_usermsg_t_default_instance_._instance.get_mutable()->msg_ = const_cast< ::CSVCMsg_UserMessage*>(
      ::CSVCMsg_UserMessage::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsgList_UserMessages_usermsg_t::kTickFieldNumber;
const int CSVCMsgList_UserMessages_usermsg_t::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsgList_UserMessages_usermsg_t::CSVCMsgList_UserMessages_usermsg_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_networkbasetypes_2eproto::scc_info_CSVCMsgList_UserMessages_usermsg_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsgList_UserMessages.usermsg_t)
}
CSVCMsgList_UserMessages_usermsg_t::CSVCMsgList_UserMessages_usermsg_t(const CSVCMsgList_UserMessages_usermsg_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_msg()) {
    msg_ = new ::CSVCMsg_UserMessage(*from.msg_);
  } else {
    msg_ = NULL;
  }
  tick_ = from.tick_;
  // @@protoc_insertion_point(copy_constructor:CSVCMsgList_UserMessages.usermsg_t)
}

void CSVCMsgList_UserMessages_usermsg_t::SharedCtor() {
  ::memset(&msg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tick_) -
      reinterpret_cast<char*>(&msg_)) + sizeof(tick_));
}

CSVCMsgList_UserMessages_usermsg_t::~CSVCMsgList_UserMessages_usermsg_t() {
  // @@protoc_insertion_point(destructor:CSVCMsgList_UserMessages.usermsg_t)
  SharedDtor();
}

void CSVCMsgList_UserMessages_usermsg_t::SharedDtor() {
  if (this != internal_default_instance()) delete msg_;
}

void CSVCMsgList_UserMessages_usermsg_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsgList_UserMessages_usermsg_t::descriptor() {
  ::protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsgList_UserMessages_usermsg_t& CSVCMsgList_UserMessages_usermsg_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_networkbasetypes_2eproto::scc_info_CSVCMsgList_UserMessages_usermsg_t.base);
  return *internal_default_instance();
}


void CSVCMsgList_UserMessages_usermsg_t::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsgList_UserMessages.usermsg_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(msg_ != NULL);
    msg_->Clear();
  }
  tick_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsgList_UserMessages_usermsg_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsgList_UserMessages.usermsg_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 tick = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tick();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tick_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CSVCMsg_UserMessage msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsgList_UserMessages.usermsg_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsgList_UserMessages.usermsg_t)
  return false;
#undef DO_
}

void CSVCMsgList_UserMessages_usermsg_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsgList_UserMessages.usermsg_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 tick = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tick(), output);
  }

  // optional .CSVCMsg_UserMessage msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsgList_UserMessages.usermsg_t)
}

::google::protobuf::uint8* CSVCMsgList_UserMessages_usermsg_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsgList_UserMessages.usermsg_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 tick = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->tick(), target);
  }

  // optional .CSVCMsg_UserMessage msg = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_msg(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsgList_UserMessages.usermsg_t)
  return target;
}

size_t CSVCMsgList_UserMessages_usermsg_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsgList_UserMessages.usermsg_t)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .CSVCMsg_UserMessage msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_);
    }

    // optional int32 tick = 1;
    if (has_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tick());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsgList_UserMessages_usermsg_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsgList_UserMessages.usermsg_t)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsgList_UserMessages_usermsg_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsgList_UserMessages_usermsg_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsgList_UserMessages.usermsg_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsgList_UserMessages.usermsg_t)
    MergeFrom(*source);
  }
}

void CSVCMsgList_UserMessages_usermsg_t::MergeFrom(const CSVCMsgList_UserMessages_usermsg_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsgList_UserMessages.usermsg_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_msg()->::CSVCMsg_UserMessage::MergeFrom(from.msg());
    }
    if (cached_has_bits & 0x00000002u) {
      tick_ = from.tick_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSVCMsgList_UserMessages_usermsg_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsgList_UserMessages.usermsg_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsgList_UserMessages_usermsg_t::CopyFrom(const CSVCMsgList_UserMessages_usermsg_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsgList_UserMessages.usermsg_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsgList_UserMessages_usermsg_t::IsInitialized() const {
  return true;
}

void CSVCMsgList_UserMessages_usermsg_t::Swap(CSVCMsgList_UserMessages_usermsg_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsgList_UserMessages_usermsg_t::InternalSwap(CSVCMsgList_UserMessages_usermsg_t* other) {
  using std::swap;
  swap(msg_, other->msg_);
  swap(tick_, other->tick_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsgList_UserMessages_usermsg_t::GetMetadata() const {
  protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsgList_UserMessages::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsgList_UserMessages::kUsermsgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsgList_UserMessages::CSVCMsgList_UserMessages()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_networkbasetypes_2eproto::scc_info_CSVCMsgList_UserMessages.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsgList_UserMessages)
}
CSVCMsgList_UserMessages::CSVCMsgList_UserMessages(const CSVCMsgList_UserMessages& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      usermsgs_(from.usermsgs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CSVCMsgList_UserMessages)
}

void CSVCMsgList_UserMessages::SharedCtor() {
}

CSVCMsgList_UserMessages::~CSVCMsgList_UserMessages() {
  // @@protoc_insertion_point(destructor:CSVCMsgList_UserMessages)
  SharedDtor();
}

void CSVCMsgList_UserMessages::SharedDtor() {
}

void CSVCMsgList_UserMessages::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsgList_UserMessages::descriptor() {
  ::protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsgList_UserMessages& CSVCMsgList_UserMessages::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_networkbasetypes_2eproto::scc_info_CSVCMsgList_UserMessages.base);
  return *internal_default_instance();
}


void CSVCMsgList_UserMessages::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsgList_UserMessages)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  usermsgs_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsgList_UserMessages::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsgList_UserMessages)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CSVCMsgList_UserMessages.usermsg_t usermsgs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_usermsgs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsgList_UserMessages)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsgList_UserMessages)
  return false;
#undef DO_
}

void CSVCMsgList_UserMessages::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsgList_UserMessages)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CSVCMsgList_UserMessages.usermsg_t usermsgs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->usermsgs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->usermsgs(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsgList_UserMessages)
}

::google::protobuf::uint8* CSVCMsgList_UserMessages::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsgList_UserMessages)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CSVCMsgList_UserMessages.usermsg_t usermsgs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->usermsgs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->usermsgs(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsgList_UserMessages)
  return target;
}

size_t CSVCMsgList_UserMessages::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsgList_UserMessages)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CSVCMsgList_UserMessages.usermsg_t usermsgs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->usermsgs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->usermsgs(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsgList_UserMessages::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsgList_UserMessages)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsgList_UserMessages* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsgList_UserMessages>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsgList_UserMessages)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsgList_UserMessages)
    MergeFrom(*source);
  }
}

void CSVCMsgList_UserMessages::MergeFrom(const CSVCMsgList_UserMessages& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsgList_UserMessages)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  usermsgs_.MergeFrom(from.usermsgs_);
}

void CSVCMsgList_UserMessages::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsgList_UserMessages)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsgList_UserMessages::CopyFrom(const CSVCMsgList_UserMessages& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsgList_UserMessages)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsgList_UserMessages::IsInitialized() const {
  return true;
}

void CSVCMsgList_UserMessages::Swap(CSVCMsgList_UserMessages* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsgList_UserMessages::InternalSwap(CSVCMsgList_UserMessages* other) {
  using std::swap;
  CastToBase(&usermsgs_)->InternalSwap(CastToBase(&other->usermsgs_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsgList_UserMessages::GetMetadata() const {
  protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CNETMsg_SpawnGroup_Load::InitAsDefaultInstance() {
  ::_CNETMsg_SpawnGroup_Load_default_instance_._instance.get_mutable()->world_offset_pos_ = const_cast< ::CMsgVector*>(
      ::CMsgVector::internal_default_instance());
  ::_CNETMsg_SpawnGroup_Load_default_instance_._instance.get_mutable()->world_offset_angle_ = const_cast< ::CMsgQAngle*>(
      ::CMsgQAngle::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CNETMsg_SpawnGroup_Load::kWorldnameFieldNumber;
const int CNETMsg_SpawnGroup_Load::kEntitylumpnameFieldNumber;
const int CNETMsg_SpawnGroup_Load::kEntityfilternameFieldNumber;
const int CNETMsg_SpawnGroup_Load::kSpawngrouphandleFieldNumber;
const int CNETMsg_SpawnGroup_Load::kSpawngroupownerhandleFieldNumber;
const int CNETMsg_SpawnGroup_Load::kWorldOffsetPosFieldNumber;
const int CNETMsg_SpawnGroup_Load::kWorldOffsetAngleFieldNumber;
const int CNETMsg_SpawnGroup_Load::kSpawngroupmanifestFieldNumber;
const int CNETMsg_SpawnGroup_Load::kFlagsFieldNumber;
const int CNETMsg_SpawnGroup_Load::kTickcountFieldNumber;
const int CNETMsg_SpawnGroup_Load::kManifestincompleteFieldNumber;
const int CNETMsg_SpawnGroup_Load::kLocalnamefixupFieldNumber;
const int CNETMsg_SpawnGroup_Load::kParentnamefixupFieldNumber;
const int CNETMsg_SpawnGroup_Load::kManifestloadpriorityFieldNumber;
const int CNETMsg_SpawnGroup_Load::kWorldgroupidFieldNumber;
const int CNETMsg_SpawnGroup_Load::kCreationsequenceFieldNumber;
const int CNETMsg_SpawnGroup_Load::kSavegamefilenameFieldNumber;
const int CNETMsg_SpawnGroup_Load::kSpawngroupparenthandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CNETMsg_SpawnGroup_Load::CNETMsg_SpawnGroup_Load()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_networkbasetypes_2eproto::scc_info_CNETMsg_SpawnGroup_Load.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CNETMsg_SpawnGroup_Load)
}
CNETMsg_SpawnGroup_Load::CNETMsg_SpawnGroup_Load(const CNETMsg_SpawnGroup_Load& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  worldname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_worldname()) {
    worldname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worldname_);
  }
  entitylumpname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_entitylumpname()) {
    entitylumpname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entitylumpname_);
  }
  entityfiltername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_entityfiltername()) {
    entityfiltername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entityfiltername_);
  }
  spawngroupmanifest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_spawngroupmanifest()) {
    spawngroupmanifest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.spawngroupmanifest_);
  }
  localnamefixup_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_localnamefixup()) {
    localnamefixup_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.localnamefixup_);
  }
  parentnamefixup_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_parentnamefixup()) {
    parentnamefixup_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parentnamefixup_);
  }
  savegamefilename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_savegamefilename()) {
    savegamefilename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.savegamefilename_);
  }
  if (from.has_world_offset_pos()) {
    world_offset_pos_ = new ::CMsgVector(*from.world_offset_pos_);
  } else {
    world_offset_pos_ = NULL;
  }
  if (from.has_world_offset_angle()) {
    world_offset_angle_ = new ::CMsgQAngle(*from.world_offset_angle_);
  } else {
    world_offset_angle_ = NULL;
  }
  ::memcpy(&spawngrouphandle_, &from.spawngrouphandle_,
    static_cast<size_t>(reinterpret_cast<char*>(&spawngroupparenthandle_) -
    reinterpret_cast<char*>(&spawngrouphandle_)) + sizeof(spawngroupparenthandle_));
  // @@protoc_insertion_point(copy_constructor:CNETMsg_SpawnGroup_Load)
}

void CNETMsg_SpawnGroup_Load::SharedCtor() {
  worldname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entitylumpname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entityfiltername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spawngroupmanifest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  localnamefixup_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parentnamefixup_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  savegamefilename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&world_offset_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&spawngroupparenthandle_) -
      reinterpret_cast<char*>(&world_offset_pos_)) + sizeof(spawngroupparenthandle_));
}

CNETMsg_SpawnGroup_Load::~CNETMsg_SpawnGroup_Load() {
  // @@protoc_insertion_point(destructor:CNETMsg_SpawnGroup_Load)
  SharedDtor();
}

void CNETMsg_SpawnGroup_Load::SharedDtor() {
  worldname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entitylumpname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entityfiltername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spawngroupmanifest_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  localnamefixup_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parentnamefixup_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  savegamefilename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete world_offset_pos_;
  if (this != internal_default_instance()) delete world_offset_angle_;
}

void CNETMsg_SpawnGroup_Load::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CNETMsg_SpawnGroup_Load::descriptor() {
  ::protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CNETMsg_SpawnGroup_Load& CNETMsg_SpawnGroup_Load::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_networkbasetypes_2eproto::scc_info_CNETMsg_SpawnGroup_Load.base);
  return *internal_default_instance();
}


void CNETMsg_SpawnGroup_Load::Clear() {
// @@protoc_insertion_point(message_clear_start:CNETMsg_SpawnGroup_Load)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      worldname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      entitylumpname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      entityfiltername_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      spawngroupmanifest_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      localnamefixup_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      parentnamefixup_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      savegamefilename_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(world_offset_pos_ != NULL);
      world_offset_pos_->Clear();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    GOOGLE_DCHECK(world_offset_angle_ != NULL);
    world_offset_angle_->Clear();
  }
  if (cached_has_bits & 65024u) {
    ::memset(&spawngrouphandle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&worldgroupid_) -
        reinterpret_cast<char*>(&spawngrouphandle_)) + sizeof(worldgroupid_));
  }
  if (cached_has_bits & 196608u) {
    ::memset(&creationsequence_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&spawngroupparenthandle_) -
        reinterpret_cast<char*>(&creationsequence_)) + sizeof(spawngroupparenthandle_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CNETMsg_SpawnGroup_Load::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CNETMsg_SpawnGroup_Load)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string worldname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_worldname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->worldname().data(), static_cast<int>(this->worldname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CNETMsg_SpawnGroup_Load.worldname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string entitylumpname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entitylumpname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->entitylumpname().data(), static_cast<int>(this->entitylumpname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CNETMsg_SpawnGroup_Load.entitylumpname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string entityfiltername = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entityfiltername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->entityfiltername().data(), static_cast<int>(this->entityfiltername().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CNETMsg_SpawnGroup_Load.entityfiltername");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 spawngrouphandle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_spawngrouphandle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spawngrouphandle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 spawngroupownerhandle = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_spawngroupownerhandle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spawngroupownerhandle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgVector world_offset_pos = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_world_offset_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgQAngle world_offset_angle = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_world_offset_angle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes spawngroupmanifest = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_spawngroupmanifest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 flags = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 tickcount = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_tickcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tickcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool manifestincomplete = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_manifestincomplete();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &manifestincomplete_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string localnamefixup = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_localnamefixup()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->localnamefixup().data(), static_cast<int>(this->localnamefixup().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CNETMsg_SpawnGroup_Load.localnamefixup");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string parentnamefixup = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parentnamefixup()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->parentnamefixup().data(), static_cast<int>(this->parentnamefixup().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CNETMsg_SpawnGroup_Load.parentnamefixup");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 manifestloadpriority = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_manifestloadpriority();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &manifestloadpriority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 worldgroupid = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_worldgroupid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &worldgroupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 creationsequence = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_creationsequence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &creationsequence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string savegamefilename = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_savegamefilename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->savegamefilename().data(), static_cast<int>(this->savegamefilename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CNETMsg_SpawnGroup_Load.savegamefilename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 spawngroupparenthandle = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          set_has_spawngroupparenthandle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spawngroupparenthandle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CNETMsg_SpawnGroup_Load)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CNETMsg_SpawnGroup_Load)
  return false;
#undef DO_
}

void CNETMsg_SpawnGroup_Load::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CNETMsg_SpawnGroup_Load)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string worldname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->worldname().data(), static_cast<int>(this->worldname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CNETMsg_SpawnGroup_Load.worldname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->worldname(), output);
  }

  // optional string entitylumpname = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->entitylumpname().data(), static_cast<int>(this->entitylumpname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CNETMsg_SpawnGroup_Load.entitylumpname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->entitylumpname(), output);
  }

  // optional string entityfiltername = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->entityfiltername().data(), static_cast<int>(this->entityfiltername().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CNETMsg_SpawnGroup_Load.entityfiltername");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->entityfiltername(), output);
  }

  // optional uint32 spawngrouphandle = 4;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->spawngrouphandle(), output);
  }

  // optional uint32 spawngroupownerhandle = 5;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->spawngroupownerhandle(), output);
  }

  // optional .CMsgVector world_offset_pos = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_world_offset_pos(), output);
  }

  // optional .CMsgQAngle world_offset_angle = 7;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_world_offset_angle(), output);
  }

  // optional bytes spawngroupmanifest = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->spawngroupmanifest(), output);
  }

  // optional uint32 flags = 9;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->flags(), output);
  }

  // optional int32 tickcount = 10;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->tickcount(), output);
  }

  // optional bool manifestincomplete = 11;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->manifestincomplete(), output);
  }

  // optional string localnamefixup = 12;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->localnamefixup().data(), static_cast<int>(this->localnamefixup().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CNETMsg_SpawnGroup_Load.localnamefixup");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->localnamefixup(), output);
  }

  // optional string parentnamefixup = 13;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->parentnamefixup().data(), static_cast<int>(this->parentnamefixup().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CNETMsg_SpawnGroup_Load.parentnamefixup");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->parentnamefixup(), output);
  }

  // optional int32 manifestloadpriority = 14;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->manifestloadpriority(), output);
  }

  // optional uint32 worldgroupid = 15;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->worldgroupid(), output);
  }

  // optional uint32 creationsequence = 16;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->creationsequence(), output);
  }

  // optional string savegamefilename = 17;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->savegamefilename().data(), static_cast<int>(this->savegamefilename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CNETMsg_SpawnGroup_Load.savegamefilename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->savegamefilename(), output);
  }

  // optional uint32 spawngroupparenthandle = 18;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->spawngroupparenthandle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CNETMsg_SpawnGroup_Load)
}

::google::protobuf::uint8* CNETMsg_SpawnGroup_Load::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CNETMsg_SpawnGroup_Load)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string worldname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->worldname().data(), static_cast<int>(this->worldname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CNETMsg_SpawnGroup_Load.worldname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->worldname(), target);
  }

  // optional string entitylumpname = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->entitylumpname().data(), static_cast<int>(this->entitylumpname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CNETMsg_SpawnGroup_Load.entitylumpname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->entitylumpname(), target);
  }

  // optional string entityfiltername = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->entityfiltername().data(), static_cast<int>(this->entityfiltername().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CNETMsg_SpawnGroup_Load.entityfiltername");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->entityfiltername(), target);
  }

  // optional uint32 spawngrouphandle = 4;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->spawngrouphandle(), target);
  }

  // optional uint32 spawngroupownerhandle = 5;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->spawngroupownerhandle(), target);
  }

  // optional .CMsgVector world_offset_pos = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_world_offset_pos(), deterministic, target);
  }

  // optional .CMsgQAngle world_offset_angle = 7;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_world_offset_angle(), deterministic, target);
  }

  // optional bytes spawngroupmanifest = 8;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->spawngroupmanifest(), target);
  }

  // optional uint32 flags = 9;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->flags(), target);
  }

  // optional int32 tickcount = 10;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->tickcount(), target);
  }

  // optional bool manifestincomplete = 11;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->manifestincomplete(), target);
  }

  // optional string localnamefixup = 12;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->localnamefixup().data(), static_cast<int>(this->localnamefixup().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CNETMsg_SpawnGroup_Load.localnamefixup");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->localnamefixup(), target);
  }

  // optional string parentnamefixup = 13;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->parentnamefixup().data(), static_cast<int>(this->parentnamefixup().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CNETMsg_SpawnGroup_Load.parentnamefixup");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->parentnamefixup(), target);
  }

  // optional int32 manifestloadpriority = 14;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->manifestloadpriority(), target);
  }

  // optional uint32 worldgroupid = 15;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->worldgroupid(), target);
  }

  // optional uint32 creationsequence = 16;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->creationsequence(), target);
  }

  // optional string savegamefilename = 17;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->savegamefilename().data(), static_cast<int>(this->savegamefilename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CNETMsg_SpawnGroup_Load.savegamefilename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->savegamefilename(), target);
  }

  // optional uint32 spawngroupparenthandle = 18;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->spawngroupparenthandle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CNETMsg_SpawnGroup_Load)
  return target;
}

size_t CNETMsg_SpawnGroup_Load::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CNETMsg_SpawnGroup_Load)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string worldname = 1;
    if (has_worldname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->worldname());
    }

    // optional string entitylumpname = 2;
    if (has_entitylumpname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entitylumpname());
    }

    // optional string entityfiltername = 3;
    if (has_entityfiltername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entityfiltername());
    }

    // optional bytes spawngroupmanifest = 8;
    if (has_spawngroupmanifest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->spawngroupmanifest());
    }

    // optional string localnamefixup = 12;
    if (has_localnamefixup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->localnamefixup());
    }

    // optional string parentnamefixup = 13;
    if (has_parentnamefixup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->parentnamefixup());
    }

    // optional string savegamefilename = 17;
    if (has_savegamefilename()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->savegamefilename());
    }

    // optional .CMsgVector world_offset_pos = 6;
    if (has_world_offset_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *world_offset_pos_);
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional .CMsgQAngle world_offset_angle = 7;
    if (has_world_offset_angle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *world_offset_angle_);
    }

    // optional uint32 spawngrouphandle = 4;
    if (has_spawngrouphandle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->spawngrouphandle());
    }

    // optional uint32 spawngroupownerhandle = 5;
    if (has_spawngroupownerhandle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->spawngroupownerhandle());
    }

    // optional uint32 flags = 9;
    if (has_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flags());
    }

    // optional int32 tickcount = 10;
    if (has_tickcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tickcount());
    }

    // optional bool manifestincomplete = 11;
    if (has_manifestincomplete()) {
      total_size += 1 + 1;
    }

    // optional int32 manifestloadpriority = 14;
    if (has_manifestloadpriority()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->manifestloadpriority());
    }

    // optional uint32 worldgroupid = 15;
    if (has_worldgroupid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->worldgroupid());
    }

  }
  if (_has_bits_[16 / 32] & 196608u) {
    // optional uint32 creationsequence = 16;
    if (has_creationsequence()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->creationsequence());
    }

    // optional uint32 spawngroupparenthandle = 18;
    if (has_spawngroupparenthandle()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->spawngroupparenthandle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CNETMsg_SpawnGroup_Load::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CNETMsg_SpawnGroup_Load)
  GOOGLE_DCHECK_NE(&from, this);
  const CNETMsg_SpawnGroup_Load* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CNETMsg_SpawnGroup_Load>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CNETMsg_SpawnGroup_Load)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CNETMsg_SpawnGroup_Load)
    MergeFrom(*source);
  }
}

void CNETMsg_SpawnGroup_Load::MergeFrom(const CNETMsg_SpawnGroup_Load& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CNETMsg_SpawnGroup_Load)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_worldname();
      worldname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worldname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_entitylumpname();
      entitylumpname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entitylumpname_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_entityfiltername();
      entityfiltername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entityfiltername_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_spawngroupmanifest();
      spawngroupmanifest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.spawngroupmanifest_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_localnamefixup();
      localnamefixup_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.localnamefixup_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_parentnamefixup();
      parentnamefixup_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parentnamefixup_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_savegamefilename();
      savegamefilename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.savegamefilename_);
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_world_offset_pos()->::CMsgVector::MergeFrom(from.world_offset_pos());
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_world_offset_angle()->::CMsgQAngle::MergeFrom(from.world_offset_angle());
    }
    if (cached_has_bits & 0x00000200u) {
      spawngrouphandle_ = from.spawngrouphandle_;
    }
    if (cached_has_bits & 0x00000400u) {
      spawngroupownerhandle_ = from.spawngroupownerhandle_;
    }
    if (cached_has_bits & 0x00000800u) {
      flags_ = from.flags_;
    }
    if (cached_has_bits & 0x00001000u) {
      tickcount_ = from.tickcount_;
    }
    if (cached_has_bits & 0x00002000u) {
      manifestincomplete_ = from.manifestincomplete_;
    }
    if (cached_has_bits & 0x00004000u) {
      manifestloadpriority_ = from.manifestloadpriority_;
    }
    if (cached_has_bits & 0x00008000u) {
      worldgroupid_ = from.worldgroupid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 196608u) {
    if (cached_has_bits & 0x00010000u) {
      creationsequence_ = from.creationsequence_;
    }
    if (cached_has_bits & 0x00020000u) {
      spawngroupparenthandle_ = from.spawngroupparenthandle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CNETMsg_SpawnGroup_Load::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CNETMsg_SpawnGroup_Load)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CNETMsg_SpawnGroup_Load::CopyFrom(const CNETMsg_SpawnGroup_Load& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CNETMsg_SpawnGroup_Load)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CNETMsg_SpawnGroup_Load::IsInitialized() const {
  return true;
}

void CNETMsg_SpawnGroup_Load::Swap(CNETMsg_SpawnGroup_Load* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CNETMsg_SpawnGroup_Load::InternalSwap(CNETMsg_SpawnGroup_Load* other) {
  using std::swap;
  worldname_.Swap(&other->worldname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  entitylumpname_.Swap(&other->entitylumpname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  entityfiltername_.Swap(&other->entityfiltername_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  spawngroupmanifest_.Swap(&other->spawngroupmanifest_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  localnamefixup_.Swap(&other->localnamefixup_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parentnamefixup_.Swap(&other->parentnamefixup_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  savegamefilename_.Swap(&other->savegamefilename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(world_offset_pos_, other->world_offset_pos_);
  swap(world_offset_angle_, other->world_offset_angle_);
  swap(spawngrouphandle_, other->spawngrouphandle_);
  swap(spawngroupownerhandle_, other->spawngroupownerhandle_);
  swap(flags_, other->flags_);
  swap(tickcount_, other->tickcount_);
  swap(manifestincomplete_, other->manifestincomplete_);
  swap(manifestloadpriority_, other->manifestloadpriority_);
  swap(worldgroupid_, other->worldgroupid_);
  swap(creationsequence_, other->creationsequence_);
  swap(spawngroupparenthandle_, other->spawngroupparenthandle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CNETMsg_SpawnGroup_Load::GetMetadata() const {
  protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CNETMsg_SpawnGroup_ManifestUpdate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CNETMsg_SpawnGroup_ManifestUpdate::kSpawngrouphandleFieldNumber;
const int CNETMsg_SpawnGroup_ManifestUpdate::kSpawngroupmanifestFieldNumber;
const int CNETMsg_SpawnGroup_ManifestUpdate::kManifestincompleteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CNETMsg_SpawnGroup_ManifestUpdate::CNETMsg_SpawnGroup_ManifestUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_networkbasetypes_2eproto::scc_info_CNETMsg_SpawnGroup_ManifestUpdate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CNETMsg_SpawnGroup_ManifestUpdate)
}
CNETMsg_SpawnGroup_ManifestUpdate::CNETMsg_SpawnGroup_ManifestUpdate(const CNETMsg_SpawnGroup_ManifestUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  spawngroupmanifest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_spawngroupmanifest()) {
    spawngroupmanifest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.spawngroupmanifest_);
  }
  ::memcpy(&spawngrouphandle_, &from.spawngrouphandle_,
    static_cast<size_t>(reinterpret_cast<char*>(&manifestincomplete_) -
    reinterpret_cast<char*>(&spawngrouphandle_)) + sizeof(manifestincomplete_));
  // @@protoc_insertion_point(copy_constructor:CNETMsg_SpawnGroup_ManifestUpdate)
}

void CNETMsg_SpawnGroup_ManifestUpdate::SharedCtor() {
  spawngroupmanifest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&spawngrouphandle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&manifestincomplete_) -
      reinterpret_cast<char*>(&spawngrouphandle_)) + sizeof(manifestincomplete_));
}

CNETMsg_SpawnGroup_ManifestUpdate::~CNETMsg_SpawnGroup_ManifestUpdate() {
  // @@protoc_insertion_point(destructor:CNETMsg_SpawnGroup_ManifestUpdate)
  SharedDtor();
}

void CNETMsg_SpawnGroup_ManifestUpdate::SharedDtor() {
  spawngroupmanifest_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CNETMsg_SpawnGroup_ManifestUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CNETMsg_SpawnGroup_ManifestUpdate::descriptor() {
  ::protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CNETMsg_SpawnGroup_ManifestUpdate& CNETMsg_SpawnGroup_ManifestUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_networkbasetypes_2eproto::scc_info_CNETMsg_SpawnGroup_ManifestUpdate.base);
  return *internal_default_instance();
}


void CNETMsg_SpawnGroup_ManifestUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:CNETMsg_SpawnGroup_ManifestUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    spawngroupmanifest_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&spawngrouphandle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&manifestincomplete_) -
        reinterpret_cast<char*>(&spawngrouphandle_)) + sizeof(manifestincomplete_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CNETMsg_SpawnGroup_ManifestUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CNETMsg_SpawnGroup_ManifestUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 spawngrouphandle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_spawngrouphandle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spawngrouphandle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes spawngroupmanifest = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_spawngroupmanifest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool manifestincomplete = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_manifestincomplete();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &manifestincomplete_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CNETMsg_SpawnGroup_ManifestUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CNETMsg_SpawnGroup_ManifestUpdate)
  return false;
#undef DO_
}

void CNETMsg_SpawnGroup_ManifestUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CNETMsg_SpawnGroup_ManifestUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 spawngrouphandle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->spawngrouphandle(), output);
  }

  // optional bytes spawngroupmanifest = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->spawngroupmanifest(), output);
  }

  // optional bool manifestincomplete = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->manifestincomplete(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CNETMsg_SpawnGroup_ManifestUpdate)
}

::google::protobuf::uint8* CNETMsg_SpawnGroup_ManifestUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CNETMsg_SpawnGroup_ManifestUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 spawngrouphandle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->spawngrouphandle(), target);
  }

  // optional bytes spawngroupmanifest = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->spawngroupmanifest(), target);
  }

  // optional bool manifestincomplete = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->manifestincomplete(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CNETMsg_SpawnGroup_ManifestUpdate)
  return target;
}

size_t CNETMsg_SpawnGroup_ManifestUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CNETMsg_SpawnGroup_ManifestUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes spawngroupmanifest = 2;
    if (has_spawngroupmanifest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->spawngroupmanifest());
    }

    // optional uint32 spawngrouphandle = 1;
    if (has_spawngrouphandle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->spawngrouphandle());
    }

    // optional bool manifestincomplete = 3;
    if (has_manifestincomplete()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CNETMsg_SpawnGroup_ManifestUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CNETMsg_SpawnGroup_ManifestUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const CNETMsg_SpawnGroup_ManifestUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CNETMsg_SpawnGroup_ManifestUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CNETMsg_SpawnGroup_ManifestUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CNETMsg_SpawnGroup_ManifestUpdate)
    MergeFrom(*source);
  }
}

void CNETMsg_SpawnGroup_ManifestUpdate::MergeFrom(const CNETMsg_SpawnGroup_ManifestUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CNETMsg_SpawnGroup_ManifestUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_spawngroupmanifest();
      spawngroupmanifest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.spawngroupmanifest_);
    }
    if (cached_has_bits & 0x00000002u) {
      spawngrouphandle_ = from.spawngrouphandle_;
    }
    if (cached_has_bits & 0x00000004u) {
      manifestincomplete_ = from.manifestincomplete_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CNETMsg_SpawnGroup_ManifestUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CNETMsg_SpawnGroup_ManifestUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CNETMsg_SpawnGroup_ManifestUpdate::CopyFrom(const CNETMsg_SpawnGroup_ManifestUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CNETMsg_SpawnGroup_ManifestUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CNETMsg_SpawnGroup_ManifestUpdate::IsInitialized() const {
  return true;
}

void CNETMsg_SpawnGroup_ManifestUpdate::Swap(CNETMsg_SpawnGroup_ManifestUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CNETMsg_SpawnGroup_ManifestUpdate::InternalSwap(CNETMsg_SpawnGroup_ManifestUpdate* other) {
  using std::swap;
  spawngroupmanifest_.Swap(&other->spawngroupmanifest_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(spawngrouphandle_, other->spawngrouphandle_);
  swap(manifestincomplete_, other->manifestincomplete_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CNETMsg_SpawnGroup_ManifestUpdate::GetMetadata() const {
  protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CNETMsg_SpawnGroup_SetCreationTick::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CNETMsg_SpawnGroup_SetCreationTick::kSpawngrouphandleFieldNumber;
const int CNETMsg_SpawnGroup_SetCreationTick::kTickcountFieldNumber;
const int CNETMsg_SpawnGroup_SetCreationTick::kCreationsequenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CNETMsg_SpawnGroup_SetCreationTick::CNETMsg_SpawnGroup_SetCreationTick()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_networkbasetypes_2eproto::scc_info_CNETMsg_SpawnGroup_SetCreationTick.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CNETMsg_SpawnGroup_SetCreationTick)
}
CNETMsg_SpawnGroup_SetCreationTick::CNETMsg_SpawnGroup_SetCreationTick(const CNETMsg_SpawnGroup_SetCreationTick& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&spawngrouphandle_, &from.spawngrouphandle_,
    static_cast<size_t>(reinterpret_cast<char*>(&creationsequence_) -
    reinterpret_cast<char*>(&spawngrouphandle_)) + sizeof(creationsequence_));
  // @@protoc_insertion_point(copy_constructor:CNETMsg_SpawnGroup_SetCreationTick)
}

void CNETMsg_SpawnGroup_SetCreationTick::SharedCtor() {
  ::memset(&spawngrouphandle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&creationsequence_) -
      reinterpret_cast<char*>(&spawngrouphandle_)) + sizeof(creationsequence_));
}

CNETMsg_SpawnGroup_SetCreationTick::~CNETMsg_SpawnGroup_SetCreationTick() {
  // @@protoc_insertion_point(destructor:CNETMsg_SpawnGroup_SetCreationTick)
  SharedDtor();
}

void CNETMsg_SpawnGroup_SetCreationTick::SharedDtor() {
}

void CNETMsg_SpawnGroup_SetCreationTick::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CNETMsg_SpawnGroup_SetCreationTick::descriptor() {
  ::protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CNETMsg_SpawnGroup_SetCreationTick& CNETMsg_SpawnGroup_SetCreationTick::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_networkbasetypes_2eproto::scc_info_CNETMsg_SpawnGroup_SetCreationTick.base);
  return *internal_default_instance();
}


void CNETMsg_SpawnGroup_SetCreationTick::Clear() {
// @@protoc_insertion_point(message_clear_start:CNETMsg_SpawnGroup_SetCreationTick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&spawngrouphandle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&creationsequence_) -
        reinterpret_cast<char*>(&spawngrouphandle_)) + sizeof(creationsequence_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CNETMsg_SpawnGroup_SetCreationTick::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CNETMsg_SpawnGroup_SetCreationTick)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 spawngrouphandle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_spawngrouphandle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spawngrouphandle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 tickcount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_tickcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tickcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 creationsequence = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_creationsequence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &creationsequence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CNETMsg_SpawnGroup_SetCreationTick)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CNETMsg_SpawnGroup_SetCreationTick)
  return false;
#undef DO_
}

void CNETMsg_SpawnGroup_SetCreationTick::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CNETMsg_SpawnGroup_SetCreationTick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 spawngrouphandle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->spawngrouphandle(), output);
  }

  // optional int32 tickcount = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->tickcount(), output);
  }

  // optional uint32 creationsequence = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->creationsequence(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CNETMsg_SpawnGroup_SetCreationTick)
}

::google::protobuf::uint8* CNETMsg_SpawnGroup_SetCreationTick::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CNETMsg_SpawnGroup_SetCreationTick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 spawngrouphandle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->spawngrouphandle(), target);
  }

  // optional int32 tickcount = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->tickcount(), target);
  }

  // optional uint32 creationsequence = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->creationsequence(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CNETMsg_SpawnGroup_SetCreationTick)
  return target;
}

size_t CNETMsg_SpawnGroup_SetCreationTick::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CNETMsg_SpawnGroup_SetCreationTick)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 spawngrouphandle = 1;
    if (has_spawngrouphandle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->spawngrouphandle());
    }

    // optional int32 tickcount = 2;
    if (has_tickcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tickcount());
    }

    // optional uint32 creationsequence = 3;
    if (has_creationsequence()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->creationsequence());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CNETMsg_SpawnGroup_SetCreationTick::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CNETMsg_SpawnGroup_SetCreationTick)
  GOOGLE_DCHECK_NE(&from, this);
  const CNETMsg_SpawnGroup_SetCreationTick* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CNETMsg_SpawnGroup_SetCreationTick>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CNETMsg_SpawnGroup_SetCreationTick)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CNETMsg_SpawnGroup_SetCreationTick)
    MergeFrom(*source);
  }
}

void CNETMsg_SpawnGroup_SetCreationTick::MergeFrom(const CNETMsg_SpawnGroup_SetCreationTick& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CNETMsg_SpawnGroup_SetCreationTick)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      spawngrouphandle_ = from.spawngrouphandle_;
    }
    if (cached_has_bits & 0x00000002u) {
      tickcount_ = from.tickcount_;
    }
    if (cached_has_bits & 0x00000004u) {
      creationsequence_ = from.creationsequence_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CNETMsg_SpawnGroup_SetCreationTick::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CNETMsg_SpawnGroup_SetCreationTick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CNETMsg_SpawnGroup_SetCreationTick::CopyFrom(const CNETMsg_SpawnGroup_SetCreationTick& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CNETMsg_SpawnGroup_SetCreationTick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CNETMsg_SpawnGroup_SetCreationTick::IsInitialized() const {
  return true;
}

void CNETMsg_SpawnGroup_SetCreationTick::Swap(CNETMsg_SpawnGroup_SetCreationTick* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CNETMsg_SpawnGroup_SetCreationTick::InternalSwap(CNETMsg_SpawnGroup_SetCreationTick* other) {
  using std::swap;
  swap(spawngrouphandle_, other->spawngrouphandle_);
  swap(tickcount_, other->tickcount_);
  swap(creationsequence_, other->creationsequence_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CNETMsg_SpawnGroup_SetCreationTick::GetMetadata() const {
  protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CNETMsg_SpawnGroup_Unload::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CNETMsg_SpawnGroup_Unload::kSpawngrouphandleFieldNumber;
const int CNETMsg_SpawnGroup_Unload::kFlagsFieldNumber;
const int CNETMsg_SpawnGroup_Unload::kTickcountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CNETMsg_SpawnGroup_Unload::CNETMsg_SpawnGroup_Unload()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_networkbasetypes_2eproto::scc_info_CNETMsg_SpawnGroup_Unload.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CNETMsg_SpawnGroup_Unload)
}
CNETMsg_SpawnGroup_Unload::CNETMsg_SpawnGroup_Unload(const CNETMsg_SpawnGroup_Unload& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&spawngrouphandle_, &from.spawngrouphandle_,
    static_cast<size_t>(reinterpret_cast<char*>(&tickcount_) -
    reinterpret_cast<char*>(&spawngrouphandle_)) + sizeof(tickcount_));
  // @@protoc_insertion_point(copy_constructor:CNETMsg_SpawnGroup_Unload)
}

void CNETMsg_SpawnGroup_Unload::SharedCtor() {
  ::memset(&spawngrouphandle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tickcount_) -
      reinterpret_cast<char*>(&spawngrouphandle_)) + sizeof(tickcount_));
}

CNETMsg_SpawnGroup_Unload::~CNETMsg_SpawnGroup_Unload() {
  // @@protoc_insertion_point(destructor:CNETMsg_SpawnGroup_Unload)
  SharedDtor();
}

void CNETMsg_SpawnGroup_Unload::SharedDtor() {
}

void CNETMsg_SpawnGroup_Unload::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CNETMsg_SpawnGroup_Unload::descriptor() {
  ::protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CNETMsg_SpawnGroup_Unload& CNETMsg_SpawnGroup_Unload::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_networkbasetypes_2eproto::scc_info_CNETMsg_SpawnGroup_Unload.base);
  return *internal_default_instance();
}


void CNETMsg_SpawnGroup_Unload::Clear() {
// @@protoc_insertion_point(message_clear_start:CNETMsg_SpawnGroup_Unload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&spawngrouphandle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tickcount_) -
        reinterpret_cast<char*>(&spawngrouphandle_)) + sizeof(tickcount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CNETMsg_SpawnGroup_Unload::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CNETMsg_SpawnGroup_Unload)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 spawngrouphandle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_spawngrouphandle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spawngrouphandle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 flags = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 tickcount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_tickcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tickcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CNETMsg_SpawnGroup_Unload)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CNETMsg_SpawnGroup_Unload)
  return false;
#undef DO_
}

void CNETMsg_SpawnGroup_Unload::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CNETMsg_SpawnGroup_Unload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 spawngrouphandle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->spawngrouphandle(), output);
  }

  // optional uint32 flags = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->flags(), output);
  }

  // optional int32 tickcount = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->tickcount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CNETMsg_SpawnGroup_Unload)
}

::google::protobuf::uint8* CNETMsg_SpawnGroup_Unload::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CNETMsg_SpawnGroup_Unload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 spawngrouphandle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->spawngrouphandle(), target);
  }

  // optional uint32 flags = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->flags(), target);
  }

  // optional int32 tickcount = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->tickcount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CNETMsg_SpawnGroup_Unload)
  return target;
}

size_t CNETMsg_SpawnGroup_Unload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CNETMsg_SpawnGroup_Unload)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 spawngrouphandle = 1;
    if (has_spawngrouphandle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->spawngrouphandle());
    }

    // optional uint32 flags = 2;
    if (has_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flags());
    }

    // optional int32 tickcount = 3;
    if (has_tickcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tickcount());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CNETMsg_SpawnGroup_Unload::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CNETMsg_SpawnGroup_Unload)
  GOOGLE_DCHECK_NE(&from, this);
  const CNETMsg_SpawnGroup_Unload* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CNETMsg_SpawnGroup_Unload>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CNETMsg_SpawnGroup_Unload)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CNETMsg_SpawnGroup_Unload)
    MergeFrom(*source);
  }
}

void CNETMsg_SpawnGroup_Unload::MergeFrom(const CNETMsg_SpawnGroup_Unload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CNETMsg_SpawnGroup_Unload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      spawngrouphandle_ = from.spawngrouphandle_;
    }
    if (cached_has_bits & 0x00000002u) {
      flags_ = from.flags_;
    }
    if (cached_has_bits & 0x00000004u) {
      tickcount_ = from.tickcount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CNETMsg_SpawnGroup_Unload::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CNETMsg_SpawnGroup_Unload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CNETMsg_SpawnGroup_Unload::CopyFrom(const CNETMsg_SpawnGroup_Unload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CNETMsg_SpawnGroup_Unload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CNETMsg_SpawnGroup_Unload::IsInitialized() const {
  return true;
}

void CNETMsg_SpawnGroup_Unload::Swap(CNETMsg_SpawnGroup_Unload* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CNETMsg_SpawnGroup_Unload::InternalSwap(CNETMsg_SpawnGroup_Unload* other) {
  using std::swap;
  swap(spawngrouphandle_, other->spawngrouphandle_);
  swap(flags_, other->flags_);
  swap(tickcount_, other->tickcount_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CNETMsg_SpawnGroup_Unload::GetMetadata() const {
  protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CNETMsg_SpawnGroup_LoadCompleted::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CNETMsg_SpawnGroup_LoadCompleted::kSpawngrouphandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CNETMsg_SpawnGroup_LoadCompleted::CNETMsg_SpawnGroup_LoadCompleted()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_networkbasetypes_2eproto::scc_info_CNETMsg_SpawnGroup_LoadCompleted.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CNETMsg_SpawnGroup_LoadCompleted)
}
CNETMsg_SpawnGroup_LoadCompleted::CNETMsg_SpawnGroup_LoadCompleted(const CNETMsg_SpawnGroup_LoadCompleted& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  spawngrouphandle_ = from.spawngrouphandle_;
  // @@protoc_insertion_point(copy_constructor:CNETMsg_SpawnGroup_LoadCompleted)
}

void CNETMsg_SpawnGroup_LoadCompleted::SharedCtor() {
  spawngrouphandle_ = 0u;
}

CNETMsg_SpawnGroup_LoadCompleted::~CNETMsg_SpawnGroup_LoadCompleted() {
  // @@protoc_insertion_point(destructor:CNETMsg_SpawnGroup_LoadCompleted)
  SharedDtor();
}

void CNETMsg_SpawnGroup_LoadCompleted::SharedDtor() {
}

void CNETMsg_SpawnGroup_LoadCompleted::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CNETMsg_SpawnGroup_LoadCompleted::descriptor() {
  ::protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CNETMsg_SpawnGroup_LoadCompleted& CNETMsg_SpawnGroup_LoadCompleted::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_networkbasetypes_2eproto::scc_info_CNETMsg_SpawnGroup_LoadCompleted.base);
  return *internal_default_instance();
}


void CNETMsg_SpawnGroup_LoadCompleted::Clear() {
// @@protoc_insertion_point(message_clear_start:CNETMsg_SpawnGroup_LoadCompleted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  spawngrouphandle_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CNETMsg_SpawnGroup_LoadCompleted::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CNETMsg_SpawnGroup_LoadCompleted)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 spawngrouphandle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_spawngrouphandle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spawngrouphandle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CNETMsg_SpawnGroup_LoadCompleted)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CNETMsg_SpawnGroup_LoadCompleted)
  return false;
#undef DO_
}

void CNETMsg_SpawnGroup_LoadCompleted::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CNETMsg_SpawnGroup_LoadCompleted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 spawngrouphandle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->spawngrouphandle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CNETMsg_SpawnGroup_LoadCompleted)
}

::google::protobuf::uint8* CNETMsg_SpawnGroup_LoadCompleted::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CNETMsg_SpawnGroup_LoadCompleted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 spawngrouphandle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->spawngrouphandle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CNETMsg_SpawnGroup_LoadCompleted)
  return target;
}

size_t CNETMsg_SpawnGroup_LoadCompleted::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CNETMsg_SpawnGroup_LoadCompleted)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 spawngrouphandle = 1;
  if (has_spawngrouphandle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spawngrouphandle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CNETMsg_SpawnGroup_LoadCompleted::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CNETMsg_SpawnGroup_LoadCompleted)
  GOOGLE_DCHECK_NE(&from, this);
  const CNETMsg_SpawnGroup_LoadCompleted* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CNETMsg_SpawnGroup_LoadCompleted>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CNETMsg_SpawnGroup_LoadCompleted)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CNETMsg_SpawnGroup_LoadCompleted)
    MergeFrom(*source);
  }
}

void CNETMsg_SpawnGroup_LoadCompleted::MergeFrom(const CNETMsg_SpawnGroup_LoadCompleted& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CNETMsg_SpawnGroup_LoadCompleted)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_spawngrouphandle()) {
    set_spawngrouphandle(from.spawngrouphandle());
  }
}

void CNETMsg_SpawnGroup_LoadCompleted::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CNETMsg_SpawnGroup_LoadCompleted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CNETMsg_SpawnGroup_LoadCompleted::CopyFrom(const CNETMsg_SpawnGroup_LoadCompleted& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CNETMsg_SpawnGroup_LoadCompleted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CNETMsg_SpawnGroup_LoadCompleted::IsInitialized() const {
  return true;
}

void CNETMsg_SpawnGroup_LoadCompleted::Swap(CNETMsg_SpawnGroup_LoadCompleted* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CNETMsg_SpawnGroup_LoadCompleted::InternalSwap(CNETMsg_SpawnGroup_LoadCompleted* other) {
  using std::swap;
  swap(spawngrouphandle_, other->spawngrouphandle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CNETMsg_SpawnGroup_LoadCompleted::GetMetadata() const {
  protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSVCMsg_GameSessionConfiguration::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSVCMsg_GameSessionConfiguration::kIsMultiplayerFieldNumber;
const int CSVCMsg_GameSessionConfiguration::kIsLoadsavegameFieldNumber;
const int CSVCMsg_GameSessionConfiguration::kIsBackgroundMapFieldNumber;
const int CSVCMsg_GameSessionConfiguration::kIsHeadlessFieldNumber;
const int CSVCMsg_GameSessionConfiguration::kMinClientLimitFieldNumber;
const int CSVCMsg_GameSessionConfiguration::kMaxClientLimitFieldNumber;
const int CSVCMsg_GameSessionConfiguration::kMaxClientsFieldNumber;
const int CSVCMsg_GameSessionConfiguration::kTickIntervalFieldNumber;
const int CSVCMsg_GameSessionConfiguration::kHostnameFieldNumber;
const int CSVCMsg_GameSessionConfiguration::kSavegamenameFieldNumber;
const int CSVCMsg_GameSessionConfiguration::kS1MapnameFieldNumber;
const int CSVCMsg_GameSessionConfiguration::kGamemodeFieldNumber;
const int CSVCMsg_GameSessionConfiguration::kServerIpAddressFieldNumber;
const int CSVCMsg_GameSessionConfiguration::kDataFieldNumber;
const int CSVCMsg_GameSessionConfiguration::kIsLocalonlyFieldNumber;
const int CSVCMsg_GameSessionConfiguration::kIsTransitionFieldNumber;
const int CSVCMsg_GameSessionConfiguration::kPreviouslevelFieldNumber;
const int CSVCMsg_GameSessionConfiguration::kLandmarknameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSVCMsg_GameSessionConfiguration::CSVCMsg_GameSessionConfiguration()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_networkbasetypes_2eproto::scc_info_CSVCMsg_GameSessionConfiguration.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSVCMsg_GameSessionConfiguration)
}
CSVCMsg_GameSessionConfiguration::CSVCMsg_GameSessionConfiguration(const CSVCMsg_GameSessionConfiguration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hostname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hostname()) {
    hostname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hostname_);
  }
  savegamename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_savegamename()) {
    savegamename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.savegamename_);
  }
  s1_mapname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_s1_mapname()) {
    s1_mapname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.s1_mapname_);
  }
  gamemode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gamemode()) {
    gamemode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamemode_);
  }
  server_ip_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_server_ip_address()) {
    server_ip_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_ip_address_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  previouslevel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_previouslevel()) {
    previouslevel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.previouslevel_);
  }
  landmarkname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_landmarkname()) {
    landmarkname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.landmarkname_);
  }
  ::memcpy(&is_multiplayer_, &from.is_multiplayer_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_transition_) -
    reinterpret_cast<char*>(&is_multiplayer_)) + sizeof(is_transition_));
  // @@protoc_insertion_point(copy_constructor:CSVCMsg_GameSessionConfiguration)
}

void CSVCMsg_GameSessionConfiguration::SharedCtor() {
  hostname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  savegamename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  s1_mapname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gamemode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_ip_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  previouslevel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  landmarkname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_multiplayer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_transition_) -
      reinterpret_cast<char*>(&is_multiplayer_)) + sizeof(is_transition_));
}

CSVCMsg_GameSessionConfiguration::~CSVCMsg_GameSessionConfiguration() {
  // @@protoc_insertion_point(destructor:CSVCMsg_GameSessionConfiguration)
  SharedDtor();
}

void CSVCMsg_GameSessionConfiguration::SharedDtor() {
  hostname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  savegamename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  s1_mapname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gamemode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_ip_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  previouslevel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  landmarkname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CSVCMsg_GameSessionConfiguration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSVCMsg_GameSessionConfiguration::descriptor() {
  ::protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSVCMsg_GameSessionConfiguration& CSVCMsg_GameSessionConfiguration::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_networkbasetypes_2eproto::scc_info_CSVCMsg_GameSessionConfiguration.base);
  return *internal_default_instance();
}


void CSVCMsg_GameSessionConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:CSVCMsg_GameSessionConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      hostname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      savegamename_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      s1_mapname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      gamemode_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      server_ip_address_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      data_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      previouslevel_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000080u) {
      landmarkname_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 65280u) {
    ::memset(&is_multiplayer_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tick_interval_) -
        reinterpret_cast<char*>(&is_multiplayer_)) + sizeof(tick_interval_));
  }
  if (cached_has_bits & 196608u) {
    ::memset(&is_localonly_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_transition_) -
        reinterpret_cast<char*>(&is_localonly_)) + sizeof(is_transition_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSVCMsg_GameSessionConfiguration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSVCMsg_GameSessionConfiguration)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool is_multiplayer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_is_multiplayer();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_multiplayer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_loadsavegame = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_is_loadsavegame();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_loadsavegame_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_background_map = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_is_background_map();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_background_map_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_headless = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_is_headless();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_headless_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 min_client_limit = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_min_client_limit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &min_client_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 max_client_limit = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_max_client_limit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_client_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 max_clients = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_max_clients();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_clients_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 tick_interval = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {
          set_has_tick_interval();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &tick_interval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string hostname = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hostname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hostname().data(), static_cast<int>(this->hostname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSVCMsg_GameSessionConfiguration.hostname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string savegamename = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_savegamename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->savegamename().data(), static_cast<int>(this->savegamename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSVCMsg_GameSessionConfiguration.savegamename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string s1_mapname = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_s1_mapname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->s1_mapname().data(), static_cast<int>(this->s1_mapname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSVCMsg_GameSessionConfiguration.s1_mapname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string gamemode = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gamemode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gamemode().data(), static_cast<int>(this->gamemode().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSVCMsg_GameSessionConfiguration.gamemode");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string server_ip_address = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_ip_address()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->server_ip_address().data(), static_cast<int>(this->server_ip_address().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSVCMsg_GameSessionConfiguration.server_ip_address");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes data = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_localonly = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_is_localonly();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_localonly_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_transition = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_is_transition();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_transition_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string previouslevel = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_previouslevel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->previouslevel().data(), static_cast<int>(this->previouslevel().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSVCMsg_GameSessionConfiguration.previouslevel");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string landmarkname = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_landmarkname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->landmarkname().data(), static_cast<int>(this->landmarkname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSVCMsg_GameSessionConfiguration.landmarkname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSVCMsg_GameSessionConfiguration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSVCMsg_GameSessionConfiguration)
  return false;
#undef DO_
}

void CSVCMsg_GameSessionConfiguration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSVCMsg_GameSessionConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool is_multiplayer = 1;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_multiplayer(), output);
  }

  // optional bool is_loadsavegame = 2;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_loadsavegame(), output);
  }

  // optional bool is_background_map = 3;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_background_map(), output);
  }

  // optional bool is_headless = 4;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_headless(), output);
  }

  // optional uint32 min_client_limit = 5;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->min_client_limit(), output);
  }

  // optional uint32 max_client_limit = 6;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->max_client_limit(), output);
  }

  // optional uint32 max_clients = 7;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->max_clients(), output);
  }

  // optional fixed32 tick_interval = 8;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(8, this->tick_interval(), output);
  }

  // optional string hostname = 9;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hostname().data(), static_cast<int>(this->hostname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_GameSessionConfiguration.hostname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->hostname(), output);
  }

  // optional string savegamename = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->savegamename().data(), static_cast<int>(this->savegamename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_GameSessionConfiguration.savegamename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->savegamename(), output);
  }

  // optional string s1_mapname = 11;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->s1_mapname().data(), static_cast<int>(this->s1_mapname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_GameSessionConfiguration.s1_mapname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->s1_mapname(), output);
  }

  // optional string gamemode = 12;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gamemode().data(), static_cast<int>(this->gamemode().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_GameSessionConfiguration.gamemode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->gamemode(), output);
  }

  // optional string server_ip_address = 13;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->server_ip_address().data(), static_cast<int>(this->server_ip_address().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_GameSessionConfiguration.server_ip_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->server_ip_address(), output);
  }

  // optional bytes data = 14;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      14, this->data(), output);
  }

  // optional bool is_localonly = 15;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->is_localonly(), output);
  }

  // optional bool is_transition = 16;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->is_transition(), output);
  }

  // optional string previouslevel = 17;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->previouslevel().data(), static_cast<int>(this->previouslevel().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_GameSessionConfiguration.previouslevel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->previouslevel(), output);
  }

  // optional string landmarkname = 18;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->landmarkname().data(), static_cast<int>(this->landmarkname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_GameSessionConfiguration.landmarkname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->landmarkname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSVCMsg_GameSessionConfiguration)
}

::google::protobuf::uint8* CSVCMsg_GameSessionConfiguration::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSVCMsg_GameSessionConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool is_multiplayer = 1;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_multiplayer(), target);
  }

  // optional bool is_loadsavegame = 2;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_loadsavegame(), target);
  }

  // optional bool is_background_map = 3;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_background_map(), target);
  }

  // optional bool is_headless = 4;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_headless(), target);
  }

  // optional uint32 min_client_limit = 5;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->min_client_limit(), target);
  }

  // optional uint32 max_client_limit = 6;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->max_client_limit(), target);
  }

  // optional uint32 max_clients = 7;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->max_clients(), target);
  }

  // optional fixed32 tick_interval = 8;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(8, this->tick_interval(), target);
  }

  // optional string hostname = 9;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hostname().data(), static_cast<int>(this->hostname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_GameSessionConfiguration.hostname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->hostname(), target);
  }

  // optional string savegamename = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->savegamename().data(), static_cast<int>(this->savegamename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_GameSessionConfiguration.savegamename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->savegamename(), target);
  }

  // optional string s1_mapname = 11;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->s1_mapname().data(), static_cast<int>(this->s1_mapname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_GameSessionConfiguration.s1_mapname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->s1_mapname(), target);
  }

  // optional string gamemode = 12;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gamemode().data(), static_cast<int>(this->gamemode().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_GameSessionConfiguration.gamemode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->gamemode(), target);
  }

  // optional string server_ip_address = 13;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->server_ip_address().data(), static_cast<int>(this->server_ip_address().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_GameSessionConfiguration.server_ip_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->server_ip_address(), target);
  }

  // optional bytes data = 14;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        14, this->data(), target);
  }

  // optional bool is_localonly = 15;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->is_localonly(), target);
  }

  // optional bool is_transition = 16;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->is_transition(), target);
  }

  // optional string previouslevel = 17;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->previouslevel().data(), static_cast<int>(this->previouslevel().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_GameSessionConfiguration.previouslevel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->previouslevel(), target);
  }

  // optional string landmarkname = 18;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->landmarkname().data(), static_cast<int>(this->landmarkname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSVCMsg_GameSessionConfiguration.landmarkname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->landmarkname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSVCMsg_GameSessionConfiguration)
  return target;
}

size_t CSVCMsg_GameSessionConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSVCMsg_GameSessionConfiguration)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string hostname = 9;
    if (has_hostname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hostname());
    }

    // optional string savegamename = 10;
    if (has_savegamename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->savegamename());
    }

    // optional string s1_mapname = 11;
    if (has_s1_mapname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->s1_mapname());
    }

    // optional string gamemode = 12;
    if (has_gamemode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gamemode());
    }

    // optional string server_ip_address = 13;
    if (has_server_ip_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->server_ip_address());
    }

    // optional bytes data = 14;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

    // optional string previouslevel = 17;
    if (has_previouslevel()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->previouslevel());
    }

    // optional string landmarkname = 18;
    if (has_landmarkname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->landmarkname());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional bool is_multiplayer = 1;
    if (has_is_multiplayer()) {
      total_size += 1 + 1;
    }

    // optional bool is_loadsavegame = 2;
    if (has_is_loadsavegame()) {
      total_size += 1 + 1;
    }

    // optional bool is_background_map = 3;
    if (has_is_background_map()) {
      total_size += 1 + 1;
    }

    // optional bool is_headless = 4;
    if (has_is_headless()) {
      total_size += 1 + 1;
    }

    // optional uint32 min_client_limit = 5;
    if (has_min_client_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->min_client_limit());
    }

    // optional uint32 max_client_limit = 6;
    if (has_max_client_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->max_client_limit());
    }

    // optional uint32 max_clients = 7;
    if (has_max_clients()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->max_clients());
    }

    // optional fixed32 tick_interval = 8;
    if (has_tick_interval()) {
      total_size += 1 + 4;
    }

  }
  if (_has_bits_[16 / 32] & 196608u) {
    // optional bool is_localonly = 15;
    if (has_is_localonly()) {
      total_size += 1 + 1;
    }

    // optional bool is_transition = 16;
    if (has_is_transition()) {
      total_size += 2 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSVCMsg_GameSessionConfiguration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSVCMsg_GameSessionConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  const CSVCMsg_GameSessionConfiguration* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSVCMsg_GameSessionConfiguration>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSVCMsg_GameSessionConfiguration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSVCMsg_GameSessionConfiguration)
    MergeFrom(*source);
  }
}

void CSVCMsg_GameSessionConfiguration::MergeFrom(const CSVCMsg_GameSessionConfiguration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSVCMsg_GameSessionConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_hostname();
      hostname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hostname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_savegamename();
      savegamename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.savegamename_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_s1_mapname();
      s1_mapname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.s1_mapname_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_gamemode();
      gamemode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamemode_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_server_ip_address();
      server_ip_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_ip_address_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_previouslevel();
      previouslevel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.previouslevel_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_landmarkname();
      landmarkname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.landmarkname_);
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      is_multiplayer_ = from.is_multiplayer_;
    }
    if (cached_has_bits & 0x00000200u) {
      is_loadsavegame_ = from.is_loadsavegame_;
    }
    if (cached_has_bits & 0x00000400u) {
      is_background_map_ = from.is_background_map_;
    }
    if (cached_has_bits & 0x00000800u) {
      is_headless_ = from.is_headless_;
    }
    if (cached_has_bits & 0x00001000u) {
      min_client_limit_ = from.min_client_limit_;
    }
    if (cached_has_bits & 0x00002000u) {
      max_client_limit_ = from.max_client_limit_;
    }
    if (cached_has_bits & 0x00004000u) {
      max_clients_ = from.max_clients_;
    }
    if (cached_has_bits & 0x00008000u) {
      tick_interval_ = from.tick_interval_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 196608u) {
    if (cached_has_bits & 0x00010000u) {
      is_localonly_ = from.is_localonly_;
    }
    if (cached_has_bits & 0x00020000u) {
      is_transition_ = from.is_transition_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSVCMsg_GameSessionConfiguration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSVCMsg_GameSessionConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSVCMsg_GameSessionConfiguration::CopyFrom(const CSVCMsg_GameSessionConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSVCMsg_GameSessionConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSVCMsg_GameSessionConfiguration::IsInitialized() const {
  return true;
}

void CSVCMsg_GameSessionConfiguration::Swap(CSVCMsg_GameSessionConfiguration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSVCMsg_GameSessionConfiguration::InternalSwap(CSVCMsg_GameSessionConfiguration* other) {
  using std::swap;
  hostname_.Swap(&other->hostname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  savegamename_.Swap(&other->savegamename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  s1_mapname_.Swap(&other->s1_mapname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  gamemode_.Swap(&other->gamemode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  server_ip_address_.Swap(&other->server_ip_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  previouslevel_.Swap(&other->previouslevel_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  landmarkname_.Swap(&other->landmarkname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_multiplayer_, other->is_multiplayer_);
  swap(is_loadsavegame_, other->is_loadsavegame_);
  swap(is_background_map_, other->is_background_map_);
  swap(is_headless_, other->is_headless_);
  swap(min_client_limit_, other->min_client_limit_);
  swap(max_client_limit_, other->max_client_limit_);
  swap(max_clients_, other->max_clients_);
  swap(tick_interval_, other->tick_interval_);
  swap(is_localonly_, other->is_localonly_);
  swap(is_transition_, other->is_transition_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSVCMsg_GameSessionConfiguration::GetMetadata() const {
  protobuf_networkbasetypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_networkbasetypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgVector* Arena::CreateMaybeMessage< ::CMsgVector >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgVector >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgVector2D* Arena::CreateMaybeMessage< ::CMsgVector2D >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgVector2D >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgQAngle* Arena::CreateMaybeMessage< ::CMsgQAngle >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgQAngle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgPlayerInfo* Arena::CreateMaybeMessage< ::CMsgPlayerInfo >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgPlayerInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsg_CVars_CVar* Arena::CreateMaybeMessage< ::CMsg_CVars_CVar >(Arena* arena) {
  return Arena::CreateInternal< ::CMsg_CVars_CVar >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsg_CVars* Arena::CreateMaybeMessage< ::CMsg_CVars >(Arena* arena) {
  return Arena::CreateInternal< ::CMsg_CVars >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CNETMsg_NOP* Arena::CreateMaybeMessage< ::CNETMsg_NOP >(Arena* arena) {
  return Arena::CreateInternal< ::CNETMsg_NOP >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CNETMsg_SplitScreenUser* Arena::CreateMaybeMessage< ::CNETMsg_SplitScreenUser >(Arena* arena) {
  return Arena::CreateInternal< ::CNETMsg_SplitScreenUser >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CNETMsg_Disconnect* Arena::CreateMaybeMessage< ::CNETMsg_Disconnect >(Arena* arena) {
  return Arena::CreateInternal< ::CNETMsg_Disconnect >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CNETMsg_Tick* Arena::CreateMaybeMessage< ::CNETMsg_Tick >(Arena* arena) {
  return Arena::CreateInternal< ::CNETMsg_Tick >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CNETMsg_StringCmd* Arena::CreateMaybeMessage< ::CNETMsg_StringCmd >(Arena* arena) {
  return Arena::CreateInternal< ::CNETMsg_StringCmd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CNETMsg_SetConVar* Arena::CreateMaybeMessage< ::CNETMsg_SetConVar >(Arena* arena) {
  return Arena::CreateInternal< ::CNETMsg_SetConVar >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CNETMsg_SignonState* Arena::CreateMaybeMessage< ::CNETMsg_SignonState >(Arena* arena) {
  return Arena::CreateInternal< ::CNETMsg_SignonState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_GameEvent_key_t* Arena::CreateMaybeMessage< ::CSVCMsg_GameEvent_key_t >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_GameEvent_key_t >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_GameEvent* Arena::CreateMaybeMessage< ::CSVCMsg_GameEvent >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_GameEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsgList_GameEvents_event_t* Arena::CreateMaybeMessage< ::CSVCMsgList_GameEvents_event_t >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsgList_GameEvents_event_t >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsgList_GameEvents* Arena::CreateMaybeMessage< ::CSVCMsgList_GameEvents >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsgList_GameEvents >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_UserMessage* Arena::CreateMaybeMessage< ::CSVCMsg_UserMessage >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_UserMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsgList_UserMessages_usermsg_t* Arena::CreateMaybeMessage< ::CSVCMsgList_UserMessages_usermsg_t >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsgList_UserMessages_usermsg_t >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsgList_UserMessages* Arena::CreateMaybeMessage< ::CSVCMsgList_UserMessages >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsgList_UserMessages >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CNETMsg_SpawnGroup_Load* Arena::CreateMaybeMessage< ::CNETMsg_SpawnGroup_Load >(Arena* arena) {
  return Arena::CreateInternal< ::CNETMsg_SpawnGroup_Load >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CNETMsg_SpawnGroup_ManifestUpdate* Arena::CreateMaybeMessage< ::CNETMsg_SpawnGroup_ManifestUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::CNETMsg_SpawnGroup_ManifestUpdate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CNETMsg_SpawnGroup_SetCreationTick* Arena::CreateMaybeMessage< ::CNETMsg_SpawnGroup_SetCreationTick >(Arena* arena) {
  return Arena::CreateInternal< ::CNETMsg_SpawnGroup_SetCreationTick >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CNETMsg_SpawnGroup_Unload* Arena::CreateMaybeMessage< ::CNETMsg_SpawnGroup_Unload >(Arena* arena) {
  return Arena::CreateInternal< ::CNETMsg_SpawnGroup_Unload >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CNETMsg_SpawnGroup_LoadCompleted* Arena::CreateMaybeMessage< ::CNETMsg_SpawnGroup_LoadCompleted >(Arena* arena) {
  return Arena::CreateInternal< ::CNETMsg_SpawnGroup_LoadCompleted >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSVCMsg_GameSessionConfiguration* Arena::CreateMaybeMessage< ::CSVCMsg_GameSessionConfiguration >(Arena* arena) {
  return Arena::CreateInternal< ::CSVCMsg_GameSessionConfiguration >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
