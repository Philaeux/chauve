// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_commonmessages.proto

#include "dota_commonmessages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_networkbasetypes_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_networkbasetypes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgVector;
}  // namespace protobuf_networkbasetypes_2eproto
class CDOTAMsg_LocationPingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAMsg_LocationPing>
      _instance;
} _CDOTAMsg_LocationPing_default_instance_;
class CDOTAMsg_ItemAlertDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAMsg_ItemAlert>
      _instance;
} _CDOTAMsg_ItemAlert_default_instance_;
class CDOTAMsg_MapLineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAMsg_MapLine>
      _instance;
} _CDOTAMsg_MapLine_default_instance_;
class CDOTAMsg_WorldLineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAMsg_WorldLine>
      _instance;
} _CDOTAMsg_WorldLine_default_instance_;
class CDOTAMsg_SendStatPopupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAMsg_SendStatPopup>
      _instance;
} _CDOTAMsg_SendStatPopup_default_instance_;
class CDOTAMsg_DismissAllStatPopupsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAMsg_DismissAllStatPopups>
      _instance;
} _CDOTAMsg_DismissAllStatPopups_default_instance_;
class CDOTAMsg_CoachHUDPingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAMsg_CoachHUDPing>
      _instance;
} _CDOTAMsg_CoachHUDPing_default_instance_;
class CDOTAMsg_UnitOrderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAMsg_UnitOrder>
      _instance;
} _CDOTAMsg_UnitOrder_default_instance_;
namespace protobuf_dota_5fcommonmessages_2eproto {
static void InitDefaultsCDOTAMsg_LocationPing() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAMsg_LocationPing_default_instance_;
    new (ptr) ::CDOTAMsg_LocationPing();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAMsg_LocationPing::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAMsg_LocationPing =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAMsg_LocationPing}, {}};

static void InitDefaultsCDOTAMsg_ItemAlert() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAMsg_ItemAlert_default_instance_;
    new (ptr) ::CDOTAMsg_ItemAlert();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAMsg_ItemAlert::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAMsg_ItemAlert =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAMsg_ItemAlert}, {}};

static void InitDefaultsCDOTAMsg_MapLine() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAMsg_MapLine_default_instance_;
    new (ptr) ::CDOTAMsg_MapLine();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAMsg_MapLine::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAMsg_MapLine =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAMsg_MapLine}, {}};

static void InitDefaultsCDOTAMsg_WorldLine() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAMsg_WorldLine_default_instance_;
    new (ptr) ::CDOTAMsg_WorldLine();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAMsg_WorldLine::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAMsg_WorldLine =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAMsg_WorldLine}, {}};

static void InitDefaultsCDOTAMsg_SendStatPopup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAMsg_SendStatPopup_default_instance_;
    new (ptr) ::CDOTAMsg_SendStatPopup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAMsg_SendStatPopup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAMsg_SendStatPopup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAMsg_SendStatPopup}, {}};

static void InitDefaultsCDOTAMsg_DismissAllStatPopups() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAMsg_DismissAllStatPopups_default_instance_;
    new (ptr) ::CDOTAMsg_DismissAllStatPopups();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAMsg_DismissAllStatPopups::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAMsg_DismissAllStatPopups =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAMsg_DismissAllStatPopups}, {}};

static void InitDefaultsCDOTAMsg_CoachHUDPing() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAMsg_CoachHUDPing_default_instance_;
    new (ptr) ::CDOTAMsg_CoachHUDPing();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAMsg_CoachHUDPing::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAMsg_CoachHUDPing =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAMsg_CoachHUDPing}, {}};

static void InitDefaultsCDOTAMsg_UnitOrder() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAMsg_UnitOrder_default_instance_;
    new (ptr) ::CDOTAMsg_UnitOrder();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAMsg_UnitOrder::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAMsg_UnitOrder =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCDOTAMsg_UnitOrder}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgVector.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAMsg_LocationPing.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAMsg_ItemAlert.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAMsg_MapLine.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAMsg_WorldLine.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAMsg_SendStatPopup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAMsg_DismissAllStatPopups.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAMsg_CoachHUDPing.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAMsg_UnitOrder.base);
}

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_LocationPing, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_LocationPing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_LocationPing, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_LocationPing, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_LocationPing, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_LocationPing, direct_ping_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_LocationPing, type_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_ItemAlert, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_ItemAlert, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_ItemAlert, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_ItemAlert, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_ItemAlert, item_ability_id_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_MapLine, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_MapLine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_MapLine, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_MapLine, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_MapLine, initial_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_WorldLine, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_WorldLine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_WorldLine, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_WorldLine, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_WorldLine, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_WorldLine, initial_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_WorldLine, end_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_SendStatPopup, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_SendStatPopup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_SendStatPopup, style_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_SendStatPopup, stat_strings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_SendStatPopup, stat_images_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_SendStatPopup, stat_image_types_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_SendStatPopup, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_SendStatPopup, use_html_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_SendStatPopup, movie_name_),
  1,
  ~0u,
  ~0u,
  ~0u,
  2,
  3,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_DismissAllStatPopups, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_DismissAllStatPopups, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_DismissAllStatPopups, time_delay_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_CoachHUDPing, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_CoachHUDPing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_CoachHUDPing, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_CoachHUDPing, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_CoachHUDPing, tgtpath_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_UnitOrder, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_UnitOrder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_UnitOrder, issuer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_UnitOrder, order_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_UnitOrder, units_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_UnitOrder, target_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_UnitOrder, ability_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_UnitOrder, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_UnitOrder, queue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_UnitOrder, sequence_number_),
  6,
  1,
  ~0u,
  2,
  3,
  0,
  4,
  5,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(::CDOTAMsg_LocationPing)},
  { 15, 23, sizeof(::CDOTAMsg_ItemAlert)},
  { 26, 34, sizeof(::CDOTAMsg_MapLine)},
  { 37, 47, sizeof(::CDOTAMsg_WorldLine)},
  { 52, 64, sizeof(::CDOTAMsg_SendStatPopup)},
  { 71, 77, sizeof(::CDOTAMsg_DismissAllStatPopups)},
  { 78, 86, sizeof(::CDOTAMsg_CoachHUDPing)},
  { 89, 102, sizeof(::CDOTAMsg_UnitOrder)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAMsg_LocationPing_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAMsg_ItemAlert_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAMsg_MapLine_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAMsg_WorldLine_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAMsg_SendStatPopup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAMsg_DismissAllStatPopups_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAMsg_CoachHUDPing_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAMsg_UnitOrder_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "dota_commonmessages.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\031dota_commonmessages.proto\032\026networkbase"
      "types.proto\"`\n\025CDOTAMsg_LocationPing\022\t\n\001"
      "x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\022\016\n\006target\030\003 \001(\005\022\023\n\013di"
      "rect_ping\030\004 \001(\010\022\014\n\004type\030\005 \001(\005\"C\n\022CDOTAMs"
      "g_ItemAlert\022\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\022\027\n\017ite"
      "m_ability_id\030\003 \001(\005\"9\n\020CDOTAMsg_MapLine\022\t"
      "\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\022\017\n\007initial\030\003 \001(\010\"S\n"
      "\022CDOTAMsg_WorldLine\022\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001("
      "\005\022\t\n\001z\030\003 \001(\005\022\017\n\007initial\030\004 \001(\010\022\013\n\003end\030\005 \001"
      "(\010\"\320\001\n\026CDOTAMsg_SendStatPopup\0229\n\005style\030\001"
      " \001(\0162\024.EDOTAStatPopupTypes:\024k_EDOTA_SPT_"
      "Textline\022\024\n\014stat_strings\030\002 \003(\t\022\023\n\013stat_i"
      "mages\030\003 \003(\005\022\030\n\020stat_image_types\030\004 \003(\005\022\020\n"
      "\010duration\030\005 \001(\002\022\020\n\010use_html\030\006 \001(\010\022\022\n\nmov"
      "ie_name\030\007 \001(\t\"3\n\035CDOTAMsg_DismissAllStat"
      "Popups\022\022\n\ntime_delay\030\001 \001(\002\">\n\025CDOTAMsg_C"
      "oachHUDPing\022\t\n\001x\030\001 \001(\r\022\t\n\001y\030\002 \001(\r\022\017\n\007tgt"
      "path\030\003 \001(\t\"\347\001\n\022CDOTAMsg_UnitOrder\022\022\n\006iss"
      "uer\030\001 \001(\021:\002-1\022:\n\norder_type\030\002 \001(\0162\020.dota"
      "unitorder_t:\024DOTA_UNIT_ORDER_NONE\022\r\n\005uni"
      "ts\030\003 \003(\005\022\024\n\014target_index\030\004 \001(\005\022\025\n\rabilit"
      "y_index\030\005 \001(\005\022\035\n\010position\030\006 \001(\0132\013.CMsgVe"
      "ctor\022\r\n\005queue\030\007 \001(\010\022\027\n\017sequence_number\030\010"
      " \001(\005*\244\001\n\023EDOTAStatPopupTypes\022\030\n\024k_EDOTA_"
      "SPT_Textline\020\000\022\025\n\021k_EDOTA_SPT_Basic\020\001\022\024\n"
      "\020k_EDOTA_SPT_Poll\020\002\022\024\n\020k_EDOTA_SPT_Grid\020"
      "\003\022\031\n\025k_EDOTA_SPT_DualImage\020\004\022\025\n\021k_EDOTA_"
      "SPT_Movie\020\005*\215\n\n\017dotaunitorder_t\022\030\n\024DOTA_"
      "UNIT_ORDER_NONE\020\000\022$\n DOTA_UNIT_ORDER_MOV"
      "E_TO_POSITION\020\001\022\"\n\036DOTA_UNIT_ORDER_MOVE_"
      "TO_TARGET\020\002\022\037\n\033DOTA_UNIT_ORDER_ATTACK_MO"
      "VE\020\003\022!\n\035DOTA_UNIT_ORDER_ATTACK_TARGET\020\004\022"
      "!\n\035DOTA_UNIT_ORDER_CAST_POSITION\020\005\022\037\n\033DO"
      "TA_UNIT_ORDER_CAST_TARGET\020\006\022$\n DOTA_UNIT"
      "_ORDER_CAST_TARGET_TREE\020\007\022\"\n\036DOTA_UNIT_O"
      "RDER_CAST_NO_TARGET\020\010\022\037\n\033DOTA_UNIT_ORDER"
      "_CAST_TOGGLE\020\t\022!\n\035DOTA_UNIT_ORDER_HOLD_P"
      "OSITION\020\n\022!\n\035DOTA_UNIT_ORDER_TRAIN_ABILI"
      "TY\020\013\022\035\n\031DOTA_UNIT_ORDER_DROP_ITEM\020\014\022\035\n\031D"
      "OTA_UNIT_ORDER_GIVE_ITEM\020\r\022\037\n\033DOTA_UNIT_"
      "ORDER_PICKUP_ITEM\020\016\022\037\n\033DOTA_UNIT_ORDER_P"
      "ICKUP_RUNE\020\017\022!\n\035DOTA_UNIT_ORDER_PURCHASE"
      "_ITEM\020\020\022\035\n\031DOTA_UNIT_ORDER_SELL_ITEM\020\021\022$"
      "\n DOTA_UNIT_ORDER_DISASSEMBLE_ITEM\020\022\022\035\n\031"
      "DOTA_UNIT_ORDER_MOVE_ITEM\020\023\022$\n DOTA_UNIT"
      "_ORDER_CAST_TOGGLE_AUTO\020\024\022\030\n\024DOTA_UNIT_O"
      "RDER_STOP\020\025\022\031\n\025DOTA_UNIT_ORDER_TAUNT\020\026\022\033"
      "\n\027DOTA_UNIT_ORDER_BUYBACK\020\027\022\031\n\025DOTA_UNIT"
      "_ORDER_GLYPH\020\030\022)\n%DOTA_UNIT_ORDER_EJECT_"
      "ITEM_FROM_STASH\020\031\022\035\n\031DOTA_UNIT_ORDER_CAS"
      "T_RUNE\020\032\022 \n\034DOTA_UNIT_ORDER_PING_ABILITY"
      "\020\033\022%\n!DOTA_UNIT_ORDER_MOVE_TO_DIRECTION\020"
      "\034\022\032\n\026DOTA_UNIT_ORDER_PATROL\020\035\022*\n&DOTA_UN"
      "IT_ORDER_VECTOR_TARGET_POSITION\020\036\022\031\n\025DOT"
      "A_UNIT_ORDER_RADAR\020\037\022)\n%DOTA_UNIT_ORDER_"
      "SET_ITEM_COMBINE_LOCK\020 \022\034\n\030DOTA_UNIT_ORD"
      "ER_CONTINUE\020!\022*\n&DOTA_UNIT_ORDER_VECTOR_"
      "TARGET_CANCELED\020\"\022$\n DOTA_UNIT_ORDER_CAS"
      "T_RIVER_PAINT\020#\0222\n.DOTA_UNIT_ORDER_PREGA"
      "ME_ADJUST_ITEM_ASSIGNMENT\020$B\005H\001\200\001\000"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2394);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dota_commonmessages.proto", &protobuf_RegisterTypes);
  ::protobuf_networkbasetypes_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_dota_5fcommonmessages_2eproto
const ::google::protobuf::EnumDescriptor* EDOTAStatPopupTypes_descriptor() {
  protobuf_dota_5fcommonmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dota_5fcommonmessages_2eproto::file_level_enum_descriptors[0];
}
bool EDOTAStatPopupTypes_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* dotaunitorder_t_descriptor() {
  protobuf_dota_5fcommonmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dota_5fcommonmessages_2eproto::file_level_enum_descriptors[1];
}
bool dotaunitorder_t_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CDOTAMsg_LocationPing::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAMsg_LocationPing::kXFieldNumber;
const int CDOTAMsg_LocationPing::kYFieldNumber;
const int CDOTAMsg_LocationPing::kTargetFieldNumber;
const int CDOTAMsg_LocationPing::kDirectPingFieldNumber;
const int CDOTAMsg_LocationPing::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAMsg_LocationPing::CDOTAMsg_LocationPing()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fcommonmessages_2eproto::scc_info_CDOTAMsg_LocationPing.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAMsg_LocationPing)
}
CDOTAMsg_LocationPing::CDOTAMsg_LocationPing(const CDOTAMsg_LocationPing& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&x_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:CDOTAMsg_LocationPing)
}

void CDOTAMsg_LocationPing::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&x_)) + sizeof(type_));
}

CDOTAMsg_LocationPing::~CDOTAMsg_LocationPing() {
  // @@protoc_insertion_point(destructor:CDOTAMsg_LocationPing)
  SharedDtor();
}

void CDOTAMsg_LocationPing::SharedDtor() {
}

void CDOTAMsg_LocationPing::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAMsg_LocationPing::descriptor() {
  ::protobuf_dota_5fcommonmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fcommonmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAMsg_LocationPing& CDOTAMsg_LocationPing::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fcommonmessages_2eproto::scc_info_CDOTAMsg_LocationPing.base);
  return *internal_default_instance();
}


void CDOTAMsg_LocationPing::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAMsg_LocationPing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&type_) -
        reinterpret_cast<char*>(&x_)) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAMsg_LocationPing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAMsg_LocationPing)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 target = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_target();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool direct_ping = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_direct_ping();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &direct_ping_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAMsg_LocationPing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAMsg_LocationPing)
  return false;
#undef DO_
}

void CDOTAMsg_LocationPing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAMsg_LocationPing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // optional int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  // optional int32 target = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->target(), output);
  }

  // optional bool direct_ping = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->direct_ping(), output);
  }

  // optional int32 type = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAMsg_LocationPing)
}

::google::protobuf::uint8* CDOTAMsg_LocationPing::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAMsg_LocationPing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // optional int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  // optional int32 target = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->target(), target);
  }

  // optional bool direct_ping = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->direct_ping(), target);
  }

  // optional int32 type = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAMsg_LocationPing)
  return target;
}

size_t CDOTAMsg_LocationPing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAMsg_LocationPing)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 x = 1;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }

    // optional int32 y = 2;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }

    // optional int32 target = 3;
    if (has_target()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target());
    }

    // optional bool direct_ping = 4;
    if (has_direct_ping()) {
      total_size += 1 + 1;
    }

    // optional int32 type = 5;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAMsg_LocationPing::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAMsg_LocationPing)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAMsg_LocationPing* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAMsg_LocationPing>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAMsg_LocationPing)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAMsg_LocationPing)
    MergeFrom(*source);
  }
}

void CDOTAMsg_LocationPing::MergeFrom(const CDOTAMsg_LocationPing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAMsg_LocationPing)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      target_ = from.target_;
    }
    if (cached_has_bits & 0x00000008u) {
      direct_ping_ = from.direct_ping_;
    }
    if (cached_has_bits & 0x00000010u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAMsg_LocationPing::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAMsg_LocationPing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAMsg_LocationPing::CopyFrom(const CDOTAMsg_LocationPing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAMsg_LocationPing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAMsg_LocationPing::IsInitialized() const {
  return true;
}

void CDOTAMsg_LocationPing::Swap(CDOTAMsg_LocationPing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAMsg_LocationPing::InternalSwap(CDOTAMsg_LocationPing* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(target_, other->target_);
  swap(direct_ping_, other->direct_ping_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAMsg_LocationPing::GetMetadata() const {
  protobuf_dota_5fcommonmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fcommonmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAMsg_ItemAlert::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAMsg_ItemAlert::kXFieldNumber;
const int CDOTAMsg_ItemAlert::kYFieldNumber;
const int CDOTAMsg_ItemAlert::kItemAbilityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAMsg_ItemAlert::CDOTAMsg_ItemAlert()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fcommonmessages_2eproto::scc_info_CDOTAMsg_ItemAlert.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAMsg_ItemAlert)
}
CDOTAMsg_ItemAlert::CDOTAMsg_ItemAlert(const CDOTAMsg_ItemAlert& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&item_ability_id_) -
    reinterpret_cast<char*>(&x_)) + sizeof(item_ability_id_));
  // @@protoc_insertion_point(copy_constructor:CDOTAMsg_ItemAlert)
}

void CDOTAMsg_ItemAlert::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&item_ability_id_) -
      reinterpret_cast<char*>(&x_)) + sizeof(item_ability_id_));
}

CDOTAMsg_ItemAlert::~CDOTAMsg_ItemAlert() {
  // @@protoc_insertion_point(destructor:CDOTAMsg_ItemAlert)
  SharedDtor();
}

void CDOTAMsg_ItemAlert::SharedDtor() {
}

void CDOTAMsg_ItemAlert::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAMsg_ItemAlert::descriptor() {
  ::protobuf_dota_5fcommonmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fcommonmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAMsg_ItemAlert& CDOTAMsg_ItemAlert::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fcommonmessages_2eproto::scc_info_CDOTAMsg_ItemAlert.base);
  return *internal_default_instance();
}


void CDOTAMsg_ItemAlert::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAMsg_ItemAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&item_ability_id_) -
        reinterpret_cast<char*>(&x_)) + sizeof(item_ability_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAMsg_ItemAlert::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAMsg_ItemAlert)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 item_ability_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_item_ability_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_ability_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAMsg_ItemAlert)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAMsg_ItemAlert)
  return false;
#undef DO_
}

void CDOTAMsg_ItemAlert::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAMsg_ItemAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // optional int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  // optional int32 item_ability_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->item_ability_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAMsg_ItemAlert)
}

::google::protobuf::uint8* CDOTAMsg_ItemAlert::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAMsg_ItemAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // optional int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  // optional int32 item_ability_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->item_ability_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAMsg_ItemAlert)
  return target;
}

size_t CDOTAMsg_ItemAlert::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAMsg_ItemAlert)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 x = 1;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }

    // optional int32 y = 2;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }

    // optional int32 item_ability_id = 3;
    if (has_item_ability_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_ability_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAMsg_ItemAlert::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAMsg_ItemAlert)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAMsg_ItemAlert* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAMsg_ItemAlert>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAMsg_ItemAlert)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAMsg_ItemAlert)
    MergeFrom(*source);
  }
}

void CDOTAMsg_ItemAlert::MergeFrom(const CDOTAMsg_ItemAlert& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAMsg_ItemAlert)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      item_ability_id_ = from.item_ability_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAMsg_ItemAlert::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAMsg_ItemAlert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAMsg_ItemAlert::CopyFrom(const CDOTAMsg_ItemAlert& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAMsg_ItemAlert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAMsg_ItemAlert::IsInitialized() const {
  return true;
}

void CDOTAMsg_ItemAlert::Swap(CDOTAMsg_ItemAlert* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAMsg_ItemAlert::InternalSwap(CDOTAMsg_ItemAlert* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(item_ability_id_, other->item_ability_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAMsg_ItemAlert::GetMetadata() const {
  protobuf_dota_5fcommonmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fcommonmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAMsg_MapLine::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAMsg_MapLine::kXFieldNumber;
const int CDOTAMsg_MapLine::kYFieldNumber;
const int CDOTAMsg_MapLine::kInitialFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAMsg_MapLine::CDOTAMsg_MapLine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fcommonmessages_2eproto::scc_info_CDOTAMsg_MapLine.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAMsg_MapLine)
}
CDOTAMsg_MapLine::CDOTAMsg_MapLine(const CDOTAMsg_MapLine& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&initial_) -
    reinterpret_cast<char*>(&x_)) + sizeof(initial_));
  // @@protoc_insertion_point(copy_constructor:CDOTAMsg_MapLine)
}

void CDOTAMsg_MapLine::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&initial_) -
      reinterpret_cast<char*>(&x_)) + sizeof(initial_));
}

CDOTAMsg_MapLine::~CDOTAMsg_MapLine() {
  // @@protoc_insertion_point(destructor:CDOTAMsg_MapLine)
  SharedDtor();
}

void CDOTAMsg_MapLine::SharedDtor() {
}

void CDOTAMsg_MapLine::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAMsg_MapLine::descriptor() {
  ::protobuf_dota_5fcommonmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fcommonmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAMsg_MapLine& CDOTAMsg_MapLine::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fcommonmessages_2eproto::scc_info_CDOTAMsg_MapLine.base);
  return *internal_default_instance();
}


void CDOTAMsg_MapLine::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAMsg_MapLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&initial_) -
        reinterpret_cast<char*>(&x_)) + sizeof(initial_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAMsg_MapLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAMsg_MapLine)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool initial = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_initial();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &initial_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAMsg_MapLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAMsg_MapLine)
  return false;
#undef DO_
}

void CDOTAMsg_MapLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAMsg_MapLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // optional int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  // optional bool initial = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->initial(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAMsg_MapLine)
}

::google::protobuf::uint8* CDOTAMsg_MapLine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAMsg_MapLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // optional int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  // optional bool initial = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->initial(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAMsg_MapLine)
  return target;
}

size_t CDOTAMsg_MapLine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAMsg_MapLine)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 x = 1;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }

    // optional int32 y = 2;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }

    // optional bool initial = 3;
    if (has_initial()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAMsg_MapLine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAMsg_MapLine)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAMsg_MapLine* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAMsg_MapLine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAMsg_MapLine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAMsg_MapLine)
    MergeFrom(*source);
  }
}

void CDOTAMsg_MapLine::MergeFrom(const CDOTAMsg_MapLine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAMsg_MapLine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      initial_ = from.initial_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAMsg_MapLine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAMsg_MapLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAMsg_MapLine::CopyFrom(const CDOTAMsg_MapLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAMsg_MapLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAMsg_MapLine::IsInitialized() const {
  return true;
}

void CDOTAMsg_MapLine::Swap(CDOTAMsg_MapLine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAMsg_MapLine::InternalSwap(CDOTAMsg_MapLine* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(initial_, other->initial_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAMsg_MapLine::GetMetadata() const {
  protobuf_dota_5fcommonmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fcommonmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAMsg_WorldLine::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAMsg_WorldLine::kXFieldNumber;
const int CDOTAMsg_WorldLine::kYFieldNumber;
const int CDOTAMsg_WorldLine::kZFieldNumber;
const int CDOTAMsg_WorldLine::kInitialFieldNumber;
const int CDOTAMsg_WorldLine::kEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAMsg_WorldLine::CDOTAMsg_WorldLine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fcommonmessages_2eproto::scc_info_CDOTAMsg_WorldLine.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAMsg_WorldLine)
}
CDOTAMsg_WorldLine::CDOTAMsg_WorldLine(const CDOTAMsg_WorldLine& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_) -
    reinterpret_cast<char*>(&x_)) + sizeof(end_));
  // @@protoc_insertion_point(copy_constructor:CDOTAMsg_WorldLine)
}

void CDOTAMsg_WorldLine::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_) -
      reinterpret_cast<char*>(&x_)) + sizeof(end_));
}

CDOTAMsg_WorldLine::~CDOTAMsg_WorldLine() {
  // @@protoc_insertion_point(destructor:CDOTAMsg_WorldLine)
  SharedDtor();
}

void CDOTAMsg_WorldLine::SharedDtor() {
}

void CDOTAMsg_WorldLine::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAMsg_WorldLine::descriptor() {
  ::protobuf_dota_5fcommonmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fcommonmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAMsg_WorldLine& CDOTAMsg_WorldLine::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fcommonmessages_2eproto::scc_info_CDOTAMsg_WorldLine.base);
  return *internal_default_instance();
}


void CDOTAMsg_WorldLine::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAMsg_WorldLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&end_) -
        reinterpret_cast<char*>(&x_)) + sizeof(end_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAMsg_WorldLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAMsg_WorldLine)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool initial = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_initial();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &initial_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool end = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_end();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAMsg_WorldLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAMsg_WorldLine)
  return false;
#undef DO_
}

void CDOTAMsg_WorldLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAMsg_WorldLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // optional int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  // optional int32 z = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->z(), output);
  }

  // optional bool initial = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->initial(), output);
  }

  // optional bool end = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->end(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAMsg_WorldLine)
}

::google::protobuf::uint8* CDOTAMsg_WorldLine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAMsg_WorldLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // optional int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  // optional int32 z = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->z(), target);
  }

  // optional bool initial = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->initial(), target);
  }

  // optional bool end = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->end(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAMsg_WorldLine)
  return target;
}

size_t CDOTAMsg_WorldLine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAMsg_WorldLine)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 x = 1;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }

    // optional int32 y = 2;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }

    // optional int32 z = 3;
    if (has_z()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->z());
    }

    // optional bool initial = 4;
    if (has_initial()) {
      total_size += 1 + 1;
    }

    // optional bool end = 5;
    if (has_end()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAMsg_WorldLine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAMsg_WorldLine)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAMsg_WorldLine* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAMsg_WorldLine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAMsg_WorldLine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAMsg_WorldLine)
    MergeFrom(*source);
  }
}

void CDOTAMsg_WorldLine::MergeFrom(const CDOTAMsg_WorldLine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAMsg_WorldLine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      z_ = from.z_;
    }
    if (cached_has_bits & 0x00000008u) {
      initial_ = from.initial_;
    }
    if (cached_has_bits & 0x00000010u) {
      end_ = from.end_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAMsg_WorldLine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAMsg_WorldLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAMsg_WorldLine::CopyFrom(const CDOTAMsg_WorldLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAMsg_WorldLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAMsg_WorldLine::IsInitialized() const {
  return true;
}

void CDOTAMsg_WorldLine::Swap(CDOTAMsg_WorldLine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAMsg_WorldLine::InternalSwap(CDOTAMsg_WorldLine* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(initial_, other->initial_);
  swap(end_, other->end_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAMsg_WorldLine::GetMetadata() const {
  protobuf_dota_5fcommonmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fcommonmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAMsg_SendStatPopup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAMsg_SendStatPopup::kStyleFieldNumber;
const int CDOTAMsg_SendStatPopup::kStatStringsFieldNumber;
const int CDOTAMsg_SendStatPopup::kStatImagesFieldNumber;
const int CDOTAMsg_SendStatPopup::kStatImageTypesFieldNumber;
const int CDOTAMsg_SendStatPopup::kDurationFieldNumber;
const int CDOTAMsg_SendStatPopup::kUseHtmlFieldNumber;
const int CDOTAMsg_SendStatPopup::kMovieNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAMsg_SendStatPopup::CDOTAMsg_SendStatPopup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fcommonmessages_2eproto::scc_info_CDOTAMsg_SendStatPopup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAMsg_SendStatPopup)
}
CDOTAMsg_SendStatPopup::CDOTAMsg_SendStatPopup(const CDOTAMsg_SendStatPopup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      stat_strings_(from.stat_strings_),
      stat_images_(from.stat_images_),
      stat_image_types_(from.stat_image_types_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  movie_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_movie_name()) {
    movie_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.movie_name_);
  }
  ::memcpy(&style_, &from.style_,
    static_cast<size_t>(reinterpret_cast<char*>(&use_html_) -
    reinterpret_cast<char*>(&style_)) + sizeof(use_html_));
  // @@protoc_insertion_point(copy_constructor:CDOTAMsg_SendStatPopup)
}

void CDOTAMsg_SendStatPopup::SharedCtor() {
  movie_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&style_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&use_html_) -
      reinterpret_cast<char*>(&style_)) + sizeof(use_html_));
}

CDOTAMsg_SendStatPopup::~CDOTAMsg_SendStatPopup() {
  // @@protoc_insertion_point(destructor:CDOTAMsg_SendStatPopup)
  SharedDtor();
}

void CDOTAMsg_SendStatPopup::SharedDtor() {
  movie_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTAMsg_SendStatPopup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAMsg_SendStatPopup::descriptor() {
  ::protobuf_dota_5fcommonmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fcommonmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAMsg_SendStatPopup& CDOTAMsg_SendStatPopup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fcommonmessages_2eproto::scc_info_CDOTAMsg_SendStatPopup.base);
  return *internal_default_instance();
}


void CDOTAMsg_SendStatPopup::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAMsg_SendStatPopup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stat_strings_.Clear();
  stat_images_.Clear();
  stat_image_types_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    movie_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&style_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&use_html_) -
        reinterpret_cast<char*>(&style_)) + sizeof(use_html_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAMsg_SendStatPopup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAMsg_SendStatPopup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .EDOTAStatPopupTypes style = 1 [default = k_EDOTA_SPT_Textline];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::EDOTAStatPopupTypes_IsValid(value)) {
            set_style(static_cast< ::EDOTAStatPopupTypes >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string stat_strings = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_stat_strings()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stat_strings(this->stat_strings_size() - 1).data(),
            static_cast<int>(this->stat_strings(this->stat_strings_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAMsg_SendStatPopup.stat_strings");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 stat_images = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24u, input, this->mutable_stat_images())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_stat_images())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 stat_image_types = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32u, input, this->mutable_stat_image_types())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_stat_image_types())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float duration = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool use_html = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_use_html();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_html_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string movie_name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_movie_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->movie_name().data(), static_cast<int>(this->movie_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAMsg_SendStatPopup.movie_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAMsg_SendStatPopup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAMsg_SendStatPopup)
  return false;
#undef DO_
}

void CDOTAMsg_SendStatPopup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAMsg_SendStatPopup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .EDOTAStatPopupTypes style = 1 [default = k_EDOTA_SPT_Textline];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->style(), output);
  }

  // repeated string stat_strings = 2;
  for (int i = 0, n = this->stat_strings_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stat_strings(i).data(), static_cast<int>(this->stat_strings(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAMsg_SendStatPopup.stat_strings");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->stat_strings(i), output);
  }

  // repeated int32 stat_images = 3;
  for (int i = 0, n = this->stat_images_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->stat_images(i), output);
  }

  // repeated int32 stat_image_types = 4;
  for (int i = 0, n = this->stat_image_types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->stat_image_types(i), output);
  }

  // optional float duration = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->duration(), output);
  }

  // optional bool use_html = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->use_html(), output);
  }

  // optional string movie_name = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->movie_name().data(), static_cast<int>(this->movie_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAMsg_SendStatPopup.movie_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->movie_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAMsg_SendStatPopup)
}

::google::protobuf::uint8* CDOTAMsg_SendStatPopup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAMsg_SendStatPopup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .EDOTAStatPopupTypes style = 1 [default = k_EDOTA_SPT_Textline];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->style(), target);
  }

  // repeated string stat_strings = 2;
  for (int i = 0, n = this->stat_strings_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stat_strings(i).data(), static_cast<int>(this->stat_strings(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAMsg_SendStatPopup.stat_strings");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->stat_strings(i), target);
  }

  // repeated int32 stat_images = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(3, this->stat_images_, target);

  // repeated int32 stat_image_types = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(4, this->stat_image_types_, target);

  // optional float duration = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->duration(), target);
  }

  // optional bool use_html = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->use_html(), target);
  }

  // optional string movie_name = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->movie_name().data(), static_cast<int>(this->movie_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAMsg_SendStatPopup.movie_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->movie_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAMsg_SendStatPopup)
  return target;
}

size_t CDOTAMsg_SendStatPopup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAMsg_SendStatPopup)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string stat_strings = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->stat_strings_size());
  for (int i = 0, n = this->stat_strings_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->stat_strings(i));
  }

  // repeated int32 stat_images = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->stat_images_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->stat_images_size());
    total_size += data_size;
  }

  // repeated int32 stat_image_types = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->stat_image_types_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->stat_image_types_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional string movie_name = 7;
    if (has_movie_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->movie_name());
    }

    // optional .EDOTAStatPopupTypes style = 1 [default = k_EDOTA_SPT_Textline];
    if (has_style()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->style());
    }

    // optional float duration = 5;
    if (has_duration()) {
      total_size += 1 + 4;
    }

    // optional bool use_html = 6;
    if (has_use_html()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAMsg_SendStatPopup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAMsg_SendStatPopup)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAMsg_SendStatPopup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAMsg_SendStatPopup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAMsg_SendStatPopup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAMsg_SendStatPopup)
    MergeFrom(*source);
  }
}

void CDOTAMsg_SendStatPopup::MergeFrom(const CDOTAMsg_SendStatPopup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAMsg_SendStatPopup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stat_strings_.MergeFrom(from.stat_strings_);
  stat_images_.MergeFrom(from.stat_images_);
  stat_image_types_.MergeFrom(from.stat_image_types_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_movie_name();
      movie_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.movie_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      style_ = from.style_;
    }
    if (cached_has_bits & 0x00000004u) {
      duration_ = from.duration_;
    }
    if (cached_has_bits & 0x00000008u) {
      use_html_ = from.use_html_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAMsg_SendStatPopup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAMsg_SendStatPopup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAMsg_SendStatPopup::CopyFrom(const CDOTAMsg_SendStatPopup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAMsg_SendStatPopup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAMsg_SendStatPopup::IsInitialized() const {
  return true;
}

void CDOTAMsg_SendStatPopup::Swap(CDOTAMsg_SendStatPopup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAMsg_SendStatPopup::InternalSwap(CDOTAMsg_SendStatPopup* other) {
  using std::swap;
  stat_strings_.InternalSwap(CastToBase(&other->stat_strings_));
  stat_images_.InternalSwap(&other->stat_images_);
  stat_image_types_.InternalSwap(&other->stat_image_types_);
  movie_name_.Swap(&other->movie_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(style_, other->style_);
  swap(duration_, other->duration_);
  swap(use_html_, other->use_html_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAMsg_SendStatPopup::GetMetadata() const {
  protobuf_dota_5fcommonmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fcommonmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAMsg_DismissAllStatPopups::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAMsg_DismissAllStatPopups::kTimeDelayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAMsg_DismissAllStatPopups::CDOTAMsg_DismissAllStatPopups()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fcommonmessages_2eproto::scc_info_CDOTAMsg_DismissAllStatPopups.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAMsg_DismissAllStatPopups)
}
CDOTAMsg_DismissAllStatPopups::CDOTAMsg_DismissAllStatPopups(const CDOTAMsg_DismissAllStatPopups& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  time_delay_ = from.time_delay_;
  // @@protoc_insertion_point(copy_constructor:CDOTAMsg_DismissAllStatPopups)
}

void CDOTAMsg_DismissAllStatPopups::SharedCtor() {
  time_delay_ = 0;
}

CDOTAMsg_DismissAllStatPopups::~CDOTAMsg_DismissAllStatPopups() {
  // @@protoc_insertion_point(destructor:CDOTAMsg_DismissAllStatPopups)
  SharedDtor();
}

void CDOTAMsg_DismissAllStatPopups::SharedDtor() {
}

void CDOTAMsg_DismissAllStatPopups::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAMsg_DismissAllStatPopups::descriptor() {
  ::protobuf_dota_5fcommonmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fcommonmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAMsg_DismissAllStatPopups& CDOTAMsg_DismissAllStatPopups::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fcommonmessages_2eproto::scc_info_CDOTAMsg_DismissAllStatPopups.base);
  return *internal_default_instance();
}


void CDOTAMsg_DismissAllStatPopups::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAMsg_DismissAllStatPopups)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  time_delay_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAMsg_DismissAllStatPopups::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAMsg_DismissAllStatPopups)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float time_delay = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_time_delay();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &time_delay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAMsg_DismissAllStatPopups)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAMsg_DismissAllStatPopups)
  return false;
#undef DO_
}

void CDOTAMsg_DismissAllStatPopups::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAMsg_DismissAllStatPopups)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float time_delay = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->time_delay(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAMsg_DismissAllStatPopups)
}

::google::protobuf::uint8* CDOTAMsg_DismissAllStatPopups::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAMsg_DismissAllStatPopups)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float time_delay = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->time_delay(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAMsg_DismissAllStatPopups)
  return target;
}

size_t CDOTAMsg_DismissAllStatPopups::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAMsg_DismissAllStatPopups)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional float time_delay = 1;
  if (has_time_delay()) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAMsg_DismissAllStatPopups::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAMsg_DismissAllStatPopups)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAMsg_DismissAllStatPopups* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAMsg_DismissAllStatPopups>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAMsg_DismissAllStatPopups)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAMsg_DismissAllStatPopups)
    MergeFrom(*source);
  }
}

void CDOTAMsg_DismissAllStatPopups::MergeFrom(const CDOTAMsg_DismissAllStatPopups& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAMsg_DismissAllStatPopups)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_time_delay()) {
    set_time_delay(from.time_delay());
  }
}

void CDOTAMsg_DismissAllStatPopups::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAMsg_DismissAllStatPopups)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAMsg_DismissAllStatPopups::CopyFrom(const CDOTAMsg_DismissAllStatPopups& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAMsg_DismissAllStatPopups)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAMsg_DismissAllStatPopups::IsInitialized() const {
  return true;
}

void CDOTAMsg_DismissAllStatPopups::Swap(CDOTAMsg_DismissAllStatPopups* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAMsg_DismissAllStatPopups::InternalSwap(CDOTAMsg_DismissAllStatPopups* other) {
  using std::swap;
  swap(time_delay_, other->time_delay_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAMsg_DismissAllStatPopups::GetMetadata() const {
  protobuf_dota_5fcommonmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fcommonmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAMsg_CoachHUDPing::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAMsg_CoachHUDPing::kXFieldNumber;
const int CDOTAMsg_CoachHUDPing::kYFieldNumber;
const int CDOTAMsg_CoachHUDPing::kTgtpathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAMsg_CoachHUDPing::CDOTAMsg_CoachHUDPing()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fcommonmessages_2eproto::scc_info_CDOTAMsg_CoachHUDPing.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAMsg_CoachHUDPing)
}
CDOTAMsg_CoachHUDPing::CDOTAMsg_CoachHUDPing(const CDOTAMsg_CoachHUDPing& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tgtpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tgtpath()) {
    tgtpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tgtpath_);
  }
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:CDOTAMsg_CoachHUDPing)
}

void CDOTAMsg_CoachHUDPing::SharedCtor() {
  tgtpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

CDOTAMsg_CoachHUDPing::~CDOTAMsg_CoachHUDPing() {
  // @@protoc_insertion_point(destructor:CDOTAMsg_CoachHUDPing)
  SharedDtor();
}

void CDOTAMsg_CoachHUDPing::SharedDtor() {
  tgtpath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTAMsg_CoachHUDPing::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAMsg_CoachHUDPing::descriptor() {
  ::protobuf_dota_5fcommonmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fcommonmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAMsg_CoachHUDPing& CDOTAMsg_CoachHUDPing::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fcommonmessages_2eproto::scc_info_CDOTAMsg_CoachHUDPing.base);
  return *internal_default_instance();
}


void CDOTAMsg_CoachHUDPing::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAMsg_CoachHUDPing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    tgtpath_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&x_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAMsg_CoachHUDPing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAMsg_CoachHUDPing)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string tgtpath = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tgtpath()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tgtpath().data(), static_cast<int>(this->tgtpath().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAMsg_CoachHUDPing.tgtpath");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAMsg_CoachHUDPing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAMsg_CoachHUDPing)
  return false;
#undef DO_
}

void CDOTAMsg_CoachHUDPing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAMsg_CoachHUDPing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 x = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->x(), output);
  }

  // optional uint32 y = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->y(), output);
  }

  // optional string tgtpath = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tgtpath().data(), static_cast<int>(this->tgtpath().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAMsg_CoachHUDPing.tgtpath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->tgtpath(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAMsg_CoachHUDPing)
}

::google::protobuf::uint8* CDOTAMsg_CoachHUDPing::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAMsg_CoachHUDPing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 x = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->x(), target);
  }

  // optional uint32 y = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->y(), target);
  }

  // optional string tgtpath = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tgtpath().data(), static_cast<int>(this->tgtpath().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAMsg_CoachHUDPing.tgtpath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->tgtpath(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAMsg_CoachHUDPing)
  return target;
}

size_t CDOTAMsg_CoachHUDPing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAMsg_CoachHUDPing)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string tgtpath = 3;
    if (has_tgtpath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tgtpath());
    }

    // optional uint32 x = 1;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->x());
    }

    // optional uint32 y = 2;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->y());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAMsg_CoachHUDPing::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAMsg_CoachHUDPing)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAMsg_CoachHUDPing* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAMsg_CoachHUDPing>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAMsg_CoachHUDPing)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAMsg_CoachHUDPing)
    MergeFrom(*source);
  }
}

void CDOTAMsg_CoachHUDPing::MergeFrom(const CDOTAMsg_CoachHUDPing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAMsg_CoachHUDPing)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_tgtpath();
      tgtpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tgtpath_);
    }
    if (cached_has_bits & 0x00000002u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000004u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAMsg_CoachHUDPing::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAMsg_CoachHUDPing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAMsg_CoachHUDPing::CopyFrom(const CDOTAMsg_CoachHUDPing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAMsg_CoachHUDPing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAMsg_CoachHUDPing::IsInitialized() const {
  return true;
}

void CDOTAMsg_CoachHUDPing::Swap(CDOTAMsg_CoachHUDPing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAMsg_CoachHUDPing::InternalSwap(CDOTAMsg_CoachHUDPing* other) {
  using std::swap;
  tgtpath_.Swap(&other->tgtpath_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAMsg_CoachHUDPing::GetMetadata() const {
  protobuf_dota_5fcommonmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fcommonmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAMsg_UnitOrder::InitAsDefaultInstance() {
  ::_CDOTAMsg_UnitOrder_default_instance_._instance.get_mutable()->position_ = const_cast< ::CMsgVector*>(
      ::CMsgVector::internal_default_instance());
}
void CDOTAMsg_UnitOrder::clear_position() {
  if (position_ != NULL) position_->Clear();
  clear_has_position();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAMsg_UnitOrder::kIssuerFieldNumber;
const int CDOTAMsg_UnitOrder::kOrderTypeFieldNumber;
const int CDOTAMsg_UnitOrder::kUnitsFieldNumber;
const int CDOTAMsg_UnitOrder::kTargetIndexFieldNumber;
const int CDOTAMsg_UnitOrder::kAbilityIndexFieldNumber;
const int CDOTAMsg_UnitOrder::kPositionFieldNumber;
const int CDOTAMsg_UnitOrder::kQueueFieldNumber;
const int CDOTAMsg_UnitOrder::kSequenceNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAMsg_UnitOrder::CDOTAMsg_UnitOrder()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fcommonmessages_2eproto::scc_info_CDOTAMsg_UnitOrder.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAMsg_UnitOrder)
}
CDOTAMsg_UnitOrder::CDOTAMsg_UnitOrder(const CDOTAMsg_UnitOrder& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      units_(from.units_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::CMsgVector(*from.position_);
  } else {
    position_ = NULL;
  }
  ::memcpy(&order_type_, &from.order_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&issuer_) -
    reinterpret_cast<char*>(&order_type_)) + sizeof(issuer_));
  // @@protoc_insertion_point(copy_constructor:CDOTAMsg_UnitOrder)
}

void CDOTAMsg_UnitOrder::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sequence_number_) -
      reinterpret_cast<char*>(&position_)) + sizeof(sequence_number_));
  issuer_ = -1;
}

CDOTAMsg_UnitOrder::~CDOTAMsg_UnitOrder() {
  // @@protoc_insertion_point(destructor:CDOTAMsg_UnitOrder)
  SharedDtor();
}

void CDOTAMsg_UnitOrder::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
}

void CDOTAMsg_UnitOrder::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAMsg_UnitOrder::descriptor() {
  ::protobuf_dota_5fcommonmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fcommonmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAMsg_UnitOrder& CDOTAMsg_UnitOrder::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fcommonmessages_2eproto::scc_info_CDOTAMsg_UnitOrder.base);
  return *internal_default_instance();
}


void CDOTAMsg_UnitOrder::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAMsg_UnitOrder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  units_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(position_ != NULL);
    position_->Clear();
  }
  if (cached_has_bits & 126u) {
    ::memset(&order_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&sequence_number_) -
        reinterpret_cast<char*>(&order_type_)) + sizeof(sequence_number_));
    issuer_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAMsg_UnitOrder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAMsg_UnitOrder)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 issuer = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_issuer();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &issuer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .dotaunitorder_t order_type = 2 [default = DOTA_UNIT_ORDER_NONE];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::dotaunitorder_t_IsValid(value)) {
            set_order_type(static_cast< ::dotaunitorder_t >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 units = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24u, input, this->mutable_units())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_units())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 target_index = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_target_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ability_index = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_ability_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ability_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgVector position = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool queue = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_queue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &queue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 sequence_number = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_sequence_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sequence_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAMsg_UnitOrder)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAMsg_UnitOrder)
  return false;
#undef DO_
}

void CDOTAMsg_UnitOrder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAMsg_UnitOrder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 issuer = 1 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->issuer(), output);
  }

  // optional .dotaunitorder_t order_type = 2 [default = DOTA_UNIT_ORDER_NONE];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->order_type(), output);
  }

  // repeated int32 units = 3;
  for (int i = 0, n = this->units_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->units(i), output);
  }

  // optional int32 target_index = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->target_index(), output);
  }

  // optional int32 ability_index = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->ability_index(), output);
  }

  // optional .CMsgVector position = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_position(), output);
  }

  // optional bool queue = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->queue(), output);
  }

  // optional int32 sequence_number = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->sequence_number(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAMsg_UnitOrder)
}

::google::protobuf::uint8* CDOTAMsg_UnitOrder::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAMsg_UnitOrder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 issuer = 1 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->issuer(), target);
  }

  // optional .dotaunitorder_t order_type = 2 [default = DOTA_UNIT_ORDER_NONE];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->order_type(), target);
  }

  // repeated int32 units = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(3, this->units_, target);

  // optional int32 target_index = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->target_index(), target);
  }

  // optional int32 ability_index = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->ability_index(), target);
  }

  // optional .CMsgVector position = 6;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_position(), deterministic, target);
  }

  // optional bool queue = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->queue(), target);
  }

  // optional int32 sequence_number = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->sequence_number(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAMsg_UnitOrder)
  return target;
}

size_t CDOTAMsg_UnitOrder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAMsg_UnitOrder)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 units = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->units_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->units_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 127u) {
    // optional .CMsgVector position = 6;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *position_);
    }

    // optional .dotaunitorder_t order_type = 2 [default = DOTA_UNIT_ORDER_NONE];
    if (has_order_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->order_type());
    }

    // optional int32 target_index = 4;
    if (has_target_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_index());
    }

    // optional int32 ability_index = 5;
    if (has_ability_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ability_index());
    }

    // optional bool queue = 7;
    if (has_queue()) {
      total_size += 1 + 1;
    }

    // optional int32 sequence_number = 8;
    if (has_sequence_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sequence_number());
    }

    // optional sint32 issuer = 1 [default = -1];
    if (has_issuer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->issuer());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAMsg_UnitOrder::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAMsg_UnitOrder)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAMsg_UnitOrder* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAMsg_UnitOrder>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAMsg_UnitOrder)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAMsg_UnitOrder)
    MergeFrom(*source);
  }
}

void CDOTAMsg_UnitOrder::MergeFrom(const CDOTAMsg_UnitOrder& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAMsg_UnitOrder)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  units_.MergeFrom(from.units_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_position()->::CMsgVector::MergeFrom(from.position());
    }
    if (cached_has_bits & 0x00000002u) {
      order_type_ = from.order_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      target_index_ = from.target_index_;
    }
    if (cached_has_bits & 0x00000008u) {
      ability_index_ = from.ability_index_;
    }
    if (cached_has_bits & 0x00000010u) {
      queue_ = from.queue_;
    }
    if (cached_has_bits & 0x00000020u) {
      sequence_number_ = from.sequence_number_;
    }
    if (cached_has_bits & 0x00000040u) {
      issuer_ = from.issuer_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAMsg_UnitOrder::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAMsg_UnitOrder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAMsg_UnitOrder::CopyFrom(const CDOTAMsg_UnitOrder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAMsg_UnitOrder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAMsg_UnitOrder::IsInitialized() const {
  return true;
}

void CDOTAMsg_UnitOrder::Swap(CDOTAMsg_UnitOrder* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAMsg_UnitOrder::InternalSwap(CDOTAMsg_UnitOrder* other) {
  using std::swap;
  units_.InternalSwap(&other->units_);
  swap(position_, other->position_);
  swap(order_type_, other->order_type_);
  swap(target_index_, other->target_index_);
  swap(ability_index_, other->ability_index_);
  swap(queue_, other->queue_);
  swap(sequence_number_, other->sequence_number_);
  swap(issuer_, other->issuer_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAMsg_UnitOrder::GetMetadata() const {
  protobuf_dota_5fcommonmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fcommonmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAMsg_LocationPing* Arena::CreateMaybeMessage< ::CDOTAMsg_LocationPing >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAMsg_LocationPing >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAMsg_ItemAlert* Arena::CreateMaybeMessage< ::CDOTAMsg_ItemAlert >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAMsg_ItemAlert >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAMsg_MapLine* Arena::CreateMaybeMessage< ::CDOTAMsg_MapLine >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAMsg_MapLine >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAMsg_WorldLine* Arena::CreateMaybeMessage< ::CDOTAMsg_WorldLine >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAMsg_WorldLine >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAMsg_SendStatPopup* Arena::CreateMaybeMessage< ::CDOTAMsg_SendStatPopup >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAMsg_SendStatPopup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAMsg_DismissAllStatPopups* Arena::CreateMaybeMessage< ::CDOTAMsg_DismissAllStatPopups >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAMsg_DismissAllStatPopups >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAMsg_CoachHUDPing* Arena::CreateMaybeMessage< ::CDOTAMsg_CoachHUDPing >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAMsg_CoachHUDPing >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAMsg_UnitOrder* Arena::CreateMaybeMessage< ::CDOTAMsg_UnitOrder >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAMsg_UnitOrder >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
