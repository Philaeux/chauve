// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_usermessages.proto

#include "dota_usermessages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_dota_5fcommonmessages_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fcommonmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAMsg_CoachHUDPing;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fcommonmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAMsg_DismissAllStatPopups;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fcommonmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAMsg_ItemAlert;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fcommonmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAMsg_LocationPing;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fcommonmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAMsg_MapLine;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fcommonmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAMsg_SendStatPopup;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fcommonmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAMsg_WorldLine;
}  // namespace protobuf_dota_5fcommonmessages_2eproto
namespace protobuf_dota_5fshared_5fenums_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fshared_5fenums_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDOTACombatLogEntry;
}  // namespace protobuf_dota_5fshared_5fenums_2eproto
namespace protobuf_dota_5fusermessages_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fusermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAResponseQuerySerialized_Fact;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fusermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_BoosterStatePlayer;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fusermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_CompendiumStatePlayer;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fusermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_CourierKilledAlert_LostItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fusermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fusermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_PredictionResult_Prediction;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fusermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_StatsHeroLookup;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fusermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_StatsHeroPositionInfo_PositionPair;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fusermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fusermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_StatsPlayerKillShare;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fusermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fusermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_UnitEvent_AddGesture;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fusermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_UnitEvent_BloodImpact;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fusermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_UnitEvent_FadeGesture;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fusermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_UnitEvent_RemoveGesture;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fusermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_UnitEvent_Speech;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fusermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_UnitEvent_SpeechMute;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fusermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgHeroAbilityStat;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fusermessages_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAResponseQuerySerialized;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fusermessages_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CDOTASpeechMatchOnClient;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fusermessages_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAUserMsg_MiniKillCamInfo_Attacker;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fusermessages_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAUserMsg_StatsHeroMinuteDetails;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fusermessages_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAUserMsg_StatsHeroPositionInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fusermessages_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAUserMsg_StatsKillDetails;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fusermessages_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fusermessages_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CMsgCombatAnalyzerPlayerStat;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dota_5fusermessages_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_CDOTAUserMsg_StatsTeamMinuteDetails;
}  // namespace protobuf_dota_5fusermessages_2eproto
namespace protobuf_networkbasetypes_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_networkbasetypes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgVector2D;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_networkbasetypes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgVector;
}  // namespace protobuf_networkbasetypes_2eproto
class CDOTAUserMsg_AIDebugLineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_AIDebugLine>
      _instance;
} _CDOTAUserMsg_AIDebugLine_default_instance_;
class CDOTAUserMsg_PingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_Ping>
      _instance;
} _CDOTAUserMsg_Ping_default_instance_;
class CDOTAUserMsg_SwapVerifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_SwapVerify>
      _instance;
} _CDOTAUserMsg_SwapVerify_default_instance_;
class CDOTAUserMsg_ChatEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_ChatEvent>
      _instance;
} _CDOTAUserMsg_ChatEvent_default_instance_;
class CDOTAUserMsg_BotChatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_BotChat>
      _instance;
} _CDOTAUserMsg_BotChat_default_instance_;
class CDOTAUserMsg_CombatHeroPositionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_CombatHeroPositions>
      _instance;
} _CDOTAUserMsg_CombatHeroPositions_default_instance_;
class CDOTAUserMsg_CombatLogBulkDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_CombatLogBulkData>
      _instance;
} _CDOTAUserMsg_CombatLogBulkData_default_instance_;
class CDOTAUserMsg_MiniKillCamInfo_Attacker_AbilityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability>
      _instance;
} _CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability_default_instance_;
class CDOTAUserMsg_MiniKillCamInfo_AttackerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_MiniKillCamInfo_Attacker>
      _instance;
} _CDOTAUserMsg_MiniKillCamInfo_Attacker_default_instance_;
class CDOTAUserMsg_MiniKillCamInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_MiniKillCamInfo>
      _instance;
} _CDOTAUserMsg_MiniKillCamInfo_default_instance_;
class CDOTAUserMsg_GlobalLightColorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_GlobalLightColor>
      _instance;
} _CDOTAUserMsg_GlobalLightColor_default_instance_;
class CDOTAUserMsg_GlobalLightDirectionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_GlobalLightDirection>
      _instance;
} _CDOTAUserMsg_GlobalLightDirection_default_instance_;
class CDOTAUserMsg_LocationPingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_LocationPing>
      _instance;
} _CDOTAUserMsg_LocationPing_default_instance_;
class CDOTAUserMsg_ItemAlertDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_ItemAlert>
      _instance;
} _CDOTAUserMsg_ItemAlert_default_instance_;
class CDOTAUserMsg_EnemyItemAlertDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_EnemyItemAlert>
      _instance;
} _CDOTAUserMsg_EnemyItemAlert_default_instance_;
class CDOTAUserMsg_ModifierAlertDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_ModifierAlert>
      _instance;
} _CDOTAUserMsg_ModifierAlert_default_instance_;
class CDOTAUserMsg_HPManaAlertDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_HPManaAlert>
      _instance;
} _CDOTAUserMsg_HPManaAlert_default_instance_;
class CDOTAUserMsg_GlyphAlertDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_GlyphAlert>
      _instance;
} _CDOTAUserMsg_GlyphAlert_default_instance_;
class CDOTAUserMsg_WillPurchaseAlertDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_WillPurchaseAlert>
      _instance;
} _CDOTAUserMsg_WillPurchaseAlert_default_instance_;
class CDOTAUserMsg_EmptyTeleportAlertDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_EmptyTeleportAlert>
      _instance;
} _CDOTAUserMsg_EmptyTeleportAlert_default_instance_;
class CDOTAUserMsg_BuyBackStateAlertDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_BuyBackStateAlert>
      _instance;
} _CDOTAUserMsg_BuyBackStateAlert_default_instance_;
class CDOTAUserMsg_QuickBuyAlertDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_QuickBuyAlert>
      _instance;
} _CDOTAUserMsg_QuickBuyAlert_default_instance_;
class CDOTAUserMsg_CourierKilledAlert_LostItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_CourierKilledAlert_LostItem>
      _instance;
} _CDOTAUserMsg_CourierKilledAlert_LostItem_default_instance_;
class CDOTAUserMsg_CourierKilledAlertDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_CourierKilledAlert>
      _instance;
} _CDOTAUserMsg_CourierKilledAlert_default_instance_;
class CDOTAUserMsg_MinimapEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_MinimapEvent>
      _instance;
} _CDOTAUserMsg_MinimapEvent_default_instance_;
class CDOTAUserMsg_MapLineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_MapLine>
      _instance;
} _CDOTAUserMsg_MapLine_default_instance_;
class CDOTAUserMsg_MinimapDebugPointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_MinimapDebugPoint>
      _instance;
} _CDOTAUserMsg_MinimapDebugPoint_default_instance_;
class CDOTAUserMsg_CreateLinearProjectileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_CreateLinearProjectile>
      _instance;
} _CDOTAUserMsg_CreateLinearProjectile_default_instance_;
class CDOTAUserMsg_DestroyLinearProjectileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_DestroyLinearProjectile>
      _instance;
} _CDOTAUserMsg_DestroyLinearProjectile_default_instance_;
class CDOTAUserMsg_DodgeTrackingProjectilesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_DodgeTrackingProjectiles>
      _instance;
} _CDOTAUserMsg_DodgeTrackingProjectiles_default_instance_;
class CDOTAUserMsg_SpectatorPlayerClickDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_SpectatorPlayerClick>
      _instance;
} _CDOTAUserMsg_SpectatorPlayerClick_default_instance_;
class CDOTAUserMsg_SpectatorPlayerUnitOrdersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_SpectatorPlayerUnitOrders>
      _instance;
} _CDOTAUserMsg_SpectatorPlayerUnitOrders_default_instance_;
class CDOTAUserMsg_NevermoreRequiemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_NevermoreRequiem>
      _instance;
} _CDOTAUserMsg_NevermoreRequiem_default_instance_;
class CDOTAUserMsg_InvalidCommandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_InvalidCommand>
      _instance;
} _CDOTAUserMsg_InvalidCommand_default_instance_;
class CDOTAUserMsg_HudErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_HudError>
      _instance;
} _CDOTAUserMsg_HudError_default_instance_;
class CDOTAUserMsg_SharedCooldownDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_SharedCooldown>
      _instance;
} _CDOTAUserMsg_SharedCooldown_default_instance_;
class CDOTAUserMsg_SetNextAutobuyItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_SetNextAutobuyItem>
      _instance;
} _CDOTAUserMsg_SetNextAutobuyItem_default_instance_;
class CDOTAUserMsg_HalloweenDropsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_HalloweenDrops>
      _instance;
} _CDOTAUserMsg_HalloweenDrops_default_instance_;
class CDOTAUserMsg_PredictionResult_PredictionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_PredictionResult_Prediction>
      _instance;
} _CDOTAUserMsg_PredictionResult_Prediction_default_instance_;
class CDOTAUserMsg_PredictionResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_PredictionResult>
      _instance;
} _CDOTAUserMsg_PredictionResult_default_instance_;
class CDOTAResponseQuerySerialized_FactDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAResponseQuerySerialized_Fact>
      _instance;
} _CDOTAResponseQuerySerialized_Fact_default_instance_;
class CDOTAResponseQuerySerializedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAResponseQuerySerialized>
      _instance;
} _CDOTAResponseQuerySerialized_default_instance_;
class CDOTASpeechMatchOnClientDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTASpeechMatchOnClient>
      _instance;
} _CDOTASpeechMatchOnClient_default_instance_;
class CDOTAUserMsg_UnitEvent_SpeechDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_UnitEvent_Speech>
      _instance;
} _CDOTAUserMsg_UnitEvent_Speech_default_instance_;
class CDOTAUserMsg_UnitEvent_SpeechMuteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_UnitEvent_SpeechMute>
      _instance;
} _CDOTAUserMsg_UnitEvent_SpeechMute_default_instance_;
class CDOTAUserMsg_UnitEvent_AddGestureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_UnitEvent_AddGesture>
      _instance;
} _CDOTAUserMsg_UnitEvent_AddGesture_default_instance_;
class CDOTAUserMsg_UnitEvent_RemoveGestureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_UnitEvent_RemoveGesture>
      _instance;
} _CDOTAUserMsg_UnitEvent_RemoveGesture_default_instance_;
class CDOTAUserMsg_UnitEvent_BloodImpactDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_UnitEvent_BloodImpact>
      _instance;
} _CDOTAUserMsg_UnitEvent_BloodImpact_default_instance_;
class CDOTAUserMsg_UnitEvent_FadeGestureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_UnitEvent_FadeGesture>
      _instance;
} _CDOTAUserMsg_UnitEvent_FadeGesture_default_instance_;
class CDOTAUserMsg_UnitEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_UnitEvent>
      _instance;
} _CDOTAUserMsg_UnitEvent_default_instance_;
class CDOTAUserMsg_ItemPurchasedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_ItemPurchased>
      _instance;
} _CDOTAUserMsg_ItemPurchased_default_instance_;
class CDOTAUserMsg_ItemSoldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_ItemSold>
      _instance;
} _CDOTAUserMsg_ItemSold_default_instance_;
class CDOTAUserMsg_ItemFoundDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_ItemFound>
      _instance;
} _CDOTAUserMsg_ItemFound_default_instance_;
class CDOTAUserMsg_OverheadEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_OverheadEvent>
      _instance;
} _CDOTAUserMsg_OverheadEvent_default_instance_;
class CDOTAUserMsg_TutorialTipInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_TutorialTipInfo>
      _instance;
} _CDOTAUserMsg_TutorialTipInfo_default_instance_;
class CDOTAUserMsg_TutorialFinishDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_TutorialFinish>
      _instance;
} _CDOTAUserMsg_TutorialFinish_default_instance_;
class CDOTAUserMsg_TutorialMinimapPositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_TutorialMinimapPosition>
      _instance;
} _CDOTAUserMsg_TutorialMinimapPosition_default_instance_;
class CDOTAUserMsg_SendGenericToolTipDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_SendGenericToolTip>
      _instance;
} _CDOTAUserMsg_SendGenericToolTip_default_instance_;
class CDOTAUserMsg_WorldLineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_WorldLine>
      _instance;
} _CDOTAUserMsg_WorldLine_default_instance_;
class CDOTAUserMsg_ChatWheelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_ChatWheel>
      _instance;
} _CDOTAUserMsg_ChatWheel_default_instance_;
class CDOTAUserMsg_ReceivedXmasGiftDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_ReceivedXmasGift>
      _instance;
} _CDOTAUserMsg_ReceivedXmasGift_default_instance_;
class CDOTAUserMsg_ShowSurveyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_ShowSurvey>
      _instance;
} _CDOTAUserMsg_ShowSurvey_default_instance_;
class CDOTAUserMsg_UpdateSharedContentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_UpdateSharedContent>
      _instance;
} _CDOTAUserMsg_UpdateSharedContent_default_instance_;
class CDOTAUserMsg_TutorialRequestExpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_TutorialRequestExp>
      _instance;
} _CDOTAUserMsg_TutorialRequestExp_default_instance_;
class CDOTAUserMsg_TutorialFadeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_TutorialFade>
      _instance;
} _CDOTAUserMsg_TutorialFade_default_instance_;
class CDOTAUserMsg_TutorialPingMinimapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_TutorialPingMinimap>
      _instance;
} _CDOTAUserMsg_TutorialPingMinimap_default_instance_;
class CDOTAUserMsg_GamerulesStateChangedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_GamerulesStateChanged>
      _instance;
} _CDOTAUserMsg_GamerulesStateChanged_default_instance_;
class CDOTAUserMsg_AddQuestLogEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_AddQuestLogEntry>
      _instance;
} _CDOTAUserMsg_AddQuestLogEntry_default_instance_;
class CDOTAUserMsg_SendStatPopupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_SendStatPopup>
      _instance;
} _CDOTAUserMsg_SendStatPopup_default_instance_;
class CDOTAUserMsg_DismissAllStatPopupsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_DismissAllStatPopups>
      _instance;
} _CDOTAUserMsg_DismissAllStatPopups_default_instance_;
class CDOTAUserMsg_SendRoshanSpectatorPhaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_SendRoshanSpectatorPhase>
      _instance;
} _CDOTAUserMsg_SendRoshanSpectatorPhase_default_instance_;
class CDOTAUserMsg_SendRoshanPopupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_SendRoshanPopup>
      _instance;
} _CDOTAUserMsg_SendRoshanPopup_default_instance_;
class CDOTAUserMsg_SendFinalGoldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_SendFinalGold>
      _instance;
} _CDOTAUserMsg_SendFinalGold_default_instance_;
class CDOTAUserMsg_CustomMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_CustomMsg>
      _instance;
} _CDOTAUserMsg_CustomMsg_default_instance_;
class CDOTAUserMsg_CoachHUDPingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_CoachHUDPing>
      _instance;
} _CDOTAUserMsg_CoachHUDPing_default_instance_;
class CDOTAUserMsg_ClientLoadGridNavDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_ClientLoadGridNav>
      _instance;
} _CDOTAUserMsg_ClientLoadGridNav_default_instance_;
class CDOTAUserMsg_TE_ProjectileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_TE_Projectile>
      _instance;
} _CDOTAUserMsg_TE_Projectile_default_instance_;
class CDOTAUserMsg_TE_ProjectileLocDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_TE_ProjectileLoc>
      _instance;
} _CDOTAUserMsg_TE_ProjectileLoc_default_instance_;
class CDOTAUserMsg_TE_DestroyProjectileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_TE_DestroyProjectile>
      _instance;
} _CDOTAUserMsg_TE_DestroyProjectile_default_instance_;
class CDOTAUserMsg_TE_DotaBloodImpactDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_TE_DotaBloodImpact>
      _instance;
} _CDOTAUserMsg_TE_DotaBloodImpact_default_instance_;
class CDOTAUserMsg_AbilityPingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_AbilityPing>
      _instance;
} _CDOTAUserMsg_AbilityPing_default_instance_;
class CDOTAUserMsg_TE_UnitAnimationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_TE_UnitAnimation>
      _instance;
} _CDOTAUserMsg_TE_UnitAnimation_default_instance_;
class CDOTAUserMsg_TE_UnitAnimationEndDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_TE_UnitAnimationEnd>
      _instance;
} _CDOTAUserMsg_TE_UnitAnimationEnd_default_instance_;
class CDOTAUserMsg_ShowGenericPopupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_ShowGenericPopup>
      _instance;
} _CDOTAUserMsg_ShowGenericPopup_default_instance_;
class CDOTAUserMsg_VoteStartDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_VoteStart>
      _instance;
} _CDOTAUserMsg_VoteStart_default_instance_;
class CDOTAUserMsg_VoteUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_VoteUpdate>
      _instance;
} _CDOTAUserMsg_VoteUpdate_default_instance_;
class CDOTAUserMsg_VoteEndDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_VoteEnd>
      _instance;
} _CDOTAUserMsg_VoteEnd_default_instance_;
class CDOTAUserMsg_BoosterStatePlayerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_BoosterStatePlayer>
      _instance;
} _CDOTAUserMsg_BoosterStatePlayer_default_instance_;
class CDOTAUserMsg_BoosterStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_BoosterState>
      _instance;
} _CDOTAUserMsg_BoosterState_default_instance_;
class CDOTAUserMsg_PlayerMMRDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_PlayerMMR>
      _instance;
} _CDOTAUserMsg_PlayerMMR_default_instance_;
class CDOTAUserMsg_AbilityStealDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_AbilitySteal>
      _instance;
} _CDOTAUserMsg_AbilitySteal_default_instance_;
class CDOTAUserMsg_StatsHeroLookupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_StatsHeroLookup>
      _instance;
} _CDOTAUserMsg_StatsHeroLookup_default_instance_;
class CDOTAUserMsg_StatsHeroPositionInfo_PositionPairDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_StatsHeroPositionInfo_PositionPair>
      _instance;
} _CDOTAUserMsg_StatsHeroPositionInfo_PositionPair_default_instance_;
class CDOTAUserMsg_StatsHeroPositionInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_StatsHeroPositionInfo>
      _instance;
} _CDOTAUserMsg_StatsHeroPositionInfo_default_instance_;
class CDOTAUserMsg_StatsHeroMinuteDetailsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_StatsHeroMinuteDetails>
      _instance;
} _CDOTAUserMsg_StatsHeroMinuteDetails_default_instance_;
class CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformanceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance>
      _instance;
} _CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance_default_instance_;
class CDOTAUserMsg_StatsTeamMinuteDetailsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_StatsTeamMinuteDetails>
      _instance;
} _CDOTAUserMsg_StatsTeamMinuteDetails_default_instance_;
class CDOTAUserMsg_StatsPlayerKillShareDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_StatsPlayerKillShare>
      _instance;
} _CDOTAUserMsg_StatsPlayerKillShare_default_instance_;
class CDOTAUserMsg_StatsKillDetailsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_StatsKillDetails>
      _instance;
} _CDOTAUserMsg_StatsKillDetails_default_instance_;
class CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetailsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails>
      _instance;
} _CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails_default_instance_;
class CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetailsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails>
      _instance;
} _CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails_default_instance_;
class CDOTAUserMsg_StatsMatchDetailsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_StatsMatchDetails>
      _instance;
} _CDOTAUserMsg_StatsMatchDetails_default_instance_;
class CDOTAUserMsg_MiniTauntDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_MiniTaunt>
      _instance;
} _CDOTAUserMsg_MiniTaunt_default_instance_;
class CDOTAUserMsg_SpeechBubbleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_SpeechBubble>
      _instance;
} _CDOTAUserMsg_SpeechBubble_default_instance_;
class CDOTAUserMsg_CustomHeaderMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_CustomHeaderMessage>
      _instance;
} _CDOTAUserMsg_CustomHeaderMessage_default_instance_;
class CMsgHeroAbilityStatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgHeroAbilityStat>
      _instance;
} _CMsgHeroAbilityStat_default_instance_;
class CMsgCombatAnalyzerPlayerStatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCombatAnalyzerPlayerStat>
      _instance;
} _CMsgCombatAnalyzerPlayerStat_default_instance_;
class CMsgCombatAnalyzerStatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCombatAnalyzerStats>
      _instance;
} _CMsgCombatAnalyzerStats_default_instance_;
class CDOTAUserMsg_BeastChatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_BeastChat>
      _instance;
} _CDOTAUserMsg_BeastChat_default_instance_;
class CDOTAUserMsg_CustomHudElement_CreateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_CustomHudElement_Create>
      _instance;
} _CDOTAUserMsg_CustomHudElement_Create_default_instance_;
class CDOTAUserMsg_CustomHudElement_ModifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_CustomHudElement_Modify>
      _instance;
} _CDOTAUserMsg_CustomHudElement_Modify_default_instance_;
class CDOTAUserMsg_CustomHudElement_DestroyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_CustomHudElement_Destroy>
      _instance;
} _CDOTAUserMsg_CustomHudElement_Destroy_default_instance_;
class CDOTAUserMsg_CompendiumStatePlayerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_CompendiumStatePlayer>
      _instance;
} _CDOTAUserMsg_CompendiumStatePlayer_default_instance_;
class CDOTAUserMsg_CompendiumStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_CompendiumState>
      _instance;
} _CDOTAUserMsg_CompendiumState_default_instance_;
class CDOTAUserMsg_ProjectionAbilityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_ProjectionAbility>
      _instance;
} _CDOTAUserMsg_ProjectionAbility_default_instance_;
class CDOTAUserMsg_ProjectionEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_ProjectionEvent>
      _instance;
} _CDOTAUserMsg_ProjectionEvent_default_instance_;
class CDOTAUserMsg_XPAlertDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_XPAlert>
      _instance;
} _CDOTAUserMsg_XPAlert_default_instance_;
class CDOTAUserMsg_UpdateQuestProgressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_UpdateQuestProgress>
      _instance;
} _CDOTAUserMsg_UpdateQuestProgress_default_instance_;
class CDOTAUserMsg_QuestStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_QuestStatus>
      _instance;
} _CDOTAUserMsg_QuestStatus_default_instance_;
class CDOTAUserMsg_SuggestHeroPickDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_SuggestHeroPick>
      _instance;
} _CDOTAUserMsg_SuggestHeroPick_default_instance_;
class CDOTAUserMsg_SuggestHeroRoleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_SuggestHeroRole>
      _instance;
} _CDOTAUserMsg_SuggestHeroRole_default_instance_;
class CDOTAUserMsg_KillcamDamageTakenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_KillcamDamageTaken>
      _instance;
} _CDOTAUserMsg_KillcamDamageTaken_default_instance_;
class CDOTAUserMsg_SelectPenaltyGoldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_SelectPenaltyGold>
      _instance;
} _CDOTAUserMsg_SelectPenaltyGold_default_instance_;
class CDOTAUserMsg_RollDiceResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_RollDiceResult>
      _instance;
} _CDOTAUserMsg_RollDiceResult_default_instance_;
class CDOTAUserMsg_FlipCoinResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_FlipCoinResult>
      _instance;
} _CDOTAUserMsg_FlipCoinResult_default_instance_;
class CDOTAUserMessage_RequestItemSuggestionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMessage_RequestItemSuggestions>
      _instance;
} _CDOTAUserMessage_RequestItemSuggestions_default_instance_;
class CDOTAUserMessage_TeamCaptainChangedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMessage_TeamCaptainChanged>
      _instance;
} _CDOTAUserMessage_TeamCaptainChanged_default_instance_;
class CDOTAUserMsg_ChatWheelCooldownDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_ChatWheelCooldown>
      _instance;
} _CDOTAUserMsg_ChatWheelCooldown_default_instance_;
class CDOTAUserMsg_HeroRelicProgressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_HeroRelicProgress>
      _instance;
} _CDOTAUserMsg_HeroRelicProgress_default_instance_;
class CDOTAUserMsg_AbilityDraftRequestAbilityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_AbilityDraftRequestAbility>
      _instance;
} _CDOTAUserMsg_AbilityDraftRequestAbility_default_instance_;
class CDOTAUserMsg_DamageReportDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_DamageReport>
      _instance;
} _CDOTAUserMsg_DamageReport_default_instance_;
class CDOTAUserMsg_SalutePlayerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_SalutePlayer>
      _instance;
} _CDOTAUserMsg_SalutePlayer_default_instance_;
class CDOTAUserMsg_TipAlertDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_TipAlert>
      _instance;
} _CDOTAUserMsg_TipAlert_default_instance_;
class CDOTAUserMsg_ReplaceQueryUnitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_ReplaceQueryUnit>
      _instance;
} _CDOTAUserMsg_ReplaceQueryUnit_default_instance_;
namespace protobuf_dota_5fusermessages_2eproto {
static void InitDefaultsCDOTAUserMsg_AIDebugLine() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_AIDebugLine_default_instance_;
    new (ptr) ::CDOTAUserMsg_AIDebugLine();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_AIDebugLine::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_AIDebugLine =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_AIDebugLine}, {}};

static void InitDefaultsCDOTAUserMsg_Ping() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_Ping_default_instance_;
    new (ptr) ::CDOTAUserMsg_Ping();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_Ping::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_Ping =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_Ping}, {}};

static void InitDefaultsCDOTAUserMsg_SwapVerify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_SwapVerify_default_instance_;
    new (ptr) ::CDOTAUserMsg_SwapVerify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_SwapVerify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_SwapVerify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_SwapVerify}, {}};

static void InitDefaultsCDOTAUserMsg_ChatEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_ChatEvent_default_instance_;
    new (ptr) ::CDOTAUserMsg_ChatEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_ChatEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_ChatEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_ChatEvent}, {}};

static void InitDefaultsCDOTAUserMsg_BotChat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_BotChat_default_instance_;
    new (ptr) ::CDOTAUserMsg_BotChat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_BotChat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_BotChat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_BotChat}, {}};

static void InitDefaultsCDOTAUserMsg_CombatHeroPositions() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_CombatHeroPositions_default_instance_;
    new (ptr) ::CDOTAUserMsg_CombatHeroPositions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_CombatHeroPositions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAUserMsg_CombatHeroPositions =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCDOTAUserMsg_CombatHeroPositions}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgVector2D.base,}};

static void InitDefaultsCDOTAUserMsg_CombatLogBulkData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_CombatLogBulkData_default_instance_;
    new (ptr) ::CDOTAUserMsg_CombatLogBulkData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_CombatLogBulkData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAUserMsg_CombatLogBulkData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCDOTAUserMsg_CombatLogBulkData}, {
      &protobuf_dota_5fshared_5fenums_2eproto::scc_info_CMsgDOTACombatLogEntry.base,}};

static void InitDefaultsCDOTAUserMsg_MiniKillCamInfo_Attacker_Ability() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability_default_instance_;
    new (ptr) ::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_MiniKillCamInfo_Attacker_Ability}, {}};

static void InitDefaultsCDOTAUserMsg_MiniKillCamInfo_Attacker() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_MiniKillCamInfo_Attacker_default_instance_;
    new (ptr) ::CDOTAUserMsg_MiniKillCamInfo_Attacker();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_MiniKillCamInfo_Attacker::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAUserMsg_MiniKillCamInfo_Attacker =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCDOTAUserMsg_MiniKillCamInfo_Attacker}, {
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability.base,}};

static void InitDefaultsCDOTAUserMsg_MiniKillCamInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_MiniKillCamInfo_default_instance_;
    new (ptr) ::CDOTAUserMsg_MiniKillCamInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_MiniKillCamInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAUserMsg_MiniKillCamInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCDOTAUserMsg_MiniKillCamInfo}, {
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_MiniKillCamInfo_Attacker.base,}};

static void InitDefaultsCDOTAUserMsg_GlobalLightColor() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_GlobalLightColor_default_instance_;
    new (ptr) ::CDOTAUserMsg_GlobalLightColor();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_GlobalLightColor::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_GlobalLightColor =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_GlobalLightColor}, {}};

static void InitDefaultsCDOTAUserMsg_GlobalLightDirection() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_GlobalLightDirection_default_instance_;
    new (ptr) ::CDOTAUserMsg_GlobalLightDirection();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_GlobalLightDirection::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAUserMsg_GlobalLightDirection =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCDOTAUserMsg_GlobalLightDirection}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgVector.base,}};

static void InitDefaultsCDOTAUserMsg_LocationPing() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_LocationPing_default_instance_;
    new (ptr) ::CDOTAUserMsg_LocationPing();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_LocationPing::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAUserMsg_LocationPing =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCDOTAUserMsg_LocationPing}, {
      &protobuf_dota_5fcommonmessages_2eproto::scc_info_CDOTAMsg_LocationPing.base,}};

static void InitDefaultsCDOTAUserMsg_ItemAlert() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_ItemAlert_default_instance_;
    new (ptr) ::CDOTAUserMsg_ItemAlert();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_ItemAlert::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAUserMsg_ItemAlert =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCDOTAUserMsg_ItemAlert}, {
      &protobuf_dota_5fcommonmessages_2eproto::scc_info_CDOTAMsg_ItemAlert.base,}};

static void InitDefaultsCDOTAUserMsg_EnemyItemAlert() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_EnemyItemAlert_default_instance_;
    new (ptr) ::CDOTAUserMsg_EnemyItemAlert();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_EnemyItemAlert::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_EnemyItemAlert =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_EnemyItemAlert}, {}};

static void InitDefaultsCDOTAUserMsg_ModifierAlert() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_ModifierAlert_default_instance_;
    new (ptr) ::CDOTAUserMsg_ModifierAlert();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_ModifierAlert::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_ModifierAlert =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_ModifierAlert}, {}};

static void InitDefaultsCDOTAUserMsg_HPManaAlert() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_HPManaAlert_default_instance_;
    new (ptr) ::CDOTAUserMsg_HPManaAlert();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_HPManaAlert::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_HPManaAlert =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_HPManaAlert}, {}};

static void InitDefaultsCDOTAUserMsg_GlyphAlert() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_GlyphAlert_default_instance_;
    new (ptr) ::CDOTAUserMsg_GlyphAlert();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_GlyphAlert::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_GlyphAlert =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_GlyphAlert}, {}};

static void InitDefaultsCDOTAUserMsg_WillPurchaseAlert() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_WillPurchaseAlert_default_instance_;
    new (ptr) ::CDOTAUserMsg_WillPurchaseAlert();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_WillPurchaseAlert::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_WillPurchaseAlert =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_WillPurchaseAlert}, {}};

static void InitDefaultsCDOTAUserMsg_EmptyTeleportAlert() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_EmptyTeleportAlert_default_instance_;
    new (ptr) ::CDOTAUserMsg_EmptyTeleportAlert();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_EmptyTeleportAlert::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_EmptyTeleportAlert =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_EmptyTeleportAlert}, {}};

static void InitDefaultsCDOTAUserMsg_BuyBackStateAlert() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_BuyBackStateAlert_default_instance_;
    new (ptr) ::CDOTAUserMsg_BuyBackStateAlert();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_BuyBackStateAlert::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_BuyBackStateAlert =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_BuyBackStateAlert}, {}};

static void InitDefaultsCDOTAUserMsg_QuickBuyAlert() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_QuickBuyAlert_default_instance_;
    new (ptr) ::CDOTAUserMsg_QuickBuyAlert();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_QuickBuyAlert::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_QuickBuyAlert =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_QuickBuyAlert}, {}};

static void InitDefaultsCDOTAUserMsg_CourierKilledAlert_LostItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_CourierKilledAlert_LostItem_default_instance_;
    new (ptr) ::CDOTAUserMsg_CourierKilledAlert_LostItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_CourierKilledAlert_LostItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_CourierKilledAlert_LostItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_CourierKilledAlert_LostItem}, {}};

static void InitDefaultsCDOTAUserMsg_CourierKilledAlert() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_CourierKilledAlert_default_instance_;
    new (ptr) ::CDOTAUserMsg_CourierKilledAlert();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_CourierKilledAlert::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAUserMsg_CourierKilledAlert =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCDOTAUserMsg_CourierKilledAlert}, {
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_CourierKilledAlert_LostItem.base,}};

static void InitDefaultsCDOTAUserMsg_MinimapEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_MinimapEvent_default_instance_;
    new (ptr) ::CDOTAUserMsg_MinimapEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_MinimapEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_MinimapEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_MinimapEvent}, {}};

static void InitDefaultsCDOTAUserMsg_MapLine() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_MapLine_default_instance_;
    new (ptr) ::CDOTAUserMsg_MapLine();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_MapLine::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAUserMsg_MapLine =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCDOTAUserMsg_MapLine}, {
      &protobuf_dota_5fcommonmessages_2eproto::scc_info_CDOTAMsg_MapLine.base,}};

static void InitDefaultsCDOTAUserMsg_MinimapDebugPoint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_MinimapDebugPoint_default_instance_;
    new (ptr) ::CDOTAUserMsg_MinimapDebugPoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_MinimapDebugPoint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAUserMsg_MinimapDebugPoint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCDOTAUserMsg_MinimapDebugPoint}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgVector.base,}};

static void InitDefaultsCDOTAUserMsg_CreateLinearProjectile() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_CreateLinearProjectile_default_instance_;
    new (ptr) ::CDOTAUserMsg_CreateLinearProjectile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_CreateLinearProjectile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CDOTAUserMsg_CreateLinearProjectile =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCDOTAUserMsg_CreateLinearProjectile}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgVector.base,
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgVector2D.base,}};

static void InitDefaultsCDOTAUserMsg_DestroyLinearProjectile() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_DestroyLinearProjectile_default_instance_;
    new (ptr) ::CDOTAUserMsg_DestroyLinearProjectile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_DestroyLinearProjectile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_DestroyLinearProjectile =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_DestroyLinearProjectile}, {}};

static void InitDefaultsCDOTAUserMsg_DodgeTrackingProjectiles() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_DodgeTrackingProjectiles_default_instance_;
    new (ptr) ::CDOTAUserMsg_DodgeTrackingProjectiles();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_DodgeTrackingProjectiles::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_DodgeTrackingProjectiles =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_DodgeTrackingProjectiles}, {}};

static void InitDefaultsCDOTAUserMsg_SpectatorPlayerClick() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_SpectatorPlayerClick_default_instance_;
    new (ptr) ::CDOTAUserMsg_SpectatorPlayerClick();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_SpectatorPlayerClick::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_SpectatorPlayerClick =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_SpectatorPlayerClick}, {}};

static void InitDefaultsCDOTAUserMsg_SpectatorPlayerUnitOrders() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_SpectatorPlayerUnitOrders_default_instance_;
    new (ptr) ::CDOTAUserMsg_SpectatorPlayerUnitOrders();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_SpectatorPlayerUnitOrders::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAUserMsg_SpectatorPlayerUnitOrders =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCDOTAUserMsg_SpectatorPlayerUnitOrders}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgVector.base,}};

static void InitDefaultsCDOTAUserMsg_NevermoreRequiem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_NevermoreRequiem_default_instance_;
    new (ptr) ::CDOTAUserMsg_NevermoreRequiem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_NevermoreRequiem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAUserMsg_NevermoreRequiem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCDOTAUserMsg_NevermoreRequiem}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgVector.base,}};

static void InitDefaultsCDOTAUserMsg_InvalidCommand() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_InvalidCommand_default_instance_;
    new (ptr) ::CDOTAUserMsg_InvalidCommand();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_InvalidCommand::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_InvalidCommand =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_InvalidCommand}, {}};

static void InitDefaultsCDOTAUserMsg_HudError() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_HudError_default_instance_;
    new (ptr) ::CDOTAUserMsg_HudError();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_HudError::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_HudError =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_HudError}, {}};

static void InitDefaultsCDOTAUserMsg_SharedCooldown() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_SharedCooldown_default_instance_;
    new (ptr) ::CDOTAUserMsg_SharedCooldown();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_SharedCooldown::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_SharedCooldown =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_SharedCooldown}, {}};

static void InitDefaultsCDOTAUserMsg_SetNextAutobuyItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_SetNextAutobuyItem_default_instance_;
    new (ptr) ::CDOTAUserMsg_SetNextAutobuyItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_SetNextAutobuyItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_SetNextAutobuyItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_SetNextAutobuyItem}, {}};

static void InitDefaultsCDOTAUserMsg_HalloweenDrops() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_HalloweenDrops_default_instance_;
    new (ptr) ::CDOTAUserMsg_HalloweenDrops();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_HalloweenDrops::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_HalloweenDrops =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_HalloweenDrops}, {}};

static void InitDefaultsCDOTAUserMsg_PredictionResult_Prediction() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_PredictionResult_Prediction_default_instance_;
    new (ptr) ::CDOTAUserMsg_PredictionResult_Prediction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_PredictionResult_Prediction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_PredictionResult_Prediction =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_PredictionResult_Prediction}, {}};

static void InitDefaultsCDOTAUserMsg_PredictionResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_PredictionResult_default_instance_;
    new (ptr) ::CDOTAUserMsg_PredictionResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_PredictionResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAUserMsg_PredictionResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCDOTAUserMsg_PredictionResult}, {
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_PredictionResult_Prediction.base,}};

static void InitDefaultsCDOTAResponseQuerySerialized_Fact() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAResponseQuerySerialized_Fact_default_instance_;
    new (ptr) ::CDOTAResponseQuerySerialized_Fact();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAResponseQuerySerialized_Fact::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAResponseQuerySerialized_Fact =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAResponseQuerySerialized_Fact}, {}};

static void InitDefaultsCDOTAResponseQuerySerialized() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAResponseQuerySerialized_default_instance_;
    new (ptr) ::CDOTAResponseQuerySerialized();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAResponseQuerySerialized::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAResponseQuerySerialized =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCDOTAResponseQuerySerialized}, {
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAResponseQuerySerialized_Fact.base,}};

static void InitDefaultsCDOTASpeechMatchOnClient() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTASpeechMatchOnClient_default_instance_;
    new (ptr) ::CDOTASpeechMatchOnClient();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTASpeechMatchOnClient::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CDOTASpeechMatchOnClient =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCDOTASpeechMatchOnClient}, {
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAResponseQuerySerialized.base,}};

static void InitDefaultsCDOTAUserMsg_UnitEvent_Speech() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_UnitEvent_Speech_default_instance_;
    new (ptr) ::CDOTAUserMsg_UnitEvent_Speech();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_UnitEvent_Speech::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_UnitEvent_Speech =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_UnitEvent_Speech}, {}};

static void InitDefaultsCDOTAUserMsg_UnitEvent_SpeechMute() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_UnitEvent_SpeechMute_default_instance_;
    new (ptr) ::CDOTAUserMsg_UnitEvent_SpeechMute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_UnitEvent_SpeechMute::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_UnitEvent_SpeechMute =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_UnitEvent_SpeechMute}, {}};

static void InitDefaultsCDOTAUserMsg_UnitEvent_AddGesture() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_UnitEvent_AddGesture_default_instance_;
    new (ptr) ::CDOTAUserMsg_UnitEvent_AddGesture();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_UnitEvent_AddGesture::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_UnitEvent_AddGesture =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_UnitEvent_AddGesture}, {}};

static void InitDefaultsCDOTAUserMsg_UnitEvent_RemoveGesture() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_UnitEvent_RemoveGesture_default_instance_;
    new (ptr) ::CDOTAUserMsg_UnitEvent_RemoveGesture();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_UnitEvent_RemoveGesture::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_UnitEvent_RemoveGesture =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_UnitEvent_RemoveGesture}, {}};

static void InitDefaultsCDOTAUserMsg_UnitEvent_BloodImpact() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_UnitEvent_BloodImpact_default_instance_;
    new (ptr) ::CDOTAUserMsg_UnitEvent_BloodImpact();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_UnitEvent_BloodImpact::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_UnitEvent_BloodImpact =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_UnitEvent_BloodImpact}, {}};

static void InitDefaultsCDOTAUserMsg_UnitEvent_FadeGesture() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_UnitEvent_FadeGesture_default_instance_;
    new (ptr) ::CDOTAUserMsg_UnitEvent_FadeGesture();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_UnitEvent_FadeGesture::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_UnitEvent_FadeGesture =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_UnitEvent_FadeGesture}, {}};

static void InitDefaultsCDOTAUserMsg_UnitEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_UnitEvent_default_instance_;
    new (ptr) ::CDOTAUserMsg_UnitEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_UnitEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<7> scc_info_CDOTAUserMsg_UnitEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 7, InitDefaultsCDOTAUserMsg_UnitEvent}, {
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_UnitEvent_Speech.base,
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_UnitEvent_SpeechMute.base,
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_UnitEvent_AddGesture.base,
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_UnitEvent_RemoveGesture.base,
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_UnitEvent_BloodImpact.base,
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_UnitEvent_FadeGesture.base,
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTASpeechMatchOnClient.base,}};

static void InitDefaultsCDOTAUserMsg_ItemPurchased() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_ItemPurchased_default_instance_;
    new (ptr) ::CDOTAUserMsg_ItemPurchased();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_ItemPurchased::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_ItemPurchased =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_ItemPurchased}, {}};

static void InitDefaultsCDOTAUserMsg_ItemSold() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_ItemSold_default_instance_;
    new (ptr) ::CDOTAUserMsg_ItemSold();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_ItemSold::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_ItemSold =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_ItemSold}, {}};

static void InitDefaultsCDOTAUserMsg_ItemFound() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_ItemFound_default_instance_;
    new (ptr) ::CDOTAUserMsg_ItemFound();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_ItemFound::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_ItemFound =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_ItemFound}, {}};

static void InitDefaultsCDOTAUserMsg_OverheadEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_OverheadEvent_default_instance_;
    new (ptr) ::CDOTAUserMsg_OverheadEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_OverheadEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_OverheadEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_OverheadEvent}, {}};

static void InitDefaultsCDOTAUserMsg_TutorialTipInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_TutorialTipInfo_default_instance_;
    new (ptr) ::CDOTAUserMsg_TutorialTipInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_TutorialTipInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_TutorialTipInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_TutorialTipInfo}, {}};

static void InitDefaultsCDOTAUserMsg_TutorialFinish() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_TutorialFinish_default_instance_;
    new (ptr) ::CDOTAUserMsg_TutorialFinish();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_TutorialFinish::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_TutorialFinish =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_TutorialFinish}, {}};

static void InitDefaultsCDOTAUserMsg_TutorialMinimapPosition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_TutorialMinimapPosition_default_instance_;
    new (ptr) ::CDOTAUserMsg_TutorialMinimapPosition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_TutorialMinimapPosition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_TutorialMinimapPosition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_TutorialMinimapPosition}, {}};

static void InitDefaultsCDOTAUserMsg_SendGenericToolTip() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_SendGenericToolTip_default_instance_;
    new (ptr) ::CDOTAUserMsg_SendGenericToolTip();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_SendGenericToolTip::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_SendGenericToolTip =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_SendGenericToolTip}, {}};

static void InitDefaultsCDOTAUserMsg_WorldLine() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_WorldLine_default_instance_;
    new (ptr) ::CDOTAUserMsg_WorldLine();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_WorldLine::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAUserMsg_WorldLine =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCDOTAUserMsg_WorldLine}, {
      &protobuf_dota_5fcommonmessages_2eproto::scc_info_CDOTAMsg_WorldLine.base,}};

static void InitDefaultsCDOTAUserMsg_ChatWheel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_ChatWheel_default_instance_;
    new (ptr) ::CDOTAUserMsg_ChatWheel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_ChatWheel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_ChatWheel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_ChatWheel}, {}};

static void InitDefaultsCDOTAUserMsg_ReceivedXmasGift() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_ReceivedXmasGift_default_instance_;
    new (ptr) ::CDOTAUserMsg_ReceivedXmasGift();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_ReceivedXmasGift::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_ReceivedXmasGift =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_ReceivedXmasGift}, {}};

static void InitDefaultsCDOTAUserMsg_ShowSurvey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_ShowSurvey_default_instance_;
    new (ptr) ::CDOTAUserMsg_ShowSurvey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_ShowSurvey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_ShowSurvey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_ShowSurvey}, {}};

static void InitDefaultsCDOTAUserMsg_UpdateSharedContent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_UpdateSharedContent_default_instance_;
    new (ptr) ::CDOTAUserMsg_UpdateSharedContent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_UpdateSharedContent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_UpdateSharedContent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_UpdateSharedContent}, {}};

static void InitDefaultsCDOTAUserMsg_TutorialRequestExp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_TutorialRequestExp_default_instance_;
    new (ptr) ::CDOTAUserMsg_TutorialRequestExp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_TutorialRequestExp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_TutorialRequestExp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_TutorialRequestExp}, {}};

static void InitDefaultsCDOTAUserMsg_TutorialFade() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_TutorialFade_default_instance_;
    new (ptr) ::CDOTAUserMsg_TutorialFade();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_TutorialFade::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_TutorialFade =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_TutorialFade}, {}};

static void InitDefaultsCDOTAUserMsg_TutorialPingMinimap() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_TutorialPingMinimap_default_instance_;
    new (ptr) ::CDOTAUserMsg_TutorialPingMinimap();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_TutorialPingMinimap::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_TutorialPingMinimap =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_TutorialPingMinimap}, {}};

static void InitDefaultsCDOTAUserMsg_GamerulesStateChanged() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_GamerulesStateChanged_default_instance_;
    new (ptr) ::CDOTAUserMsg_GamerulesStateChanged();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_GamerulesStateChanged::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_GamerulesStateChanged =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_GamerulesStateChanged}, {}};

static void InitDefaultsCDOTAUserMsg_AddQuestLogEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_AddQuestLogEntry_default_instance_;
    new (ptr) ::CDOTAUserMsg_AddQuestLogEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_AddQuestLogEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_AddQuestLogEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_AddQuestLogEntry}, {}};

static void InitDefaultsCDOTAUserMsg_SendStatPopup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_SendStatPopup_default_instance_;
    new (ptr) ::CDOTAUserMsg_SendStatPopup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_SendStatPopup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAUserMsg_SendStatPopup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCDOTAUserMsg_SendStatPopup}, {
      &protobuf_dota_5fcommonmessages_2eproto::scc_info_CDOTAMsg_SendStatPopup.base,}};

static void InitDefaultsCDOTAUserMsg_DismissAllStatPopups() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_DismissAllStatPopups_default_instance_;
    new (ptr) ::CDOTAUserMsg_DismissAllStatPopups();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_DismissAllStatPopups::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAUserMsg_DismissAllStatPopups =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCDOTAUserMsg_DismissAllStatPopups}, {
      &protobuf_dota_5fcommonmessages_2eproto::scc_info_CDOTAMsg_DismissAllStatPopups.base,}};

static void InitDefaultsCDOTAUserMsg_SendRoshanSpectatorPhase() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_SendRoshanSpectatorPhase_default_instance_;
    new (ptr) ::CDOTAUserMsg_SendRoshanSpectatorPhase();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_SendRoshanSpectatorPhase::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_SendRoshanSpectatorPhase =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_SendRoshanSpectatorPhase}, {}};

static void InitDefaultsCDOTAUserMsg_SendRoshanPopup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_SendRoshanPopup_default_instance_;
    new (ptr) ::CDOTAUserMsg_SendRoshanPopup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_SendRoshanPopup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_SendRoshanPopup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_SendRoshanPopup}, {}};

static void InitDefaultsCDOTAUserMsg_SendFinalGold() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_SendFinalGold_default_instance_;
    new (ptr) ::CDOTAUserMsg_SendFinalGold();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_SendFinalGold::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_SendFinalGold =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_SendFinalGold}, {}};

static void InitDefaultsCDOTAUserMsg_CustomMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_CustomMsg_default_instance_;
    new (ptr) ::CDOTAUserMsg_CustomMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_CustomMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_CustomMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_CustomMsg}, {}};

static void InitDefaultsCDOTAUserMsg_CoachHUDPing() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_CoachHUDPing_default_instance_;
    new (ptr) ::CDOTAUserMsg_CoachHUDPing();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_CoachHUDPing::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAUserMsg_CoachHUDPing =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCDOTAUserMsg_CoachHUDPing}, {
      &protobuf_dota_5fcommonmessages_2eproto::scc_info_CDOTAMsg_CoachHUDPing.base,}};

static void InitDefaultsCDOTAUserMsg_ClientLoadGridNav() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_ClientLoadGridNav_default_instance_;
    new (ptr) ::CDOTAUserMsg_ClientLoadGridNav();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_ClientLoadGridNav::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_ClientLoadGridNav =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_ClientLoadGridNav}, {}};

static void InitDefaultsCDOTAUserMsg_TE_Projectile() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_TE_Projectile_default_instance_;
    new (ptr) ::CDOTAUserMsg_TE_Projectile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_TE_Projectile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAUserMsg_TE_Projectile =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCDOTAUserMsg_TE_Projectile}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgVector.base,}};

static void InitDefaultsCDOTAUserMsg_TE_ProjectileLoc() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_TE_ProjectileLoc_default_instance_;
    new (ptr) ::CDOTAUserMsg_TE_ProjectileLoc();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_TE_ProjectileLoc::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAUserMsg_TE_ProjectileLoc =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCDOTAUserMsg_TE_ProjectileLoc}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgVector.base,}};

static void InitDefaultsCDOTAUserMsg_TE_DestroyProjectile() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_TE_DestroyProjectile_default_instance_;
    new (ptr) ::CDOTAUserMsg_TE_DestroyProjectile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_TE_DestroyProjectile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_TE_DestroyProjectile =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_TE_DestroyProjectile}, {}};

static void InitDefaultsCDOTAUserMsg_TE_DotaBloodImpact() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_TE_DotaBloodImpact_default_instance_;
    new (ptr) ::CDOTAUserMsg_TE_DotaBloodImpact();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_TE_DotaBloodImpact::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_TE_DotaBloodImpact =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_TE_DotaBloodImpact}, {}};

static void InitDefaultsCDOTAUserMsg_AbilityPing() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_AbilityPing_default_instance_;
    new (ptr) ::CDOTAUserMsg_AbilityPing();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_AbilityPing::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_AbilityPing =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_AbilityPing}, {}};

static void InitDefaultsCDOTAUserMsg_TE_UnitAnimation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_TE_UnitAnimation_default_instance_;
    new (ptr) ::CDOTAUserMsg_TE_UnitAnimation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_TE_UnitAnimation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_TE_UnitAnimation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_TE_UnitAnimation}, {}};

static void InitDefaultsCDOTAUserMsg_TE_UnitAnimationEnd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_TE_UnitAnimationEnd_default_instance_;
    new (ptr) ::CDOTAUserMsg_TE_UnitAnimationEnd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_TE_UnitAnimationEnd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_TE_UnitAnimationEnd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_TE_UnitAnimationEnd}, {}};

static void InitDefaultsCDOTAUserMsg_ShowGenericPopup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_ShowGenericPopup_default_instance_;
    new (ptr) ::CDOTAUserMsg_ShowGenericPopup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_ShowGenericPopup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_ShowGenericPopup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_ShowGenericPopup}, {}};

static void InitDefaultsCDOTAUserMsg_VoteStart() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_VoteStart_default_instance_;
    new (ptr) ::CDOTAUserMsg_VoteStart();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_VoteStart::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_VoteStart =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_VoteStart}, {}};

static void InitDefaultsCDOTAUserMsg_VoteUpdate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_VoteUpdate_default_instance_;
    new (ptr) ::CDOTAUserMsg_VoteUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_VoteUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_VoteUpdate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_VoteUpdate}, {}};

static void InitDefaultsCDOTAUserMsg_VoteEnd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_VoteEnd_default_instance_;
    new (ptr) ::CDOTAUserMsg_VoteEnd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_VoteEnd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_VoteEnd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_VoteEnd}, {}};

static void InitDefaultsCDOTAUserMsg_BoosterStatePlayer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_BoosterStatePlayer_default_instance_;
    new (ptr) ::CDOTAUserMsg_BoosterStatePlayer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_BoosterStatePlayer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_BoosterStatePlayer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_BoosterStatePlayer}, {}};

static void InitDefaultsCDOTAUserMsg_BoosterState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_BoosterState_default_instance_;
    new (ptr) ::CDOTAUserMsg_BoosterState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_BoosterState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAUserMsg_BoosterState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCDOTAUserMsg_BoosterState}, {
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_BoosterStatePlayer.base,}};

static void InitDefaultsCDOTAUserMsg_PlayerMMR() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_PlayerMMR_default_instance_;
    new (ptr) ::CDOTAUserMsg_PlayerMMR();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_PlayerMMR::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_PlayerMMR =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_PlayerMMR}, {}};

static void InitDefaultsCDOTAUserMsg_AbilitySteal() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_AbilitySteal_default_instance_;
    new (ptr) ::CDOTAUserMsg_AbilitySteal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_AbilitySteal::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_AbilitySteal =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_AbilitySteal}, {}};

static void InitDefaultsCDOTAUserMsg_StatsHeroLookup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_StatsHeroLookup_default_instance_;
    new (ptr) ::CDOTAUserMsg_StatsHeroLookup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_StatsHeroLookup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_StatsHeroLookup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_StatsHeroLookup}, {}};

static void InitDefaultsCDOTAUserMsg_StatsHeroPositionInfo_PositionPair() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_StatsHeroPositionInfo_PositionPair_default_instance_;
    new (ptr) ::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_StatsHeroPositionInfo_PositionPair =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_StatsHeroPositionInfo_PositionPair}, {}};

static void InitDefaultsCDOTAUserMsg_StatsHeroPositionInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_StatsHeroPositionInfo_default_instance_;
    new (ptr) ::CDOTAUserMsg_StatsHeroPositionInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_StatsHeroPositionInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAUserMsg_StatsHeroPositionInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCDOTAUserMsg_StatsHeroPositionInfo}, {
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_StatsHeroPositionInfo_PositionPair.base,}};

static void InitDefaultsCDOTAUserMsg_StatsHeroMinuteDetails() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_StatsHeroMinuteDetails_default_instance_;
    new (ptr) ::CDOTAUserMsg_StatsHeroMinuteDetails();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_StatsHeroMinuteDetails::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAUserMsg_StatsHeroMinuteDetails =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCDOTAUserMsg_StatsHeroMinuteDetails}, {
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_StatsHeroPositionInfo.base,}};

static void InitDefaultsCDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance_default_instance_;
    new (ptr) ::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance}, {}};

static void InitDefaultsCDOTAUserMsg_StatsTeamMinuteDetails() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_StatsTeamMinuteDetails_default_instance_;
    new (ptr) ::CDOTAUserMsg_StatsTeamMinuteDetails();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_StatsTeamMinuteDetails::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CDOTAUserMsg_StatsTeamMinuteDetails =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCDOTAUserMsg_StatsTeamMinuteDetails}, {
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_StatsHeroMinuteDetails.base,
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance.base,}};

static void InitDefaultsCDOTAUserMsg_StatsPlayerKillShare() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_StatsPlayerKillShare_default_instance_;
    new (ptr) ::CDOTAUserMsg_StatsPlayerKillShare();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_StatsPlayerKillShare::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_StatsPlayerKillShare =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_StatsPlayerKillShare}, {}};

static void InitDefaultsCDOTAUserMsg_StatsKillDetails() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_StatsKillDetails_default_instance_;
    new (ptr) ::CDOTAUserMsg_StatsKillDetails();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_StatsKillDetails::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAUserMsg_StatsKillDetails =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCDOTAUserMsg_StatsKillDetails}, {
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_StatsPlayerKillShare.base,}};

static void InitDefaultsCDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails_default_instance_;
    new (ptr) ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails}, {}};

static void InitDefaultsCDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails_default_instance_;
    new (ptr) ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails}, {
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails.base,}};

static void InitDefaultsCDOTAUserMsg_StatsMatchDetails() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_StatsMatchDetails_default_instance_;
    new (ptr) ::CDOTAUserMsg_StatsMatchDetails();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_StatsMatchDetails::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_CDOTAUserMsg_StatsMatchDetails =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsCDOTAUserMsg_StatsMatchDetails}, {
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_StatsHeroLookup.base,
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_StatsTeamMinuteDetails.base,
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_StatsKillDetails.base,
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails.base,}};

static void InitDefaultsCDOTAUserMsg_MiniTaunt() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_MiniTaunt_default_instance_;
    new (ptr) ::CDOTAUserMsg_MiniTaunt();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_MiniTaunt::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_MiniTaunt =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_MiniTaunt}, {}};

static void InitDefaultsCDOTAUserMsg_SpeechBubble() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_SpeechBubble_default_instance_;
    new (ptr) ::CDOTAUserMsg_SpeechBubble();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_SpeechBubble::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_SpeechBubble =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_SpeechBubble}, {}};

static void InitDefaultsCDOTAUserMsg_CustomHeaderMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_CustomHeaderMessage_default_instance_;
    new (ptr) ::CDOTAUserMsg_CustomHeaderMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_CustomHeaderMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_CustomHeaderMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_CustomHeaderMessage}, {}};

static void InitDefaultsCMsgHeroAbilityStat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgHeroAbilityStat_default_instance_;
    new (ptr) ::CMsgHeroAbilityStat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgHeroAbilityStat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgHeroAbilityStat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgHeroAbilityStat}, {}};

static void InitDefaultsCMsgCombatAnalyzerPlayerStat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgCombatAnalyzerPlayerStat_default_instance_;
    new (ptr) ::CMsgCombatAnalyzerPlayerStat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgCombatAnalyzerPlayerStat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgCombatAnalyzerPlayerStat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgCombatAnalyzerPlayerStat}, {
      &protobuf_dota_5fusermessages_2eproto::scc_info_CMsgHeroAbilityStat.base,}};

static void InitDefaultsCMsgCombatAnalyzerStats() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsgCombatAnalyzerStats_default_instance_;
    new (ptr) ::CMsgCombatAnalyzerStats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgCombatAnalyzerStats::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgCombatAnalyzerStats =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgCombatAnalyzerStats}, {
      &protobuf_dota_5fusermessages_2eproto::scc_info_CMsgCombatAnalyzerPlayerStat.base,}};

static void InitDefaultsCDOTAUserMsg_BeastChat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_BeastChat_default_instance_;
    new (ptr) ::CDOTAUserMsg_BeastChat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_BeastChat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_BeastChat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_BeastChat}, {}};

static void InitDefaultsCDOTAUserMsg_CustomHudElement_Create() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_CustomHudElement_Create_default_instance_;
    new (ptr) ::CDOTAUserMsg_CustomHudElement_Create();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_CustomHudElement_Create::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_CustomHudElement_Create =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_CustomHudElement_Create}, {}};

static void InitDefaultsCDOTAUserMsg_CustomHudElement_Modify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_CustomHudElement_Modify_default_instance_;
    new (ptr) ::CDOTAUserMsg_CustomHudElement_Modify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_CustomHudElement_Modify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_CustomHudElement_Modify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_CustomHudElement_Modify}, {}};

static void InitDefaultsCDOTAUserMsg_CustomHudElement_Destroy() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_CustomHudElement_Destroy_default_instance_;
    new (ptr) ::CDOTAUserMsg_CustomHudElement_Destroy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_CustomHudElement_Destroy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_CustomHudElement_Destroy =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_CustomHudElement_Destroy}, {}};

static void InitDefaultsCDOTAUserMsg_CompendiumStatePlayer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_CompendiumStatePlayer_default_instance_;
    new (ptr) ::CDOTAUserMsg_CompendiumStatePlayer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_CompendiumStatePlayer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_CompendiumStatePlayer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_CompendiumStatePlayer}, {}};

static void InitDefaultsCDOTAUserMsg_CompendiumState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_CompendiumState_default_instance_;
    new (ptr) ::CDOTAUserMsg_CompendiumState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_CompendiumState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAUserMsg_CompendiumState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCDOTAUserMsg_CompendiumState}, {
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_CompendiumStatePlayer.base,}};

static void InitDefaultsCDOTAUserMsg_ProjectionAbility() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_ProjectionAbility_default_instance_;
    new (ptr) ::CDOTAUserMsg_ProjectionAbility();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_ProjectionAbility::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAUserMsg_ProjectionAbility =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCDOTAUserMsg_ProjectionAbility}, {
      &protobuf_networkbasetypes_2eproto::scc_info_CMsgVector.base,}};

static void InitDefaultsCDOTAUserMsg_ProjectionEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_ProjectionEvent_default_instance_;
    new (ptr) ::CDOTAUserMsg_ProjectionEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_ProjectionEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_ProjectionEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_ProjectionEvent}, {}};

static void InitDefaultsCDOTAUserMsg_XPAlert() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_XPAlert_default_instance_;
    new (ptr) ::CDOTAUserMsg_XPAlert();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_XPAlert::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_XPAlert =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_XPAlert}, {}};

static void InitDefaultsCDOTAUserMsg_UpdateQuestProgress() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_UpdateQuestProgress_default_instance_;
    new (ptr) ::CDOTAUserMsg_UpdateQuestProgress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_UpdateQuestProgress::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_UpdateQuestProgress =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_UpdateQuestProgress}, {}};

static void InitDefaultsCDOTAUserMsg_QuestStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_QuestStatus_default_instance_;
    new (ptr) ::CDOTAUserMsg_QuestStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_QuestStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_QuestStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_QuestStatus}, {}};

static void InitDefaultsCDOTAUserMsg_SuggestHeroPick() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_SuggestHeroPick_default_instance_;
    new (ptr) ::CDOTAUserMsg_SuggestHeroPick();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_SuggestHeroPick::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_SuggestHeroPick =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_SuggestHeroPick}, {}};

static void InitDefaultsCDOTAUserMsg_SuggestHeroRole() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_SuggestHeroRole_default_instance_;
    new (ptr) ::CDOTAUserMsg_SuggestHeroRole();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_SuggestHeroRole::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_SuggestHeroRole =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_SuggestHeroRole}, {}};

static void InitDefaultsCDOTAUserMsg_KillcamDamageTaken() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_KillcamDamageTaken_default_instance_;
    new (ptr) ::CDOTAUserMsg_KillcamDamageTaken();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_KillcamDamageTaken::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_KillcamDamageTaken =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_KillcamDamageTaken}, {}};

static void InitDefaultsCDOTAUserMsg_SelectPenaltyGold() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_SelectPenaltyGold_default_instance_;
    new (ptr) ::CDOTAUserMsg_SelectPenaltyGold();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_SelectPenaltyGold::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_SelectPenaltyGold =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_SelectPenaltyGold}, {}};

static void InitDefaultsCDOTAUserMsg_RollDiceResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_RollDiceResult_default_instance_;
    new (ptr) ::CDOTAUserMsg_RollDiceResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_RollDiceResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_RollDiceResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_RollDiceResult}, {}};

static void InitDefaultsCDOTAUserMsg_FlipCoinResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_FlipCoinResult_default_instance_;
    new (ptr) ::CDOTAUserMsg_FlipCoinResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_FlipCoinResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_FlipCoinResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_FlipCoinResult}, {}};

static void InitDefaultsCDOTAUserMessage_RequestItemSuggestions() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMessage_RequestItemSuggestions_default_instance_;
    new (ptr) ::CDOTAUserMessage_RequestItemSuggestions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMessage_RequestItemSuggestions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMessage_RequestItemSuggestions =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMessage_RequestItemSuggestions}, {}};

static void InitDefaultsCDOTAUserMessage_TeamCaptainChanged() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMessage_TeamCaptainChanged_default_instance_;
    new (ptr) ::CDOTAUserMessage_TeamCaptainChanged();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMessage_TeamCaptainChanged::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMessage_TeamCaptainChanged =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMessage_TeamCaptainChanged}, {}};

static void InitDefaultsCDOTAUserMsg_ChatWheelCooldown() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_ChatWheelCooldown_default_instance_;
    new (ptr) ::CDOTAUserMsg_ChatWheelCooldown();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_ChatWheelCooldown::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_ChatWheelCooldown =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_ChatWheelCooldown}, {}};

static void InitDefaultsCDOTAUserMsg_HeroRelicProgress() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_HeroRelicProgress_default_instance_;
    new (ptr) ::CDOTAUserMsg_HeroRelicProgress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_HeroRelicProgress::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_HeroRelicProgress =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_HeroRelicProgress}, {}};

static void InitDefaultsCDOTAUserMsg_AbilityDraftRequestAbility() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_AbilityDraftRequestAbility_default_instance_;
    new (ptr) ::CDOTAUserMsg_AbilityDraftRequestAbility();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_AbilityDraftRequestAbility::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_AbilityDraftRequestAbility =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_AbilityDraftRequestAbility}, {}};

static void InitDefaultsCDOTAUserMsg_DamageReport() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_DamageReport_default_instance_;
    new (ptr) ::CDOTAUserMsg_DamageReport();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_DamageReport::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_DamageReport =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_DamageReport}, {}};

static void InitDefaultsCDOTAUserMsg_SalutePlayer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_SalutePlayer_default_instance_;
    new (ptr) ::CDOTAUserMsg_SalutePlayer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_SalutePlayer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_SalutePlayer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_SalutePlayer}, {}};

static void InitDefaultsCDOTAUserMsg_TipAlert() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_TipAlert_default_instance_;
    new (ptr) ::CDOTAUserMsg_TipAlert();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_TipAlert::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_TipAlert =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_TipAlert}, {}};

static void InitDefaultsCDOTAUserMsg_ReplaceQueryUnit() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_ReplaceQueryUnit_default_instance_;
    new (ptr) ::CDOTAUserMsg_ReplaceQueryUnit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_ReplaceQueryUnit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAUserMsg_ReplaceQueryUnit =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAUserMsg_ReplaceQueryUnit}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_AIDebugLine.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_Ping.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_SwapVerify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_ChatEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_BotChat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_CombatHeroPositions.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_CombatLogBulkData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_MiniKillCamInfo_Attacker.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_MiniKillCamInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_GlobalLightColor.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_GlobalLightDirection.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_LocationPing.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_ItemAlert.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_EnemyItemAlert.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_ModifierAlert.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_HPManaAlert.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_GlyphAlert.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_WillPurchaseAlert.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_EmptyTeleportAlert.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_BuyBackStateAlert.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_QuickBuyAlert.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_CourierKilledAlert_LostItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_CourierKilledAlert.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_MinimapEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_MapLine.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_MinimapDebugPoint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_CreateLinearProjectile.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_DestroyLinearProjectile.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_DodgeTrackingProjectiles.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_SpectatorPlayerClick.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_SpectatorPlayerUnitOrders.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_NevermoreRequiem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_InvalidCommand.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_HudError.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_SharedCooldown.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_SetNextAutobuyItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_HalloweenDrops.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_PredictionResult_Prediction.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_PredictionResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAResponseQuerySerialized_Fact.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAResponseQuerySerialized.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTASpeechMatchOnClient.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_UnitEvent_Speech.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_UnitEvent_SpeechMute.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_UnitEvent_AddGesture.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_UnitEvent_RemoveGesture.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_UnitEvent_BloodImpact.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_UnitEvent_FadeGesture.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_UnitEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_ItemPurchased.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_ItemSold.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_ItemFound.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_OverheadEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_TutorialTipInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_TutorialFinish.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_TutorialMinimapPosition.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_SendGenericToolTip.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_WorldLine.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_ChatWheel.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_ReceivedXmasGift.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_ShowSurvey.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_UpdateSharedContent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_TutorialRequestExp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_TutorialFade.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_TutorialPingMinimap.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_GamerulesStateChanged.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_AddQuestLogEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_SendStatPopup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_DismissAllStatPopups.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_SendRoshanSpectatorPhase.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_SendRoshanPopup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_SendFinalGold.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_CustomMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_CoachHUDPing.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_ClientLoadGridNav.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_TE_Projectile.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_TE_ProjectileLoc.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_TE_DestroyProjectile.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_TE_DotaBloodImpact.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_AbilityPing.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_TE_UnitAnimation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_TE_UnitAnimationEnd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_ShowGenericPopup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_VoteStart.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_VoteUpdate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_VoteEnd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_BoosterStatePlayer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_BoosterState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_PlayerMMR.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_AbilitySteal.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_StatsHeroLookup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_StatsHeroPositionInfo_PositionPair.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_StatsHeroPositionInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_StatsHeroMinuteDetails.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_StatsTeamMinuteDetails.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_StatsPlayerKillShare.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_StatsKillDetails.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_StatsMatchDetails.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_MiniTaunt.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_SpeechBubble.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_CustomHeaderMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgHeroAbilityStat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCombatAnalyzerPlayerStat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCombatAnalyzerStats.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_BeastChat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_CustomHudElement_Create.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_CustomHudElement_Modify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_CustomHudElement_Destroy.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_CompendiumStatePlayer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_CompendiumState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_ProjectionAbility.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_ProjectionEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_XPAlert.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_UpdateQuestProgress.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_QuestStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_SuggestHeroPick.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_SuggestHeroRole.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_KillcamDamageTaken.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_SelectPenaltyGold.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_RollDiceResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_FlipCoinResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMessage_RequestItemSuggestions.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMessage_TeamCaptainChanged.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_ChatWheelCooldown.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_HeroRelicProgress.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_AbilityDraftRequestAbility.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_DamageReport.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_SalutePlayer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_TipAlert.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_ReplaceQueryUnit.base);
}

::google::protobuf::Metadata file_level_metadata[134];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[16];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_AIDebugLine, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_AIDebugLine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_AIDebugLine, message_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_Ping, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_Ping, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_Ping, ping_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_Ping, loss_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SwapVerify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SwapVerify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SwapVerify, player_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ChatEvent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ChatEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ChatEvent, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ChatEvent, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ChatEvent, playerid_1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ChatEvent, playerid_2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ChatEvent, playerid_3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ChatEvent, playerid_4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ChatEvent, playerid_5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ChatEvent, playerid_6_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ChatEvent, value2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ChatEvent, value3_),
  4,
  0,
  5,
  6,
  7,
  8,
  9,
  3,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_BotChat, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_BotChat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_BotChat, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_BotChat, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_BotChat, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_BotChat, team_only_),
  2,
  0,
  1,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CombatHeroPositions, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CombatHeroPositions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CombatHeroPositions, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CombatHeroPositions, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CombatHeroPositions, world_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CombatHeroPositions, health_),
  1,
  2,
  0,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CombatLogBulkData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CombatLogBulkData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CombatLogBulkData, combat_entries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CombatLogBulkData, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CombatLogBulkData, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CombatLogBulkData, player_id_),
  ~0u,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability, ability_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability, damage_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MiniKillCamInfo_Attacker, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MiniKillCamInfo_Attacker, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MiniKillCamInfo_Attacker, attacker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MiniKillCamInfo_Attacker, total_damage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MiniKillCamInfo_Attacker, abilities_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MiniKillCamInfo_Attacker, attacker_name_),
  1,
  2,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MiniKillCamInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MiniKillCamInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MiniKillCamInfo, attackers_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_GlobalLightColor, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_GlobalLightColor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_GlobalLightColor, color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_GlobalLightColor, duration_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_GlobalLightDirection, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_GlobalLightDirection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_GlobalLightDirection, direction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_GlobalLightDirection, duration_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_LocationPing, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_LocationPing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_LocationPing, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_LocationPing, location_ping_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ItemAlert, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ItemAlert, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ItemAlert, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ItemAlert, item_alert_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_EnemyItemAlert, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_EnemyItemAlert, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_EnemyItemAlert, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_EnemyItemAlert, target_player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_EnemyItemAlert, item_ability_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_EnemyItemAlert, rune_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_EnemyItemAlert, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_EnemyItemAlert, item_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_EnemyItemAlert, primary_charges_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_EnemyItemAlert, secondary_charges_),
  0,
  1,
  2,
  3,
  4,
  6,
  7,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ModifierAlert, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ModifierAlert, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ModifierAlert, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ModifierAlert, class_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ModifierAlert, stack_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ModifierAlert, is_debuff_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ModifierAlert, target_entindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ModifierAlert, seconds_remaining_),
  1,
  0,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_HPManaAlert, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_HPManaAlert, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_HPManaAlert, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_HPManaAlert, target_entindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_HPManaAlert, show_raw_values_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_GlyphAlert, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_GlyphAlert, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_GlyphAlert, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_GlyphAlert, negative_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_WillPurchaseAlert, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_WillPurchaseAlert, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_WillPurchaseAlert, item_ability_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_WillPurchaseAlert, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_WillPurchaseAlert, gold_remaining_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_WillPurchaseAlert, suggestion_player_id_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_EmptyTeleportAlert, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_EmptyTeleportAlert, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_EmptyTeleportAlert, source_player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_EmptyTeleportAlert, target_player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_EmptyTeleportAlert, cooldown_seconds_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_BuyBackStateAlert, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_BuyBackStateAlert, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_BuyBackStateAlert, player_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_QuickBuyAlert, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_QuickBuyAlert, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_QuickBuyAlert, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_QuickBuyAlert, item_ability_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_QuickBuyAlert, gold_cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_QuickBuyAlert, item_cooldown_seconds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_QuickBuyAlert, show_buyback_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CourierKilledAlert_LostItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CourierKilledAlert_LostItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CourierKilledAlert_LostItem, item_ability_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CourierKilledAlert_LostItem, quantity_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CourierKilledAlert, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CourierKilledAlert, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CourierKilledAlert, team_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CourierKilledAlert, gold_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CourierKilledAlert, entity_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CourierKilledAlert, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CourierKilledAlert, lost_items_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CourierKilledAlert, killer_player_id_),
  0,
  1,
  2,
  3,
  ~0u,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MinimapEvent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MinimapEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MinimapEvent, event_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MinimapEvent, entity_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MinimapEvent, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MinimapEvent, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MinimapEvent, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MinimapEvent, target_entity_handle_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MapLine, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MapLine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MapLine, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MapLine, mapline_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MinimapDebugPoint, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MinimapDebugPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MinimapDebugPoint, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MinimapDebugPoint, color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MinimapDebugPoint, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MinimapDebugPoint, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MinimapDebugPoint, index_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CreateLinearProjectile, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CreateLinearProjectile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CreateLinearProjectile, origin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CreateLinearProjectile, velocity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CreateLinearProjectile, entindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CreateLinearProjectile, particle_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CreateLinearProjectile, handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CreateLinearProjectile, acceleration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CreateLinearProjectile, max_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CreateLinearProjectile, fow_radius_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CreateLinearProjectile, sticky_fow_reveal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CreateLinearProjectile, distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CreateLinearProjectile, colorgemcolor_),
  0,
  1,
  4,
  3,
  5,
  2,
  6,
  7,
  8,
  9,
  10,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_DestroyLinearProjectile, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_DestroyLinearProjectile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_DestroyLinearProjectile, handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_DodgeTrackingProjectiles, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_DodgeTrackingProjectiles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_DodgeTrackingProjectiles, entindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_DodgeTrackingProjectiles, attacks_only_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SpectatorPlayerClick, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SpectatorPlayerClick, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SpectatorPlayerClick, entindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SpectatorPlayerClick, order_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SpectatorPlayerClick, target_index_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SpectatorPlayerUnitOrders, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SpectatorPlayerUnitOrders, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SpectatorPlayerUnitOrders, entindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SpectatorPlayerUnitOrders, order_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SpectatorPlayerUnitOrders, units_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SpectatorPlayerUnitOrders, target_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SpectatorPlayerUnitOrders, ability_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SpectatorPlayerUnitOrders, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SpectatorPlayerUnitOrders, queue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SpectatorPlayerUnitOrders, sequence_number_),
  1,
  2,
  ~0u,
  3,
  4,
  0,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_NevermoreRequiem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_NevermoreRequiem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_NevermoreRequiem, entity_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_NevermoreRequiem, lines_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_NevermoreRequiem, origin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_NevermoreRequiem, reverse_),
  1,
  2,
  0,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_InvalidCommand, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_InvalidCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_InvalidCommand, message_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_HudError, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_HudError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_HudError, order_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SharedCooldown, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SharedCooldown, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SharedCooldown, entindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SharedCooldown, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SharedCooldown, cooldown_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SharedCooldown, name_index_),
  1,
  0,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SetNextAutobuyItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SetNextAutobuyItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SetNextAutobuyItem, name_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_HalloweenDrops, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_HalloweenDrops, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_HalloweenDrops, item_defs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_HalloweenDrops, player_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_HalloweenDrops, prize_list_),
  ~0u,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_PredictionResult_Prediction, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_PredictionResult_Prediction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_PredictionResult_Prediction, item_def_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_PredictionResult_Prediction, num_correct_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_PredictionResult_Prediction, num_fails_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_PredictionResult_Prediction, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_PredictionResult_Prediction, granted_item_defs_),
  0,
  1,
  2,
  3,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_PredictionResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_PredictionResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_PredictionResult, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_PredictionResult, match_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_PredictionResult, correct_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_PredictionResult, predictions_),
  1,
  0,
  2,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAResponseQuerySerialized_Fact, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAResponseQuerySerialized_Fact, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAResponseQuerySerialized_Fact, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAResponseQuerySerialized_Fact, valtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAResponseQuerySerialized_Fact, val_numeric_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAResponseQuerySerialized_Fact, val_string_),
  1,
  3,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAResponseQuerySerialized, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAResponseQuerySerialized, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAResponseQuerySerialized, facts_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTASpeechMatchOnClient, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTASpeechMatchOnClient, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTASpeechMatchOnClient, concept_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTASpeechMatchOnClient, recipient_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTASpeechMatchOnClient, responsequery_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTASpeechMatchOnClient, randomseed_),
  1,
  2,
  0,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent_Speech, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent_Speech, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent_Speech, concept_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent_Speech, response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent_Speech, recipient_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent_Speech, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent_Speech, muteable_),
  1,
  0,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent_SpeechMute, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent_SpeechMute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent_SpeechMute, delay_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent_AddGesture, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent_AddGesture, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent_AddGesture, activity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent_AddGesture, slot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent_AddGesture, fade_in_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent_AddGesture, fade_out_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent_AddGesture, playback_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent_AddGesture, sequence_variant_),
  0,
  1,
  2,
  4,
  5,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent_RemoveGesture, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent_RemoveGesture, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent_RemoveGesture, activity_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent_BloodImpact, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent_BloodImpact, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent_BloodImpact, scale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent_BloodImpact, x_normal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent_BloodImpact, y_normal_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent_FadeGesture, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent_FadeGesture, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent_FadeGesture, activity_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent, msg_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent, entity_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent, speech_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent, speech_mute_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent, add_gesture_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent, remove_gesture_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent, blood_impact_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent, fade_gesture_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UnitEvent, speech_match_on_client_),
  7,
  8,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ItemPurchased, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ItemPurchased, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ItemPurchased, item_ability_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ItemSold, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ItemSold, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ItemSold, item_ability_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ItemFound, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ItemFound, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ItemFound, player_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ItemFound, quality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ItemFound, rarity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ItemFound, method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ItemFound, itemdef_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_OverheadEvent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_OverheadEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_OverheadEvent, message_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_OverheadEvent, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_OverheadEvent, target_player_entindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_OverheadEvent, target_entindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_OverheadEvent, source_player_entindex_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TutorialTipInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TutorialTipInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TutorialTipInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TutorialTipInfo, progress_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TutorialFinish, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TutorialFinish, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TutorialFinish, heading_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TutorialFinish, emblem_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TutorialFinish, body_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TutorialFinish, success_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TutorialMinimapPosition, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TutorialMinimapPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SendGenericToolTip, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SendGenericToolTip, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SendGenericToolTip, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SendGenericToolTip, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SendGenericToolTip, entindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SendGenericToolTip, close_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_WorldLine, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_WorldLine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_WorldLine, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_WorldLine, worldline_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ChatWheel, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ChatWheel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ChatWheel, chat_message_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ChatWheel, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ChatWheel, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ChatWheel, param_hero_id_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ReceivedXmasGift, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ReceivedXmasGift, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ReceivedXmasGift, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ReceivedXmasGift, item_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ReceivedXmasGift, inventory_slot_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ShowSurvey, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ShowSurvey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ShowSurvey, survey_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ShowSurvey, match_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ShowSurvey, response_style_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ShowSurvey, teammate_hero_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ShowSurvey, teammate_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ShowSurvey, teammate_account_id_),
  3,
  2,
  0,
  4,
  1,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UpdateSharedContent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UpdateSharedContent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UpdateSharedContent, slot_type_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TutorialRequestExp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TutorialRequestExp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TutorialFade, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TutorialFade, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TutorialFade, tgt_alpha_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TutorialPingMinimap, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TutorialPingMinimap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TutorialPingMinimap, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TutorialPingMinimap, pos_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TutorialPingMinimap, pos_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TutorialPingMinimap, pos_z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TutorialPingMinimap, entity_index_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_GamerulesStateChanged, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_GamerulesStateChanged, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_GamerulesStateChanged, state_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_AddQuestLogEntry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_AddQuestLogEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_AddQuestLogEntry, npc_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_AddQuestLogEntry, npc_dialog_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SendStatPopup, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SendStatPopup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SendStatPopup, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SendStatPopup, statpopup_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_DismissAllStatPopups, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_DismissAllStatPopups, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_DismissAllStatPopups, dismissallmsg_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SendRoshanSpectatorPhase, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SendRoshanSpectatorPhase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SendRoshanSpectatorPhase, phase_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SendRoshanSpectatorPhase, phase_start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SendRoshanSpectatorPhase, phase_length_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SendRoshanPopup, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SendRoshanPopup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SendRoshanPopup, reclaimed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SendRoshanPopup, gametime_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SendFinalGold, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SendFinalGold, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SendFinalGold, reliable_gold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SendFinalGold, unreliable_gold_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CustomMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CustomMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CustomMsg, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CustomMsg, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CustomMsg, value_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CoachHUDPing, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CoachHUDPing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CoachHUDPing, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CoachHUDPing, hud_ping_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ClientLoadGridNav, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ClientLoadGridNav, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_Projectile, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_Projectile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_Projectile, hsource_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_Projectile, htarget_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_Projectile, movespeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_Projectile, sourceattachment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_Projectile, particlesystemhandle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_Projectile, dodgeable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_Projectile, isattack_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_Projectile, expiretime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_Projectile, maximpacttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_Projectile, colorgemcolor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_Projectile, launch_tick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_Projectile, handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_Projectile, vtargetloc_),
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_ProjectileLoc, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_ProjectileLoc, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_ProjectileLoc, vsourceloc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_ProjectileLoc, htarget_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_ProjectileLoc, movespeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_ProjectileLoc, particlesystemhandle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_ProjectileLoc, dodgeable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_ProjectileLoc, isattack_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_ProjectileLoc, expiretime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_ProjectileLoc, vtargetloc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_ProjectileLoc, colorgemcolor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_ProjectileLoc, launch_tick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_ProjectileLoc, handle_),
  0,
  2,
  3,
  4,
  5,
  6,
  7,
  1,
  8,
  9,
  10,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_DestroyProjectile, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_DestroyProjectile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_DestroyProjectile, handle_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_DotaBloodImpact, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_DotaBloodImpact, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_DotaBloodImpact, entity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_DotaBloodImpact, scale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_DotaBloodImpact, xnormal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_DotaBloodImpact, ynormal_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_AbilityPing, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_AbilityPing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_AbilityPing, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_AbilityPing, ability_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_AbilityPing, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_AbilityPing, cooldown_seconds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_AbilityPing, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_AbilityPing, passive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_AbilityPing, mana_needed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_AbilityPing, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_AbilityPing, primary_charges_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_AbilityPing, secondary_charges_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_AbilityPing, caster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_AbilityPing, ctrl_held_),
  0,
  1,
  11,
  2,
  3,
  7,
  4,
  5,
  6,
  9,
  10,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_UnitAnimation, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_UnitAnimation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_UnitAnimation, entity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_UnitAnimation, sequencevariant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_UnitAnimation, playbackrate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_UnitAnimation, castpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_UnitAnimation, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_UnitAnimation, activity_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_UnitAnimationEnd, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_UnitAnimationEnd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_UnitAnimationEnd, entity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TE_UnitAnimationEnd, snap_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ShowGenericPopup, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ShowGenericPopup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ShowGenericPopup, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ShowGenericPopup, body_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ShowGenericPopup, param1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ShowGenericPopup, param2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ShowGenericPopup, tint_screen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ShowGenericPopup, show_no_other_dialogs_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_VoteStart, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_VoteStart, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_VoteStart, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_VoteStart, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_VoteStart, choice_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_VoteStart, choices_),
  0,
  1,
  2,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_VoteUpdate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_VoteUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_VoteUpdate, choice_counts_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_VoteEnd, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_VoteEnd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_VoteEnd, selected_choice_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_BoosterStatePlayer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_BoosterStatePlayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_BoosterStatePlayer, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_BoosterStatePlayer, bonus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_BoosterStatePlayer, event_bonus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_BoosterStatePlayer, bonus_item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_BoosterStatePlayer, event_bonus_item_id_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_BoosterState, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_BoosterState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_BoosterState, boosted_players_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_PlayerMMR, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_PlayerMMR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_PlayerMMR, mmr_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_AbilitySteal, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_AbilitySteal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_AbilitySteal, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_AbilitySteal, ability_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_AbilitySteal, ability_level_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsHeroLookup, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsHeroLookup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsHeroLookup, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsHeroLookup, hero_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsHeroLookup, hero_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsHeroLookup, persona_),
  2,
  3,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair, position_category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair, position_count_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsHeroPositionInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsHeroPositionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsHeroPositionInfo, average_position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsHeroPositionInfo, position_details_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsHeroMinuteDetails, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsHeroMinuteDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsHeroMinuteDetails, last_hits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsHeroMinuteDetails, hero_kills_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsHeroMinuteDetails, hero_damage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsHeroMinuteDetails, tower_damage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsHeroMinuteDetails, position_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsHeroMinuteDetails, total_xp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsHeroMinuteDetails, net_worth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsHeroMinuteDetails, harvested_creep_gold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsHeroMinuteDetails, claimed_farm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsHeroMinuteDetails, wards_placed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsHeroMinuteDetails, runes_collected_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsHeroMinuteDetails, tps_used_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsHeroMinuteDetails, mana_spent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsHeroMinuteDetails, damage_absorbed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsHeroMinuteDetails, damage_done_),
  1,
  2,
  3,
  4,
  0,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance, location_category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance, stat_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance, value_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsTeamMinuteDetails, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsTeamMinuteDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsTeamMinuteDetails, player_stats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsTeamMinuteDetails, tower_kills_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsTeamMinuteDetails, barrack_kills_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsTeamMinuteDetails, available_lane_creep_gold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsTeamMinuteDetails, balance_kill_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsTeamMinuteDetails, balance_tower_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsTeamMinuteDetails, balance_barracks_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsTeamMinuteDetails, balance_gold_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsTeamMinuteDetails, balance_xp_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsTeamMinuteDetails, lane_performance_),
  ~0u,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsPlayerKillShare, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsPlayerKillShare, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsPlayerKillShare, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsPlayerKillShare, kill_share_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsPlayerKillShare, player_loc_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsPlayerKillShare, player_loc_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsPlayerKillShare, health_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsPlayerKillShare, mana_percent_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsKillDetails, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsKillDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsKillDetails, victim_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsKillDetails, kill_shares_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsKillDetails, damage_to_kill_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsKillDetails, effective_health_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsKillDetails, death_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsKillDetails, killer_id_),
  0,
  ~0u,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails, participants_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails, deaths_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails, gold_delta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails, xp_delta_),
  ~0u,
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails, end_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails, radiant_fight_details_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails, dire_fight_details_),
  2,
  3,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsMatchDetails, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsMatchDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsMatchDetails, hero_lookup_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsMatchDetails, radiant_stats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsMatchDetails, dire_stats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsMatchDetails, radiant_kills_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsMatchDetails, dire_kills_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_StatsMatchDetails, fight_details_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MiniTaunt, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MiniTaunt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_MiniTaunt, taunting_player_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SpeechBubble, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SpeechBubble, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SpeechBubble, destroy_all_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CustomHeaderMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CustomHeaderMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CustomHeaderMessage, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CustomHeaderMessage, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CustomHeaderMessage, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CustomHeaderMessage, value_),
  1,
  2,
  0,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHeroAbilityStat, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHeroAbilityStat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHeroAbilityStat, stat_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHeroAbilityStat, int_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHeroAbilityStat, float_value_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCombatAnalyzerPlayerStat, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCombatAnalyzerPlayerStat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCombatAnalyzerPlayerStat, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCombatAnalyzerPlayerStat, hero_ability_stats_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCombatAnalyzerStats, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCombatAnalyzerStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCombatAnalyzerStats, match_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgCombatAnalyzerStats, player_stats_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_BeastChat, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_BeastChat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_BeastChat, team_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_BeastChat, format_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_BeastChat, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_BeastChat, target_),
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CustomHudElement_Create, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CustomHudElement_Create, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CustomHudElement_Create, element_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CustomHudElement_Create, layout_filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CustomHudElement_Create, data_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CustomHudElement_Modify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CustomHudElement_Modify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CustomHudElement_Modify, element_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CustomHudElement_Modify, modify_visible_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CustomHudElement_Modify, data_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CustomHudElement_Destroy, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CustomHudElement_Destroy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CustomHudElement_Destroy, element_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CompendiumStatePlayer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CompendiumStatePlayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CompendiumStatePlayer, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CompendiumStatePlayer, level_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CompendiumState, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CompendiumState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CompendiumState, compendium_players_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ProjectionAbility, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ProjectionAbility, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ProjectionAbility, ability_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ProjectionAbility, caster_ent_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ProjectionAbility, caster_team_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ProjectionAbility, channel_end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ProjectionAbility, origin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ProjectionAbility, track_caster_only_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ProjectionAbility, end_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ProjectionAbility, victim_ent_index_),
  1,
  2,
  3,
  4,
  0,
  5,
  6,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ProjectionEvent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ProjectionEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ProjectionEvent, event_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ProjectionEvent, team_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_XPAlert, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_XPAlert, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_XPAlert, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_XPAlert, target_entindex_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UpdateQuestProgress, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_UpdateQuestProgress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_QuestStatus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_QuestStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_QuestStatus, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_QuestStatus, quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_QuestStatus, challenge_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_QuestStatus, progress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_QuestStatus, goal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_QuestStatus, query_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_QuestStatus, fail_gametime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_QuestStatus, item_ability_id_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SuggestHeroPick, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SuggestHeroPick, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SuggestHeroPick, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SuggestHeroPick, hero_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SuggestHeroPick, ban_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SuggestHeroRole, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SuggestHeroRole, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SuggestHeroRole, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SuggestHeroRole, hero_role_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_KillcamDamageTaken, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_KillcamDamageTaken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_KillcamDamageTaken, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_KillcamDamageTaken, damage_taken_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_KillcamDamageTaken, item_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_KillcamDamageTaken, item_ability_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_KillcamDamageTaken, hero_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_KillcamDamageTaken, damage_color_),
  2,
  3,
  4,
  5,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SelectPenaltyGold, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SelectPenaltyGold, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SelectPenaltyGold, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SelectPenaltyGold, cost_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_RollDiceResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_RollDiceResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_RollDiceResult, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_RollDiceResult, channel_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_RollDiceResult, roll_min_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_RollDiceResult, roll_max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_RollDiceResult, result_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_FlipCoinResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_FlipCoinResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_FlipCoinResult, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_FlipCoinResult, channel_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_FlipCoinResult, result_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMessage_RequestItemSuggestions, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMessage_RequestItemSuggestions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMessage_RequestItemSuggestions, player_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMessage_TeamCaptainChanged, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMessage_TeamCaptainChanged, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMessage_TeamCaptainChanged, team_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMessage_TeamCaptainChanged, captain_player_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ChatWheelCooldown, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ChatWheelCooldown, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ChatWheelCooldown, message_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ChatWheelCooldown, cooldown_remaining_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_HeroRelicProgress, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_HeroRelicProgress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_HeroRelicProgress, hero_relic_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_HeroRelicProgress, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_HeroRelicProgress, ehandle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_HeroRelicProgress, event_id_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_AbilityDraftRequestAbility, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_AbilityDraftRequestAbility, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_AbilityDraftRequestAbility, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_AbilityDraftRequestAbility, requested_ability_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_DamageReport, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_DamageReport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_DamageReport, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_DamageReport, target_hero_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_DamageReport, source_hero_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_DamageReport, damage_amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_DamageReport, broadcast_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SalutePlayer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SalutePlayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SalutePlayer, source_player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SalutePlayer, target_player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SalutePlayer, tip_amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_SalutePlayer, event_id_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TipAlert, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TipAlert, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TipAlert, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_TipAlert, tip_text_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ReplaceQueryUnit, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ReplaceQueryUnit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ReplaceQueryUnit, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ReplaceQueryUnit, source_entindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_ReplaceQueryUnit, target_entindex_),
  0,
  1,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::CDOTAUserMsg_AIDebugLine)},
  { 7, 14, sizeof(::CDOTAUserMsg_Ping)},
  { 16, 22, sizeof(::CDOTAUserMsg_SwapVerify)},
  { 23, 38, sizeof(::CDOTAUserMsg_ChatEvent)},
  { 48, 57, sizeof(::CDOTAUserMsg_BotChat)},
  { 61, 70, sizeof(::CDOTAUserMsg_CombatHeroPositions)},
  { 74, 83, sizeof(::CDOTAUserMsg_CombatLogBulkData)},
  { 87, 94, sizeof(::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability)},
  { 96, 105, sizeof(::CDOTAUserMsg_MiniKillCamInfo_Attacker)},
  { 109, 115, sizeof(::CDOTAUserMsg_MiniKillCamInfo)},
  { 116, 123, sizeof(::CDOTAUserMsg_GlobalLightColor)},
  { 125, 132, sizeof(::CDOTAUserMsg_GlobalLightDirection)},
  { 134, 141, sizeof(::CDOTAUserMsg_LocationPing)},
  { 143, 150, sizeof(::CDOTAUserMsg_ItemAlert)},
  { 152, 165, sizeof(::CDOTAUserMsg_EnemyItemAlert)},
  { 173, 184, sizeof(::CDOTAUserMsg_ModifierAlert)},
  { 190, 198, sizeof(::CDOTAUserMsg_HPManaAlert)},
  { 201, 208, sizeof(::CDOTAUserMsg_GlyphAlert)},
  { 210, 219, sizeof(::CDOTAUserMsg_WillPurchaseAlert)},
  { 223, 231, sizeof(::CDOTAUserMsg_EmptyTeleportAlert)},
  { 234, 240, sizeof(::CDOTAUserMsg_BuyBackStateAlert)},
  { 241, 251, sizeof(::CDOTAUserMsg_QuickBuyAlert)},
  { 256, 263, sizeof(::CDOTAUserMsg_CourierKilledAlert_LostItem)},
  { 265, 276, sizeof(::CDOTAUserMsg_CourierKilledAlert)},
  { 282, 293, sizeof(::CDOTAUserMsg_MinimapEvent)},
  { 299, 306, sizeof(::CDOTAUserMsg_MapLine)},
  { 308, 318, sizeof(::CDOTAUserMsg_MinimapDebugPoint)},
  { 323, 339, sizeof(::CDOTAUserMsg_CreateLinearProjectile)},
  { 350, 356, sizeof(::CDOTAUserMsg_DestroyLinearProjectile)},
  { 357, 364, sizeof(::CDOTAUserMsg_DodgeTrackingProjectiles)},
  { 366, 374, sizeof(::CDOTAUserMsg_SpectatorPlayerClick)},
  { 377, 390, sizeof(::CDOTAUserMsg_SpectatorPlayerUnitOrders)},
  { 398, 407, sizeof(::CDOTAUserMsg_NevermoreRequiem)},
  { 411, 417, sizeof(::CDOTAUserMsg_InvalidCommand)},
  { 418, 424, sizeof(::CDOTAUserMsg_HudError)},
  { 425, 434, sizeof(::CDOTAUserMsg_SharedCooldown)},
  { 438, 444, sizeof(::CDOTAUserMsg_SetNextAutobuyItem)},
  { 445, 453, sizeof(::CDOTAUserMsg_HalloweenDrops)},
  { 456, 466, sizeof(::CDOTAUserMsg_PredictionResult_Prediction)},
  { 471, 480, sizeof(::CDOTAUserMsg_PredictionResult)},
  { 484, 493, sizeof(::CDOTAResponseQuerySerialized_Fact)},
  { 497, 503, sizeof(::CDOTAResponseQuerySerialized)},
  { 504, 513, sizeof(::CDOTASpeechMatchOnClient)},
  { 517, 527, sizeof(::CDOTAUserMsg_UnitEvent_Speech)},
  { 532, 538, sizeof(::CDOTAUserMsg_UnitEvent_SpeechMute)},
  { 539, 550, sizeof(::CDOTAUserMsg_UnitEvent_AddGesture)},
  { 556, 562, sizeof(::CDOTAUserMsg_UnitEvent_RemoveGesture)},
  { 563, 571, sizeof(::CDOTAUserMsg_UnitEvent_BloodImpact)},
  { 574, 580, sizeof(::CDOTAUserMsg_UnitEvent_FadeGesture)},
  { 581, 595, sizeof(::CDOTAUserMsg_UnitEvent)},
  { 604, 610, sizeof(::CDOTAUserMsg_ItemPurchased)},
  { 611, 617, sizeof(::CDOTAUserMsg_ItemSold)},
  { 618, 628, sizeof(::CDOTAUserMsg_ItemFound)},
  { 633, 643, sizeof(::CDOTAUserMsg_OverheadEvent)},
  { 648, 655, sizeof(::CDOTAUserMsg_TutorialTipInfo)},
  { 657, 666, sizeof(::CDOTAUserMsg_TutorialFinish)},
  { 670, 675, sizeof(::CDOTAUserMsg_TutorialMinimapPosition)},
  { 675, 684, sizeof(::CDOTAUserMsg_SendGenericToolTip)},
  { 688, 695, sizeof(::CDOTAUserMsg_WorldLine)},
  { 697, 706, sizeof(::CDOTAUserMsg_ChatWheel)},
  { 710, 718, sizeof(::CDOTAUserMsg_ReceivedXmasGift)},
  { 721, 732, sizeof(::CDOTAUserMsg_ShowSurvey)},
  { 738, 744, sizeof(::CDOTAUserMsg_UpdateSharedContent)},
  { 745, 750, sizeof(::CDOTAUserMsg_TutorialRequestExp)},
  { 750, 756, sizeof(::CDOTAUserMsg_TutorialFade)},
  { 757, 767, sizeof(::CDOTAUserMsg_TutorialPingMinimap)},
  { 772, 778, sizeof(::CDOTAUserMsg_GamerulesStateChanged)},
  { 779, 786, sizeof(::CDOTAUserMsg_AddQuestLogEntry)},
  { 788, 795, sizeof(::CDOTAUserMsg_SendStatPopup)},
  { 797, 803, sizeof(::CDOTAUserMsg_DismissAllStatPopups)},
  { 804, 812, sizeof(::CDOTAUserMsg_SendRoshanSpectatorPhase)},
  { 815, 822, sizeof(::CDOTAUserMsg_SendRoshanPopup)},
  { 824, 831, sizeof(::CDOTAUserMsg_SendFinalGold)},
  { 833, 841, sizeof(::CDOTAUserMsg_CustomMsg)},
  { 844, 851, sizeof(::CDOTAUserMsg_CoachHUDPing)},
  { 853, 858, sizeof(::CDOTAUserMsg_ClientLoadGridNav)},
  { 858, 876, sizeof(::CDOTAUserMsg_TE_Projectile)},
  { 889, 905, sizeof(::CDOTAUserMsg_TE_ProjectileLoc)},
  { 916, 922, sizeof(::CDOTAUserMsg_TE_DestroyProjectile)},
  { 923, 932, sizeof(::CDOTAUserMsg_TE_DotaBloodImpact)},
  { 936, 953, sizeof(::CDOTAUserMsg_AbilityPing)},
  { 965, 976, sizeof(::CDOTAUserMsg_TE_UnitAnimation)},
  { 982, 989, sizeof(::CDOTAUserMsg_TE_UnitAnimationEnd)},
  { 991, 1002, sizeof(::CDOTAUserMsg_ShowGenericPopup)},
  { 1008, 1017, sizeof(::CDOTAUserMsg_VoteStart)},
  { 1021, 1027, sizeof(::CDOTAUserMsg_VoteUpdate)},
  { 1028, 1034, sizeof(::CDOTAUserMsg_VoteEnd)},
  { 1035, 1045, sizeof(::CDOTAUserMsg_BoosterStatePlayer)},
  { 1050, 1056, sizeof(::CDOTAUserMsg_BoosterState)},
  { 1057, 1063, sizeof(::CDOTAUserMsg_PlayerMMR)},
  { 1064, 1072, sizeof(::CDOTAUserMsg_AbilitySteal)},
  { 1075, 1084, sizeof(::CDOTAUserMsg_StatsHeroLookup)},
  { 1088, 1095, sizeof(::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair)},
  { 1097, 1104, sizeof(::CDOTAUserMsg_StatsHeroPositionInfo)},
  { 1106, 1126, sizeof(::CDOTAUserMsg_StatsHeroMinuteDetails)},
  { 1141, 1149, sizeof(::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance)},
  { 1152, 1167, sizeof(::CDOTAUserMsg_StatsTeamMinuteDetails)},
  { 1177, 1188, sizeof(::CDOTAUserMsg_StatsPlayerKillShare)},
  { 1194, 1205, sizeof(::CDOTAUserMsg_StatsKillDetails)},
  { 1211, 1220, sizeof(::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails)},
  { 1224, 1233, sizeof(::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails)},
  { 1237, 1248, sizeof(::CDOTAUserMsg_StatsMatchDetails)},
  { 1254, 1260, sizeof(::CDOTAUserMsg_MiniTaunt)},
  { 1261, 1267, sizeof(::CDOTAUserMsg_SpeechBubble)},
  { 1268, 1277, sizeof(::CDOTAUserMsg_CustomHeaderMessage)},
  { 1281, 1289, sizeof(::CMsgHeroAbilityStat)},
  { 1292, 1299, sizeof(::CMsgCombatAnalyzerPlayerStat)},
  { 1301, 1308, sizeof(::CMsgCombatAnalyzerStats)},
  { 1310, 1319, sizeof(::CDOTAUserMsg_BeastChat)},
  { 1323, 1331, sizeof(::CDOTAUserMsg_CustomHudElement_Create)},
  { 1334, 1342, sizeof(::CDOTAUserMsg_CustomHudElement_Modify)},
  { 1345, 1351, sizeof(::CDOTAUserMsg_CustomHudElement_Destroy)},
  { 1352, 1359, sizeof(::CDOTAUserMsg_CompendiumStatePlayer)},
  { 1361, 1367, sizeof(::CDOTAUserMsg_CompendiumState)},
  { 1368, 1381, sizeof(::CDOTAUserMsg_ProjectionAbility)},
  { 1389, 1396, sizeof(::CDOTAUserMsg_ProjectionEvent)},
  { 1398, 1405, sizeof(::CDOTAUserMsg_XPAlert)},
  { 1407, 1412, sizeof(::CDOTAUserMsg_UpdateQuestProgress)},
  { 1412, 1425, sizeof(::CDOTAUserMsg_QuestStatus)},
  { 1433, 1441, sizeof(::CDOTAUserMsg_SuggestHeroPick)},
  { 1444, 1451, sizeof(::CDOTAUserMsg_SuggestHeroRole)},
  { 1453, 1464, sizeof(::CDOTAUserMsg_KillcamDamageTaken)},
  { 1470, 1477, sizeof(::CDOTAUserMsg_SelectPenaltyGold)},
  { 1479, 1489, sizeof(::CDOTAUserMsg_RollDiceResult)},
  { 1494, 1502, sizeof(::CDOTAUserMsg_FlipCoinResult)},
  { 1505, 1511, sizeof(::CDOTAUserMessage_RequestItemSuggestions)},
  { 1512, 1519, sizeof(::CDOTAUserMessage_TeamCaptainChanged)},
  { 1521, 1528, sizeof(::CDOTAUserMsg_ChatWheelCooldown)},
  { 1530, 1539, sizeof(::CDOTAUserMsg_HeroRelicProgress)},
  { 1543, 1550, sizeof(::CDOTAUserMsg_AbilityDraftRequestAbility)},
  { 1552, 1562, sizeof(::CDOTAUserMsg_DamageReport)},
  { 1567, 1576, sizeof(::CDOTAUserMsg_SalutePlayer)},
  { 1580, 1587, sizeof(::CDOTAUserMsg_TipAlert)},
  { 1589, 1597, sizeof(::CDOTAUserMsg_ReplaceQueryUnit)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_AIDebugLine_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_Ping_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_SwapVerify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_ChatEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_BotChat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_CombatHeroPositions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_CombatLogBulkData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_MiniKillCamInfo_Attacker_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_MiniKillCamInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_GlobalLightColor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_GlobalLightDirection_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_LocationPing_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_ItemAlert_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_EnemyItemAlert_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_ModifierAlert_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_HPManaAlert_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_GlyphAlert_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_WillPurchaseAlert_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_EmptyTeleportAlert_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_BuyBackStateAlert_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_QuickBuyAlert_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_CourierKilledAlert_LostItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_CourierKilledAlert_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_MinimapEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_MapLine_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_MinimapDebugPoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_CreateLinearProjectile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_DestroyLinearProjectile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_DodgeTrackingProjectiles_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_SpectatorPlayerClick_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_SpectatorPlayerUnitOrders_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_NevermoreRequiem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_InvalidCommand_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_HudError_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_SharedCooldown_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_SetNextAutobuyItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_HalloweenDrops_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_PredictionResult_Prediction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_PredictionResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAResponseQuerySerialized_Fact_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAResponseQuerySerialized_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTASpeechMatchOnClient_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_UnitEvent_Speech_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_UnitEvent_SpeechMute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_UnitEvent_AddGesture_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_UnitEvent_RemoveGesture_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_UnitEvent_BloodImpact_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_UnitEvent_FadeGesture_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_UnitEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_ItemPurchased_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_ItemSold_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_ItemFound_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_OverheadEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_TutorialTipInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_TutorialFinish_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_TutorialMinimapPosition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_SendGenericToolTip_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_WorldLine_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_ChatWheel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_ReceivedXmasGift_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_ShowSurvey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_UpdateSharedContent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_TutorialRequestExp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_TutorialFade_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_TutorialPingMinimap_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_GamerulesStateChanged_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_AddQuestLogEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_SendStatPopup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_DismissAllStatPopups_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_SendRoshanSpectatorPhase_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_SendRoshanPopup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_SendFinalGold_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_CustomMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_CoachHUDPing_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_ClientLoadGridNav_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_TE_Projectile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_TE_ProjectileLoc_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_TE_DestroyProjectile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_TE_DotaBloodImpact_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_AbilityPing_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_TE_UnitAnimation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_TE_UnitAnimationEnd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_ShowGenericPopup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_VoteStart_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_VoteUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_VoteEnd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_BoosterStatePlayer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_BoosterState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_PlayerMMR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_AbilitySteal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_StatsHeroLookup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_StatsHeroPositionInfo_PositionPair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_StatsHeroPositionInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_StatsHeroMinuteDetails_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_StatsTeamMinuteDetails_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_StatsPlayerKillShare_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_StatsKillDetails_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_StatsMatchDetails_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_MiniTaunt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_SpeechBubble_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_CustomHeaderMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgHeroAbilityStat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgCombatAnalyzerPlayerStat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgCombatAnalyzerStats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_BeastChat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_CustomHudElement_Create_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_CustomHudElement_Modify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_CustomHudElement_Destroy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_CompendiumStatePlayer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_CompendiumState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_ProjectionAbility_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_ProjectionEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_XPAlert_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_UpdateQuestProgress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_QuestStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_SuggestHeroPick_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_SuggestHeroRole_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_KillcamDamageTaken_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_SelectPenaltyGold_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_RollDiceResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_FlipCoinResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMessage_RequestItemSuggestions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMessage_TeamCaptainChanged_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_ChatWheelCooldown_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_HeroRelicProgress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_AbilityDraftRequestAbility_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_DamageReport_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_SalutePlayer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_TipAlert_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_ReplaceQueryUnit_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "dota_usermessages.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 134);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027dota_usermessages.proto\032\026networkbasety"
      "pes.proto\032\027dota_shared_enums.proto\032\031dota"
      "_commonmessages.proto\"+\n\030CDOTAUserMsg_AI"
      "DebugLine\022\017\n\007message\030\001 \001(\t\"/\n\021CDOTAUserM"
      "sg_Ping\022\014\n\004ping\030\002 \001(\r\022\014\n\004loss\030\003 \001(\r\",\n\027C"
      "DOTAUserMsg_SwapVerify\022\021\n\tplayer_id\030\001 \001("
      "\r\"\217\002\n\026CDOTAUserMsg_ChatEvent\0226\n\004type\030\001 \002"
      "(\0162\022.DOTA_CHAT_MESSAGE:\024CHAT_MESSAGE_INV"
      "ALID\022\r\n\005value\030\002 \001(\r\022\026\n\nplayerid_1\030\003 \001(\021:"
      "\002-1\022\026\n\nplayerid_2\030\004 \001(\021:\002-1\022\026\n\nplayerid_"
      "3\030\005 \001(\021:\002-1\022\026\n\nplayerid_4\030\006 \001(\021:\002-1\022\026\n\np"
      "layerid_5\030\007 \001(\021:\002-1\022\026\n\nplayerid_6\030\010 \001(\021:"
      "\002-1\022\016\n\006value2\030\t \001(\r\022\016\n\006value3\030\n \001(\r\"]\n\024C"
      "DOTAUserMsg_BotChat\022\021\n\tplayer_id\030\001 \001(\r\022\017"
      "\n\007message\030\003 \001(\t\022\016\n\006target\030\004 \001(\t\022\021\n\tteam_"
      "only\030\005 \001(\010\"q\n CDOTAUserMsg_CombatHeroPos"
      "itions\022\r\n\005index\030\001 \001(\r\022\014\n\004time\030\002 \001(\005\022 \n\tw"
      "orld_pos\030\003 \001(\0132\r.CMsgVector2D\022\016\n\006health\030"
      "\004 \001(\005\"\211\001\n\036CDOTAUserMsg_CombatLogBulkData"
      "\022/\n\016combat_entries\030\001 \003(\0132\027.CMsgDOTAComba"
      "tLogEntry\022\021\n\ttimestamp\030\002 \001(\002\022\020\n\010duration"
      "\030\003 \001(\002\022\021\n\tplayer_id\030\004 \001(\r\"\227\002\n\034CDOTAUserM"
      "sg_MiniKillCamInfo\0229\n\tattackers\030\001 \003(\0132&."
      "CDOTAUserMsg_MiniKillCamInfo.Attacker\032\273\001"
      "\n\010Attacker\022\020\n\010attacker\030\001 \001(\r\022\024\n\014total_da"
      "mage\030\002 \001(\005\022A\n\tabilities\030\003 \003(\0132..CDOTAUse"
      "rMsg_MiniKillCamInfo.Attacker.Ability\022\025\n"
      "\rattacker_name\030\004 \001(\t\032-\n\007Ability\022\022\n\nabili"
      "ty_id\030\001 \001(\r\022\016\n\006damage\030\002 \001(\005\"@\n\035CDOTAUser"
      "Msg_GlobalLightColor\022\r\n\005color\030\001 \001(\r\022\020\n\010d"
      "uration\030\002 \001(\002\"U\n!CDOTAUserMsg_GlobalLigh"
      "tDirection\022\036\n\tdirection\030\001 \001(\0132\013.CMsgVect"
      "or\022\020\n\010duration\030\002 \001(\002\"]\n\031CDOTAUserMsg_Loc"
      "ationPing\022\021\n\tplayer_id\030\001 \001(\r\022-\n\rlocation"
      "_ping\030\002 \001(\0132\026.CDOTAMsg_LocationPing\"T\n\026C"
      "DOTAUserMsg_ItemAlert\022\021\n\tplayer_id\030\001 \001(\r"
      "\022\'\n\nitem_alert\030\002 \001(\0132\023.CDOTAMsg_ItemAler"
      "t\"\335\001\n\033CDOTAUserMsg_EnemyItemAlert\022\021\n\tpla"
      "yer_id\030\001 \001(\r\022\030\n\020target_player_id\030\002 \001(\r\022\027"
      "\n\017item_ability_id\030\003 \001(\005\022\021\n\trune_type\030\004 \001"
      "(\r\022\021\n\tentity_id\030\005 \001(\005\022\026\n\nitem_level\030\006 \001("
      "\005:\002-1\022\033\n\017primary_charges\030\007 \001(\005:\002-1\022\035\n\021se"
      "condary_charges\030\010 \001(\005:\002-1\"\237\001\n\032CDOTAUserM"
      "sg_ModifierAlert\022\021\n\tplayer_id\030\001 \001(\r\022\022\n\nc"
      "lass_name\030\002 \001(\t\022\023\n\013stack_count\030\003 \001(\r\022\021\n\t"
      "is_debuff\030\004 \001(\010\022\027\n\017target_entindex\030\005 \001(\r"
      "\022\031\n\021seconds_remaining\030\006 \001(\002\"_\n\030CDOTAUser"
      "Msg_HPManaAlert\022\021\n\tplayer_id\030\001 \001(\r\022\027\n\017ta"
      "rget_entindex\030\002 \001(\r\022\027\n\017show_raw_values\030\003"
      " \001(\010\">\n\027CDOTAUserMsg_GlyphAlert\022\021\n\tplaye"
      "r_id\030\001 \001(\r\022\020\n\010negative\030\002 \001(\010\"\202\001\n\036CDOTAUs"
      "erMsg_WillPurchaseAlert\022\027\n\017item_ability_"
      "id\030\001 \001(\005\022\021\n\tplayer_id\030\002 \001(\005\022\026\n\016gold_rema"
      "ining\030\003 \001(\r\022\034\n\024suggestion_player_id\030\004 \001("
      "\005\"o\n\037CDOTAUserMsg_EmptyTeleportAlert\022\030\n\020"
      "source_player_id\030\001 \001(\005\022\030\n\020target_player_"
      "id\030\002 \001(\005\022\030\n\020cooldown_seconds\030\003 \001(\005\"3\n\036CD"
      "OTAUserMsg_BuyBackStateAlert\022\021\n\tplayer_i"
      "d\030\001 \001(\005\"\220\001\n\032CDOTAUserMsg_QuickBuyAlert\022\021"
      "\n\tplayer_id\030\001 \001(\005\022\027\n\017item_ability_id\030\002 \001"
      "(\005\022\021\n\tgold_cost\030\003 \001(\005\022\035\n\025item_cooldown_s"
      "econds\030\004 \001(\005\022\024\n\014show_buyback\030\005 \001(\010\"\375\001\n\037C"
      "DOTAUserMsg_CourierKilledAlert\022\014\n\004team\030\001"
      " \001(\r\022\022\n\ngold_value\030\002 \001(\r\022\025\n\rentity_handl"
      "e\030\003 \001(\005\022\021\n\ttimestamp\030\004 \001(\005\022=\n\nlost_items"
      "\030\005 \003(\0132).CDOTAUserMsg_CourierKilledAlert"
      ".LostItem\022\030\n\020killer_player_id\030\006 \001(\005\0325\n\010L"
      "ostItem\022\027\n\017item_ability_id\030\001 \001(\005\022\020\n\010quan"
      "tity\030\002 \001(\r\"\214\001\n\031CDOTAUserMsg_MinimapEvent"
      "\022\022\n\nevent_type\030\001 \001(\005\022\025\n\rentity_handle\030\002 "
      "\001(\005\022\t\n\001x\030\003 \001(\005\022\t\n\001y\030\004 \001(\005\022\020\n\010duration\030\005 "
      "\001(\005\022\034\n\024target_entity_handle\030\006 \001(\005\"M\n\024CDO"
      "TAUserMsg_MapLine\022\021\n\tplayer_id\030\001 \001(\005\022\"\n\007"
      "mapline\030\002 \001(\0132\021.CDOTAMsg_MapLine\"}\n\036CDOT"
      "AUserMsg_MinimapDebugPoint\022\035\n\010location\030\001"
      " \001(\0132\013.CMsgVector\022\r\n\005color\030\002 \001(\r\022\014\n\004size"
      "\030\003 \001(\005\022\020\n\010duration\030\004 \001(\002\022\r\n\005index\030\005 \001(\005\""
      "\255\002\n#CDOTAUserMsg_CreateLinearProjectile\022"
      "\033\n\006origin\030\001 \001(\0132\013.CMsgVector\022\037\n\010velocity"
      "\030\002 \001(\0132\r.CMsgVector2D\022\020\n\010entindex\030\004 \001(\005\022"
      "\026\n\016particle_index\030\005 \001(\004\022\016\n\006handle\030\006 \001(\005\022"
      "#\n\014acceleration\030\007 \001(\0132\r.CMsgVector2D\022\021\n\t"
      "max_speed\030\010 \001(\002\022\022\n\nfow_radius\030\t \001(\002\022\031\n\021s"
      "ticky_fow_reveal\030\n \001(\010\022\020\n\010distance\030\013 \001(\002"
      "\022\025\n\rcolorgemcolor\030\014 \001(\007\"6\n$CDOTAUserMsg_"
      "DestroyLinearProjectile\022\016\n\006handle\030\001 \001(\005\""
      "O\n%CDOTAUserMsg_DodgeTrackingProjectiles"
      "\022\020\n\010entindex\030\001 \002(\005\022\024\n\014attacks_only\030\002 \001(\010"
      "\"_\n!CDOTAUserMsg_SpectatorPlayerClick\022\020\n"
      "\010entindex\030\001 \002(\005\022\022\n\norder_type\030\002 \001(\005\022\024\n\014t"
      "arget_index\030\003 \001(\005\"\316\001\n&CDOTAUserMsg_Spect"
      "atorPlayerUnitOrders\022\020\n\010entindex\030\001 \001(\005\022\022"
      "\n\norder_type\030\002 \001(\005\022\r\n\005units\030\003 \003(\005\022\024\n\014tar"
      "get_index\030\004 \001(\005\022\022\n\nability_id\030\005 \001(\005\022\035\n\010p"
      "osition\030\006 \001(\0132\013.CMsgVector\022\r\n\005queue\030\007 \001("
      "\010\022\027\n\017sequence_number\030\010 \001(\005\"s\n\035CDOTAUserM"
      "sg_NevermoreRequiem\022\025\n\rentity_handle\030\001 \001"
      "(\005\022\r\n\005lines\030\002 \001(\005\022\033\n\006origin\030\003 \001(\0132\013.CMsg"
      "Vector\022\017\n\007reverse\030\004 \001(\010\".\n\033CDOTAUserMsg_"
      "InvalidCommand\022\017\n\007message\030\001 \001(\t\")\n\025CDOTA"
      "UserMsg_HudError\022\020\n\010order_id\030\001 \001(\005\"c\n\033CD"
      "OTAUserMsg_SharedCooldown\022\020\n\010entindex\030\001 "
      "\001(\005\022\014\n\004name\030\002 \001(\t\022\020\n\010cooldown\030\003 \001(\002\022\022\n\nn"
      "ame_index\030\004 \001(\005\"/\n\037CDOTAUserMsg_SetNextA"
      "utobuyItem\022\014\n\004name\030\001 \001(\t\"X\n\033CDOTAUserMsg"
      "_HalloweenDrops\022\021\n\titem_defs\030\001 \003(\r\022\022\n\npl"
      "ayer_ids\030\002 \003(\r\022\022\n\nprize_list\030\003 \001(\r\"\223\003\n\035C"
      "DOTAUserMsg_PredictionResult\022\022\n\naccount_"
      "id\030\001 \001(\r\022\020\n\010match_id\030\002 \001(\004\022\017\n\007correct\030\003 "
      "\001(\010\022>\n\013predictions\030\004 \003(\0132).CDOTAUserMsg_"
      "PredictionResult.Prediction\032\372\001\n\nPredicti"
      "on\022\020\n\010item_def\030\001 \001(\r\022\023\n\013num_correct\030\002 \001("
      "\r\022\021\n\tnum_fails\030\003 \001(\r\022X\n\006result\030\004 \001(\01621.C"
      "DOTAUserMsg_PredictionResult.Prediction."
      "EResult:\025k_eResult_ItemGranted\022\031\n\021grante"
      "d_item_defs\030\006 \003(\r\"=\n\007EResult\022\031\n\025k_eResul"
      "t_ItemGranted\020\001\022\027\n\023k_eResult_Destroyed\020\002"
      "\"\376\001\n\034CDOTAResponseQuerySerialized\0221\n\005fac"
      "ts\030\001 \003(\0132\".CDOTAResponseQuerySerialized."
      "Fact\032\252\001\n\004Fact\022\013\n\003key\030\001 \002(\005\022F\n\007valtype\030\002 "
      "\002(\0162,.CDOTAResponseQuerySerialized.Fact."
      "ValueType:\007NUMERIC\022\023\n\013val_numeric\030\003 \001(\002\022"
      "\022\n\nval_string\030\004 \001(\t\"$\n\tValueType\022\013\n\007NUME"
      "RIC\020\001\022\n\n\006STRING\020\002\"\220\001\n\030CDOTASpeechMatchOn"
      "Client\022\017\n\007concept\030\001 \001(\005\022\026\n\016recipient_typ"
      "e\030\002 \001(\005\0224\n\rresponsequery\030\003 \001(\0132\035.CDOTARe"
      "sponseQuerySerialized\022\025\n\nrandomseed\030\004 \001("
      "\017:\0010\"\235\007\n\026CDOTAUserMsg_UnitEvent\0228\n\010msg_t"
      "ype\030\001 \002(\0162\024.EDotaEntityMessages:\020DOTA_UN"
      "IT_SPEECH\022\024\n\014entity_index\030\002 \002(\005\022.\n\006speec"
      "h\030\003 \001(\0132\036.CDOTAUserMsg_UnitEvent.Speech\022"
      "7\n\013speech_mute\030\004 \001(\0132\".CDOTAUserMsg_Unit"
      "Event.SpeechMute\0227\n\013add_gesture\030\005 \001(\0132\"."
      "CDOTAUserMsg_UnitEvent.AddGesture\022=\n\016rem"
      "ove_gesture\030\006 \001(\0132%.CDOTAUserMsg_UnitEve"
      "nt.RemoveGesture\0229\n\014blood_impact\030\007 \001(\0132#"
      ".CDOTAUserMsg_UnitEvent.BloodImpact\0229\n\014f"
      "ade_gesture\030\010 \001(\0132#.CDOTAUserMsg_UnitEve"
      "nt.FadeGesture\0229\n\026speech_match_on_client"
      "\030\t \001(\0132\031.CDOTASpeechMatchOnClient\032k\n\006Spe"
      "ech\022\017\n\007concept\030\001 \001(\005\022\020\n\010response\030\002 \001(\t\022\026"
      "\n\016recipient_type\030\003 \001(\005\022\r\n\005level\030\004 \001(\005\022\027\n"
      "\010muteable\030\005 \001(\010:\005false\032 \n\nSpeechMute\022\022\n\005"
      "delay\030\001 \001(\002:\0030.5\032\213\001\n\nAddGesture\022\020\n\010activ"
      "ity\030\001 \001(\005\022\014\n\004slot\030\002 \001(\005\022\022\n\007fade_in\030\003 \001(\002"
      ":\0010\022\025\n\010fade_out\030\004 \001(\002:\0030.1\022\030\n\rplayback_r"
      "ate\030\005 \001(\002:\0011\022\030\n\020sequence_variant\030\006 \001(\005\032!"
      "\n\rRemoveGesture\022\020\n\010activity\030\001 \001(\005\032@\n\013Blo"
      "odImpact\022\r\n\005scale\030\001 \001(\005\022\020\n\010x_normal\030\002 \001("
      "\005\022\020\n\010y_normal\030\003 \001(\005\032\037\n\013FadeGesture\022\020\n\010ac"
      "tivity\030\001 \001(\005\"5\n\032CDOTAUserMsg_ItemPurchas"
      "ed\022\027\n\017item_ability_id\030\001 \001(\005\"0\n\025CDOTAUser"
      "Msg_ItemSold\022\027\n\017item_ability_id\030\001 \001(\005\"j\n"
      "\026CDOTAUserMsg_ItemFound\022\016\n\006player\030\001 \001(\005\022"
      "\017\n\007quality\030\002 \001(\005\022\016\n\006rarity\030\003 \001(\005\022\016\n\006meth"
      "od\030\004 \001(\005\022\017\n\007itemdef\030\005 \001(\005\"\305\001\n\032CDOTAUserM"
      "sg_OverheadEvent\022\?\n\014message_type\030\001 \002(\0162\024"
      ".DOTA_OVERHEAD_ALERT:\023OVERHEAD_ALERT_GOL"
      "D\022\r\n\005value\030\002 \001(\005\022\036\n\026target_player_entind"
      "ex\030\003 \001(\005\022\027\n\017target_entindex\030\004 \001(\005\022\036\n\026sou"
      "rce_player_entindex\030\005 \001(\005\">\n\034CDOTAUserMs"
      "g_TutorialTipInfo\022\014\n\004name\030\001 \001(\t\022\020\n\010progr"
      "ess\030\002 \001(\005\"]\n\033CDOTAUserMsg_TutorialFinish"
      "\022\017\n\007heading\030\001 \001(\t\022\016\n\006emblem\030\002 \001(\t\022\014\n\004bod"
      "y\030\003 \001(\t\022\017\n\007success\030\004 \001(\010\"&\n$CDOTAUserMsg"
      "_TutorialMinimapPosition\"_\n\037CDOTAUserMsg"
      "_SendGenericToolTip\022\r\n\005title\030\001 \001(\t\022\014\n\004te"
      "xt\030\002 \001(\t\022\020\n\010entindex\030\003 \001(\005\022\r\n\005close\030\004 \001("
      "\010\"S\n\026CDOTAUserMsg_WorldLine\022\021\n\tplayer_id"
      "\030\001 \001(\005\022&\n\tworldline\030\002 \001(\0132\023.CDOTAMsg_Wor"
      "ldLine\"o\n\026CDOTAUserMsg_ChatWheel\022\027\n\017chat"
      "_message_id\030\001 \001(\r\022\021\n\tplayer_id\030\002 \001(\r\022\022\n\n"
      "account_id\030\003 \001(\r\022\025\n\rparam_hero_id\030\004 \001(\r\""
      "]\n\035CDOTAUserMsg_ReceivedXmasGift\022\021\n\tplay"
      "er_id\030\001 \001(\005\022\021\n\titem_name\030\002 \001(\t\022\026\n\016invent"
      "ory_slot\030\003 \001(\005\"\244\001\n\027CDOTAUserMsg_ShowSurv"
      "ey\022\021\n\tsurvey_id\030\001 \001(\005\022\020\n\010match_id\030\002 \001(\004\022"
      "\026\n\016response_style\030\003 \001(\t\022\030\n\020teammate_hero"
      "_id\030\004 \001(\r\022\025\n\rteammate_name\030\005 \001(\t\022\033\n\023team"
      "mate_account_id\030\006 \001(\r\"5\n CDOTAUserMsg_Up"
      "dateSharedContent\022\021\n\tslot_type\030\001 \001(\005\"!\n\037"
      "CDOTAUserMsg_TutorialRequestExp\".\n\031CDOTA"
      "UserMsg_TutorialFade\022\021\n\ttgt_alpha\030\001 \001(\005\""
      "x\n CDOTAUserMsg_TutorialPingMinimap\022\021\n\tp"
      "layer_id\030\001 \001(\r\022\r\n\005pos_x\030\002 \001(\002\022\r\n\005pos_y\030\003"
      " \001(\002\022\r\n\005pos_z\030\004 \001(\002\022\024\n\014entity_index\030\005 \001("
      "\005\"3\n\"CDOTAUserMsg_GamerulesStateChanged\022"
      "\r\n\005state\030\001 \001(\r\"E\n\035CDOTAUserMsg_AddQuestL"
      "ogEntry\022\020\n\010npc_name\030\001 \001(\t\022\022\n\nnpc_dialog\030"
      "\002 \001(\t\"[\n\032CDOTAUserMsg_SendStatPopup\022\021\n\tp"
      "layer_id\030\001 \001(\005\022*\n\tstatpopup\030\002 \001(\0132\027.CDOT"
      "AMsg_SendStatPopup\"Z\n!CDOTAUserMsg_Dismi"
      "ssAllStatPopups\0225\n\rdismissallmsg\030\001 \001(\0132\036"
      ".CDOTAMsg_DismissAllStatPopups\"\217\001\n%CDOTA"
      "UserMsg_SendRoshanSpectatorPhase\0226\n\005phas"
      "e\030\001 \001(\0162\022.DOTA_ROSHAN_PHASE:\023k_SRSP_ROSH"
      "AN_ALIVE\022\030\n\020phase_start_time\030\002 \001(\005\022\024\n\014ph"
      "ase_length\030\003 \001(\005\"C\n\034CDOTAUserMsg_SendRos"
      "hanPopup\022\021\n\treclaimed\030\001 \001(\010\022\020\n\010gametime\030"
      "\002 \001(\005\"L\n\032CDOTAUserMsg_SendFinalGold\022\025\n\rr"
      "eliable_gold\030\001 \003(\r\022\027\n\017unreliable_gold\030\002 "
      "\003(\r\"K\n\026CDOTAUserMsg_CustomMsg\022\017\n\007message"
      "\030\001 \001(\t\022\021\n\tplayer_id\030\002 \001(\005\022\r\n\005value\030\003 \001(\005"
      "\"X\n\031CDOTAUserMsg_CoachHUDPing\022\021\n\tplayer_"
      "id\030\001 \001(\r\022(\n\010hud_ping\030\002 \001(\0132\026.CDOTAMsg_Co"
      "achHUDPing\" \n\036CDOTAUserMsg_ClientLoadGri"
      "dNav\"\266\002\n\032CDOTAUserMsg_TE_Projectile\022\017\n\007h"
      "Source\030\001 \001(\005\022\017\n\007hTarget\030\002 \001(\005\022\021\n\tmoveSpe"
      "ed\030\003 \001(\005\022\030\n\020sourceAttachment\030\004 \001(\005\022\034\n\024pa"
      "rticleSystemHandle\030\005 \001(\003\022\021\n\tdodgeable\030\006 "
      "\001(\010\022\020\n\010isAttack\030\007 \001(\010\022\022\n\nexpireTime\030\t \001("
      "\002\022\025\n\rmaximpacttime\030\n \001(\002\022\025\n\rcolorgemcolo"
      "r\030\013 \001(\007\022\023\n\013launch_tick\030\014 \001(\005\022\016\n\006handle\030\r"
      " \001(\005\022\037\n\nvTargetLoc\030\016 \001(\0132\013.CMsgVector\"\230\002"
      "\n\035CDOTAUserMsg_TE_ProjectileLoc\022\037\n\nvSour"
      "ceLoc\030\001 \001(\0132\013.CMsgVector\022\017\n\007hTarget\030\002 \001("
      "\005\022\021\n\tmoveSpeed\030\003 \001(\005\022\034\n\024particleSystemHa"
      "ndle\030\004 \001(\003\022\021\n\tdodgeable\030\005 \001(\010\022\020\n\010isAttac"
      "k\030\006 \001(\010\022\022\n\nexpireTime\030\t \001(\002\022\037\n\nvTargetLo"
      "c\030\n \001(\0132\013.CMsgVector\022\025\n\rcolorgemcolor\030\013 "
      "\001(\007\022\023\n\013launch_tick\030\014 \001(\005\022\016\n\006handle\030\r \001(\005"
      "\"3\n!CDOTAUserMsg_TE_DestroyProjectile\022\016\n"
      "\006handle\030\001 \001(\005\"b\n\037CDOTAUserMsg_TE_DotaBlo"
      "odImpact\022\016\n\006entity\030\001 \001(\005\022\r\n\005scale\030\002 \001(\002\022"
      "\017\n\007xnormal\030\003 \001(\002\022\017\n\007ynormal\030\004 \001(\002\"\270\002\n\030CD"
      "OTAUserMsg_AbilityPing\022\021\n\tplayer_id\030\001 \001("
      "\r\022\022\n\nability_id\030\002 \001(\r\0229\n\004type\030\003 \001(\0162\027.DO"
      "TA_ABILITY_PING_TYPE:\022ABILITY_PING_READY"
      "\022\030\n\020cooldown_seconds\030\004 \001(\r\022\r\n\005level\030\005 \001("
      "\r\022\017\n\007passive\030\006 \001(\010\022\023\n\013mana_needed\030\007 \001(\r\022"
      "\021\n\tentity_id\030\010 \001(\r\022\027\n\017primary_charges\030\t "
      "\001(\005\022\031\n\021secondary_charges\030\n \001(\005\022\021\n\tcaster"
      "_id\030\013 \001(\r\022\021\n\tctrl_held\030\014 \001(\010\"\221\001\n\035CDOTAUs"
      "erMsg_TE_UnitAnimation\022\016\n\006entity\030\001 \001(\005\022\027"
      "\n\017sequenceVariant\030\002 \001(\005\022\024\n\014playbackrate\030"
      "\003 \001(\002\022\021\n\tcastpoint\030\004 \001(\002\022\014\n\004type\030\005 \001(\005\022\020"
      "\n\010activity\030\006 \001(\005\"@\n CDOTAUserMsg_TE_Unit"
      "AnimationEnd\022\016\n\006entity\030\001 \001(\005\022\014\n\004snap\030\002 \001"
      "(\010\"\221\001\n\035CDOTAUserMsg_ShowGenericPopup\022\016\n\006"
      "header\030\001 \002(\t\022\014\n\004body\030\002 \002(\t\022\016\n\006param1\030\003 \001"
      "(\t\022\016\n\006param2\030\004 \001(\t\022\023\n\013tint_screen\030\005 \001(\010\022"
      "\035\n\025show_no_other_dialogs\030\006 \001(\010\"`\n\026CDOTAU"
      "serMsg_VoteStart\022\r\n\005title\030\001 \001(\t\022\020\n\010durat"
      "ion\030\002 \001(\002\022\024\n\014choice_count\030\003 \001(\005\022\017\n\007choic"
      "es\030\004 \003(\t\"0\n\027CDOTAUserMsg_VoteUpdate\022\025\n\rc"
      "hoice_counts\030\001 \003(\005\"/\n\024CDOTAUserMsg_VoteE"
      "nd\022\027\n\017selected_choice\030\001 \001(\005\"\214\001\n\037CDOTAUse"
      "rMsg_BoosterStatePlayer\022\021\n\tplayer_id\030\001 \001"
      "(\r\022\r\n\005bonus\030\002 \001(\002\022\023\n\013event_bonus\030\003 \001(\002\022\025"
      "\n\rbonus_item_id\030\004 \001(\r\022\033\n\023event_bonus_ite"
      "m_id\030\005 \001(\r\"V\n\031CDOTAUserMsg_BoosterState\022"
      "9\n\017boosted_players\030\001 \003(\0132 .CDOTAUserMsg_"
      "BoosterStatePlayer\")\n\026CDOTAUserMsg_Playe"
      "rMMR\022\017\n\003mmr\030\001 \003(\021B\002\020\001\"Y\n\031CDOTAUserMsg_Ab"
      "ilitySteal\022\021\n\tplayer_id\030\001 \001(\r\022\022\n\nability"
      "_id\030\002 \001(\r\022\025\n\rability_level\030\003 \001(\r\"f\n\034CDOT"
      "AUserMsg_StatsHeroLookup\022\021\n\tplayer_id\030\001 "
      "\001(\005\022\017\n\007hero_id\030\002 \001(\005\022\021\n\thero_name\030\003 \001(\t\022"
      "\017\n\007persona\030\004 \001(\t\"\372\001\n\"CDOTAUserMsg_StatsH"
      "eroPositionInfo\022\030\n\020average_position\030\001 \001("
      "\002\022J\n\020position_details\030\002 \003(\01320.CDOTAUserM"
      "sg_StatsHeroPositionInfo.PositionPair\032n\n"
      "\014PositionPair\022F\n\021position_category\030\001 \001(\016"
      "2\027.DOTA_POSITION_CATEGORY:\022DOTA_POSITION"
      "_NONE\022\026\n\016position_count\030\002 \001(\r\"\217\003\n#CDOTAU"
      "serMsg_StatsHeroMinuteDetails\022\021\n\tlast_hi"
      "ts\030\001 \001(\r\022\022\n\nhero_kills\030\002 \001(\r\022\023\n\013hero_dam"
      "age\030\003 \001(\r\022\024\n\014tower_damage\030\004 \001(\r\022:\n\rposit"
      "ion_info\030\005 \001(\0132#.CDOTAUserMsg_StatsHeroP"
      "ositionInfo\022\020\n\010total_xp\030\006 \001(\r\022\021\n\tnet_wor"
      "th\030\007 \001(\r\022\034\n\024harvested_creep_gold\030\010 \001(\r\022\024"
      "\n\014claimed_farm\030\t \001(\r\022\024\n\014wards_placed\030\n \001"
      "(\r\022\027\n\017runes_collected\030\013 \001(\r\022\020\n\010tps_used\030"
      "\014 \001(\r\022\022\n\nmana_spent\030\r \003(\r\022\027\n\017damage_abso"
      "rbed\030\016 \003(\r\022\023\n\013damage_done\030\017 \003(\r\"\347\003\n#CDOT"
      "AUserMsg_StatsTeamMinuteDetails\022:\n\014playe"
      "r_stats\030\001 \003(\0132$.CDOTAUserMsg_StatsHeroMi"
      "nuteDetails\022\023\n\013tower_kills\030\002 \001(\r\022\025\n\rbarr"
      "ack_kills\030\003 \001(\r\022!\n\031available_lane_creep_"
      "gold\030\004 \001(\r\022\032\n\022balance_kill_value\030\005 \001(\r\022\033"
      "\n\023balance_tower_value\030\006 \001(\r\022\036\n\026balance_b"
      "arracks_value\030\007 \001(\r\022\032\n\022balance_gold_valu"
      "e\030\010 \001(\r\022\030\n\020balance_xp_value\030\t \001(\r\022R\n\020lan"
      "e_performance\030\n \003(\01328.CDOTAUserMsg_Stats"
      "TeamMinuteDetails.LocationPerformance\032R\n"
      "\023LocationPerformance\022\031\n\021location_categor"
      "y\030\001 \001(\r\022\021\n\tstat_type\030\002 \001(\r\022\r\n\005value\030\003 \001("
      "\r\"\254\001\n!CDOTAUserMsg_StatsPlayerKillShare\022"
      "\021\n\tplayer_id\030\001 \001(\005\022\032\n\022kill_share_percent"
      "\030\002 \001(\002\022\024\n\014player_loc_x\030\003 \001(\002\022\024\n\014player_l"
      "oc_y\030\004 \001(\002\022\026\n\016health_percent\030\005 \001(\002\022\024\n\014ma"
      "na_percent\030\006 \001(\002\"\304\001\n\035CDOTAUserMsg_StatsK"
      "illDetails\022\021\n\tvictim_id\030\001 \001(\r\0227\n\013kill_sh"
      "ares\030\002 \003(\0132\".CDOTAUserMsg_StatsPlayerKil"
      "lShare\022\026\n\016damage_to_kill\030\003 \001(\r\022\030\n\020effect"
      "ive_health\030\004 \001(\r\022\022\n\ndeath_time\030\005 \001(\002\022\021\n\t"
      "killer_id\030\006 \001(\r\"\213\006\n\036CDOTAUserMsg_StatsMa"
      "tchDetails\0222\n\013hero_lookup\030\001 \003(\0132\035.CDOTAU"
      "serMsg_StatsHeroLookup\022;\n\rradiant_stats\030"
      "\002 \003(\0132$.CDOTAUserMsg_StatsTeamMinuteDeta"
      "ils\0228\n\ndire_stats\030\003 \003(\0132$.CDOTAUserMsg_S"
      "tatsTeamMinuteDetails\0225\n\rradiant_kills\030\004"
      " \003(\0132\036.CDOTAUserMsg_StatsKillDetails\0222\n\n"
      "dire_kills\030\005 \003(\0132\036.CDOTAUserMsg_StatsKil"
      "lDetails\022U\n\rfight_details\030\006 \003(\0132>.CDOTAU"
      "serMsg_StatsMatchDetails.CDOTAUserMsg_St"
      "atsFightDetails\032p\n\"CDOTAUserMsg_StatsFig"
      "htTeamDetails\022\024\n\014participants\030\001 \003(\r\022\016\n\006d"
      "eaths\030\002 \003(\r\022\022\n\ngold_delta\030\003 \001(\r\022\020\n\010xp_de"
      "lta\030\004 \001(\r\032\211\002\n\036CDOTAUserMsg_StatsFightDet"
      "ails\022\022\n\nstart_time\030\001 \001(\002\022\020\n\010end_time\030\002 \001"
      "(\002\022a\n\025radiant_fight_details\030\003 \001(\0132B.CDOT"
      "AUserMsg_StatsMatchDetails.CDOTAUserMsg_"
      "StatsFightTeamDetails\022^\n\022dire_fight_deta"
      "ils\030\004 \001(\0132B.CDOTAUserMsg_StatsMatchDetai"
      "ls.CDOTAUserMsg_StatsFightTeamDetails\"4\n"
      "\026CDOTAUserMsg_MiniTaunt\022\032\n\022taunting_play"
      "er_id\030\001 \001(\r\"0\n\031CDOTAUserMsg_SpeechBubble"
      "\022\023\n\013destroy_all\030\001 \001(\010\"g\n CDOTAUserMsg_Cu"
      "stomHeaderMessage\022\021\n\tplayer_id\030\001 \001(\r\022\020\n\010"
      "duration\030\002 \001(\002\022\017\n\007message\030\003 \001(\t\022\r\n\005value"
      "\030\004 \001(\005\"v\n\023CMsgHeroAbilityStat\0227\n\tstat_ty"
      "pe\030\001 \001(\0162\016.EHeroStatType:\024k_EHeroStatTyp"
      "e_None\022\021\n\tint_value\030\002 \001(\005\022\023\n\013float_value"
      "\030\003 \001(\002\"d\n\034CMsgCombatAnalyzerPlayerStat\022\022"
      "\n\naccount_id\030\001 \001(\r\0220\n\022hero_ability_stats"
      "\030\002 \003(\0132\024.CMsgHeroAbilityStat\"`\n\027CMsgComb"
      "atAnalyzerStats\022\020\n\010match_id\030\001 \001(\004\0223\n\014pla"
      "yer_stats\030\002 \003(\0132\035.CMsgCombatAnalyzerPlay"
      "erStat\"W\n\026CDOTAUserMsg_BeastChat\022\014\n\004team"
      "\030\001 \001(\r\022\016\n\006format\030\002 \001(\t\022\017\n\007message\030\003 \001(\t\022"
      "\016\n\006target\030\004 \001(\t\"a\n$CDOTAUserMsg_CustomHu"
      "dElement_Create\022\022\n\nelement_id\030\001 \001(\t\022\027\n\017l"
      "ayout_filename\030\002 \001(\t\022\014\n\004data\030\003 \001(\014\"`\n$CD"
      "OTAUserMsg_CustomHudElement_Modify\022\022\n\nel"
      "ement_id\030\001 \001(\t\022\026\n\016modify_visible\030\002 \001(\010\022\014"
      "\n\004data\030\003 \001(\014\";\n%CDOTAUserMsg_CustomHudEl"
      "ement_Destroy\022\022\n\nelement_id\030\001 \001(\t\"F\n\"CDO"
      "TAUserMsg_CompendiumStatePlayer\022\021\n\tplaye"
      "r_id\030\001 \001(\r\022\r\n\005level\030\002 \001(\r\"_\n\034CDOTAUserMs"
      "g_CompendiumState\022\?\n\022compendium_players\030"
      "\001 \003(\0132#.CDOTAUserMsg_CompendiumStatePlay"
      "er\"\334\001\n\036CDOTAUserMsg_ProjectionAbility\022\022\n"
      "\nability_id\030\001 \001(\r\022\030\n\020caster_ent_index\030\002 "
      "\001(\005\022\023\n\013caster_team\030\003 \001(\005\022\023\n\013channel_end\030"
      "\004 \001(\010\022\033\n\006origin\030\005 \001(\0132\013.CMsgVector\022\031\n\021tr"
      "ack_caster_only\030\006 \001(\010\022\020\n\010end_time\030\007 \001(\002\022"
      "\030\n\020victim_ent_index\030\010 \001(\005\"a\n\034CDOTAUserMs"
      "g_ProjectionEvent\0223\n\010event_id\030\001 \001(\0162\021.EP"
      "rojectionEvent:\016ePE_FirstBlood\022\014\n\004team\030\002"
      " \001(\r\"B\n\024CDOTAUserMsg_XPAlert\022\021\n\tplayer_i"
      "d\030\001 \001(\r\022\027\n\017target_entindex\030\002 \001(\r\"\"\n CDOT"
      "AUserMsg_UpdateQuestProgress\"\264\001\n\030CDOTAUs"
      "erMsg_QuestStatus\022\021\n\tplayer_id\030\001 \002(\r\022\020\n\010"
      "quest_id\030\002 \001(\r\022\024\n\014challenge_id\030\003 \001(\r\022\020\n\010"
      "progress\030\004 \001(\r\022\014\n\004goal\030\005 \001(\r\022\r\n\005query\030\006 "
      "\001(\r\022\025\n\rfail_gametime\030\007 \001(\002\022\027\n\017item_abili"
      "ty_id\030\010 \001(\r\"O\n\034CDOTAUserMsg_SuggestHeroP"
      "ick\022\021\n\tplayer_id\030\001 \002(\r\022\017\n\007hero_id\030\002 \001(\r\022"
      "\013\n\003ban\030\003 \001(\010\"D\n\034CDOTAUserMsg_SuggestHero"
      "Role\022\021\n\tplayer_id\030\001 \002(\r\022\021\n\thero_role\030\002 \001"
      "(\t\"\237\001\n\037CDOTAUserMsg_KillcamDamageTaken\022\021"
      "\n\tplayer_id\030\001 \002(\r\022\024\n\014damage_taken\030\002 \001(\r\022"
      "\021\n\titem_type\030\003 \001(\r\022\027\n\017item_ability_id\030\004 "
      "\001(\r\022\021\n\thero_name\030\005 \001(\t\022\024\n\014damage_color\030\006"
      " \001(\t\"A\n\036CDOTAUserMsg_SelectPenaltyGold\022\021"
      "\n\tplayer_id\030\001 \002(\r\022\014\n\004cost\030\002 \001(\021\"z\n\033CDOTA"
      "UserMsg_RollDiceResult\022\021\n\tplayer_id\030\001 \001("
      "\r\022\024\n\014channel_type\030\002 \001(\r\022\020\n\010roll_min\030\003 \001("
      "\r\022\020\n\010roll_max\030\004 \001(\r\022\016\n\006result\030\005 \001(\r\"V\n\033C"
      "DOTAUserMsg_FlipCoinResult\022\021\n\tplayer_id\030"
      "\001 \001(\r\022\024\n\014channel_type\030\002 \001(\r\022\016\n\006result\030\003 "
      "\001(\010\"<\n\'CDOTAUserMessage_RequestItemSugge"
      "stions\022\021\n\tplayer_id\030\001 \001(\r\"N\n#CDOTAUserMe"
      "ssage_TeamCaptainChanged\022\014\n\004team\030\001 \001(\r\022\031"
      "\n\021captain_player_id\030\002 \001(\r\"P\n\036CDOTAUserMs"
      "g_ChatWheelCooldown\022\022\n\nmessage_id\030\001 \001(\r\022"
      "\032\n\022cooldown_remaining\030\002 \001(\002\"k\n\036CDOTAUser"
      "Msg_HeroRelicProgress\022\027\n\017hero_relic_type"
      "\030\001 \001(\r\022\r\n\005value\030\002 \001(\r\022\017\n\007ehandle\030\003 \001(\r\022\020"
      "\n\010event_id\030\004 \001(\r\"Z\n\'CDOTAUserMsg_Ability"
      "DraftRequestAbility\022\021\n\tplayer_id\030\001 \001(\r\022\034"
      "\n\024requested_ability_id\030\002 \001(\r\"\210\001\n\031CDOTAUs"
      "erMsg_DamageReport\022\021\n\tplayer_id\030\001 \001(\r\022\026\n"
      "\016target_hero_id\030\002 \001(\r\022\026\n\016source_hero_id\030"
      "\003 \001(\r\022\025\n\rdamage_amount\030\004 \001(\005\022\021\n\tbroadcas"
      "t\030\005 \001(\010\"u\n\031CDOTAUserMsg_SalutePlayer\022\030\n\020"
      "source_player_id\030\001 \001(\005\022\030\n\020target_player_"
      "id\030\002 \001(\005\022\022\n\ntip_amount\030\003 \001(\r\022\020\n\010event_id"
      "\030\004 \001(\r\"<\n\025CDOTAUserMsg_TipAlert\022\021\n\tplaye"
      "r_id\030\001 \001(\r\022\020\n\010tip_text\030\002 \001(\t\"d\n\035CDOTAUse"
      "rMsg_ReplaceQueryUnit\022\021\n\tplayer_id\030\001 \002(\r"
      "\022\027\n\017source_entindex\030\002 \001(\r\022\027\n\017target_enti"
      "ndex\030\003 \001(\r*\200\033\n\021EDotaUserMessages\022\037\n\032DOTA"
      "_UM_AddUnitToSelection\020\320\003\022\030\n\023DOTA_UM_AID"
      "ebugLine\020\321\003\022\026\n\021DOTA_UM_ChatEvent\020\322\003\022 \n\033D"
      "OTA_UM_CombatHeroPositions\020\323\003\022\032\n\025DOTA_UM"
      "_CombatLogData\020\324\003\022\036\n\031DOTA_UM_CombatLogBu"
      "lkData\020\326\003\022#\n\036DOTA_UM_CreateLinearProject"
      "ile\020\327\003\022$\n\037DOTA_UM_DestroyLinearProjectil"
      "e\020\330\003\022%\n DOTA_UM_DodgeTrackingProjectiles"
      "\020\331\003\022\035\n\030DOTA_UM_GlobalLightColor\020\332\003\022!\n\034DO"
      "TA_UM_GlobalLightDirection\020\333\003\022\033\n\026DOTA_UM"
      "_InvalidCommand\020\334\003\022\031\n\024DOTA_UM_LocationPi"
      "ng\020\335\003\022\024\n\017DOTA_UM_MapLine\020\336\003\022\034\n\027DOTA_UM_M"
      "iniKillCamInfo\020\337\003\022\036\n\031DOTA_UM_MinimapDebu"
      "gPoint\020\340\003\022\031\n\024DOTA_UM_MinimapEvent\020\341\003\022\035\n\030"
      "DOTA_UM_NevermoreRequiem\020\342\003\022\032\n\025DOTA_UM_O"
      "verheadEvent\020\343\003\022\037\n\032DOTA_UM_SetNextAutobu"
      "yItem\020\344\003\022\033\n\026DOTA_UM_SharedCooldown\020\345\003\022!\n"
      "\034DOTA_UM_SpectatorPlayerClick\020\346\003\022\034\n\027DOTA"
      "_UM_TutorialTipInfo\020\347\003\022\026\n\021DOTA_UM_UnitEv"
      "ent\020\350\003\022\034\n\027DOTA_UM_ParticleManager\020\351\003\022\024\n\017"
      "DOTA_UM_BotChat\020\352\003\022\025\n\020DOTA_UM_HudError\020\353"
      "\003\022\032\n\025DOTA_UM_ItemPurchased\020\354\003\022\021\n\014DOTA_UM"
      "_Ping\020\355\003\022\026\n\021DOTA_UM_ItemFound\020\356\003\022\"\n\035DOTA"
      "_UM_CharacterSpeakConcept\020\357\003\022\027\n\022DOTA_UM_"
      "SwapVerify\020\360\003\022\026\n\021DOTA_UM_WorldLine\020\361\003\022\033\n"
      "\026DOTA_UM_TournamentDrop\020\362\003\022\026\n\021DOTA_UM_It"
      "emAlert\020\363\003\022\033\n\026DOTA_UM_HalloweenDrops\020\364\003\022"
      "\026\n\021DOTA_UM_ChatWheel\020\365\003\022\035\n\030DOTA_UM_Recei"
      "vedXmasGift\020\366\003\022 \n\033DOTA_UM_UpdateSharedCo"
      "ntent\020\367\003\022\037\n\032DOTA_UM_TutorialRequestExp\020\370"
      "\003\022 \n\033DOTA_UM_TutorialPingMinimap\020\371\003\022\"\n\035D"
      "OTA_UM_GamerulesStateChanged\020\372\003\022\027\n\022DOTA_"
      "UM_ShowSurvey\020\373\003\022\031\n\024DOTA_UM_TutorialFade"
      "\020\374\003\022\035\n\030DOTA_UM_AddQuestLogEntry\020\375\003\022\032\n\025DO"
      "TA_UM_SendStatPopup\020\376\003\022\033\n\026DOTA_UM_Tutori"
      "alFinish\020\377\003\022\034\n\027DOTA_UM_SendRoshanPopup\020\200"
      "\004\022\037\n\032DOTA_UM_SendGenericToolTip\020\201\004\022\032\n\025DO"
      "TA_UM_SendFinalGold\020\202\004\022\026\n\021DOTA_UM_Custom"
      "Msg\020\203\004\022\031\n\024DOTA_UM_CoachHUDPing\020\204\004\022\036\n\031DOT"
      "A_UM_ClientLoadGridNav\020\205\004\022\032\n\025DOTA_UM_TE_"
      "Projectile\020\206\004\022\035\n\030DOTA_UM_TE_ProjectileLo"
      "c\020\207\004\022\037\n\032DOTA_UM_TE_DotaBloodImpact\020\210\004\022\035\n"
      "\030DOTA_UM_TE_UnitAnimation\020\211\004\022 \n\033DOTA_UM_"
      "TE_UnitAnimationEnd\020\212\004\022\030\n\023DOTA_UM_Abilit"
      "yPing\020\213\004\022\035\n\030DOTA_UM_ShowGenericPopup\020\214\004\022"
      "\026\n\021DOTA_UM_VoteStart\020\215\004\022\027\n\022DOTA_UM_VoteU"
      "pdate\020\216\004\022\024\n\017DOTA_UM_VoteEnd\020\217\004\022\031\n\024DOTA_U"
      "M_BoosterState\020\220\004\022\036\n\031DOTA_UM_WillPurchas"
      "eAlert\020\221\004\022$\n\037DOTA_UM_TutorialMinimapPosi"
      "tion\020\222\004\022\026\n\021DOTA_UM_PlayerMMR\020\223\004\022\031\n\024DOTA_"
      "UM_AbilitySteal\020\224\004\022\037\n\032DOTA_UM_CourierKil"
      "ledAlert\020\225\004\022\033\n\026DOTA_UM_EnemyItemAlert\020\226\004"
      "\022\036\n\031DOTA_UM_StatsMatchDetails\020\227\004\022\026\n\021DOTA"
      "_UM_MiniTaunt\020\230\004\022\036\n\031DOTA_UM_BuyBackState"
      "Alert\020\231\004\022\031\n\024DOTA_UM_SpeechBubble\020\232\004\022 \n\033D"
      "OTA_UM_CustomHeaderMessage\020\233\004\022\032\n\025DOTA_UM"
      "_QuickBuyAlert\020\234\004\022\035\n\030DOTA_UM_StatsHeroDe"
      "tails\020\235\004\022\035\n\030DOTA_UM_PredictionResult\020\236\004\022"
      "\032\n\025DOTA_UM_ModifierAlert\020\237\004\022\030\n\023DOTA_UM_H"
      "PManaAlert\020\240\004\022\027\n\022DOTA_UM_GlyphAlert\020\241\004\022\026"
      "\n\021DOTA_UM_BeastChat\020\242\004\022&\n!DOTA_UM_Specta"
      "torPlayerUnitOrders\020\243\004\022$\n\037DOTA_UM_Custom"
      "HudElement_Create\020\244\004\022$\n\037DOTA_UM_CustomHu"
      "dElement_Modify\020\245\004\022%\n DOTA_UM_CustomHudE"
      "lement_Destroy\020\246\004\022\034\n\027DOTA_UM_CompendiumS"
      "tate\020\247\004\022\036\n\031DOTA_UM_ProjectionAbility\020\250\004\022"
      "\034\n\027DOTA_UM_ProjectionEvent\020\251\004\022\036\n\031DOTA_UM"
      "_CombatLogDataHLTV\020\252\004\022\024\n\017DOTA_UM_XPAlert"
      "\020\253\004\022 \n\033DOTA_UM_UpdateQuestProgress\020\254\004\022\032\n"
      "\025DOTA_UM_MatchMetadata\020\255\004\022\031\n\024DOTA_UM_Mat"
      "chDetails\020\256\004\022\030\n\023DOTA_UM_QuestStatus\020\257\004\022\034"
      "\n\027DOTA_UM_SuggestHeroPick\020\260\004\022\034\n\027DOTA_UM_"
      "SuggestHeroRole\020\261\004\022\037\n\032DOTA_UM_KillcamDam"
      "ageTaken\020\262\004\022\036\n\031DOTA_UM_SelectPenaltyGold"
      "\020\263\004\022\033\n\026DOTA_UM_RollDiceResult\020\264\004\022\033\n\026DOTA"
      "_UM_FlipCoinResult\020\265\004\022#\n\036DOTA_UM_Request"
      "ItemSuggestions\020\266\004\022\037\n\032DOTA_UM_TeamCaptai"
      "nChanged\020\267\004\022%\n DOTA_UM_SendRoshanSpectat"
      "orPhase\020\270\004\022\036\n\031DOTA_UM_ChatWheelCooldown\020"
      "\271\004\022!\n\034DOTA_UM_DismissAllStatPopups\020\272\004\022!\n"
      "\034DOTA_UM_TE_DestroyProjectile\020\273\004\022\036\n\031DOTA"
      "_UM_HeroRelicProgress\020\274\004\022\'\n\"DOTA_UM_Abil"
      "ityDraftRequestAbility\020\275\004\022\025\n\020DOTA_UM_Ite"
      "mSold\020\276\004\022\031\n\024DOTA_UM_DamageReport\020\277\004\022\031\n\024D"
      "OTA_UM_SalutePlayer\020\300\004\022\025\n\020DOTA_UM_TipAle"
      "rt\020\301\004\022\035\n\030DOTA_UM_ReplaceQueryUnit\020\302\004\022\037\n\032"
      "DOTA_UM_EmptyTeleportAlert\020\303\004*\303\033\n\021DOTA_C"
      "HAT_MESSAGE\022!\n\024CHAT_MESSAGE_INVALID\020\377\377\377\377"
      "\377\377\377\377\377\001\022\032\n\026CHAT_MESSAGE_HERO_KILL\020\000\022\032\n\026CH"
      "AT_MESSAGE_HERO_DENY\020\001\022\036\n\032CHAT_MESSAGE_B"
      "ARRACKS_KILL\020\002\022\033\n\027CHAT_MESSAGE_TOWER_KIL"
      "L\020\003\022\033\n\027CHAT_MESSAGE_TOWER_DENY\020\004\022\033\n\027CHAT"
      "_MESSAGE_FIRSTBLOOD\020\005\022\034\n\030CHAT_MESSAGE_ST"
      "REAK_KILL\020\006\022\030\n\024CHAT_MESSAGE_BUYBACK\020\007\022\026\n"
      "\022CHAT_MESSAGE_AEGIS\020\010\022\034\n\030CHAT_MESSAGE_RO"
      "SHAN_KILL\020\t\022\035\n\031CHAT_MESSAGE_COURIER_LOST"
      "\020\n\022\"\n\036CHAT_MESSAGE_COURIER_RESPAWNED\020\013\022\033"
      "\n\027CHAT_MESSAGE_GLYPH_USED\020\014\022\036\n\032CHAT_MESS"
      "AGE_ITEM_PURCHASE\020\r\022\030\n\024CHAT_MESSAGE_CONN"
      "ECT\020\016\022\033\n\027CHAT_MESSAGE_DISCONNECT\020\017\022.\n*CH"
      "AT_MESSAGE_DISCONNECT_WAIT_FOR_RECONNECT"
      "\020\020\022*\n&CHAT_MESSAGE_DISCONNECT_TIME_REMAI"
      "NING\020\021\0221\n-CHAT_MESSAGE_DISCONNECT_TIME_R"
      "EMAINING_PLURAL\020\022\022\032\n\026CHAT_MESSAGE_RECONN"
      "ECT\020\023\022\034\n\030CHAT_MESSAGE_PLAYER_LEFT\020\024\022\036\n\032C"
      "HAT_MESSAGE_SAFE_TO_LEAVE\020\025\022\034\n\030CHAT_MESS"
      "AGE_RUNE_PICKUP\020\026\022\034\n\030CHAT_MESSAGE_RUNE_B"
      "OTTLE\020\027\022\031\n\025CHAT_MESSAGE_INTHEBAG\020\030\022\033\n\027CH"
      "AT_MESSAGE_SECRETSHOP\020\031\022#\n\037CHAT_MESSAGE_"
      "ITEM_AUTOPURCHASED\020\032\022\037\n\033CHAT_MESSAGE_ITE"
      "MS_COMBINED\020\033\022\035\n\031CHAT_MESSAGE_SUPER_CREE"
      "PS\020\034\022%\n!CHAT_MESSAGE_CANT_USE_ACTION_ITE"
      "M\020\035\022\032\n\026CHAT_MESSAGE_CANTPAUSE\020\037\022\035\n\031CHAT_"
      "MESSAGE_NOPAUSESLEFT\020 \022\035\n\031CHAT_MESSAGE_C"
      "ANTPAUSEYET\020!\022\027\n\023CHAT_MESSAGE_PAUSED\020\"\022\""
      "\n\036CHAT_MESSAGE_UNPAUSE_COUNTDOWN\020#\022\031\n\025CH"
      "AT_MESSAGE_UNPAUSED\020$\022\036\n\032CHAT_MESSAGE_AU"
      "TO_UNPAUSED\020%\022\032\n\026CHAT_MESSAGE_YOUPAUSED\020"
      "&\022 \n\034CHAT_MESSAGE_CANTUNPAUSETEAM\020\'\022\"\n\036C"
      "HAT_MESSAGE_VOICE_TEXT_BANNED\020)\022.\n*CHAT_"
      "MESSAGE_SPECTATORS_WATCHING_THIS_GAME\020*\022"
      " \n\034CHAT_MESSAGE_REPORT_REMINDER\020+\022\032\n\026CHA"
      "T_MESSAGE_ECON_ITEM\020,\022\026\n\022CHAT_MESSAGE_TA"
      "UNT\020-\022\027\n\023CHAT_MESSAGE_RANDOM\020.\022\030\n\024CHAT_M"
      "ESSAGE_RD_TURN\020/\022 \n\034CHAT_MESSAGE_DROP_RA"
      "TE_BONUS\0201\022!\n\035CHAT_MESSAGE_NO_BATTLE_POI"
      "NTS\0202\022\035\n\031CHAT_MESSAGE_DENIED_AEGIS\0203\022\036\n\032"
      "CHAT_MESSAGE_INFORMATIONAL\0204\022\035\n\031CHAT_MES"
      "SAGE_AEGIS_STOLEN\0205\022\035\n\031CHAT_MESSAGE_ROSH"
      "AN_CANDY\0206\022\034\n\030CHAT_MESSAGE_ITEM_GIFTED\0207"
      "\022\'\n#CHAT_MESSAGE_HERO_KILL_WITH_GREEVIL\020"
      "8\022(\n$CHAT_MESSAGE_HOLDOUT_TOWER_DESTROYE"
      "D\0209\022\'\n#CHAT_MESSAGE_HOLDOUT_WALL_DESTROY"
      "ED\020:\022&\n\"CHAT_MESSAGE_HOLDOUT_WALL_FINISH"
      "ED\020;\022)\n%CHAT_MESSAGE_PLAYER_LEFT_LIMITED"
      "_HERO\020>\0221\n-CHAT_MESSAGE_ABANDON_LIMITED_"
      "HERO_EXPLANATION\020\?\022(\n$CHAT_MESSAGE_DISCO"
      "NNECT_LIMITED_HERO\020@\0223\n/CHAT_MESSAGE_LOW"
      "_PRIORITY_COMPLETED_EXPLANATION\020A\022,\n(CHA"
      "T_MESSAGE_RECRUITMENT_DROP_RATE_BONUS\020B\022"
      "1\n-CHAT_MESSAGE_FROSTIVUS_SHINING_BOOSTE"
      "R_ACTIVE\020C\022 \n\034CHAT_MESSAGE_PLAYER_LEFT_A"
      "FK\020I\0222\n.CHAT_MESSAGE_PLAYER_LEFT_DISCONN"
      "ECTED_TOO_LONG\020J\022!\n\035CHAT_MESSAGE_PLAYER_"
      "ABANDONED\020K\022%\n!CHAT_MESSAGE_PLAYER_ABAND"
      "ONED_AFK\020L\0227\n3CHAT_MESSAGE_PLAYER_ABANDO"
      "NED_DISCONNECTED_TOO_LONG\020M\022#\n\037CHAT_MESS"
      "AGE_WILL_NOT_BE_SCORED\020N\022*\n&CHAT_MESSAGE"
      "_WILL_NOT_BE_SCORED_RANKED\020O\022+\n\'CHAT_MES"
      "SAGE_WILL_NOT_BE_SCORED_NETWORK\020P\0222\n.CHA"
      "T_MESSAGE_WILL_NOT_BE_SCORED_NETWORK_RAN"
      "KED\020Q\022)\n%CHAT_MESSAGE_CAN_QUIT_WITHOUT_A"
      "BANDON\020R\022:\n6CHAT_MESSAGE_RANKED_GAME_STI"
      "LL_SCORED_LEAVERS_GET_LOSS\020S\0228\n4CHAT_MES"
      "SAGE_ABANDON_RANKED_BEFORE_FIRST_BLOOD_P"
      "ARTY\020T\022!\n\035CHAT_MESSAGE_COMPENDIUM_LEVEL\020"
      "U\022*\n&CHAT_MESSAGE_VICTORY_PREDICTION_STR"
      "EAK\020V\022\"\n\036CHAT_MESSAGE_ASSASSIN_ANNOUNCE\020"
      "W\022!\n\035CHAT_MESSAGE_ASSASSIN_SUCCESS\020X\022 \n\034"
      "CHAT_MESSAGE_ASSASSIN_DENIED\020Y\0227\n3CHAT_M"
      "ESSAGE_VICTORY_PREDICTION_SINGLE_USER_CO"
      "NFIRM\020Z\022\034\n\030CHAT_MESSAGE_EFFIGY_KILL\020[\022+\n"
      "\'CHAT_MESSAGE_VOICE_TEXT_BANNED_OVERFLOW"
      "\020\\\022\"\n\036CHAT_MESSAGE_YEAR_BEAST_KILLED\020]\022 "
      "\n\034CHAT_MESSAGE_PAUSE_COUNTDOWN\020^\022\036\n\032CHAT"
      "_MESSAGE_COINS_WAGERED\020_\022#\n\037CHAT_MESSAGE"
      "_HERO_NOMINATED_BAN\020`\022\034\n\030CHAT_MESSAGE_HE"
      "RO_BANNED\020a\022\037\n\033CHAT_MESSAGE_HERO_BAN_COU"
      "NT\020b\022\036\n\032CHAT_MESSAGE_RIVER_PAINTED\020c\022\032\n\026"
      "CHAT_MESSAGE_SCAN_USED\020d\022\036\n\032CHAT_MESSAGE"
      "_SHRINE_KILLED\020e\022\"\n\036CHAT_MESSAGE_WAGER_T"
      "OKEN_SPENT\020f\022\033\n\027CHAT_MESSAGE_RANK_WAGER\020"
      "g\022$\n CHAT_MESSAGE_NEW_PLAYER_REMINDER\020h\022"
      "%\n!CHAT_MESSAGE_OBSERVER_WARD_KILLED\020i\022#"
      "\n\037CHAT_MESSAGE_SENTRY_WARD_KILLED\020j*\262\001\n\035"
      "DOTA_NO_BATTLE_POINTS_REASONS\022%\n!NO_BATT"
      "LE_POINTS_WRONG_LOBBY_TYPE\020\001\022\"\n\036NO_BATTL"
      "E_POINTS_PRACTICE_BOTS\020\002\022#\n\037NO_BATTLE_PO"
      "INTS_CHEATS_ENABLED\020\003\022!\n\035NO_BATTLE_POINT"
      "S_LOW_PRIORITY\020\004*\317\001\n\027DOTA_CHAT_INFORMATI"
      "ONAL\022!\n\035INFO_COOP_BATTLE_POINTS_RULES\020\001\022"
      "#\n\037INFO_FROSTIVUS_ABANDON_REMINDER\020\002\022\030\n\024"
      "INFO_RANKED_REMINDER\020\003\022+\n\'INFO_COOP_LOW_"
      "PRIORITY_PASSIVE_REMINDER\020\004\022%\n!INFO_CUST"
      "OM_GAME_PENALTY_REMINDER\020\005*\332\002\n\026DOTA_ABIL"
      "ITY_PING_TYPE\022\026\n\022ABILITY_PING_READY\020\001\022\025\n"
      "\021ABILITY_PING_MANA\020\002\022\031\n\025ABILITY_PING_COO"
      "LDOWN\020\003\022\026\n\022ABILITY_PING_ENEMY\020\004\022\032\n\026ABILI"
      "TY_PING_UNLEARNED\020\005\022\033\n\027ABILITY_PING_INBA"
      "CKPACK\020\006\022\030\n\024ABILITY_PING_INSTASH\020\007\022\032\n\026AB"
      "ILITY_PING_ONCOURIER\020\010\022\025\n\021ABILITY_PING_A"
      "LLY\020\t\022\034\n\030ABILITY_PING_LEARN_READY\020\n\022\033\n\027A"
      "BILITY_PING_WILL_LEARN\020\013\022\035\n\031ABILITY_PING"
      "_FUTURE_LEARN\020\014*\273\001\n\027DOTA_REPLAY_STATE_EV"
      "ENT\022&\n\"DOTA_REPLAY_STATE_EVENT_GAME_STAR"
      "T\020\001\022)\n%DOTA_REPLAY_STATE_EVENT_STARTING_"
      "HORN\020\002\022\'\n#DOTA_REPLAY_STATE_EVENT_FIRST_"
      "BLOOD\020\003\022$\n DOTA_REPLAY_STATE_EVENT_SHOWC"
      "ASE\020\004*\345\001\n\023EDotaEntityMessages\022\024\n\020DOTA_UN"
      "IT_SPEECH\020\000\022\031\n\025DOTA_UNIT_SPEECH_MUTE\020\001\022\031"
      "\n\025DOTA_UNIT_ADD_GESTURE\020\002\022\034\n\030DOTA_UNIT_R"
      "EMOVE_GESTURE\020\003\022!\n\035DOTA_UNIT_REMOVE_ALL_"
      "GESTURES\020\004\022\032\n\026DOTA_UNIT_FADE_GESTURE\020\006\022%"
      "\n!DOTA_UNIT_SPEECH_CLIENTSIDE_RULES\020\007*\261\005"
      "\n\023DOTA_OVERHEAD_ALERT\022\027\n\023OVERHEAD_ALERT_"
      "GOLD\020\000\022\027\n\023OVERHEAD_ALERT_DENY\020\001\022\033\n\027OVERH"
      "EAD_ALERT_CRITICAL\020\002\022\025\n\021OVERHEAD_ALERT_X"
      "P\020\003\022%\n!OVERHEAD_ALERT_BONUS_SPELL_DAMAGE"
      "\020\004\022\027\n\023OVERHEAD_ALERT_MISS\020\005\022\031\n\025OVERHEAD_"
      "ALERT_DAMAGE\020\006\022\030\n\024OVERHEAD_ALERT_EVADE\020\007"
      "\022\030\n\024OVERHEAD_ALERT_BLOCK\020\010\022&\n\"OVERHEAD_A"
      "LERT_BONUS_POISON_DAMAGE\020\t\022\027\n\023OVERHEAD_A"
      "LERT_HEAL\020\n\022\033\n\027OVERHEAD_ALERT_MANA_ADD\020\013"
      "\022\034\n\030OVERHEAD_ALERT_MANA_LOSS\020\014\022!\n\035OVERHE"
      "AD_ALERT_LAST_HIT_EARLY\020\r\022!\n\035OVERHEAD_AL"
      "ERT_LAST_HIT_CLOSE\020\016\022 \n\034OVERHEAD_ALERT_L"
      "AST_HIT_MISS\020\017\022 \n\034OVERHEAD_ALERT_MAGICAL"
      "_BLOCK\020\020\022\"\n\036OVERHEAD_ALERT_INCOMING_DAMA"
      "GE\020\021\022\"\n\036OVERHEAD_ALERT_OUTGOING_DAMAGE\020\022"
      "\022!\n\035OVERHEAD_ALERT_DISABLE_RESIST\020\023\022\030\n\024O"
      "VERHEAD_ALERT_DEATH\020\024\022\032\n\026OVERHEAD_ALERT_"
      "BLOCKED\020\025*k\n\021DOTA_ROSHAN_PHASE\022\027\n\023k_SRSP"
      "_ROSHAN_ALIVE\020\000\022\034\n\030k_SRSP_ROSHAN_BASE_TI"
      "MER\020\001\022\037\n\033k_SRSP_ROSHAN_VISIBLE_TIMER\020\002*\201"
      "\004\n\026DOTA_POSITION_CATEGORY\022\026\n\022DOTA_POSITI"
      "ON_NONE\020\000\022\035\n\031DOTA_POSITION_BOTTOM_LANE\020\001"
      "\022\032\n\026DOTA_POSITION_MID_LANE\020\002\022\032\n\026DOTA_POS"
      "ITION_TOP_LANE\020\003\022 \n\034DOTA_POSITION_RADIAN"
      "T_JUNGLE\020\004\022\035\n\031DOTA_POSITION_DIRE_JUNGLE\020"
      "\005\022\"\n\036DOTA_POSITION_RADIANT_ANCIENTS\020\006\022\037\n"
      "\033DOTA_POSITION_DIRE_ANCIENTS\020\007\022%\n!DOTA_P"
      "OSITION_RADIANT_SECRET_SHOP\020\010\022\"\n\036DOTA_PO"
      "SITION_DIRE_SECRET_SHOP\020\t\022\027\n\023DOTA_POSITI"
      "ON_RIVER\020\n\022\034\n\030DOTA_POSITION_ROSHAN_PIT\020\013"
      "\022\036\n\032DOTA_POSITION_RADIANT_BASE\020\014\022\033\n\027DOTA"
      "_POSITION_DIRE_BASE\020\r\022\032\n\026DOTA_POSITION_F"
      "OUNTAIN\020\016\022\027\n\023DOTA_POSITION_OTHER\020\017*\346\001\n\030D"
      "OTA_ABILITY_TARGET_TYPE\022\034\n\030DOTA_ABILITY_"
      "TARGET_NONE\020\000\022\034\n\030DOTA_ABILITY_TARGET_SEL"
      "F\020\001\022!\n\035DOTA_ABILITY_TARGET_ALLY_HERO\020\002\022\""
      "\n\036DOTA_ABILITY_TARGET_ALLY_CREEP\020\003\022\"\n\036DO"
      "TA_ABILITY_TARGET_ENEMY_HERO\020\004\022#\n\037DOTA_A"
      "BILITY_TARGET_ENEMY_CREEP\020\005*\230\010\n\rEHeroSta"
      "tType\022\030\n\024k_EHeroStatType_None\020\000\022#\n\036k_EHe"
      "roStatType_AxeTotalDamage\020\320\017\022\'\n\"k_EHeroS"
      "tatType_BattleHungerDamage\020\321\017\022\'\n\"k_EHero"
      "StatType_CounterHelixDamage\020\322\017\022\'\n\"k_EHer"
      "oStatType_CullingBladeDamage\020\323\017\022,\n\'k_EHe"
      "roStatType_BerserkersCallCastCount\020\324\017\0223\n"
      ".k_EHeroStatType_BerserkersCallHeroesHit"
      "Average\020\325\017\0220\n+k_EHeroStatType_Berserkers"
      "CallOtherUnitsHit\020\326\017\0223\n.k_EHeroStatType_"
      "BerserkersCallHeroAttacksTaken\020\327\017\0224\n/k_E"
      "HeroStatType_BerserkersCallOtherAttacksT"
      "aken\020\330\017\022*\n%k_EHeroStatType_BattleHungerC"
      "astCount\020\331\017\0222\n-k_EHeroStatType_BattleHun"
      "gerPotentialDuration\020\332\017\0220\n+k_EHeroStatTy"
      "pe_BattleHungerAverageDuration\020\333\017\022*\n%k_E"
      "HeroStatType_CounterHelixProcCount\020\334\017\022.\n"
      ")k_EHeroStatType_CounterHelixHeroProcCou"
      "nt\020\335\017\0221\n,k_EHeroStatType_CounterHelixHer"
      "oesHitAverage\020\336\017\0223\n.k_EHeroStatType_Coun"
      "terHelixOtherUnitsHitCount\020\337\017\022*\n%k_EHero"
      "StatType_CullingBladeCastCount\020\340\017\022*\n%k_E"
      "HeroStatType_CullingBladeKillCount\020\341\017\0224\n"
      "/k_EHeroStatType_CullingBladeAverageHeal"
      "thCulled\020\342\017\0227\n2k_EHeroStatType_CullingBl"
      "adeAverageDamageAvailable\020\343\017\0220\n+k_EHeroS"
      "tatType_CullingBladeHeroBuffAverage\020\344\017*\251"
      "\004\n\027EPlayerVoiceListenState\022\016\n\nkPVLS_None"
      "\020\000\022\032\n\026kPVLS_DeniedChatBanned\020\001\022\027\n\023kPVLS_"
      "DeniedPartner\020\002\022&\n\"kPVLS_DeniedHLTVTalke"
      "rNotSpectator\020\003\022$\n kPVLS_DeniedHLTVNoTal"
      "kerPlayerID\020\004\022(\n$kPVLS_DeniedHLTVTalkerN"
      "otBroadcaster\020\005\022\035\n\031kPVLS_DeniedTeamSpect"
      "ator\020\006\022\027\n\023kPVLS_DeniedStudent\020\010\022\020\n\014kPVLS"
      "_Denied\020@\022&\n\"kPVLS_AllowHLTVTalkerIsBroa"
      "dcaster\020A\022\034\n\030kPVLS_AllowCoBroadcaster\020B\022"
      "\026\n\022kPVLS_AllowAllChat\020C\022\035\n\031kPVLS_AllowSt"
      "udentToCoach\020D\022\034\n\030kPVLS_AllowFellowStude"
      "nt\020E\022\034\n\030kPVLS_AllowTalkerIsCoach\020F\022\034\n\030kP"
      "VLS_AllowCoachHearTeam\020G\022\027\n\023kPVLS_AllowS"
      "ameTeam\020H\022\027\n\023kPVLS_AllowShowcase\020I*B\n\020EP"
      "rojectionEvent\022\022\n\016ePE_FirstBlood\020\000\022\032\n\026eP"
      "E_Killstreak_godlike\020\001B\005H\001\200\001\000"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 27109);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dota_usermessages.proto", &protobuf_RegisterTypes);
  ::protobuf_networkbasetypes_2eproto::AddDescriptors();
  ::protobuf_dota_5fshared_5fenums_2eproto::AddDescriptors();
  ::protobuf_dota_5fcommonmessages_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_dota_5fusermessages_2eproto
const ::google::protobuf::EnumDescriptor* CDOTAUserMsg_PredictionResult_Prediction_EResult_descriptor() {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dota_5fusermessages_2eproto::file_level_enum_descriptors[0];
}
bool CDOTAUserMsg_PredictionResult_Prediction_EResult_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CDOTAUserMsg_PredictionResult_Prediction_EResult CDOTAUserMsg_PredictionResult_Prediction::k_eResult_ItemGranted;
const CDOTAUserMsg_PredictionResult_Prediction_EResult CDOTAUserMsg_PredictionResult_Prediction::k_eResult_Destroyed;
const CDOTAUserMsg_PredictionResult_Prediction_EResult CDOTAUserMsg_PredictionResult_Prediction::EResult_MIN;
const CDOTAUserMsg_PredictionResult_Prediction_EResult CDOTAUserMsg_PredictionResult_Prediction::EResult_MAX;
const int CDOTAUserMsg_PredictionResult_Prediction::EResult_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CDOTAResponseQuerySerialized_Fact_ValueType_descriptor() {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dota_5fusermessages_2eproto::file_level_enum_descriptors[1];
}
bool CDOTAResponseQuerySerialized_Fact_ValueType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CDOTAResponseQuerySerialized_Fact_ValueType CDOTAResponseQuerySerialized_Fact::NUMERIC;
const CDOTAResponseQuerySerialized_Fact_ValueType CDOTAResponseQuerySerialized_Fact::STRING;
const CDOTAResponseQuerySerialized_Fact_ValueType CDOTAResponseQuerySerialized_Fact::ValueType_MIN;
const CDOTAResponseQuerySerialized_Fact_ValueType CDOTAResponseQuerySerialized_Fact::ValueType_MAX;
const int CDOTAResponseQuerySerialized_Fact::ValueType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EDotaUserMessages_descriptor() {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dota_5fusermessages_2eproto::file_level_enum_descriptors[2];
}
bool EDotaUserMessages_IsValid(int value) {
  switch (value) {
    case 464:
    case 465:
    case 466:
    case 467:
    case 468:
    case 470:
    case 471:
    case 472:
    case 473:
    case 474:
    case 475:
    case 476:
    case 477:
    case 478:
    case 479:
    case 480:
    case 481:
    case 482:
    case 483:
    case 484:
    case 485:
    case 486:
    case 487:
    case 488:
    case 489:
    case 490:
    case 491:
    case 492:
    case 493:
    case 494:
    case 495:
    case 496:
    case 497:
    case 498:
    case 499:
    case 500:
    case 501:
    case 502:
    case 503:
    case 504:
    case 505:
    case 506:
    case 507:
    case 508:
    case 509:
    case 510:
    case 511:
    case 512:
    case 513:
    case 514:
    case 515:
    case 516:
    case 517:
    case 518:
    case 519:
    case 520:
    case 521:
    case 522:
    case 523:
    case 524:
    case 525:
    case 526:
    case 527:
    case 528:
    case 529:
    case 530:
    case 531:
    case 532:
    case 533:
    case 534:
    case 535:
    case 536:
    case 537:
    case 538:
    case 539:
    case 540:
    case 541:
    case 542:
    case 543:
    case 544:
    case 545:
    case 546:
    case 547:
    case 548:
    case 549:
    case 550:
    case 551:
    case 552:
    case 553:
    case 554:
    case 555:
    case 556:
    case 557:
    case 558:
    case 559:
    case 560:
    case 561:
    case 562:
    case 563:
    case 564:
    case 565:
    case 566:
    case 567:
    case 568:
    case 569:
    case 570:
    case 571:
    case 572:
    case 573:
    case 574:
    case 575:
    case 576:
    case 577:
    case 578:
    case 579:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DOTA_CHAT_MESSAGE_descriptor() {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dota_5fusermessages_2eproto::file_level_enum_descriptors[3];
}
bool DOTA_CHAT_MESSAGE_IsValid(int value) {
  switch (value) {
    case -1:
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DOTA_NO_BATTLE_POINTS_REASONS_descriptor() {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dota_5fusermessages_2eproto::file_level_enum_descriptors[4];
}
bool DOTA_NO_BATTLE_POINTS_REASONS_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DOTA_CHAT_INFORMATIONAL_descriptor() {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dota_5fusermessages_2eproto::file_level_enum_descriptors[5];
}
bool DOTA_CHAT_INFORMATIONAL_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DOTA_ABILITY_PING_TYPE_descriptor() {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dota_5fusermessages_2eproto::file_level_enum_descriptors[6];
}
bool DOTA_ABILITY_PING_TYPE_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DOTA_REPLAY_STATE_EVENT_descriptor() {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dota_5fusermessages_2eproto::file_level_enum_descriptors[7];
}
bool DOTA_REPLAY_STATE_EVENT_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EDotaEntityMessages_descriptor() {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dota_5fusermessages_2eproto::file_level_enum_descriptors[8];
}
bool EDotaEntityMessages_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DOTA_OVERHEAD_ALERT_descriptor() {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dota_5fusermessages_2eproto::file_level_enum_descriptors[9];
}
bool DOTA_OVERHEAD_ALERT_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DOTA_ROSHAN_PHASE_descriptor() {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dota_5fusermessages_2eproto::file_level_enum_descriptors[10];
}
bool DOTA_ROSHAN_PHASE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DOTA_POSITION_CATEGORY_descriptor() {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dota_5fusermessages_2eproto::file_level_enum_descriptors[11];
}
bool DOTA_POSITION_CATEGORY_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DOTA_ABILITY_TARGET_TYPE_descriptor() {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dota_5fusermessages_2eproto::file_level_enum_descriptors[12];
}
bool DOTA_ABILITY_TARGET_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EHeroStatType_descriptor() {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dota_5fusermessages_2eproto::file_level_enum_descriptors[13];
}
bool EHeroStatType_IsValid(int value) {
  switch (value) {
    case 0:
    case 2000:
    case 2001:
    case 2002:
    case 2003:
    case 2004:
    case 2005:
    case 2006:
    case 2007:
    case 2008:
    case 2009:
    case 2010:
    case 2011:
    case 2012:
    case 2013:
    case 2014:
    case 2015:
    case 2016:
    case 2017:
    case 2018:
    case 2019:
    case 2020:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EPlayerVoiceListenState_descriptor() {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dota_5fusermessages_2eproto::file_level_enum_descriptors[14];
}
bool EPlayerVoiceListenState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 8:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EProjectionEvent_descriptor() {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dota_5fusermessages_2eproto::file_level_enum_descriptors[15];
}
bool EProjectionEvent_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CDOTAUserMsg_AIDebugLine::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_AIDebugLine::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_AIDebugLine::CDOTAUserMsg_AIDebugLine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_AIDebugLine.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_AIDebugLine)
}
CDOTAUserMsg_AIDebugLine::CDOTAUserMsg_AIDebugLine(const CDOTAUserMsg_AIDebugLine& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_AIDebugLine)
}

void CDOTAUserMsg_AIDebugLine::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CDOTAUserMsg_AIDebugLine::~CDOTAUserMsg_AIDebugLine() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_AIDebugLine)
  SharedDtor();
}

void CDOTAUserMsg_AIDebugLine::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTAUserMsg_AIDebugLine::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_AIDebugLine::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_AIDebugLine& CDOTAUserMsg_AIDebugLine::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_AIDebugLine.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_AIDebugLine::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_AIDebugLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    message_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_AIDebugLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_AIDebugLine)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_AIDebugLine.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_AIDebugLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_AIDebugLine)
  return false;
#undef DO_
}

void CDOTAUserMsg_AIDebugLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_AIDebugLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_AIDebugLine.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_AIDebugLine)
}

::google::protobuf::uint8* CDOTAUserMsg_AIDebugLine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_AIDebugLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_AIDebugLine.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_AIDebugLine)
  return target;
}

size_t CDOTAUserMsg_AIDebugLine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_AIDebugLine)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string message = 1;
  if (has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_AIDebugLine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_AIDebugLine)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_AIDebugLine* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_AIDebugLine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_AIDebugLine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_AIDebugLine)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_AIDebugLine::MergeFrom(const CDOTAUserMsg_AIDebugLine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_AIDebugLine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_message()) {
    set_has_message();
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void CDOTAUserMsg_AIDebugLine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_AIDebugLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_AIDebugLine::CopyFrom(const CDOTAUserMsg_AIDebugLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_AIDebugLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_AIDebugLine::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_AIDebugLine::Swap(CDOTAUserMsg_AIDebugLine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_AIDebugLine::InternalSwap(CDOTAUserMsg_AIDebugLine* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_AIDebugLine::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_Ping::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_Ping::kPingFieldNumber;
const int CDOTAUserMsg_Ping::kLossFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_Ping::CDOTAUserMsg_Ping()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_Ping.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_Ping)
}
CDOTAUserMsg_Ping::CDOTAUserMsg_Ping(const CDOTAUserMsg_Ping& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ping_, &from.ping_,
    static_cast<size_t>(reinterpret_cast<char*>(&loss_) -
    reinterpret_cast<char*>(&ping_)) + sizeof(loss_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_Ping)
}

void CDOTAUserMsg_Ping::SharedCtor() {
  ::memset(&ping_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loss_) -
      reinterpret_cast<char*>(&ping_)) + sizeof(loss_));
}

CDOTAUserMsg_Ping::~CDOTAUserMsg_Ping() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_Ping)
  SharedDtor();
}

void CDOTAUserMsg_Ping::SharedDtor() {
}

void CDOTAUserMsg_Ping::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_Ping::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_Ping& CDOTAUserMsg_Ping::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_Ping.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_Ping::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&ping_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&loss_) -
        reinterpret_cast<char*>(&ping_)) + sizeof(loss_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_Ping::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_Ping)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ping = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_ping();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ping_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 loss = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_loss();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &loss_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_Ping)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_Ping)
  return false;
#undef DO_
}

void CDOTAUserMsg_Ping::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 ping = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ping(), output);
  }

  // optional uint32 loss = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->loss(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_Ping)
}

::google::protobuf::uint8* CDOTAUserMsg_Ping::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 ping = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ping(), target);
  }

  // optional uint32 loss = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->loss(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_Ping)
  return target;
}

size_t CDOTAUserMsg_Ping::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_Ping)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 ping = 2;
    if (has_ping()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ping());
    }

    // optional uint32 loss = 3;
    if (has_loss()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->loss());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_Ping::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_Ping)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_Ping* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_Ping>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_Ping)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_Ping)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_Ping::MergeFrom(const CDOTAUserMsg_Ping& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_Ping)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      ping_ = from.ping_;
    }
    if (cached_has_bits & 0x00000002u) {
      loss_ = from.loss_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_Ping::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_Ping::CopyFrom(const CDOTAUserMsg_Ping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_Ping::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_Ping::Swap(CDOTAUserMsg_Ping* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_Ping::InternalSwap(CDOTAUserMsg_Ping* other) {
  using std::swap;
  swap(ping_, other->ping_);
  swap(loss_, other->loss_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_Ping::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_SwapVerify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_SwapVerify::kPlayerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_SwapVerify::CDOTAUserMsg_SwapVerify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_SwapVerify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_SwapVerify)
}
CDOTAUserMsg_SwapVerify::CDOTAUserMsg_SwapVerify(const CDOTAUserMsg_SwapVerify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  player_id_ = from.player_id_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_SwapVerify)
}

void CDOTAUserMsg_SwapVerify::SharedCtor() {
  player_id_ = 0u;
}

CDOTAUserMsg_SwapVerify::~CDOTAUserMsg_SwapVerify() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_SwapVerify)
  SharedDtor();
}

void CDOTAUserMsg_SwapVerify::SharedDtor() {
}

void CDOTAUserMsg_SwapVerify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_SwapVerify::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_SwapVerify& CDOTAUserMsg_SwapVerify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_SwapVerify.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_SwapVerify::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_SwapVerify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_SwapVerify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_SwapVerify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_SwapVerify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_SwapVerify)
  return false;
#undef DO_
}

void CDOTAUserMsg_SwapVerify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_SwapVerify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_SwapVerify)
}

::google::protobuf::uint8* CDOTAUserMsg_SwapVerify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_SwapVerify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_SwapVerify)
  return target;
}

size_t CDOTAUserMsg_SwapVerify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_SwapVerify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 player_id = 1;
  if (has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_SwapVerify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_SwapVerify)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_SwapVerify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_SwapVerify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_SwapVerify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_SwapVerify)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_SwapVerify::MergeFrom(const CDOTAUserMsg_SwapVerify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_SwapVerify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_player_id()) {
    set_player_id(from.player_id());
  }
}

void CDOTAUserMsg_SwapVerify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_SwapVerify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_SwapVerify::CopyFrom(const CDOTAUserMsg_SwapVerify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_SwapVerify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_SwapVerify::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_SwapVerify::Swap(CDOTAUserMsg_SwapVerify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_SwapVerify::InternalSwap(CDOTAUserMsg_SwapVerify* other) {
  using std::swap;
  swap(player_id_, other->player_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_SwapVerify::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_ChatEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_ChatEvent::kTypeFieldNumber;
const int CDOTAUserMsg_ChatEvent::kValueFieldNumber;
const int CDOTAUserMsg_ChatEvent::kPlayerid1FieldNumber;
const int CDOTAUserMsg_ChatEvent::kPlayerid2FieldNumber;
const int CDOTAUserMsg_ChatEvent::kPlayerid3FieldNumber;
const int CDOTAUserMsg_ChatEvent::kPlayerid4FieldNumber;
const int CDOTAUserMsg_ChatEvent::kPlayerid5FieldNumber;
const int CDOTAUserMsg_ChatEvent::kPlayerid6FieldNumber;
const int CDOTAUserMsg_ChatEvent::kValue2FieldNumber;
const int CDOTAUserMsg_ChatEvent::kValue3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_ChatEvent::CDOTAUserMsg_ChatEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_ChatEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_ChatEvent)
}
CDOTAUserMsg_ChatEvent::CDOTAUserMsg_ChatEvent(const CDOTAUserMsg_ChatEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&playerid_5_) -
    reinterpret_cast<char*>(&value_)) + sizeof(playerid_5_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_ChatEvent)
}

void CDOTAUserMsg_ChatEvent::SharedCtor() {
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value3_) -
      reinterpret_cast<char*>(&value_)) + sizeof(value3_));
  playerid_6_ = -1;
  type_ = -1;
  playerid_1_ = -1;
  playerid_2_ = -1;
  playerid_3_ = -1;
  playerid_4_ = -1;
  playerid_5_ = -1;
}

CDOTAUserMsg_ChatEvent::~CDOTAUserMsg_ChatEvent() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_ChatEvent)
  SharedDtor();
}

void CDOTAUserMsg_ChatEvent::SharedDtor() {
}

void CDOTAUserMsg_ChatEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_ChatEvent::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_ChatEvent& CDOTAUserMsg_ChatEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_ChatEvent.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_ChatEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_ChatEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&value3_) -
        reinterpret_cast<char*>(&value_)) + sizeof(value3_));
    playerid_6_ = -1;
    type_ = -1;
    playerid_1_ = -1;
    playerid_2_ = -1;
    playerid_3_ = -1;
  }
  if (cached_has_bits & 768u) {
    playerid_4_ = -1;
    playerid_5_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_ChatEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_ChatEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DOTA_CHAT_MESSAGE type = 1 [default = CHAT_MESSAGE_INVALID];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::DOTA_CHAT_MESSAGE_IsValid(value)) {
            set_type(static_cast< ::DOTA_CHAT_MESSAGE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 playerid_1 = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_playerid_1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &playerid_1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 playerid_2 = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_playerid_2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &playerid_2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 playerid_3 = 5 [default = -1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_playerid_3();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &playerid_3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 playerid_4 = 6 [default = -1];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_playerid_4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &playerid_4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 playerid_5 = 7 [default = -1];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_playerid_5();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &playerid_5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 playerid_6 = 8 [default = -1];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_playerid_6();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &playerid_6_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 value2 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_value2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 value3 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_value3();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_ChatEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_ChatEvent)
  return false;
#undef DO_
}

void CDOTAUserMsg_ChatEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_ChatEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .DOTA_CHAT_MESSAGE type = 1 [default = CHAT_MESSAGE_INVALID];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional uint32 value = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->value(), output);
  }

  // optional sint32 playerid_1 = 3 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->playerid_1(), output);
  }

  // optional sint32 playerid_2 = 4 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->playerid_2(), output);
  }

  // optional sint32 playerid_3 = 5 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->playerid_3(), output);
  }

  // optional sint32 playerid_4 = 6 [default = -1];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->playerid_4(), output);
  }

  // optional sint32 playerid_5 = 7 [default = -1];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->playerid_5(), output);
  }

  // optional sint32 playerid_6 = 8 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(8, this->playerid_6(), output);
  }

  // optional uint32 value2 = 9;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->value2(), output);
  }

  // optional uint32 value3 = 10;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->value3(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_ChatEvent)
}

::google::protobuf::uint8* CDOTAUserMsg_ChatEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_ChatEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .DOTA_CHAT_MESSAGE type = 1 [default = CHAT_MESSAGE_INVALID];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional uint32 value = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->value(), target);
  }

  // optional sint32 playerid_1 = 3 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->playerid_1(), target);
  }

  // optional sint32 playerid_2 = 4 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->playerid_2(), target);
  }

  // optional sint32 playerid_3 = 5 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->playerid_3(), target);
  }

  // optional sint32 playerid_4 = 6 [default = -1];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->playerid_4(), target);
  }

  // optional sint32 playerid_5 = 7 [default = -1];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->playerid_5(), target);
  }

  // optional sint32 playerid_6 = 8 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(8, this->playerid_6(), target);
  }

  // optional uint32 value2 = 9;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->value2(), target);
  }

  // optional uint32 value3 = 10;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->value3(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_ChatEvent)
  return target;
}

size_t CDOTAUserMsg_ChatEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_ChatEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .DOTA_CHAT_MESSAGE type = 1 [default = CHAT_MESSAGE_INVALID];
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->value());
    }

    // optional uint32 value2 = 9;
    if (has_value2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->value2());
    }

    // optional uint32 value3 = 10;
    if (has_value3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->value3());
    }

    // optional sint32 playerid_6 = 8 [default = -1];
    if (has_playerid_6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->playerid_6());
    }

  }
  if (_has_bits_[0 / 32] & 224u) {
    // optional sint32 playerid_1 = 3 [default = -1];
    if (has_playerid_1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->playerid_1());
    }

    // optional sint32 playerid_2 = 4 [default = -1];
    if (has_playerid_2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->playerid_2());
    }

    // optional sint32 playerid_3 = 5 [default = -1];
    if (has_playerid_3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->playerid_3());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional sint32 playerid_4 = 6 [default = -1];
    if (has_playerid_4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->playerid_4());
    }

    // optional sint32 playerid_5 = 7 [default = -1];
    if (has_playerid_5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->playerid_5());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_ChatEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_ChatEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_ChatEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_ChatEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_ChatEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_ChatEvent)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_ChatEvent::MergeFrom(const CDOTAUserMsg_ChatEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_ChatEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      value_ = from.value_;
    }
    if (cached_has_bits & 0x00000002u) {
      value2_ = from.value2_;
    }
    if (cached_has_bits & 0x00000004u) {
      value3_ = from.value3_;
    }
    if (cached_has_bits & 0x00000008u) {
      playerid_6_ = from.playerid_6_;
    }
    if (cached_has_bits & 0x00000010u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000020u) {
      playerid_1_ = from.playerid_1_;
    }
    if (cached_has_bits & 0x00000040u) {
      playerid_2_ = from.playerid_2_;
    }
    if (cached_has_bits & 0x00000080u) {
      playerid_3_ = from.playerid_3_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      playerid_4_ = from.playerid_4_;
    }
    if (cached_has_bits & 0x00000200u) {
      playerid_5_ = from.playerid_5_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_ChatEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_ChatEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_ChatEvent::CopyFrom(const CDOTAUserMsg_ChatEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_ChatEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_ChatEvent::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000010) != 0x00000010) return false;
  return true;
}

void CDOTAUserMsg_ChatEvent::Swap(CDOTAUserMsg_ChatEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_ChatEvent::InternalSwap(CDOTAUserMsg_ChatEvent* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(value2_, other->value2_);
  swap(value3_, other->value3_);
  swap(playerid_6_, other->playerid_6_);
  swap(type_, other->type_);
  swap(playerid_1_, other->playerid_1_);
  swap(playerid_2_, other->playerid_2_);
  swap(playerid_3_, other->playerid_3_);
  swap(playerid_4_, other->playerid_4_);
  swap(playerid_5_, other->playerid_5_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_ChatEvent::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_BotChat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_BotChat::kPlayerIdFieldNumber;
const int CDOTAUserMsg_BotChat::kMessageFieldNumber;
const int CDOTAUserMsg_BotChat::kTargetFieldNumber;
const int CDOTAUserMsg_BotChat::kTeamOnlyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_BotChat::CDOTAUserMsg_BotChat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_BotChat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_BotChat)
}
CDOTAUserMsg_BotChat::CDOTAUserMsg_BotChat(const CDOTAUserMsg_BotChat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_target()) {
    target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_);
  }
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&team_only_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(team_only_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_BotChat)
}

void CDOTAUserMsg_BotChat::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&team_only_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(team_only_));
}

CDOTAUserMsg_BotChat::~CDOTAUserMsg_BotChat() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_BotChat)
  SharedDtor();
}

void CDOTAUserMsg_BotChat::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTAUserMsg_BotChat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_BotChat::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_BotChat& CDOTAUserMsg_BotChat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_BotChat.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_BotChat::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_BotChat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      message_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      target_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&team_only_) -
        reinterpret_cast<char*>(&player_id_)) + sizeof(team_only_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_BotChat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_BotChat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_BotChat.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string target = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->target().data(), static_cast<int>(this->target().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_BotChat.target");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool team_only = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_team_only();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &team_only_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_BotChat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_BotChat)
  return false;
#undef DO_
}

void CDOTAUserMsg_BotChat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_BotChat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // optional string message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_BotChat.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->message(), output);
  }

  // optional string target = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->target().data(), static_cast<int>(this->target().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_BotChat.target");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->target(), output);
  }

  // optional bool team_only = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->team_only(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_BotChat)
}

::google::protobuf::uint8* CDOTAUserMsg_BotChat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_BotChat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // optional string message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_BotChat.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->message(), target);
  }

  // optional string target = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->target().data(), static_cast<int>(this->target().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_BotChat.target");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->target(), target);
  }

  // optional bool team_only = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->team_only(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_BotChat)
  return target;
}

size_t CDOTAUserMsg_BotChat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_BotChat)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string message = 3;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional string target = 4;
    if (has_target()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->target());
    }

    // optional uint32 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->player_id());
    }

    // optional bool team_only = 5;
    if (has_team_only()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_BotChat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_BotChat)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_BotChat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_BotChat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_BotChat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_BotChat)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_BotChat::MergeFrom(const CDOTAUserMsg_BotChat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_BotChat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_target();
      target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_);
    }
    if (cached_has_bits & 0x00000004u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      team_only_ = from.team_only_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_BotChat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_BotChat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_BotChat::CopyFrom(const CDOTAUserMsg_BotChat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_BotChat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_BotChat::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_BotChat::Swap(CDOTAUserMsg_BotChat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_BotChat::InternalSwap(CDOTAUserMsg_BotChat* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  target_.Swap(&other->target_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(player_id_, other->player_id_);
  swap(team_only_, other->team_only_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_BotChat::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_CombatHeroPositions::InitAsDefaultInstance() {
  ::_CDOTAUserMsg_CombatHeroPositions_default_instance_._instance.get_mutable()->world_pos_ = const_cast< ::CMsgVector2D*>(
      ::CMsgVector2D::internal_default_instance());
}
void CDOTAUserMsg_CombatHeroPositions::clear_world_pos() {
  if (world_pos_ != NULL) world_pos_->Clear();
  clear_has_world_pos();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_CombatHeroPositions::kIndexFieldNumber;
const int CDOTAUserMsg_CombatHeroPositions::kTimeFieldNumber;
const int CDOTAUserMsg_CombatHeroPositions::kWorldPosFieldNumber;
const int CDOTAUserMsg_CombatHeroPositions::kHealthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_CombatHeroPositions::CDOTAUserMsg_CombatHeroPositions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_CombatHeroPositions.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_CombatHeroPositions)
}
CDOTAUserMsg_CombatHeroPositions::CDOTAUserMsg_CombatHeroPositions(const CDOTAUserMsg_CombatHeroPositions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_world_pos()) {
    world_pos_ = new ::CMsgVector2D(*from.world_pos_);
  } else {
    world_pos_ = NULL;
  }
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&health_) -
    reinterpret_cast<char*>(&index_)) + sizeof(health_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_CombatHeroPositions)
}

void CDOTAUserMsg_CombatHeroPositions::SharedCtor() {
  ::memset(&world_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&health_) -
      reinterpret_cast<char*>(&world_pos_)) + sizeof(health_));
}

CDOTAUserMsg_CombatHeroPositions::~CDOTAUserMsg_CombatHeroPositions() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_CombatHeroPositions)
  SharedDtor();
}

void CDOTAUserMsg_CombatHeroPositions::SharedDtor() {
  if (this != internal_default_instance()) delete world_pos_;
}

void CDOTAUserMsg_CombatHeroPositions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_CombatHeroPositions::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_CombatHeroPositions& CDOTAUserMsg_CombatHeroPositions::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_CombatHeroPositions.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_CombatHeroPositions::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_CombatHeroPositions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(world_pos_ != NULL);
    world_pos_->Clear();
  }
  if (cached_has_bits & 14u) {
    ::memset(&index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&health_) -
        reinterpret_cast<char*>(&index_)) + sizeof(health_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_CombatHeroPositions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_CombatHeroPositions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgVector2D world_pos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_world_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 health = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_health();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &health_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_CombatHeroPositions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_CombatHeroPositions)
  return false;
#undef DO_
}

void CDOTAUserMsg_CombatHeroPositions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_CombatHeroPositions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 index = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  // optional int32 time = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->time(), output);
  }

  // optional .CMsgVector2D world_pos = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_world_pos(), output);
  }

  // optional int32 health = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->health(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_CombatHeroPositions)
}

::google::protobuf::uint8* CDOTAUserMsg_CombatHeroPositions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_CombatHeroPositions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 index = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  // optional int32 time = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->time(), target);
  }

  // optional .CMsgVector2D world_pos = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_world_pos(), deterministic, target);
  }

  // optional int32 health = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->health(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_CombatHeroPositions)
  return target;
}

size_t CDOTAUserMsg_CombatHeroPositions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_CombatHeroPositions)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .CMsgVector2D world_pos = 3;
    if (has_world_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *world_pos_);
    }

    // optional uint32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index());
    }

    // optional int32 time = 2;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->time());
    }

    // optional int32 health = 4;
    if (has_health()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->health());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_CombatHeroPositions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_CombatHeroPositions)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_CombatHeroPositions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_CombatHeroPositions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_CombatHeroPositions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_CombatHeroPositions)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_CombatHeroPositions::MergeFrom(const CDOTAUserMsg_CombatHeroPositions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_CombatHeroPositions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_world_pos()->::CMsgVector2D::MergeFrom(from.world_pos());
    }
    if (cached_has_bits & 0x00000002u) {
      index_ = from.index_;
    }
    if (cached_has_bits & 0x00000004u) {
      time_ = from.time_;
    }
    if (cached_has_bits & 0x00000008u) {
      health_ = from.health_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_CombatHeroPositions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_CombatHeroPositions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_CombatHeroPositions::CopyFrom(const CDOTAUserMsg_CombatHeroPositions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_CombatHeroPositions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_CombatHeroPositions::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_CombatHeroPositions::Swap(CDOTAUserMsg_CombatHeroPositions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_CombatHeroPositions::InternalSwap(CDOTAUserMsg_CombatHeroPositions* other) {
  using std::swap;
  swap(world_pos_, other->world_pos_);
  swap(index_, other->index_);
  swap(time_, other->time_);
  swap(health_, other->health_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_CombatHeroPositions::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_CombatLogBulkData::InitAsDefaultInstance() {
}
void CDOTAUserMsg_CombatLogBulkData::clear_combat_entries() {
  combat_entries_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_CombatLogBulkData::kCombatEntriesFieldNumber;
const int CDOTAUserMsg_CombatLogBulkData::kTimestampFieldNumber;
const int CDOTAUserMsg_CombatLogBulkData::kDurationFieldNumber;
const int CDOTAUserMsg_CombatLogBulkData::kPlayerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_CombatLogBulkData::CDOTAUserMsg_CombatLogBulkData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_CombatLogBulkData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_CombatLogBulkData)
}
CDOTAUserMsg_CombatLogBulkData::CDOTAUserMsg_CombatLogBulkData(const CDOTAUserMsg_CombatLogBulkData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      combat_entries_(from.combat_entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&player_id_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(player_id_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_CombatLogBulkData)
}

void CDOTAUserMsg_CombatLogBulkData::SharedCtor() {
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_id_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(player_id_));
}

CDOTAUserMsg_CombatLogBulkData::~CDOTAUserMsg_CombatLogBulkData() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_CombatLogBulkData)
  SharedDtor();
}

void CDOTAUserMsg_CombatLogBulkData::SharedDtor() {
}

void CDOTAUserMsg_CombatLogBulkData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_CombatLogBulkData::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_CombatLogBulkData& CDOTAUserMsg_CombatLogBulkData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_CombatLogBulkData.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_CombatLogBulkData::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_CombatLogBulkData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  combat_entries_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&timestamp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&player_id_) -
        reinterpret_cast<char*>(&timestamp_)) + sizeof(player_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_CombatLogBulkData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_CombatLogBulkData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgDOTACombatLogEntry combat_entries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_combat_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float duration = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 player_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_CombatLogBulkData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_CombatLogBulkData)
  return false;
#undef DO_
}

void CDOTAUserMsg_CombatLogBulkData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_CombatLogBulkData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgDOTACombatLogEntry combat_entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->combat_entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->combat_entries(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional float timestamp = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->timestamp(), output);
  }

  // optional float duration = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->duration(), output);
  }

  // optional uint32 player_id = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->player_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_CombatLogBulkData)
}

::google::protobuf::uint8* CDOTAUserMsg_CombatLogBulkData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_CombatLogBulkData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgDOTACombatLogEntry combat_entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->combat_entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->combat_entries(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional float timestamp = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->timestamp(), target);
  }

  // optional float duration = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->duration(), target);
  }

  // optional uint32 player_id = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->player_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_CombatLogBulkData)
  return target;
}

size_t CDOTAUserMsg_CombatLogBulkData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_CombatLogBulkData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgDOTACombatLogEntry combat_entries = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->combat_entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->combat_entries(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional float timestamp = 2;
    if (has_timestamp()) {
      total_size += 1 + 4;
    }

    // optional float duration = 3;
    if (has_duration()) {
      total_size += 1 + 4;
    }

    // optional uint32 player_id = 4;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->player_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_CombatLogBulkData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_CombatLogBulkData)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_CombatLogBulkData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_CombatLogBulkData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_CombatLogBulkData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_CombatLogBulkData)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_CombatLogBulkData::MergeFrom(const CDOTAUserMsg_CombatLogBulkData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_CombatLogBulkData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  combat_entries_.MergeFrom(from.combat_entries_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000002u) {
      duration_ = from.duration_;
    }
    if (cached_has_bits & 0x00000004u) {
      player_id_ = from.player_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_CombatLogBulkData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_CombatLogBulkData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_CombatLogBulkData::CopyFrom(const CDOTAUserMsg_CombatLogBulkData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_CombatLogBulkData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_CombatLogBulkData::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_CombatLogBulkData::Swap(CDOTAUserMsg_CombatLogBulkData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_CombatLogBulkData::InternalSwap(CDOTAUserMsg_CombatLogBulkData* other) {
  using std::swap;
  CastToBase(&combat_entries_)->InternalSwap(CastToBase(&other->combat_entries_));
  swap(timestamp_, other->timestamp_);
  swap(duration_, other->duration_);
  swap(player_id_, other->player_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_CombatLogBulkData::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::kAbilityIdFieldNumber;
const int CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::kDamageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability)
}
CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability(const CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ability_id_, &from.ability_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&damage_) -
    reinterpret_cast<char*>(&ability_id_)) + sizeof(damage_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability)
}

void CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::SharedCtor() {
  ::memset(&ability_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&damage_) -
      reinterpret_cast<char*>(&ability_id_)) + sizeof(damage_));
}

CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::~CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability)
  SharedDtor();
}

void CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::SharedDtor() {
}

void CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability& CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&ability_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&damage_) -
        reinterpret_cast<char*>(&ability_id_)) + sizeof(damage_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ability_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ability_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ability_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 damage = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_damage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &damage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability)
  return false;
#undef DO_
}

void CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 ability_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ability_id(), output);
  }

  // optional int32 damage = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->damage(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability)
}

::google::protobuf::uint8* CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 ability_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ability_id(), target);
  }

  // optional int32 damage = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->damage(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability)
  return target;
}

size_t CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 ability_id = 1;
    if (has_ability_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ability_id());
    }

    // optional int32 damage = 2;
    if (has_damage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->damage());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::MergeFrom(const CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      ability_id_ = from.ability_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      damage_ = from.damage_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::CopyFrom(const CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::Swap(CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::InternalSwap(CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability* other) {
  using std::swap;
  swap(ability_id_, other->ability_id_);
  swap(damage_, other->damage_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_MiniKillCamInfo_Attacker::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_MiniKillCamInfo_Attacker::kAttackerFieldNumber;
const int CDOTAUserMsg_MiniKillCamInfo_Attacker::kTotalDamageFieldNumber;
const int CDOTAUserMsg_MiniKillCamInfo_Attacker::kAbilitiesFieldNumber;
const int CDOTAUserMsg_MiniKillCamInfo_Attacker::kAttackerNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_MiniKillCamInfo_Attacker::CDOTAUserMsg_MiniKillCamInfo_Attacker()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_MiniKillCamInfo_Attacker.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_MiniKillCamInfo.Attacker)
}
CDOTAUserMsg_MiniKillCamInfo_Attacker::CDOTAUserMsg_MiniKillCamInfo_Attacker(const CDOTAUserMsg_MiniKillCamInfo_Attacker& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      abilities_(from.abilities_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attacker_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attacker_name()) {
    attacker_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attacker_name_);
  }
  ::memcpy(&attacker_, &from.attacker_,
    static_cast<size_t>(reinterpret_cast<char*>(&total_damage_) -
    reinterpret_cast<char*>(&attacker_)) + sizeof(total_damage_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_MiniKillCamInfo.Attacker)
}

void CDOTAUserMsg_MiniKillCamInfo_Attacker::SharedCtor() {
  attacker_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&attacker_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_damage_) -
      reinterpret_cast<char*>(&attacker_)) + sizeof(total_damage_));
}

CDOTAUserMsg_MiniKillCamInfo_Attacker::~CDOTAUserMsg_MiniKillCamInfo_Attacker() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_MiniKillCamInfo.Attacker)
  SharedDtor();
}

void CDOTAUserMsg_MiniKillCamInfo_Attacker::SharedDtor() {
  attacker_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTAUserMsg_MiniKillCamInfo_Attacker::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_MiniKillCamInfo_Attacker::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_MiniKillCamInfo_Attacker& CDOTAUserMsg_MiniKillCamInfo_Attacker::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_MiniKillCamInfo_Attacker.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_MiniKillCamInfo_Attacker::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_MiniKillCamInfo.Attacker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  abilities_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    attacker_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&attacker_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&total_damage_) -
        reinterpret_cast<char*>(&attacker_)) + sizeof(total_damage_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_MiniKillCamInfo_Attacker::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_MiniKillCamInfo.Attacker)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 attacker = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_attacker();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attacker_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 total_damage = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_total_damage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_damage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_abilities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string attacker_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_attacker_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->attacker_name().data(), static_cast<int>(this->attacker_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_MiniKillCamInfo.Attacker.attacker_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_MiniKillCamInfo.Attacker)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_MiniKillCamInfo.Attacker)
  return false;
#undef DO_
}

void CDOTAUserMsg_MiniKillCamInfo_Attacker::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_MiniKillCamInfo.Attacker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 attacker = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->attacker(), output);
  }

  // optional int32 total_damage = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_damage(), output);
  }

  // repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->abilities_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->abilities(static_cast<int>(i)),
      output);
  }

  // optional string attacker_name = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attacker_name().data(), static_cast<int>(this->attacker_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_MiniKillCamInfo.Attacker.attacker_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->attacker_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_MiniKillCamInfo.Attacker)
}

::google::protobuf::uint8* CDOTAUserMsg_MiniKillCamInfo_Attacker::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_MiniKillCamInfo.Attacker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 attacker = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->attacker(), target);
  }

  // optional int32 total_damage = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_damage(), target);
  }

  // repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->abilities_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->abilities(static_cast<int>(i)), deterministic, target);
  }

  // optional string attacker_name = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attacker_name().data(), static_cast<int>(this->attacker_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_MiniKillCamInfo.Attacker.attacker_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->attacker_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_MiniKillCamInfo.Attacker)
  return target;
}

size_t CDOTAUserMsg_MiniKillCamInfo_Attacker::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_MiniKillCamInfo.Attacker)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->abilities_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->abilities(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string attacker_name = 4;
    if (has_attacker_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->attacker_name());
    }

    // optional uint32 attacker = 1;
    if (has_attacker()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->attacker());
    }

    // optional int32 total_damage = 2;
    if (has_total_damage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_damage());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_MiniKillCamInfo_Attacker::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_MiniKillCamInfo.Attacker)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_MiniKillCamInfo_Attacker* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_MiniKillCamInfo_Attacker>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_MiniKillCamInfo.Attacker)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_MiniKillCamInfo.Attacker)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_MiniKillCamInfo_Attacker::MergeFrom(const CDOTAUserMsg_MiniKillCamInfo_Attacker& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_MiniKillCamInfo.Attacker)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  abilities_.MergeFrom(from.abilities_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_attacker_name();
      attacker_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attacker_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      attacker_ = from.attacker_;
    }
    if (cached_has_bits & 0x00000004u) {
      total_damage_ = from.total_damage_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_MiniKillCamInfo_Attacker::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_MiniKillCamInfo.Attacker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_MiniKillCamInfo_Attacker::CopyFrom(const CDOTAUserMsg_MiniKillCamInfo_Attacker& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_MiniKillCamInfo.Attacker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_MiniKillCamInfo_Attacker::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_MiniKillCamInfo_Attacker::Swap(CDOTAUserMsg_MiniKillCamInfo_Attacker* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_MiniKillCamInfo_Attacker::InternalSwap(CDOTAUserMsg_MiniKillCamInfo_Attacker* other) {
  using std::swap;
  CastToBase(&abilities_)->InternalSwap(CastToBase(&other->abilities_));
  attacker_name_.Swap(&other->attacker_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(attacker_, other->attacker_);
  swap(total_damage_, other->total_damage_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_MiniKillCamInfo_Attacker::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_MiniKillCamInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_MiniKillCamInfo::kAttackersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_MiniKillCamInfo::CDOTAUserMsg_MiniKillCamInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_MiniKillCamInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_MiniKillCamInfo)
}
CDOTAUserMsg_MiniKillCamInfo::CDOTAUserMsg_MiniKillCamInfo(const CDOTAUserMsg_MiniKillCamInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      attackers_(from.attackers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_MiniKillCamInfo)
}

void CDOTAUserMsg_MiniKillCamInfo::SharedCtor() {
}

CDOTAUserMsg_MiniKillCamInfo::~CDOTAUserMsg_MiniKillCamInfo() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_MiniKillCamInfo)
  SharedDtor();
}

void CDOTAUserMsg_MiniKillCamInfo::SharedDtor() {
}

void CDOTAUserMsg_MiniKillCamInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_MiniKillCamInfo::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_MiniKillCamInfo& CDOTAUserMsg_MiniKillCamInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_MiniKillCamInfo.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_MiniKillCamInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_MiniKillCamInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attackers_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_MiniKillCamInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_MiniKillCamInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_attackers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_MiniKillCamInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_MiniKillCamInfo)
  return false;
#undef DO_
}

void CDOTAUserMsg_MiniKillCamInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_MiniKillCamInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attackers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->attackers(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_MiniKillCamInfo)
}

::google::protobuf::uint8* CDOTAUserMsg_MiniKillCamInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_MiniKillCamInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attackers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->attackers(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_MiniKillCamInfo)
  return target;
}

size_t CDOTAUserMsg_MiniKillCamInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_MiniKillCamInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->attackers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attackers(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_MiniKillCamInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_MiniKillCamInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_MiniKillCamInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_MiniKillCamInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_MiniKillCamInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_MiniKillCamInfo)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_MiniKillCamInfo::MergeFrom(const CDOTAUserMsg_MiniKillCamInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_MiniKillCamInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attackers_.MergeFrom(from.attackers_);
}

void CDOTAUserMsg_MiniKillCamInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_MiniKillCamInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_MiniKillCamInfo::CopyFrom(const CDOTAUserMsg_MiniKillCamInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_MiniKillCamInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_MiniKillCamInfo::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_MiniKillCamInfo::Swap(CDOTAUserMsg_MiniKillCamInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_MiniKillCamInfo::InternalSwap(CDOTAUserMsg_MiniKillCamInfo* other) {
  using std::swap;
  CastToBase(&attackers_)->InternalSwap(CastToBase(&other->attackers_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_MiniKillCamInfo::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_GlobalLightColor::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_GlobalLightColor::kColorFieldNumber;
const int CDOTAUserMsg_GlobalLightColor::kDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_GlobalLightColor::CDOTAUserMsg_GlobalLightColor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_GlobalLightColor.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_GlobalLightColor)
}
CDOTAUserMsg_GlobalLightColor::CDOTAUserMsg_GlobalLightColor(const CDOTAUserMsg_GlobalLightColor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&color_, &from.color_,
    static_cast<size_t>(reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&color_)) + sizeof(duration_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_GlobalLightColor)
}

void CDOTAUserMsg_GlobalLightColor::SharedCtor() {
  ::memset(&color_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&color_)) + sizeof(duration_));
}

CDOTAUserMsg_GlobalLightColor::~CDOTAUserMsg_GlobalLightColor() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_GlobalLightColor)
  SharedDtor();
}

void CDOTAUserMsg_GlobalLightColor::SharedDtor() {
}

void CDOTAUserMsg_GlobalLightColor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_GlobalLightColor::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_GlobalLightColor& CDOTAUserMsg_GlobalLightColor::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_GlobalLightColor.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_GlobalLightColor::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_GlobalLightColor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&color_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&duration_) -
        reinterpret_cast<char*>(&color_)) + sizeof(duration_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_GlobalLightColor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_GlobalLightColor)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 color = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_color();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &color_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float duration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_GlobalLightColor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_GlobalLightColor)
  return false;
#undef DO_
}

void CDOTAUserMsg_GlobalLightColor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_GlobalLightColor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 color = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->color(), output);
  }

  // optional float duration = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->duration(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_GlobalLightColor)
}

::google::protobuf::uint8* CDOTAUserMsg_GlobalLightColor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_GlobalLightColor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 color = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->color(), target);
  }

  // optional float duration = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->duration(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_GlobalLightColor)
  return target;
}

size_t CDOTAUserMsg_GlobalLightColor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_GlobalLightColor)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 color = 1;
    if (has_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->color());
    }

    // optional float duration = 2;
    if (has_duration()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_GlobalLightColor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_GlobalLightColor)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_GlobalLightColor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_GlobalLightColor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_GlobalLightColor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_GlobalLightColor)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_GlobalLightColor::MergeFrom(const CDOTAUserMsg_GlobalLightColor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_GlobalLightColor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      color_ = from.color_;
    }
    if (cached_has_bits & 0x00000002u) {
      duration_ = from.duration_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_GlobalLightColor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_GlobalLightColor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_GlobalLightColor::CopyFrom(const CDOTAUserMsg_GlobalLightColor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_GlobalLightColor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_GlobalLightColor::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_GlobalLightColor::Swap(CDOTAUserMsg_GlobalLightColor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_GlobalLightColor::InternalSwap(CDOTAUserMsg_GlobalLightColor* other) {
  using std::swap;
  swap(color_, other->color_);
  swap(duration_, other->duration_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_GlobalLightColor::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_GlobalLightDirection::InitAsDefaultInstance() {
  ::_CDOTAUserMsg_GlobalLightDirection_default_instance_._instance.get_mutable()->direction_ = const_cast< ::CMsgVector*>(
      ::CMsgVector::internal_default_instance());
}
void CDOTAUserMsg_GlobalLightDirection::clear_direction() {
  if (direction_ != NULL) direction_->Clear();
  clear_has_direction();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_GlobalLightDirection::kDirectionFieldNumber;
const int CDOTAUserMsg_GlobalLightDirection::kDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_GlobalLightDirection::CDOTAUserMsg_GlobalLightDirection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_GlobalLightDirection.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_GlobalLightDirection)
}
CDOTAUserMsg_GlobalLightDirection::CDOTAUserMsg_GlobalLightDirection(const CDOTAUserMsg_GlobalLightDirection& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_direction()) {
    direction_ = new ::CMsgVector(*from.direction_);
  } else {
    direction_ = NULL;
  }
  duration_ = from.duration_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_GlobalLightDirection)
}

void CDOTAUserMsg_GlobalLightDirection::SharedCtor() {
  ::memset(&direction_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&direction_)) + sizeof(duration_));
}

CDOTAUserMsg_GlobalLightDirection::~CDOTAUserMsg_GlobalLightDirection() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_GlobalLightDirection)
  SharedDtor();
}

void CDOTAUserMsg_GlobalLightDirection::SharedDtor() {
  if (this != internal_default_instance()) delete direction_;
}

void CDOTAUserMsg_GlobalLightDirection::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_GlobalLightDirection::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_GlobalLightDirection& CDOTAUserMsg_GlobalLightDirection::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_GlobalLightDirection.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_GlobalLightDirection::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_GlobalLightDirection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(direction_ != NULL);
    direction_->Clear();
  }
  duration_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_GlobalLightDirection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_GlobalLightDirection)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsgVector direction = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_direction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float duration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_GlobalLightDirection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_GlobalLightDirection)
  return false;
#undef DO_
}

void CDOTAUserMsg_GlobalLightDirection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_GlobalLightDirection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgVector direction = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_direction(), output);
  }

  // optional float duration = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->duration(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_GlobalLightDirection)
}

::google::protobuf::uint8* CDOTAUserMsg_GlobalLightDirection::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_GlobalLightDirection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgVector direction = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_direction(), deterministic, target);
  }

  // optional float duration = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->duration(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_GlobalLightDirection)
  return target;
}

size_t CDOTAUserMsg_GlobalLightDirection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_GlobalLightDirection)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .CMsgVector direction = 1;
    if (has_direction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *direction_);
    }

    // optional float duration = 2;
    if (has_duration()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_GlobalLightDirection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_GlobalLightDirection)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_GlobalLightDirection* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_GlobalLightDirection>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_GlobalLightDirection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_GlobalLightDirection)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_GlobalLightDirection::MergeFrom(const CDOTAUserMsg_GlobalLightDirection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_GlobalLightDirection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_direction()->::CMsgVector::MergeFrom(from.direction());
    }
    if (cached_has_bits & 0x00000002u) {
      duration_ = from.duration_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_GlobalLightDirection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_GlobalLightDirection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_GlobalLightDirection::CopyFrom(const CDOTAUserMsg_GlobalLightDirection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_GlobalLightDirection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_GlobalLightDirection::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_GlobalLightDirection::Swap(CDOTAUserMsg_GlobalLightDirection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_GlobalLightDirection::InternalSwap(CDOTAUserMsg_GlobalLightDirection* other) {
  using std::swap;
  swap(direction_, other->direction_);
  swap(duration_, other->duration_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_GlobalLightDirection::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_LocationPing::InitAsDefaultInstance() {
  ::_CDOTAUserMsg_LocationPing_default_instance_._instance.get_mutable()->location_ping_ = const_cast< ::CDOTAMsg_LocationPing*>(
      ::CDOTAMsg_LocationPing::internal_default_instance());
}
void CDOTAUserMsg_LocationPing::clear_location_ping() {
  if (location_ping_ != NULL) location_ping_->Clear();
  clear_has_location_ping();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_LocationPing::kPlayerIdFieldNumber;
const int CDOTAUserMsg_LocationPing::kLocationPingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_LocationPing::CDOTAUserMsg_LocationPing()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_LocationPing.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_LocationPing)
}
CDOTAUserMsg_LocationPing::CDOTAUserMsg_LocationPing(const CDOTAUserMsg_LocationPing& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_location_ping()) {
    location_ping_ = new ::CDOTAMsg_LocationPing(*from.location_ping_);
  } else {
    location_ping_ = NULL;
  }
  player_id_ = from.player_id_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_LocationPing)
}

void CDOTAUserMsg_LocationPing::SharedCtor() {
  ::memset(&location_ping_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_id_) -
      reinterpret_cast<char*>(&location_ping_)) + sizeof(player_id_));
}

CDOTAUserMsg_LocationPing::~CDOTAUserMsg_LocationPing() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_LocationPing)
  SharedDtor();
}

void CDOTAUserMsg_LocationPing::SharedDtor() {
  if (this != internal_default_instance()) delete location_ping_;
}

void CDOTAUserMsg_LocationPing::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_LocationPing::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_LocationPing& CDOTAUserMsg_LocationPing::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_LocationPing.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_LocationPing::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_LocationPing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(location_ping_ != NULL);
    location_ping_->Clear();
  }
  player_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_LocationPing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_LocationPing)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CDOTAMsg_LocationPing location_ping = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location_ping()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_LocationPing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_LocationPing)
  return false;
#undef DO_
}

void CDOTAUserMsg_LocationPing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_LocationPing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // optional .CDOTAMsg_LocationPing location_ping = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_location_ping(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_LocationPing)
}

::google::protobuf::uint8* CDOTAUserMsg_LocationPing::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_LocationPing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // optional .CDOTAMsg_LocationPing location_ping = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_location_ping(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_LocationPing)
  return target;
}

size_t CDOTAUserMsg_LocationPing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_LocationPing)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .CDOTAMsg_LocationPing location_ping = 2;
    if (has_location_ping()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *location_ping_);
    }

    // optional uint32 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->player_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_LocationPing::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_LocationPing)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_LocationPing* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_LocationPing>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_LocationPing)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_LocationPing)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_LocationPing::MergeFrom(const CDOTAUserMsg_LocationPing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_LocationPing)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_location_ping()->::CDOTAMsg_LocationPing::MergeFrom(from.location_ping());
    }
    if (cached_has_bits & 0x00000002u) {
      player_id_ = from.player_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_LocationPing::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_LocationPing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_LocationPing::CopyFrom(const CDOTAUserMsg_LocationPing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_LocationPing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_LocationPing::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_LocationPing::Swap(CDOTAUserMsg_LocationPing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_LocationPing::InternalSwap(CDOTAUserMsg_LocationPing* other) {
  using std::swap;
  swap(location_ping_, other->location_ping_);
  swap(player_id_, other->player_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_LocationPing::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_ItemAlert::InitAsDefaultInstance() {
  ::_CDOTAUserMsg_ItemAlert_default_instance_._instance.get_mutable()->item_alert_ = const_cast< ::CDOTAMsg_ItemAlert*>(
      ::CDOTAMsg_ItemAlert::internal_default_instance());
}
void CDOTAUserMsg_ItemAlert::clear_item_alert() {
  if (item_alert_ != NULL) item_alert_->Clear();
  clear_has_item_alert();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_ItemAlert::kPlayerIdFieldNumber;
const int CDOTAUserMsg_ItemAlert::kItemAlertFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_ItemAlert::CDOTAUserMsg_ItemAlert()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_ItemAlert.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_ItemAlert)
}
CDOTAUserMsg_ItemAlert::CDOTAUserMsg_ItemAlert(const CDOTAUserMsg_ItemAlert& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_item_alert()) {
    item_alert_ = new ::CDOTAMsg_ItemAlert(*from.item_alert_);
  } else {
    item_alert_ = NULL;
  }
  player_id_ = from.player_id_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_ItemAlert)
}

void CDOTAUserMsg_ItemAlert::SharedCtor() {
  ::memset(&item_alert_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_id_) -
      reinterpret_cast<char*>(&item_alert_)) + sizeof(player_id_));
}

CDOTAUserMsg_ItemAlert::~CDOTAUserMsg_ItemAlert() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_ItemAlert)
  SharedDtor();
}

void CDOTAUserMsg_ItemAlert::SharedDtor() {
  if (this != internal_default_instance()) delete item_alert_;
}

void CDOTAUserMsg_ItemAlert::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_ItemAlert::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_ItemAlert& CDOTAUserMsg_ItemAlert::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_ItemAlert.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_ItemAlert::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_ItemAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(item_alert_ != NULL);
    item_alert_->Clear();
  }
  player_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_ItemAlert::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_ItemAlert)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CDOTAMsg_ItemAlert item_alert = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_item_alert()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_ItemAlert)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_ItemAlert)
  return false;
#undef DO_
}

void CDOTAUserMsg_ItemAlert::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_ItemAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // optional .CDOTAMsg_ItemAlert item_alert = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_item_alert(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_ItemAlert)
}

::google::protobuf::uint8* CDOTAUserMsg_ItemAlert::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_ItemAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // optional .CDOTAMsg_ItemAlert item_alert = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_item_alert(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_ItemAlert)
  return target;
}

size_t CDOTAUserMsg_ItemAlert::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_ItemAlert)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .CDOTAMsg_ItemAlert item_alert = 2;
    if (has_item_alert()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *item_alert_);
    }

    // optional uint32 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->player_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_ItemAlert::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_ItemAlert)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_ItemAlert* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_ItemAlert>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_ItemAlert)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_ItemAlert)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_ItemAlert::MergeFrom(const CDOTAUserMsg_ItemAlert& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_ItemAlert)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_item_alert()->::CDOTAMsg_ItemAlert::MergeFrom(from.item_alert());
    }
    if (cached_has_bits & 0x00000002u) {
      player_id_ = from.player_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_ItemAlert::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_ItemAlert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_ItemAlert::CopyFrom(const CDOTAUserMsg_ItemAlert& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_ItemAlert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_ItemAlert::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_ItemAlert::Swap(CDOTAUserMsg_ItemAlert* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_ItemAlert::InternalSwap(CDOTAUserMsg_ItemAlert* other) {
  using std::swap;
  swap(item_alert_, other->item_alert_);
  swap(player_id_, other->player_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_ItemAlert::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_EnemyItemAlert::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_EnemyItemAlert::kPlayerIdFieldNumber;
const int CDOTAUserMsg_EnemyItemAlert::kTargetPlayerIdFieldNumber;
const int CDOTAUserMsg_EnemyItemAlert::kItemAbilityIdFieldNumber;
const int CDOTAUserMsg_EnemyItemAlert::kRuneTypeFieldNumber;
const int CDOTAUserMsg_EnemyItemAlert::kEntityIdFieldNumber;
const int CDOTAUserMsg_EnemyItemAlert::kItemLevelFieldNumber;
const int CDOTAUserMsg_EnemyItemAlert::kPrimaryChargesFieldNumber;
const int CDOTAUserMsg_EnemyItemAlert::kSecondaryChargesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_EnemyItemAlert::CDOTAUserMsg_EnemyItemAlert()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_EnemyItemAlert.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_EnemyItemAlert)
}
CDOTAUserMsg_EnemyItemAlert::CDOTAUserMsg_EnemyItemAlert(const CDOTAUserMsg_EnemyItemAlert& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&primary_charges_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(primary_charges_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_EnemyItemAlert)
}

void CDOTAUserMsg_EnemyItemAlert::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(entity_id_));
  secondary_charges_ = -1;
  item_level_ = -1;
  primary_charges_ = -1;
}

CDOTAUserMsg_EnemyItemAlert::~CDOTAUserMsg_EnemyItemAlert() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_EnemyItemAlert)
  SharedDtor();
}

void CDOTAUserMsg_EnemyItemAlert::SharedDtor() {
}

void CDOTAUserMsg_EnemyItemAlert::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_EnemyItemAlert::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_EnemyItemAlert& CDOTAUserMsg_EnemyItemAlert::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_EnemyItemAlert.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_EnemyItemAlert::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_EnemyItemAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&entity_id_) -
        reinterpret_cast<char*>(&player_id_)) + sizeof(entity_id_));
    secondary_charges_ = -1;
    item_level_ = -1;
    primary_charges_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_EnemyItemAlert::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_EnemyItemAlert)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 target_player_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_target_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 item_ability_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_item_ability_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_ability_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 rune_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_rune_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rune_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 entity_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_entity_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 item_level = 6 [default = -1];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_item_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 primary_charges = 7 [default = -1];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_primary_charges();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &primary_charges_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 secondary_charges = 8 [default = -1];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_secondary_charges();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &secondary_charges_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_EnemyItemAlert)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_EnemyItemAlert)
  return false;
#undef DO_
}

void CDOTAUserMsg_EnemyItemAlert::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_EnemyItemAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // optional uint32 target_player_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->target_player_id(), output);
  }

  // optional int32 item_ability_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->item_ability_id(), output);
  }

  // optional uint32 rune_type = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->rune_type(), output);
  }

  // optional int32 entity_id = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->entity_id(), output);
  }

  // optional int32 item_level = 6 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->item_level(), output);
  }

  // optional int32 primary_charges = 7 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->primary_charges(), output);
  }

  // optional int32 secondary_charges = 8 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->secondary_charges(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_EnemyItemAlert)
}

::google::protobuf::uint8* CDOTAUserMsg_EnemyItemAlert::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_EnemyItemAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // optional uint32 target_player_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->target_player_id(), target);
  }

  // optional int32 item_ability_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->item_ability_id(), target);
  }

  // optional uint32 rune_type = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->rune_type(), target);
  }

  // optional int32 entity_id = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->entity_id(), target);
  }

  // optional int32 item_level = 6 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->item_level(), target);
  }

  // optional int32 primary_charges = 7 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->primary_charges(), target);
  }

  // optional int32 secondary_charges = 8 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->secondary_charges(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_EnemyItemAlert)
  return target;
}

size_t CDOTAUserMsg_EnemyItemAlert::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_EnemyItemAlert)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->player_id());
    }

    // optional uint32 target_player_id = 2;
    if (has_target_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->target_player_id());
    }

    // optional int32 item_ability_id = 3;
    if (has_item_ability_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_ability_id());
    }

    // optional uint32 rune_type = 4;
    if (has_rune_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rune_type());
    }

    // optional int32 entity_id = 5;
    if (has_entity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entity_id());
    }

    // optional int32 secondary_charges = 8 [default = -1];
    if (has_secondary_charges()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->secondary_charges());
    }

    // optional int32 item_level = 6 [default = -1];
    if (has_item_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_level());
    }

    // optional int32 primary_charges = 7 [default = -1];
    if (has_primary_charges()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->primary_charges());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_EnemyItemAlert::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_EnemyItemAlert)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_EnemyItemAlert* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_EnemyItemAlert>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_EnemyItemAlert)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_EnemyItemAlert)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_EnemyItemAlert::MergeFrom(const CDOTAUserMsg_EnemyItemAlert& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_EnemyItemAlert)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      target_player_id_ = from.target_player_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      item_ability_id_ = from.item_ability_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      rune_type_ = from.rune_type_;
    }
    if (cached_has_bits & 0x00000010u) {
      entity_id_ = from.entity_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      secondary_charges_ = from.secondary_charges_;
    }
    if (cached_has_bits & 0x00000040u) {
      item_level_ = from.item_level_;
    }
    if (cached_has_bits & 0x00000080u) {
      primary_charges_ = from.primary_charges_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_EnemyItemAlert::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_EnemyItemAlert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_EnemyItemAlert::CopyFrom(const CDOTAUserMsg_EnemyItemAlert& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_EnemyItemAlert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_EnemyItemAlert::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_EnemyItemAlert::Swap(CDOTAUserMsg_EnemyItemAlert* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_EnemyItemAlert::InternalSwap(CDOTAUserMsg_EnemyItemAlert* other) {
  using std::swap;
  swap(player_id_, other->player_id_);
  swap(target_player_id_, other->target_player_id_);
  swap(item_ability_id_, other->item_ability_id_);
  swap(rune_type_, other->rune_type_);
  swap(entity_id_, other->entity_id_);
  swap(secondary_charges_, other->secondary_charges_);
  swap(item_level_, other->item_level_);
  swap(primary_charges_, other->primary_charges_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_EnemyItemAlert::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_ModifierAlert::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_ModifierAlert::kPlayerIdFieldNumber;
const int CDOTAUserMsg_ModifierAlert::kClassNameFieldNumber;
const int CDOTAUserMsg_ModifierAlert::kStackCountFieldNumber;
const int CDOTAUserMsg_ModifierAlert::kIsDebuffFieldNumber;
const int CDOTAUserMsg_ModifierAlert::kTargetEntindexFieldNumber;
const int CDOTAUserMsg_ModifierAlert::kSecondsRemainingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_ModifierAlert::CDOTAUserMsg_ModifierAlert()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_ModifierAlert.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_ModifierAlert)
}
CDOTAUserMsg_ModifierAlert::CDOTAUserMsg_ModifierAlert(const CDOTAUserMsg_ModifierAlert& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  class_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_class_name()) {
    class_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.class_name_);
  }
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&seconds_remaining_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(seconds_remaining_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_ModifierAlert)
}

void CDOTAUserMsg_ModifierAlert::SharedCtor() {
  class_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seconds_remaining_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(seconds_remaining_));
}

CDOTAUserMsg_ModifierAlert::~CDOTAUserMsg_ModifierAlert() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_ModifierAlert)
  SharedDtor();
}

void CDOTAUserMsg_ModifierAlert::SharedDtor() {
  class_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTAUserMsg_ModifierAlert::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_ModifierAlert::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_ModifierAlert& CDOTAUserMsg_ModifierAlert::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_ModifierAlert.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_ModifierAlert::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_ModifierAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    class_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 62u) {
    ::memset(&player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&seconds_remaining_) -
        reinterpret_cast<char*>(&player_id_)) + sizeof(seconds_remaining_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_ModifierAlert::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_ModifierAlert)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string class_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_class_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->class_name().data(), static_cast<int>(this->class_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_ModifierAlert.class_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 stack_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_stack_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stack_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_debuff = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_is_debuff();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_debuff_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 target_entindex = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_target_entindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_entindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float seconds_remaining = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          set_has_seconds_remaining();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &seconds_remaining_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_ModifierAlert)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_ModifierAlert)
  return false;
#undef DO_
}

void CDOTAUserMsg_ModifierAlert::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_ModifierAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // optional string class_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->class_name().data(), static_cast<int>(this->class_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_ModifierAlert.class_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->class_name(), output);
  }

  // optional uint32 stack_count = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->stack_count(), output);
  }

  // optional bool is_debuff = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_debuff(), output);
  }

  // optional uint32 target_entindex = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->target_entindex(), output);
  }

  // optional float seconds_remaining = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->seconds_remaining(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_ModifierAlert)
}

::google::protobuf::uint8* CDOTAUserMsg_ModifierAlert::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_ModifierAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // optional string class_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->class_name().data(), static_cast<int>(this->class_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_ModifierAlert.class_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->class_name(), target);
  }

  // optional uint32 stack_count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->stack_count(), target);
  }

  // optional bool is_debuff = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_debuff(), target);
  }

  // optional uint32 target_entindex = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->target_entindex(), target);
  }

  // optional float seconds_remaining = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->seconds_remaining(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_ModifierAlert)
  return target;
}

size_t CDOTAUserMsg_ModifierAlert::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_ModifierAlert)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string class_name = 2;
    if (has_class_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->class_name());
    }

    // optional uint32 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->player_id());
    }

    // optional uint32 stack_count = 3;
    if (has_stack_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stack_count());
    }

    // optional bool is_debuff = 4;
    if (has_is_debuff()) {
      total_size += 1 + 1;
    }

    // optional uint32 target_entindex = 5;
    if (has_target_entindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->target_entindex());
    }

    // optional float seconds_remaining = 6;
    if (has_seconds_remaining()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_ModifierAlert::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_ModifierAlert)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_ModifierAlert* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_ModifierAlert>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_ModifierAlert)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_ModifierAlert)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_ModifierAlert::MergeFrom(const CDOTAUserMsg_ModifierAlert& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_ModifierAlert)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_class_name();
      class_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.class_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      stack_count_ = from.stack_count_;
    }
    if (cached_has_bits & 0x00000008u) {
      is_debuff_ = from.is_debuff_;
    }
    if (cached_has_bits & 0x00000010u) {
      target_entindex_ = from.target_entindex_;
    }
    if (cached_has_bits & 0x00000020u) {
      seconds_remaining_ = from.seconds_remaining_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_ModifierAlert::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_ModifierAlert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_ModifierAlert::CopyFrom(const CDOTAUserMsg_ModifierAlert& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_ModifierAlert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_ModifierAlert::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_ModifierAlert::Swap(CDOTAUserMsg_ModifierAlert* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_ModifierAlert::InternalSwap(CDOTAUserMsg_ModifierAlert* other) {
  using std::swap;
  class_name_.Swap(&other->class_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(player_id_, other->player_id_);
  swap(stack_count_, other->stack_count_);
  swap(is_debuff_, other->is_debuff_);
  swap(target_entindex_, other->target_entindex_);
  swap(seconds_remaining_, other->seconds_remaining_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_ModifierAlert::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_HPManaAlert::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_HPManaAlert::kPlayerIdFieldNumber;
const int CDOTAUserMsg_HPManaAlert::kTargetEntindexFieldNumber;
const int CDOTAUserMsg_HPManaAlert::kShowRawValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_HPManaAlert::CDOTAUserMsg_HPManaAlert()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_HPManaAlert.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_HPManaAlert)
}
CDOTAUserMsg_HPManaAlert::CDOTAUserMsg_HPManaAlert(const CDOTAUserMsg_HPManaAlert& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&show_raw_values_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(show_raw_values_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_HPManaAlert)
}

void CDOTAUserMsg_HPManaAlert::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&show_raw_values_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(show_raw_values_));
}

CDOTAUserMsg_HPManaAlert::~CDOTAUserMsg_HPManaAlert() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_HPManaAlert)
  SharedDtor();
}

void CDOTAUserMsg_HPManaAlert::SharedDtor() {
}

void CDOTAUserMsg_HPManaAlert::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_HPManaAlert::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_HPManaAlert& CDOTAUserMsg_HPManaAlert::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_HPManaAlert.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_HPManaAlert::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_HPManaAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&show_raw_values_) -
        reinterpret_cast<char*>(&player_id_)) + sizeof(show_raw_values_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_HPManaAlert::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_HPManaAlert)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 target_entindex = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_target_entindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_entindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool show_raw_values = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_show_raw_values();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_raw_values_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_HPManaAlert)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_HPManaAlert)
  return false;
#undef DO_
}

void CDOTAUserMsg_HPManaAlert::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_HPManaAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // optional uint32 target_entindex = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->target_entindex(), output);
  }

  // optional bool show_raw_values = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->show_raw_values(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_HPManaAlert)
}

::google::protobuf::uint8* CDOTAUserMsg_HPManaAlert::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_HPManaAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // optional uint32 target_entindex = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->target_entindex(), target);
  }

  // optional bool show_raw_values = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->show_raw_values(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_HPManaAlert)
  return target;
}

size_t CDOTAUserMsg_HPManaAlert::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_HPManaAlert)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->player_id());
    }

    // optional uint32 target_entindex = 2;
    if (has_target_entindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->target_entindex());
    }

    // optional bool show_raw_values = 3;
    if (has_show_raw_values()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_HPManaAlert::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_HPManaAlert)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_HPManaAlert* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_HPManaAlert>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_HPManaAlert)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_HPManaAlert)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_HPManaAlert::MergeFrom(const CDOTAUserMsg_HPManaAlert& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_HPManaAlert)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      target_entindex_ = from.target_entindex_;
    }
    if (cached_has_bits & 0x00000004u) {
      show_raw_values_ = from.show_raw_values_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_HPManaAlert::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_HPManaAlert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_HPManaAlert::CopyFrom(const CDOTAUserMsg_HPManaAlert& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_HPManaAlert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_HPManaAlert::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_HPManaAlert::Swap(CDOTAUserMsg_HPManaAlert* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_HPManaAlert::InternalSwap(CDOTAUserMsg_HPManaAlert* other) {
  using std::swap;
  swap(player_id_, other->player_id_);
  swap(target_entindex_, other->target_entindex_);
  swap(show_raw_values_, other->show_raw_values_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_HPManaAlert::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_GlyphAlert::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_GlyphAlert::kPlayerIdFieldNumber;
const int CDOTAUserMsg_GlyphAlert::kNegativeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_GlyphAlert::CDOTAUserMsg_GlyphAlert()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_GlyphAlert.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_GlyphAlert)
}
CDOTAUserMsg_GlyphAlert::CDOTAUserMsg_GlyphAlert(const CDOTAUserMsg_GlyphAlert& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&negative_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(negative_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_GlyphAlert)
}

void CDOTAUserMsg_GlyphAlert::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&negative_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(negative_));
}

CDOTAUserMsg_GlyphAlert::~CDOTAUserMsg_GlyphAlert() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_GlyphAlert)
  SharedDtor();
}

void CDOTAUserMsg_GlyphAlert::SharedDtor() {
}

void CDOTAUserMsg_GlyphAlert::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_GlyphAlert::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_GlyphAlert& CDOTAUserMsg_GlyphAlert::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_GlyphAlert.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_GlyphAlert::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_GlyphAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&negative_) -
        reinterpret_cast<char*>(&player_id_)) + sizeof(negative_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_GlyphAlert::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_GlyphAlert)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool negative = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_negative();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &negative_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_GlyphAlert)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_GlyphAlert)
  return false;
#undef DO_
}

void CDOTAUserMsg_GlyphAlert::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_GlyphAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // optional bool negative = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->negative(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_GlyphAlert)
}

::google::protobuf::uint8* CDOTAUserMsg_GlyphAlert::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_GlyphAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // optional bool negative = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->negative(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_GlyphAlert)
  return target;
}

size_t CDOTAUserMsg_GlyphAlert::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_GlyphAlert)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->player_id());
    }

    // optional bool negative = 2;
    if (has_negative()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_GlyphAlert::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_GlyphAlert)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_GlyphAlert* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_GlyphAlert>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_GlyphAlert)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_GlyphAlert)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_GlyphAlert::MergeFrom(const CDOTAUserMsg_GlyphAlert& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_GlyphAlert)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      negative_ = from.negative_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_GlyphAlert::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_GlyphAlert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_GlyphAlert::CopyFrom(const CDOTAUserMsg_GlyphAlert& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_GlyphAlert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_GlyphAlert::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_GlyphAlert::Swap(CDOTAUserMsg_GlyphAlert* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_GlyphAlert::InternalSwap(CDOTAUserMsg_GlyphAlert* other) {
  using std::swap;
  swap(player_id_, other->player_id_);
  swap(negative_, other->negative_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_GlyphAlert::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_WillPurchaseAlert::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_WillPurchaseAlert::kItemAbilityIdFieldNumber;
const int CDOTAUserMsg_WillPurchaseAlert::kPlayerIdFieldNumber;
const int CDOTAUserMsg_WillPurchaseAlert::kGoldRemainingFieldNumber;
const int CDOTAUserMsg_WillPurchaseAlert::kSuggestionPlayerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_WillPurchaseAlert::CDOTAUserMsg_WillPurchaseAlert()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_WillPurchaseAlert.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_WillPurchaseAlert)
}
CDOTAUserMsg_WillPurchaseAlert::CDOTAUserMsg_WillPurchaseAlert(const CDOTAUserMsg_WillPurchaseAlert& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_ability_id_, &from.item_ability_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&suggestion_player_id_) -
    reinterpret_cast<char*>(&item_ability_id_)) + sizeof(suggestion_player_id_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_WillPurchaseAlert)
}

void CDOTAUserMsg_WillPurchaseAlert::SharedCtor() {
  ::memset(&item_ability_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&suggestion_player_id_) -
      reinterpret_cast<char*>(&item_ability_id_)) + sizeof(suggestion_player_id_));
}

CDOTAUserMsg_WillPurchaseAlert::~CDOTAUserMsg_WillPurchaseAlert() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_WillPurchaseAlert)
  SharedDtor();
}

void CDOTAUserMsg_WillPurchaseAlert::SharedDtor() {
}

void CDOTAUserMsg_WillPurchaseAlert::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_WillPurchaseAlert::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_WillPurchaseAlert& CDOTAUserMsg_WillPurchaseAlert::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_WillPurchaseAlert.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_WillPurchaseAlert::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_WillPurchaseAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&item_ability_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&suggestion_player_id_) -
        reinterpret_cast<char*>(&item_ability_id_)) + sizeof(suggestion_player_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_WillPurchaseAlert::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_WillPurchaseAlert)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_ability_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_item_ability_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_ability_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 player_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 gold_remaining = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_gold_remaining();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gold_remaining_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 suggestion_player_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_suggestion_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &suggestion_player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_WillPurchaseAlert)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_WillPurchaseAlert)
  return false;
#undef DO_
}

void CDOTAUserMsg_WillPurchaseAlert::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_WillPurchaseAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 item_ability_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_ability_id(), output);
  }

  // optional int32 player_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->player_id(), output);
  }

  // optional uint32 gold_remaining = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->gold_remaining(), output);
  }

  // optional int32 suggestion_player_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->suggestion_player_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_WillPurchaseAlert)
}

::google::protobuf::uint8* CDOTAUserMsg_WillPurchaseAlert::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_WillPurchaseAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 item_ability_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_ability_id(), target);
  }

  // optional int32 player_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->player_id(), target);
  }

  // optional uint32 gold_remaining = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->gold_remaining(), target);
  }

  // optional int32 suggestion_player_id = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->suggestion_player_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_WillPurchaseAlert)
  return target;
}

size_t CDOTAUserMsg_WillPurchaseAlert::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_WillPurchaseAlert)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 item_ability_id = 1;
    if (has_item_ability_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_ability_id());
    }

    // optional int32 player_id = 2;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player_id());
    }

    // optional uint32 gold_remaining = 3;
    if (has_gold_remaining()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gold_remaining());
    }

    // optional int32 suggestion_player_id = 4;
    if (has_suggestion_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->suggestion_player_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_WillPurchaseAlert::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_WillPurchaseAlert)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_WillPurchaseAlert* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_WillPurchaseAlert>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_WillPurchaseAlert)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_WillPurchaseAlert)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_WillPurchaseAlert::MergeFrom(const CDOTAUserMsg_WillPurchaseAlert& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_WillPurchaseAlert)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      item_ability_id_ = from.item_ability_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      gold_remaining_ = from.gold_remaining_;
    }
    if (cached_has_bits & 0x00000008u) {
      suggestion_player_id_ = from.suggestion_player_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_WillPurchaseAlert::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_WillPurchaseAlert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_WillPurchaseAlert::CopyFrom(const CDOTAUserMsg_WillPurchaseAlert& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_WillPurchaseAlert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_WillPurchaseAlert::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_WillPurchaseAlert::Swap(CDOTAUserMsg_WillPurchaseAlert* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_WillPurchaseAlert::InternalSwap(CDOTAUserMsg_WillPurchaseAlert* other) {
  using std::swap;
  swap(item_ability_id_, other->item_ability_id_);
  swap(player_id_, other->player_id_);
  swap(gold_remaining_, other->gold_remaining_);
  swap(suggestion_player_id_, other->suggestion_player_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_WillPurchaseAlert::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_EmptyTeleportAlert::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_EmptyTeleportAlert::kSourcePlayerIdFieldNumber;
const int CDOTAUserMsg_EmptyTeleportAlert::kTargetPlayerIdFieldNumber;
const int CDOTAUserMsg_EmptyTeleportAlert::kCooldownSecondsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_EmptyTeleportAlert::CDOTAUserMsg_EmptyTeleportAlert()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_EmptyTeleportAlert.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_EmptyTeleportAlert)
}
CDOTAUserMsg_EmptyTeleportAlert::CDOTAUserMsg_EmptyTeleportAlert(const CDOTAUserMsg_EmptyTeleportAlert& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&source_player_id_, &from.source_player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&cooldown_seconds_) -
    reinterpret_cast<char*>(&source_player_id_)) + sizeof(cooldown_seconds_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_EmptyTeleportAlert)
}

void CDOTAUserMsg_EmptyTeleportAlert::SharedCtor() {
  ::memset(&source_player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cooldown_seconds_) -
      reinterpret_cast<char*>(&source_player_id_)) + sizeof(cooldown_seconds_));
}

CDOTAUserMsg_EmptyTeleportAlert::~CDOTAUserMsg_EmptyTeleportAlert() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_EmptyTeleportAlert)
  SharedDtor();
}

void CDOTAUserMsg_EmptyTeleportAlert::SharedDtor() {
}

void CDOTAUserMsg_EmptyTeleportAlert::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_EmptyTeleportAlert::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_EmptyTeleportAlert& CDOTAUserMsg_EmptyTeleportAlert::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_EmptyTeleportAlert.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_EmptyTeleportAlert::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_EmptyTeleportAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&source_player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cooldown_seconds_) -
        reinterpret_cast<char*>(&source_player_id_)) + sizeof(cooldown_seconds_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_EmptyTeleportAlert::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_EmptyTeleportAlert)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 source_player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_source_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &source_player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 target_player_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_target_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cooldown_seconds = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_cooldown_seconds();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cooldown_seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_EmptyTeleportAlert)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_EmptyTeleportAlert)
  return false;
#undef DO_
}

void CDOTAUserMsg_EmptyTeleportAlert::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_EmptyTeleportAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 source_player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->source_player_id(), output);
  }

  // optional int32 target_player_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->target_player_id(), output);
  }

  // optional int32 cooldown_seconds = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->cooldown_seconds(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_EmptyTeleportAlert)
}

::google::protobuf::uint8* CDOTAUserMsg_EmptyTeleportAlert::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_EmptyTeleportAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 source_player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->source_player_id(), target);
  }

  // optional int32 target_player_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->target_player_id(), target);
  }

  // optional int32 cooldown_seconds = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->cooldown_seconds(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_EmptyTeleportAlert)
  return target;
}

size_t CDOTAUserMsg_EmptyTeleportAlert::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_EmptyTeleportAlert)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 source_player_id = 1;
    if (has_source_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->source_player_id());
    }

    // optional int32 target_player_id = 2;
    if (has_target_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_player_id());
    }

    // optional int32 cooldown_seconds = 3;
    if (has_cooldown_seconds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cooldown_seconds());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_EmptyTeleportAlert::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_EmptyTeleportAlert)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_EmptyTeleportAlert* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_EmptyTeleportAlert>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_EmptyTeleportAlert)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_EmptyTeleportAlert)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_EmptyTeleportAlert::MergeFrom(const CDOTAUserMsg_EmptyTeleportAlert& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_EmptyTeleportAlert)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      source_player_id_ = from.source_player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      target_player_id_ = from.target_player_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      cooldown_seconds_ = from.cooldown_seconds_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_EmptyTeleportAlert::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_EmptyTeleportAlert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_EmptyTeleportAlert::CopyFrom(const CDOTAUserMsg_EmptyTeleportAlert& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_EmptyTeleportAlert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_EmptyTeleportAlert::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_EmptyTeleportAlert::Swap(CDOTAUserMsg_EmptyTeleportAlert* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_EmptyTeleportAlert::InternalSwap(CDOTAUserMsg_EmptyTeleportAlert* other) {
  using std::swap;
  swap(source_player_id_, other->source_player_id_);
  swap(target_player_id_, other->target_player_id_);
  swap(cooldown_seconds_, other->cooldown_seconds_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_EmptyTeleportAlert::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_BuyBackStateAlert::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_BuyBackStateAlert::kPlayerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_BuyBackStateAlert::CDOTAUserMsg_BuyBackStateAlert()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_BuyBackStateAlert.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_BuyBackStateAlert)
}
CDOTAUserMsg_BuyBackStateAlert::CDOTAUserMsg_BuyBackStateAlert(const CDOTAUserMsg_BuyBackStateAlert& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  player_id_ = from.player_id_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_BuyBackStateAlert)
}

void CDOTAUserMsg_BuyBackStateAlert::SharedCtor() {
  player_id_ = 0;
}

CDOTAUserMsg_BuyBackStateAlert::~CDOTAUserMsg_BuyBackStateAlert() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_BuyBackStateAlert)
  SharedDtor();
}

void CDOTAUserMsg_BuyBackStateAlert::SharedDtor() {
}

void CDOTAUserMsg_BuyBackStateAlert::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_BuyBackStateAlert::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_BuyBackStateAlert& CDOTAUserMsg_BuyBackStateAlert::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_BuyBackStateAlert.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_BuyBackStateAlert::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_BuyBackStateAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_BuyBackStateAlert::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_BuyBackStateAlert)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_BuyBackStateAlert)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_BuyBackStateAlert)
  return false;
#undef DO_
}

void CDOTAUserMsg_BuyBackStateAlert::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_BuyBackStateAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->player_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_BuyBackStateAlert)
}

::google::protobuf::uint8* CDOTAUserMsg_BuyBackStateAlert::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_BuyBackStateAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->player_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_BuyBackStateAlert)
  return target;
}

size_t CDOTAUserMsg_BuyBackStateAlert::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_BuyBackStateAlert)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 player_id = 1;
  if (has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->player_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_BuyBackStateAlert::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_BuyBackStateAlert)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_BuyBackStateAlert* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_BuyBackStateAlert>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_BuyBackStateAlert)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_BuyBackStateAlert)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_BuyBackStateAlert::MergeFrom(const CDOTAUserMsg_BuyBackStateAlert& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_BuyBackStateAlert)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_player_id()) {
    set_player_id(from.player_id());
  }
}

void CDOTAUserMsg_BuyBackStateAlert::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_BuyBackStateAlert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_BuyBackStateAlert::CopyFrom(const CDOTAUserMsg_BuyBackStateAlert& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_BuyBackStateAlert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_BuyBackStateAlert::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_BuyBackStateAlert::Swap(CDOTAUserMsg_BuyBackStateAlert* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_BuyBackStateAlert::InternalSwap(CDOTAUserMsg_BuyBackStateAlert* other) {
  using std::swap;
  swap(player_id_, other->player_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_BuyBackStateAlert::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_QuickBuyAlert::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_QuickBuyAlert::kPlayerIdFieldNumber;
const int CDOTAUserMsg_QuickBuyAlert::kItemAbilityIdFieldNumber;
const int CDOTAUserMsg_QuickBuyAlert::kGoldCostFieldNumber;
const int CDOTAUserMsg_QuickBuyAlert::kItemCooldownSecondsFieldNumber;
const int CDOTAUserMsg_QuickBuyAlert::kShowBuybackFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_QuickBuyAlert::CDOTAUserMsg_QuickBuyAlert()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_QuickBuyAlert.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_QuickBuyAlert)
}
CDOTAUserMsg_QuickBuyAlert::CDOTAUserMsg_QuickBuyAlert(const CDOTAUserMsg_QuickBuyAlert& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&show_buyback_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(show_buyback_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_QuickBuyAlert)
}

void CDOTAUserMsg_QuickBuyAlert::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&show_buyback_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(show_buyback_));
}

CDOTAUserMsg_QuickBuyAlert::~CDOTAUserMsg_QuickBuyAlert() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_QuickBuyAlert)
  SharedDtor();
}

void CDOTAUserMsg_QuickBuyAlert::SharedDtor() {
}

void CDOTAUserMsg_QuickBuyAlert::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_QuickBuyAlert::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_QuickBuyAlert& CDOTAUserMsg_QuickBuyAlert::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_QuickBuyAlert.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_QuickBuyAlert::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_QuickBuyAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&show_buyback_) -
        reinterpret_cast<char*>(&player_id_)) + sizeof(show_buyback_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_QuickBuyAlert::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_QuickBuyAlert)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 item_ability_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_item_ability_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_ability_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 gold_cost = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_gold_cost();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_cost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 item_cooldown_seconds = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_item_cooldown_seconds();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_cooldown_seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool show_buyback = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_show_buyback();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_buyback_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_QuickBuyAlert)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_QuickBuyAlert)
  return false;
#undef DO_
}

void CDOTAUserMsg_QuickBuyAlert::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_QuickBuyAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->player_id(), output);
  }

  // optional int32 item_ability_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_ability_id(), output);
  }

  // optional int32 gold_cost = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->gold_cost(), output);
  }

  // optional int32 item_cooldown_seconds = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->item_cooldown_seconds(), output);
  }

  // optional bool show_buyback = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->show_buyback(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_QuickBuyAlert)
}

::google::protobuf::uint8* CDOTAUserMsg_QuickBuyAlert::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_QuickBuyAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->player_id(), target);
  }

  // optional int32 item_ability_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_ability_id(), target);
  }

  // optional int32 gold_cost = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->gold_cost(), target);
  }

  // optional int32 item_cooldown_seconds = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->item_cooldown_seconds(), target);
  }

  // optional bool show_buyback = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->show_buyback(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_QuickBuyAlert)
  return target;
}

size_t CDOTAUserMsg_QuickBuyAlert::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_QuickBuyAlert)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player_id());
    }

    // optional int32 item_ability_id = 2;
    if (has_item_ability_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_ability_id());
    }

    // optional int32 gold_cost = 3;
    if (has_gold_cost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gold_cost());
    }

    // optional int32 item_cooldown_seconds = 4;
    if (has_item_cooldown_seconds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_cooldown_seconds());
    }

    // optional bool show_buyback = 5;
    if (has_show_buyback()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_QuickBuyAlert::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_QuickBuyAlert)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_QuickBuyAlert* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_QuickBuyAlert>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_QuickBuyAlert)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_QuickBuyAlert)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_QuickBuyAlert::MergeFrom(const CDOTAUserMsg_QuickBuyAlert& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_QuickBuyAlert)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      item_ability_id_ = from.item_ability_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      gold_cost_ = from.gold_cost_;
    }
    if (cached_has_bits & 0x00000008u) {
      item_cooldown_seconds_ = from.item_cooldown_seconds_;
    }
    if (cached_has_bits & 0x00000010u) {
      show_buyback_ = from.show_buyback_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_QuickBuyAlert::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_QuickBuyAlert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_QuickBuyAlert::CopyFrom(const CDOTAUserMsg_QuickBuyAlert& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_QuickBuyAlert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_QuickBuyAlert::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_QuickBuyAlert::Swap(CDOTAUserMsg_QuickBuyAlert* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_QuickBuyAlert::InternalSwap(CDOTAUserMsg_QuickBuyAlert* other) {
  using std::swap;
  swap(player_id_, other->player_id_);
  swap(item_ability_id_, other->item_ability_id_);
  swap(gold_cost_, other->gold_cost_);
  swap(item_cooldown_seconds_, other->item_cooldown_seconds_);
  swap(show_buyback_, other->show_buyback_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_QuickBuyAlert::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_CourierKilledAlert_LostItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_CourierKilledAlert_LostItem::kItemAbilityIdFieldNumber;
const int CDOTAUserMsg_CourierKilledAlert_LostItem::kQuantityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_CourierKilledAlert_LostItem::CDOTAUserMsg_CourierKilledAlert_LostItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_CourierKilledAlert_LostItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_CourierKilledAlert.LostItem)
}
CDOTAUserMsg_CourierKilledAlert_LostItem::CDOTAUserMsg_CourierKilledAlert_LostItem(const CDOTAUserMsg_CourierKilledAlert_LostItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_ability_id_, &from.item_ability_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&quantity_) -
    reinterpret_cast<char*>(&item_ability_id_)) + sizeof(quantity_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_CourierKilledAlert.LostItem)
}

void CDOTAUserMsg_CourierKilledAlert_LostItem::SharedCtor() {
  ::memset(&item_ability_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quantity_) -
      reinterpret_cast<char*>(&item_ability_id_)) + sizeof(quantity_));
}

CDOTAUserMsg_CourierKilledAlert_LostItem::~CDOTAUserMsg_CourierKilledAlert_LostItem() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_CourierKilledAlert.LostItem)
  SharedDtor();
}

void CDOTAUserMsg_CourierKilledAlert_LostItem::SharedDtor() {
}

void CDOTAUserMsg_CourierKilledAlert_LostItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_CourierKilledAlert_LostItem::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_CourierKilledAlert_LostItem& CDOTAUserMsg_CourierKilledAlert_LostItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_CourierKilledAlert_LostItem.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_CourierKilledAlert_LostItem::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_CourierKilledAlert.LostItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&item_ability_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&quantity_) -
        reinterpret_cast<char*>(&item_ability_id_)) + sizeof(quantity_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_CourierKilledAlert_LostItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_CourierKilledAlert.LostItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_ability_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_item_ability_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_ability_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 quantity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_quantity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quantity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_CourierKilledAlert.LostItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_CourierKilledAlert.LostItem)
  return false;
#undef DO_
}

void CDOTAUserMsg_CourierKilledAlert_LostItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_CourierKilledAlert.LostItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 item_ability_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_ability_id(), output);
  }

  // optional uint32 quantity = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->quantity(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_CourierKilledAlert.LostItem)
}

::google::protobuf::uint8* CDOTAUserMsg_CourierKilledAlert_LostItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_CourierKilledAlert.LostItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 item_ability_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_ability_id(), target);
  }

  // optional uint32 quantity = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->quantity(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_CourierKilledAlert.LostItem)
  return target;
}

size_t CDOTAUserMsg_CourierKilledAlert_LostItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_CourierKilledAlert.LostItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 item_ability_id = 1;
    if (has_item_ability_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_ability_id());
    }

    // optional uint32 quantity = 2;
    if (has_quantity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->quantity());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_CourierKilledAlert_LostItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_CourierKilledAlert.LostItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_CourierKilledAlert_LostItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_CourierKilledAlert_LostItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_CourierKilledAlert.LostItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_CourierKilledAlert.LostItem)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_CourierKilledAlert_LostItem::MergeFrom(const CDOTAUserMsg_CourierKilledAlert_LostItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_CourierKilledAlert.LostItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      item_ability_id_ = from.item_ability_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      quantity_ = from.quantity_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_CourierKilledAlert_LostItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_CourierKilledAlert.LostItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_CourierKilledAlert_LostItem::CopyFrom(const CDOTAUserMsg_CourierKilledAlert_LostItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_CourierKilledAlert.LostItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_CourierKilledAlert_LostItem::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_CourierKilledAlert_LostItem::Swap(CDOTAUserMsg_CourierKilledAlert_LostItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_CourierKilledAlert_LostItem::InternalSwap(CDOTAUserMsg_CourierKilledAlert_LostItem* other) {
  using std::swap;
  swap(item_ability_id_, other->item_ability_id_);
  swap(quantity_, other->quantity_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_CourierKilledAlert_LostItem::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_CourierKilledAlert::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_CourierKilledAlert::kTeamFieldNumber;
const int CDOTAUserMsg_CourierKilledAlert::kGoldValueFieldNumber;
const int CDOTAUserMsg_CourierKilledAlert::kEntityHandleFieldNumber;
const int CDOTAUserMsg_CourierKilledAlert::kTimestampFieldNumber;
const int CDOTAUserMsg_CourierKilledAlert::kLostItemsFieldNumber;
const int CDOTAUserMsg_CourierKilledAlert::kKillerPlayerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_CourierKilledAlert::CDOTAUserMsg_CourierKilledAlert()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_CourierKilledAlert.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_CourierKilledAlert)
}
CDOTAUserMsg_CourierKilledAlert::CDOTAUserMsg_CourierKilledAlert(const CDOTAUserMsg_CourierKilledAlert& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      lost_items_(from.lost_items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&team_, &from.team_,
    static_cast<size_t>(reinterpret_cast<char*>(&killer_player_id_) -
    reinterpret_cast<char*>(&team_)) + sizeof(killer_player_id_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_CourierKilledAlert)
}

void CDOTAUserMsg_CourierKilledAlert::SharedCtor() {
  ::memset(&team_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&killer_player_id_) -
      reinterpret_cast<char*>(&team_)) + sizeof(killer_player_id_));
}

CDOTAUserMsg_CourierKilledAlert::~CDOTAUserMsg_CourierKilledAlert() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_CourierKilledAlert)
  SharedDtor();
}

void CDOTAUserMsg_CourierKilledAlert::SharedDtor() {
}

void CDOTAUserMsg_CourierKilledAlert::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_CourierKilledAlert::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_CourierKilledAlert& CDOTAUserMsg_CourierKilledAlert::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_CourierKilledAlert.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_CourierKilledAlert::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_CourierKilledAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lost_items_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&team_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&killer_player_id_) -
        reinterpret_cast<char*>(&team_)) + sizeof(killer_player_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_CourierKilledAlert::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_CourierKilledAlert)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 team = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_team();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &team_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 gold_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_gold_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gold_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 entity_handle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_entity_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entity_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 timestamp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CDOTAUserMsg_CourierKilledAlert.LostItem lost_items = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lost_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 killer_player_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_killer_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &killer_player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_CourierKilledAlert)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_CourierKilledAlert)
  return false;
#undef DO_
}

void CDOTAUserMsg_CourierKilledAlert::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_CourierKilledAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 team = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->team(), output);
  }

  // optional uint32 gold_value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gold_value(), output);
  }

  // optional int32 entity_handle = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->entity_handle(), output);
  }

  // optional int32 timestamp = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->timestamp(), output);
  }

  // repeated .CDOTAUserMsg_CourierKilledAlert.LostItem lost_items = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lost_items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->lost_items(static_cast<int>(i)),
      output);
  }

  // optional int32 killer_player_id = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->killer_player_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_CourierKilledAlert)
}

::google::protobuf::uint8* CDOTAUserMsg_CourierKilledAlert::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_CourierKilledAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 team = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->team(), target);
  }

  // optional uint32 gold_value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gold_value(), target);
  }

  // optional int32 entity_handle = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->entity_handle(), target);
  }

  // optional int32 timestamp = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->timestamp(), target);
  }

  // repeated .CDOTAUserMsg_CourierKilledAlert.LostItem lost_items = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lost_items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->lost_items(static_cast<int>(i)), deterministic, target);
  }

  // optional int32 killer_player_id = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->killer_player_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_CourierKilledAlert)
  return target;
}

size_t CDOTAUserMsg_CourierKilledAlert::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_CourierKilledAlert)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CDOTAUserMsg_CourierKilledAlert.LostItem lost_items = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->lost_items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lost_items(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional uint32 team = 1;
    if (has_team()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->team());
    }

    // optional uint32 gold_value = 2;
    if (has_gold_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gold_value());
    }

    // optional int32 entity_handle = 3;
    if (has_entity_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entity_handle());
    }

    // optional int32 timestamp = 4;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->timestamp());
    }

    // optional int32 killer_player_id = 6;
    if (has_killer_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->killer_player_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_CourierKilledAlert::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_CourierKilledAlert)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_CourierKilledAlert* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_CourierKilledAlert>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_CourierKilledAlert)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_CourierKilledAlert)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_CourierKilledAlert::MergeFrom(const CDOTAUserMsg_CourierKilledAlert& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_CourierKilledAlert)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lost_items_.MergeFrom(from.lost_items_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      team_ = from.team_;
    }
    if (cached_has_bits & 0x00000002u) {
      gold_value_ = from.gold_value_;
    }
    if (cached_has_bits & 0x00000004u) {
      entity_handle_ = from.entity_handle_;
    }
    if (cached_has_bits & 0x00000008u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000010u) {
      killer_player_id_ = from.killer_player_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_CourierKilledAlert::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_CourierKilledAlert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_CourierKilledAlert::CopyFrom(const CDOTAUserMsg_CourierKilledAlert& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_CourierKilledAlert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_CourierKilledAlert::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_CourierKilledAlert::Swap(CDOTAUserMsg_CourierKilledAlert* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_CourierKilledAlert::InternalSwap(CDOTAUserMsg_CourierKilledAlert* other) {
  using std::swap;
  CastToBase(&lost_items_)->InternalSwap(CastToBase(&other->lost_items_));
  swap(team_, other->team_);
  swap(gold_value_, other->gold_value_);
  swap(entity_handle_, other->entity_handle_);
  swap(timestamp_, other->timestamp_);
  swap(killer_player_id_, other->killer_player_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_CourierKilledAlert::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_MinimapEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_MinimapEvent::kEventTypeFieldNumber;
const int CDOTAUserMsg_MinimapEvent::kEntityHandleFieldNumber;
const int CDOTAUserMsg_MinimapEvent::kXFieldNumber;
const int CDOTAUserMsg_MinimapEvent::kYFieldNumber;
const int CDOTAUserMsg_MinimapEvent::kDurationFieldNumber;
const int CDOTAUserMsg_MinimapEvent::kTargetEntityHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_MinimapEvent::CDOTAUserMsg_MinimapEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_MinimapEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_MinimapEvent)
}
CDOTAUserMsg_MinimapEvent::CDOTAUserMsg_MinimapEvent(const CDOTAUserMsg_MinimapEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&event_type_, &from.event_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_entity_handle_) -
    reinterpret_cast<char*>(&event_type_)) + sizeof(target_entity_handle_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_MinimapEvent)
}

void CDOTAUserMsg_MinimapEvent::SharedCtor() {
  ::memset(&event_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_entity_handle_) -
      reinterpret_cast<char*>(&event_type_)) + sizeof(target_entity_handle_));
}

CDOTAUserMsg_MinimapEvent::~CDOTAUserMsg_MinimapEvent() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_MinimapEvent)
  SharedDtor();
}

void CDOTAUserMsg_MinimapEvent::SharedDtor() {
}

void CDOTAUserMsg_MinimapEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_MinimapEvent::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_MinimapEvent& CDOTAUserMsg_MinimapEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_MinimapEvent.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_MinimapEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_MinimapEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&event_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&target_entity_handle_) -
        reinterpret_cast<char*>(&event_type_)) + sizeof(target_entity_handle_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_MinimapEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_MinimapEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 event_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_event_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &event_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 entity_handle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_entity_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entity_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 x = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 y = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 duration = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 target_entity_handle = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_target_entity_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_entity_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_MinimapEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_MinimapEvent)
  return false;
#undef DO_
}

void CDOTAUserMsg_MinimapEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_MinimapEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 event_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->event_type(), output);
  }

  // optional int32 entity_handle = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->entity_handle(), output);
  }

  // optional int32 x = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->x(), output);
  }

  // optional int32 y = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->y(), output);
  }

  // optional int32 duration = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->duration(), output);
  }

  // optional int32 target_entity_handle = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->target_entity_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_MinimapEvent)
}

::google::protobuf::uint8* CDOTAUserMsg_MinimapEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_MinimapEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 event_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->event_type(), target);
  }

  // optional int32 entity_handle = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->entity_handle(), target);
  }

  // optional int32 x = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->x(), target);
  }

  // optional int32 y = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->y(), target);
  }

  // optional int32 duration = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->duration(), target);
  }

  // optional int32 target_entity_handle = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->target_entity_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_MinimapEvent)
  return target;
}

size_t CDOTAUserMsg_MinimapEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_MinimapEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional int32 event_type = 1;
    if (has_event_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->event_type());
    }

    // optional int32 entity_handle = 2;
    if (has_entity_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entity_handle());
    }

    // optional int32 x = 3;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }

    // optional int32 y = 4;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }

    // optional int32 duration = 5;
    if (has_duration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->duration());
    }

    // optional int32 target_entity_handle = 6;
    if (has_target_entity_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_entity_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_MinimapEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_MinimapEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_MinimapEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_MinimapEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_MinimapEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_MinimapEvent)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_MinimapEvent::MergeFrom(const CDOTAUserMsg_MinimapEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_MinimapEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      event_type_ = from.event_type_;
    }
    if (cached_has_bits & 0x00000002u) {
      entity_handle_ = from.entity_handle_;
    }
    if (cached_has_bits & 0x00000004u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000008u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000010u) {
      duration_ = from.duration_;
    }
    if (cached_has_bits & 0x00000020u) {
      target_entity_handle_ = from.target_entity_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_MinimapEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_MinimapEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_MinimapEvent::CopyFrom(const CDOTAUserMsg_MinimapEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_MinimapEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_MinimapEvent::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_MinimapEvent::Swap(CDOTAUserMsg_MinimapEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_MinimapEvent::InternalSwap(CDOTAUserMsg_MinimapEvent* other) {
  using std::swap;
  swap(event_type_, other->event_type_);
  swap(entity_handle_, other->entity_handle_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(duration_, other->duration_);
  swap(target_entity_handle_, other->target_entity_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_MinimapEvent::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_MapLine::InitAsDefaultInstance() {
  ::_CDOTAUserMsg_MapLine_default_instance_._instance.get_mutable()->mapline_ = const_cast< ::CDOTAMsg_MapLine*>(
      ::CDOTAMsg_MapLine::internal_default_instance());
}
void CDOTAUserMsg_MapLine::clear_mapline() {
  if (mapline_ != NULL) mapline_->Clear();
  clear_has_mapline();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_MapLine::kPlayerIdFieldNumber;
const int CDOTAUserMsg_MapLine::kMaplineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_MapLine::CDOTAUserMsg_MapLine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_MapLine.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_MapLine)
}
CDOTAUserMsg_MapLine::CDOTAUserMsg_MapLine(const CDOTAUserMsg_MapLine& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mapline()) {
    mapline_ = new ::CDOTAMsg_MapLine(*from.mapline_);
  } else {
    mapline_ = NULL;
  }
  player_id_ = from.player_id_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_MapLine)
}

void CDOTAUserMsg_MapLine::SharedCtor() {
  ::memset(&mapline_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_id_) -
      reinterpret_cast<char*>(&mapline_)) + sizeof(player_id_));
}

CDOTAUserMsg_MapLine::~CDOTAUserMsg_MapLine() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_MapLine)
  SharedDtor();
}

void CDOTAUserMsg_MapLine::SharedDtor() {
  if (this != internal_default_instance()) delete mapline_;
}

void CDOTAUserMsg_MapLine::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_MapLine::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_MapLine& CDOTAUserMsg_MapLine::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_MapLine.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_MapLine::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_MapLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(mapline_ != NULL);
    mapline_->Clear();
  }
  player_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_MapLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_MapLine)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CDOTAMsg_MapLine mapline = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mapline()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_MapLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_MapLine)
  return false;
#undef DO_
}

void CDOTAUserMsg_MapLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_MapLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 player_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->player_id(), output);
  }

  // optional .CDOTAMsg_MapLine mapline = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_mapline(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_MapLine)
}

::google::protobuf::uint8* CDOTAUserMsg_MapLine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_MapLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 player_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->player_id(), target);
  }

  // optional .CDOTAMsg_MapLine mapline = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_mapline(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_MapLine)
  return target;
}

size_t CDOTAUserMsg_MapLine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_MapLine)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .CDOTAMsg_MapLine mapline = 2;
    if (has_mapline()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *mapline_);
    }

    // optional int32 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_MapLine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_MapLine)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_MapLine* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_MapLine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_MapLine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_MapLine)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_MapLine::MergeFrom(const CDOTAUserMsg_MapLine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_MapLine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_mapline()->::CDOTAMsg_MapLine::MergeFrom(from.mapline());
    }
    if (cached_has_bits & 0x00000002u) {
      player_id_ = from.player_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_MapLine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_MapLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_MapLine::CopyFrom(const CDOTAUserMsg_MapLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_MapLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_MapLine::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_MapLine::Swap(CDOTAUserMsg_MapLine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_MapLine::InternalSwap(CDOTAUserMsg_MapLine* other) {
  using std::swap;
  swap(mapline_, other->mapline_);
  swap(player_id_, other->player_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_MapLine::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_MinimapDebugPoint::InitAsDefaultInstance() {
  ::_CDOTAUserMsg_MinimapDebugPoint_default_instance_._instance.get_mutable()->location_ = const_cast< ::CMsgVector*>(
      ::CMsgVector::internal_default_instance());
}
void CDOTAUserMsg_MinimapDebugPoint::clear_location() {
  if (location_ != NULL) location_->Clear();
  clear_has_location();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_MinimapDebugPoint::kLocationFieldNumber;
const int CDOTAUserMsg_MinimapDebugPoint::kColorFieldNumber;
const int CDOTAUserMsg_MinimapDebugPoint::kSizeFieldNumber;
const int CDOTAUserMsg_MinimapDebugPoint::kDurationFieldNumber;
const int CDOTAUserMsg_MinimapDebugPoint::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_MinimapDebugPoint::CDOTAUserMsg_MinimapDebugPoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_MinimapDebugPoint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_MinimapDebugPoint)
}
CDOTAUserMsg_MinimapDebugPoint::CDOTAUserMsg_MinimapDebugPoint(const CDOTAUserMsg_MinimapDebugPoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_location()) {
    location_ = new ::CMsgVector(*from.location_);
  } else {
    location_ = NULL;
  }
  ::memcpy(&color_, &from.color_,
    static_cast<size_t>(reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&color_)) + sizeof(index_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_MinimapDebugPoint)
}

void CDOTAUserMsg_MinimapDebugPoint::SharedCtor() {
  ::memset(&location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&location_)) + sizeof(index_));
}

CDOTAUserMsg_MinimapDebugPoint::~CDOTAUserMsg_MinimapDebugPoint() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_MinimapDebugPoint)
  SharedDtor();
}

void CDOTAUserMsg_MinimapDebugPoint::SharedDtor() {
  if (this != internal_default_instance()) delete location_;
}

void CDOTAUserMsg_MinimapDebugPoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_MinimapDebugPoint::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_MinimapDebugPoint& CDOTAUserMsg_MinimapDebugPoint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_MinimapDebugPoint.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_MinimapDebugPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_MinimapDebugPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(location_ != NULL);
    location_->Clear();
  }
  if (cached_has_bits & 30u) {
    ::memset(&color_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&index_) -
        reinterpret_cast<char*>(&color_)) + sizeof(index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_MinimapDebugPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_MinimapDebugPoint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsgVector location = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 color = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_color();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &color_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float duration = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 index = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_MinimapDebugPoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_MinimapDebugPoint)
  return false;
#undef DO_
}

void CDOTAUserMsg_MinimapDebugPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_MinimapDebugPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgVector location = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_location(), output);
  }

  // optional uint32 color = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->color(), output);
  }

  // optional int32 size = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->size(), output);
  }

  // optional float duration = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->duration(), output);
  }

  // optional int32 index = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_MinimapDebugPoint)
}

::google::protobuf::uint8* CDOTAUserMsg_MinimapDebugPoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_MinimapDebugPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgVector location = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_location(), deterministic, target);
  }

  // optional uint32 color = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->color(), target);
  }

  // optional int32 size = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->size(), target);
  }

  // optional float duration = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->duration(), target);
  }

  // optional int32 index = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_MinimapDebugPoint)
  return target;
}

size_t CDOTAUserMsg_MinimapDebugPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_MinimapDebugPoint)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional .CMsgVector location = 1;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *location_);
    }

    // optional uint32 color = 2;
    if (has_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->color());
    }

    // optional int32 size = 3;
    if (has_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->size());
    }

    // optional float duration = 4;
    if (has_duration()) {
      total_size += 1 + 4;
    }

    // optional int32 index = 5;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_MinimapDebugPoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_MinimapDebugPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_MinimapDebugPoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_MinimapDebugPoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_MinimapDebugPoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_MinimapDebugPoint)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_MinimapDebugPoint::MergeFrom(const CDOTAUserMsg_MinimapDebugPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_MinimapDebugPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_location()->::CMsgVector::MergeFrom(from.location());
    }
    if (cached_has_bits & 0x00000002u) {
      color_ = from.color_;
    }
    if (cached_has_bits & 0x00000004u) {
      size_ = from.size_;
    }
    if (cached_has_bits & 0x00000008u) {
      duration_ = from.duration_;
    }
    if (cached_has_bits & 0x00000010u) {
      index_ = from.index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_MinimapDebugPoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_MinimapDebugPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_MinimapDebugPoint::CopyFrom(const CDOTAUserMsg_MinimapDebugPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_MinimapDebugPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_MinimapDebugPoint::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_MinimapDebugPoint::Swap(CDOTAUserMsg_MinimapDebugPoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_MinimapDebugPoint::InternalSwap(CDOTAUserMsg_MinimapDebugPoint* other) {
  using std::swap;
  swap(location_, other->location_);
  swap(color_, other->color_);
  swap(size_, other->size_);
  swap(duration_, other->duration_);
  swap(index_, other->index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_MinimapDebugPoint::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_CreateLinearProjectile::InitAsDefaultInstance() {
  ::_CDOTAUserMsg_CreateLinearProjectile_default_instance_._instance.get_mutable()->origin_ = const_cast< ::CMsgVector*>(
      ::CMsgVector::internal_default_instance());
  ::_CDOTAUserMsg_CreateLinearProjectile_default_instance_._instance.get_mutable()->velocity_ = const_cast< ::CMsgVector2D*>(
      ::CMsgVector2D::internal_default_instance());
  ::_CDOTAUserMsg_CreateLinearProjectile_default_instance_._instance.get_mutable()->acceleration_ = const_cast< ::CMsgVector2D*>(
      ::CMsgVector2D::internal_default_instance());
}
void CDOTAUserMsg_CreateLinearProjectile::clear_origin() {
  if (origin_ != NULL) origin_->Clear();
  clear_has_origin();
}
void CDOTAUserMsg_CreateLinearProjectile::clear_velocity() {
  if (velocity_ != NULL) velocity_->Clear();
  clear_has_velocity();
}
void CDOTAUserMsg_CreateLinearProjectile::clear_acceleration() {
  if (acceleration_ != NULL) acceleration_->Clear();
  clear_has_acceleration();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_CreateLinearProjectile::kOriginFieldNumber;
const int CDOTAUserMsg_CreateLinearProjectile::kVelocityFieldNumber;
const int CDOTAUserMsg_CreateLinearProjectile::kEntindexFieldNumber;
const int CDOTAUserMsg_CreateLinearProjectile::kParticleIndexFieldNumber;
const int CDOTAUserMsg_CreateLinearProjectile::kHandleFieldNumber;
const int CDOTAUserMsg_CreateLinearProjectile::kAccelerationFieldNumber;
const int CDOTAUserMsg_CreateLinearProjectile::kMaxSpeedFieldNumber;
const int CDOTAUserMsg_CreateLinearProjectile::kFowRadiusFieldNumber;
const int CDOTAUserMsg_CreateLinearProjectile::kStickyFowRevealFieldNumber;
const int CDOTAUserMsg_CreateLinearProjectile::kDistanceFieldNumber;
const int CDOTAUserMsg_CreateLinearProjectile::kColorgemcolorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_CreateLinearProjectile::CDOTAUserMsg_CreateLinearProjectile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_CreateLinearProjectile.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_CreateLinearProjectile)
}
CDOTAUserMsg_CreateLinearProjectile::CDOTAUserMsg_CreateLinearProjectile(const CDOTAUserMsg_CreateLinearProjectile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_origin()) {
    origin_ = new ::CMsgVector(*from.origin_);
  } else {
    origin_ = NULL;
  }
  if (from.has_velocity()) {
    velocity_ = new ::CMsgVector2D(*from.velocity_);
  } else {
    velocity_ = NULL;
  }
  if (from.has_acceleration()) {
    acceleration_ = new ::CMsgVector2D(*from.acceleration_);
  } else {
    acceleration_ = NULL;
  }
  ::memcpy(&particle_index_, &from.particle_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&colorgemcolor_) -
    reinterpret_cast<char*>(&particle_index_)) + sizeof(colorgemcolor_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_CreateLinearProjectile)
}

void CDOTAUserMsg_CreateLinearProjectile::SharedCtor() {
  ::memset(&origin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&colorgemcolor_) -
      reinterpret_cast<char*>(&origin_)) + sizeof(colorgemcolor_));
}

CDOTAUserMsg_CreateLinearProjectile::~CDOTAUserMsg_CreateLinearProjectile() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_CreateLinearProjectile)
  SharedDtor();
}

void CDOTAUserMsg_CreateLinearProjectile::SharedDtor() {
  if (this != internal_default_instance()) delete origin_;
  if (this != internal_default_instance()) delete velocity_;
  if (this != internal_default_instance()) delete acceleration_;
}

void CDOTAUserMsg_CreateLinearProjectile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_CreateLinearProjectile::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_CreateLinearProjectile& CDOTAUserMsg_CreateLinearProjectile::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_CreateLinearProjectile.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_CreateLinearProjectile::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_CreateLinearProjectile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(origin_ != NULL);
      origin_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(velocity_ != NULL);
      velocity_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(acceleration_ != NULL);
      acceleration_->Clear();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&particle_index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&fow_radius_) -
        reinterpret_cast<char*>(&particle_index_)) + sizeof(fow_radius_));
  }
  if (cached_has_bits & 1792u) {
    ::memset(&sticky_fow_reveal_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&colorgemcolor_) -
        reinterpret_cast<char*>(&sticky_fow_reveal_)) + sizeof(colorgemcolor_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_CreateLinearProjectile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_CreateLinearProjectile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsgVector origin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_origin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgVector2D velocity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_velocity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 entindex = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_entindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 particle_index = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_particle_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &particle_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 handle = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgVector2D acceleration = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_acceleration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float max_speed = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {
          set_has_max_speed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &max_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float fow_radius = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {
          set_has_fow_radius();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fow_radius_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool sticky_fow_reveal = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_sticky_fow_reveal();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sticky_fow_reveal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float distance = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {
          set_has_distance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 colorgemcolor = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {
          set_has_colorgemcolor();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &colorgemcolor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_CreateLinearProjectile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_CreateLinearProjectile)
  return false;
#undef DO_
}

void CDOTAUserMsg_CreateLinearProjectile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_CreateLinearProjectile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgVector origin = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_origin(), output);
  }

  // optional .CMsgVector2D velocity = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_velocity(), output);
  }

  // optional int32 entindex = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->entindex(), output);
  }

  // optional uint64 particle_index = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->particle_index(), output);
  }

  // optional int32 handle = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->handle(), output);
  }

  // optional .CMsgVector2D acceleration = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_acceleration(), output);
  }

  // optional float max_speed = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->max_speed(), output);
  }

  // optional float fow_radius = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->fow_radius(), output);
  }

  // optional bool sticky_fow_reveal = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->sticky_fow_reveal(), output);
  }

  // optional float distance = 11;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->distance(), output);
  }

  // optional fixed32 colorgemcolor = 12;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(12, this->colorgemcolor(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_CreateLinearProjectile)
}

::google::protobuf::uint8* CDOTAUserMsg_CreateLinearProjectile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_CreateLinearProjectile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgVector origin = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_origin(), deterministic, target);
  }

  // optional .CMsgVector2D velocity = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_velocity(), deterministic, target);
  }

  // optional int32 entindex = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->entindex(), target);
  }

  // optional uint64 particle_index = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->particle_index(), target);
  }

  // optional int32 handle = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->handle(), target);
  }

  // optional .CMsgVector2D acceleration = 7;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_acceleration(), deterministic, target);
  }

  // optional float max_speed = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->max_speed(), target);
  }

  // optional float fow_radius = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->fow_radius(), target);
  }

  // optional bool sticky_fow_reveal = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->sticky_fow_reveal(), target);
  }

  // optional float distance = 11;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->distance(), target);
  }

  // optional fixed32 colorgemcolor = 12;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(12, this->colorgemcolor(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_CreateLinearProjectile)
  return target;
}

size_t CDOTAUserMsg_CreateLinearProjectile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_CreateLinearProjectile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .CMsgVector origin = 1;
    if (has_origin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *origin_);
    }

    // optional .CMsgVector2D velocity = 2;
    if (has_velocity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *velocity_);
    }

    // optional .CMsgVector2D acceleration = 7;
    if (has_acceleration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *acceleration_);
    }

    // optional uint64 particle_index = 5;
    if (has_particle_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->particle_index());
    }

    // optional int32 entindex = 4;
    if (has_entindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entindex());
    }

    // optional int32 handle = 6;
    if (has_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->handle());
    }

    // optional float max_speed = 8;
    if (has_max_speed()) {
      total_size += 1 + 4;
    }

    // optional float fow_radius = 9;
    if (has_fow_radius()) {
      total_size += 1 + 4;
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional bool sticky_fow_reveal = 10;
    if (has_sticky_fow_reveal()) {
      total_size += 1 + 1;
    }

    // optional float distance = 11;
    if (has_distance()) {
      total_size += 1 + 4;
    }

    // optional fixed32 colorgemcolor = 12;
    if (has_colorgemcolor()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_CreateLinearProjectile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_CreateLinearProjectile)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_CreateLinearProjectile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_CreateLinearProjectile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_CreateLinearProjectile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_CreateLinearProjectile)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_CreateLinearProjectile::MergeFrom(const CDOTAUserMsg_CreateLinearProjectile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_CreateLinearProjectile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_origin()->::CMsgVector::MergeFrom(from.origin());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_velocity()->::CMsgVector2D::MergeFrom(from.velocity());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_acceleration()->::CMsgVector2D::MergeFrom(from.acceleration());
    }
    if (cached_has_bits & 0x00000008u) {
      particle_index_ = from.particle_index_;
    }
    if (cached_has_bits & 0x00000010u) {
      entindex_ = from.entindex_;
    }
    if (cached_has_bits & 0x00000020u) {
      handle_ = from.handle_;
    }
    if (cached_has_bits & 0x00000040u) {
      max_speed_ = from.max_speed_;
    }
    if (cached_has_bits & 0x00000080u) {
      fow_radius_ = from.fow_radius_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      sticky_fow_reveal_ = from.sticky_fow_reveal_;
    }
    if (cached_has_bits & 0x00000200u) {
      distance_ = from.distance_;
    }
    if (cached_has_bits & 0x00000400u) {
      colorgemcolor_ = from.colorgemcolor_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_CreateLinearProjectile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_CreateLinearProjectile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_CreateLinearProjectile::CopyFrom(const CDOTAUserMsg_CreateLinearProjectile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_CreateLinearProjectile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_CreateLinearProjectile::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_CreateLinearProjectile::Swap(CDOTAUserMsg_CreateLinearProjectile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_CreateLinearProjectile::InternalSwap(CDOTAUserMsg_CreateLinearProjectile* other) {
  using std::swap;
  swap(origin_, other->origin_);
  swap(velocity_, other->velocity_);
  swap(acceleration_, other->acceleration_);
  swap(particle_index_, other->particle_index_);
  swap(entindex_, other->entindex_);
  swap(handle_, other->handle_);
  swap(max_speed_, other->max_speed_);
  swap(fow_radius_, other->fow_radius_);
  swap(sticky_fow_reveal_, other->sticky_fow_reveal_);
  swap(distance_, other->distance_);
  swap(colorgemcolor_, other->colorgemcolor_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_CreateLinearProjectile::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_DestroyLinearProjectile::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_DestroyLinearProjectile::kHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_DestroyLinearProjectile::CDOTAUserMsg_DestroyLinearProjectile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_DestroyLinearProjectile.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_DestroyLinearProjectile)
}
CDOTAUserMsg_DestroyLinearProjectile::CDOTAUserMsg_DestroyLinearProjectile(const CDOTAUserMsg_DestroyLinearProjectile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  handle_ = from.handle_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_DestroyLinearProjectile)
}

void CDOTAUserMsg_DestroyLinearProjectile::SharedCtor() {
  handle_ = 0;
}

CDOTAUserMsg_DestroyLinearProjectile::~CDOTAUserMsg_DestroyLinearProjectile() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_DestroyLinearProjectile)
  SharedDtor();
}

void CDOTAUserMsg_DestroyLinearProjectile::SharedDtor() {
}

void CDOTAUserMsg_DestroyLinearProjectile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_DestroyLinearProjectile::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_DestroyLinearProjectile& CDOTAUserMsg_DestroyLinearProjectile::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_DestroyLinearProjectile.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_DestroyLinearProjectile::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_DestroyLinearProjectile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  handle_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_DestroyLinearProjectile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_DestroyLinearProjectile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_DestroyLinearProjectile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_DestroyLinearProjectile)
  return false;
#undef DO_
}

void CDOTAUserMsg_DestroyLinearProjectile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_DestroyLinearProjectile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_DestroyLinearProjectile)
}

::google::protobuf::uint8* CDOTAUserMsg_DestroyLinearProjectile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_DestroyLinearProjectile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_DestroyLinearProjectile)
  return target;
}

size_t CDOTAUserMsg_DestroyLinearProjectile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_DestroyLinearProjectile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 handle = 1;
  if (has_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_DestroyLinearProjectile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_DestroyLinearProjectile)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_DestroyLinearProjectile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_DestroyLinearProjectile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_DestroyLinearProjectile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_DestroyLinearProjectile)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_DestroyLinearProjectile::MergeFrom(const CDOTAUserMsg_DestroyLinearProjectile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_DestroyLinearProjectile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_handle()) {
    set_handle(from.handle());
  }
}

void CDOTAUserMsg_DestroyLinearProjectile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_DestroyLinearProjectile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_DestroyLinearProjectile::CopyFrom(const CDOTAUserMsg_DestroyLinearProjectile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_DestroyLinearProjectile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_DestroyLinearProjectile::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_DestroyLinearProjectile::Swap(CDOTAUserMsg_DestroyLinearProjectile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_DestroyLinearProjectile::InternalSwap(CDOTAUserMsg_DestroyLinearProjectile* other) {
  using std::swap;
  swap(handle_, other->handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_DestroyLinearProjectile::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_DodgeTrackingProjectiles::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_DodgeTrackingProjectiles::kEntindexFieldNumber;
const int CDOTAUserMsg_DodgeTrackingProjectiles::kAttacksOnlyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_DodgeTrackingProjectiles::CDOTAUserMsg_DodgeTrackingProjectiles()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_DodgeTrackingProjectiles.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_DodgeTrackingProjectiles)
}
CDOTAUserMsg_DodgeTrackingProjectiles::CDOTAUserMsg_DodgeTrackingProjectiles(const CDOTAUserMsg_DodgeTrackingProjectiles& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&entindex_, &from.entindex_,
    static_cast<size_t>(reinterpret_cast<char*>(&attacks_only_) -
    reinterpret_cast<char*>(&entindex_)) + sizeof(attacks_only_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_DodgeTrackingProjectiles)
}

void CDOTAUserMsg_DodgeTrackingProjectiles::SharedCtor() {
  ::memset(&entindex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&attacks_only_) -
      reinterpret_cast<char*>(&entindex_)) + sizeof(attacks_only_));
}

CDOTAUserMsg_DodgeTrackingProjectiles::~CDOTAUserMsg_DodgeTrackingProjectiles() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_DodgeTrackingProjectiles)
  SharedDtor();
}

void CDOTAUserMsg_DodgeTrackingProjectiles::SharedDtor() {
}

void CDOTAUserMsg_DodgeTrackingProjectiles::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_DodgeTrackingProjectiles::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_DodgeTrackingProjectiles& CDOTAUserMsg_DodgeTrackingProjectiles::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_DodgeTrackingProjectiles.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_DodgeTrackingProjectiles::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_DodgeTrackingProjectiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&entindex_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&attacks_only_) -
        reinterpret_cast<char*>(&entindex_)) + sizeof(attacks_only_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_DodgeTrackingProjectiles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_DodgeTrackingProjectiles)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 entindex = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_entindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool attacks_only = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_attacks_only();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &attacks_only_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_DodgeTrackingProjectiles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_DodgeTrackingProjectiles)
  return false;
#undef DO_
}

void CDOTAUserMsg_DodgeTrackingProjectiles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_DodgeTrackingProjectiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 entindex = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->entindex(), output);
  }

  // optional bool attacks_only = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->attacks_only(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_DodgeTrackingProjectiles)
}

::google::protobuf::uint8* CDOTAUserMsg_DodgeTrackingProjectiles::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_DodgeTrackingProjectiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 entindex = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->entindex(), target);
  }

  // optional bool attacks_only = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->attacks_only(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_DodgeTrackingProjectiles)
  return target;
}

size_t CDOTAUserMsg_DodgeTrackingProjectiles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_DodgeTrackingProjectiles)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 entindex = 1;
  if (has_entindex()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->entindex());
  }
  // optional bool attacks_only = 2;
  if (has_attacks_only()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_DodgeTrackingProjectiles::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_DodgeTrackingProjectiles)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_DodgeTrackingProjectiles* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_DodgeTrackingProjectiles>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_DodgeTrackingProjectiles)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_DodgeTrackingProjectiles)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_DodgeTrackingProjectiles::MergeFrom(const CDOTAUserMsg_DodgeTrackingProjectiles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_DodgeTrackingProjectiles)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      entindex_ = from.entindex_;
    }
    if (cached_has_bits & 0x00000002u) {
      attacks_only_ = from.attacks_only_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_DodgeTrackingProjectiles::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_DodgeTrackingProjectiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_DodgeTrackingProjectiles::CopyFrom(const CDOTAUserMsg_DodgeTrackingProjectiles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_DodgeTrackingProjectiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_DodgeTrackingProjectiles::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CDOTAUserMsg_DodgeTrackingProjectiles::Swap(CDOTAUserMsg_DodgeTrackingProjectiles* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_DodgeTrackingProjectiles::InternalSwap(CDOTAUserMsg_DodgeTrackingProjectiles* other) {
  using std::swap;
  swap(entindex_, other->entindex_);
  swap(attacks_only_, other->attacks_only_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_DodgeTrackingProjectiles::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_SpectatorPlayerClick::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_SpectatorPlayerClick::kEntindexFieldNumber;
const int CDOTAUserMsg_SpectatorPlayerClick::kOrderTypeFieldNumber;
const int CDOTAUserMsg_SpectatorPlayerClick::kTargetIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_SpectatorPlayerClick::CDOTAUserMsg_SpectatorPlayerClick()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_SpectatorPlayerClick.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_SpectatorPlayerClick)
}
CDOTAUserMsg_SpectatorPlayerClick::CDOTAUserMsg_SpectatorPlayerClick(const CDOTAUserMsg_SpectatorPlayerClick& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&entindex_, &from.entindex_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_index_) -
    reinterpret_cast<char*>(&entindex_)) + sizeof(target_index_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_SpectatorPlayerClick)
}

void CDOTAUserMsg_SpectatorPlayerClick::SharedCtor() {
  ::memset(&entindex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_index_) -
      reinterpret_cast<char*>(&entindex_)) + sizeof(target_index_));
}

CDOTAUserMsg_SpectatorPlayerClick::~CDOTAUserMsg_SpectatorPlayerClick() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_SpectatorPlayerClick)
  SharedDtor();
}

void CDOTAUserMsg_SpectatorPlayerClick::SharedDtor() {
}

void CDOTAUserMsg_SpectatorPlayerClick::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_SpectatorPlayerClick::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_SpectatorPlayerClick& CDOTAUserMsg_SpectatorPlayerClick::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_SpectatorPlayerClick.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_SpectatorPlayerClick::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_SpectatorPlayerClick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&entindex_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&target_index_) -
        reinterpret_cast<char*>(&entindex_)) + sizeof(target_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_SpectatorPlayerClick::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_SpectatorPlayerClick)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 entindex = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_entindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 order_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_order_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &order_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 target_index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_target_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_SpectatorPlayerClick)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_SpectatorPlayerClick)
  return false;
#undef DO_
}

void CDOTAUserMsg_SpectatorPlayerClick::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_SpectatorPlayerClick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 entindex = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->entindex(), output);
  }

  // optional int32 order_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->order_type(), output);
  }

  // optional int32 target_index = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->target_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_SpectatorPlayerClick)
}

::google::protobuf::uint8* CDOTAUserMsg_SpectatorPlayerClick::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_SpectatorPlayerClick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 entindex = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->entindex(), target);
  }

  // optional int32 order_type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->order_type(), target);
  }

  // optional int32 target_index = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->target_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_SpectatorPlayerClick)
  return target;
}

size_t CDOTAUserMsg_SpectatorPlayerClick::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_SpectatorPlayerClick)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 entindex = 1;
  if (has_entindex()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->entindex());
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional int32 order_type = 2;
    if (has_order_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->order_type());
    }

    // optional int32 target_index = 3;
    if (has_target_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_SpectatorPlayerClick::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_SpectatorPlayerClick)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_SpectatorPlayerClick* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_SpectatorPlayerClick>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_SpectatorPlayerClick)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_SpectatorPlayerClick)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_SpectatorPlayerClick::MergeFrom(const CDOTAUserMsg_SpectatorPlayerClick& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_SpectatorPlayerClick)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      entindex_ = from.entindex_;
    }
    if (cached_has_bits & 0x00000002u) {
      order_type_ = from.order_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      target_index_ = from.target_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_SpectatorPlayerClick::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_SpectatorPlayerClick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_SpectatorPlayerClick::CopyFrom(const CDOTAUserMsg_SpectatorPlayerClick& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_SpectatorPlayerClick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_SpectatorPlayerClick::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CDOTAUserMsg_SpectatorPlayerClick::Swap(CDOTAUserMsg_SpectatorPlayerClick* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_SpectatorPlayerClick::InternalSwap(CDOTAUserMsg_SpectatorPlayerClick* other) {
  using std::swap;
  swap(entindex_, other->entindex_);
  swap(order_type_, other->order_type_);
  swap(target_index_, other->target_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_SpectatorPlayerClick::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_SpectatorPlayerUnitOrders::InitAsDefaultInstance() {
  ::_CDOTAUserMsg_SpectatorPlayerUnitOrders_default_instance_._instance.get_mutable()->position_ = const_cast< ::CMsgVector*>(
      ::CMsgVector::internal_default_instance());
}
void CDOTAUserMsg_SpectatorPlayerUnitOrders::clear_position() {
  if (position_ != NULL) position_->Clear();
  clear_has_position();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_SpectatorPlayerUnitOrders::kEntindexFieldNumber;
const int CDOTAUserMsg_SpectatorPlayerUnitOrders::kOrderTypeFieldNumber;
const int CDOTAUserMsg_SpectatorPlayerUnitOrders::kUnitsFieldNumber;
const int CDOTAUserMsg_SpectatorPlayerUnitOrders::kTargetIndexFieldNumber;
const int CDOTAUserMsg_SpectatorPlayerUnitOrders::kAbilityIdFieldNumber;
const int CDOTAUserMsg_SpectatorPlayerUnitOrders::kPositionFieldNumber;
const int CDOTAUserMsg_SpectatorPlayerUnitOrders::kQueueFieldNumber;
const int CDOTAUserMsg_SpectatorPlayerUnitOrders::kSequenceNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_SpectatorPlayerUnitOrders::CDOTAUserMsg_SpectatorPlayerUnitOrders()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_SpectatorPlayerUnitOrders.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_SpectatorPlayerUnitOrders)
}
CDOTAUserMsg_SpectatorPlayerUnitOrders::CDOTAUserMsg_SpectatorPlayerUnitOrders(const CDOTAUserMsg_SpectatorPlayerUnitOrders& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      units_(from.units_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::CMsgVector(*from.position_);
  } else {
    position_ = NULL;
  }
  ::memcpy(&entindex_, &from.entindex_,
    static_cast<size_t>(reinterpret_cast<char*>(&sequence_number_) -
    reinterpret_cast<char*>(&entindex_)) + sizeof(sequence_number_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_SpectatorPlayerUnitOrders)
}

void CDOTAUserMsg_SpectatorPlayerUnitOrders::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sequence_number_) -
      reinterpret_cast<char*>(&position_)) + sizeof(sequence_number_));
}

CDOTAUserMsg_SpectatorPlayerUnitOrders::~CDOTAUserMsg_SpectatorPlayerUnitOrders() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_SpectatorPlayerUnitOrders)
  SharedDtor();
}

void CDOTAUserMsg_SpectatorPlayerUnitOrders::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
}

void CDOTAUserMsg_SpectatorPlayerUnitOrders::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_SpectatorPlayerUnitOrders::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_SpectatorPlayerUnitOrders& CDOTAUserMsg_SpectatorPlayerUnitOrders::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_SpectatorPlayerUnitOrders.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_SpectatorPlayerUnitOrders::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_SpectatorPlayerUnitOrders)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  units_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(position_ != NULL);
    position_->Clear();
  }
  if (cached_has_bits & 126u) {
    ::memset(&entindex_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&sequence_number_) -
        reinterpret_cast<char*>(&entindex_)) + sizeof(sequence_number_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_SpectatorPlayerUnitOrders::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_SpectatorPlayerUnitOrders)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 entindex = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_entindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 order_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_order_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &order_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 units = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24u, input, this->mutable_units())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_units())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 target_index = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_target_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ability_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_ability_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ability_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgVector position = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool queue = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_queue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &queue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 sequence_number = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_sequence_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sequence_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_SpectatorPlayerUnitOrders)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_SpectatorPlayerUnitOrders)
  return false;
#undef DO_
}

void CDOTAUserMsg_SpectatorPlayerUnitOrders::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_SpectatorPlayerUnitOrders)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 entindex = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->entindex(), output);
  }

  // optional int32 order_type = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->order_type(), output);
  }

  // repeated int32 units = 3;
  for (int i = 0, n = this->units_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->units(i), output);
  }

  // optional int32 target_index = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->target_index(), output);
  }

  // optional int32 ability_id = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->ability_id(), output);
  }

  // optional .CMsgVector position = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_position(), output);
  }

  // optional bool queue = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->queue(), output);
  }

  // optional int32 sequence_number = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->sequence_number(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_SpectatorPlayerUnitOrders)
}

::google::protobuf::uint8* CDOTAUserMsg_SpectatorPlayerUnitOrders::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_SpectatorPlayerUnitOrders)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 entindex = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->entindex(), target);
  }

  // optional int32 order_type = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->order_type(), target);
  }

  // repeated int32 units = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(3, this->units_, target);

  // optional int32 target_index = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->target_index(), target);
  }

  // optional int32 ability_id = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->ability_id(), target);
  }

  // optional .CMsgVector position = 6;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_position(), deterministic, target);
  }

  // optional bool queue = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->queue(), target);
  }

  // optional int32 sequence_number = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->sequence_number(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_SpectatorPlayerUnitOrders)
  return target;
}

size_t CDOTAUserMsg_SpectatorPlayerUnitOrders::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_SpectatorPlayerUnitOrders)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 units = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->units_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->units_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 127u) {
    // optional .CMsgVector position = 6;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *position_);
    }

    // optional int32 entindex = 1;
    if (has_entindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entindex());
    }

    // optional int32 order_type = 2;
    if (has_order_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->order_type());
    }

    // optional int32 target_index = 4;
    if (has_target_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_index());
    }

    // optional int32 ability_id = 5;
    if (has_ability_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ability_id());
    }

    // optional bool queue = 7;
    if (has_queue()) {
      total_size += 1 + 1;
    }

    // optional int32 sequence_number = 8;
    if (has_sequence_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sequence_number());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_SpectatorPlayerUnitOrders::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_SpectatorPlayerUnitOrders)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_SpectatorPlayerUnitOrders* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_SpectatorPlayerUnitOrders>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_SpectatorPlayerUnitOrders)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_SpectatorPlayerUnitOrders)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_SpectatorPlayerUnitOrders::MergeFrom(const CDOTAUserMsg_SpectatorPlayerUnitOrders& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_SpectatorPlayerUnitOrders)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  units_.MergeFrom(from.units_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_position()->::CMsgVector::MergeFrom(from.position());
    }
    if (cached_has_bits & 0x00000002u) {
      entindex_ = from.entindex_;
    }
    if (cached_has_bits & 0x00000004u) {
      order_type_ = from.order_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      target_index_ = from.target_index_;
    }
    if (cached_has_bits & 0x00000010u) {
      ability_id_ = from.ability_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      queue_ = from.queue_;
    }
    if (cached_has_bits & 0x00000040u) {
      sequence_number_ = from.sequence_number_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_SpectatorPlayerUnitOrders::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_SpectatorPlayerUnitOrders)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_SpectatorPlayerUnitOrders::CopyFrom(const CDOTAUserMsg_SpectatorPlayerUnitOrders& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_SpectatorPlayerUnitOrders)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_SpectatorPlayerUnitOrders::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_SpectatorPlayerUnitOrders::Swap(CDOTAUserMsg_SpectatorPlayerUnitOrders* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_SpectatorPlayerUnitOrders::InternalSwap(CDOTAUserMsg_SpectatorPlayerUnitOrders* other) {
  using std::swap;
  units_.InternalSwap(&other->units_);
  swap(position_, other->position_);
  swap(entindex_, other->entindex_);
  swap(order_type_, other->order_type_);
  swap(target_index_, other->target_index_);
  swap(ability_id_, other->ability_id_);
  swap(queue_, other->queue_);
  swap(sequence_number_, other->sequence_number_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_SpectatorPlayerUnitOrders::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_NevermoreRequiem::InitAsDefaultInstance() {
  ::_CDOTAUserMsg_NevermoreRequiem_default_instance_._instance.get_mutable()->origin_ = const_cast< ::CMsgVector*>(
      ::CMsgVector::internal_default_instance());
}
void CDOTAUserMsg_NevermoreRequiem::clear_origin() {
  if (origin_ != NULL) origin_->Clear();
  clear_has_origin();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_NevermoreRequiem::kEntityHandleFieldNumber;
const int CDOTAUserMsg_NevermoreRequiem::kLinesFieldNumber;
const int CDOTAUserMsg_NevermoreRequiem::kOriginFieldNumber;
const int CDOTAUserMsg_NevermoreRequiem::kReverseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_NevermoreRequiem::CDOTAUserMsg_NevermoreRequiem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_NevermoreRequiem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_NevermoreRequiem)
}
CDOTAUserMsg_NevermoreRequiem::CDOTAUserMsg_NevermoreRequiem(const CDOTAUserMsg_NevermoreRequiem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_origin()) {
    origin_ = new ::CMsgVector(*from.origin_);
  } else {
    origin_ = NULL;
  }
  ::memcpy(&entity_handle_, &from.entity_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&reverse_) -
    reinterpret_cast<char*>(&entity_handle_)) + sizeof(reverse_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_NevermoreRequiem)
}

void CDOTAUserMsg_NevermoreRequiem::SharedCtor() {
  ::memset(&origin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reverse_) -
      reinterpret_cast<char*>(&origin_)) + sizeof(reverse_));
}

CDOTAUserMsg_NevermoreRequiem::~CDOTAUserMsg_NevermoreRequiem() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_NevermoreRequiem)
  SharedDtor();
}

void CDOTAUserMsg_NevermoreRequiem::SharedDtor() {
  if (this != internal_default_instance()) delete origin_;
}

void CDOTAUserMsg_NevermoreRequiem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_NevermoreRequiem::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_NevermoreRequiem& CDOTAUserMsg_NevermoreRequiem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_NevermoreRequiem.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_NevermoreRequiem::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_NevermoreRequiem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(origin_ != NULL);
    origin_->Clear();
  }
  if (cached_has_bits & 14u) {
    ::memset(&entity_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&reverse_) -
        reinterpret_cast<char*>(&entity_handle_)) + sizeof(reverse_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_NevermoreRequiem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_NevermoreRequiem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 entity_handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_entity_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entity_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 lines = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_lines();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lines_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgVector origin = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_origin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool reverse = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_reverse();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reverse_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_NevermoreRequiem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_NevermoreRequiem)
  return false;
#undef DO_
}

void CDOTAUserMsg_NevermoreRequiem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_NevermoreRequiem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 entity_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->entity_handle(), output);
  }

  // optional int32 lines = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->lines(), output);
  }

  // optional .CMsgVector origin = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_origin(), output);
  }

  // optional bool reverse = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->reverse(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_NevermoreRequiem)
}

::google::protobuf::uint8* CDOTAUserMsg_NevermoreRequiem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_NevermoreRequiem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 entity_handle = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->entity_handle(), target);
  }

  // optional int32 lines = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->lines(), target);
  }

  // optional .CMsgVector origin = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_origin(), deterministic, target);
  }

  // optional bool reverse = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->reverse(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_NevermoreRequiem)
  return target;
}

size_t CDOTAUserMsg_NevermoreRequiem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_NevermoreRequiem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .CMsgVector origin = 3;
    if (has_origin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *origin_);
    }

    // optional int32 entity_handle = 1;
    if (has_entity_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entity_handle());
    }

    // optional int32 lines = 2;
    if (has_lines()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lines());
    }

    // optional bool reverse = 4;
    if (has_reverse()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_NevermoreRequiem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_NevermoreRequiem)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_NevermoreRequiem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_NevermoreRequiem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_NevermoreRequiem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_NevermoreRequiem)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_NevermoreRequiem::MergeFrom(const CDOTAUserMsg_NevermoreRequiem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_NevermoreRequiem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_origin()->::CMsgVector::MergeFrom(from.origin());
    }
    if (cached_has_bits & 0x00000002u) {
      entity_handle_ = from.entity_handle_;
    }
    if (cached_has_bits & 0x00000004u) {
      lines_ = from.lines_;
    }
    if (cached_has_bits & 0x00000008u) {
      reverse_ = from.reverse_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_NevermoreRequiem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_NevermoreRequiem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_NevermoreRequiem::CopyFrom(const CDOTAUserMsg_NevermoreRequiem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_NevermoreRequiem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_NevermoreRequiem::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_NevermoreRequiem::Swap(CDOTAUserMsg_NevermoreRequiem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_NevermoreRequiem::InternalSwap(CDOTAUserMsg_NevermoreRequiem* other) {
  using std::swap;
  swap(origin_, other->origin_);
  swap(entity_handle_, other->entity_handle_);
  swap(lines_, other->lines_);
  swap(reverse_, other->reverse_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_NevermoreRequiem::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_InvalidCommand::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_InvalidCommand::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_InvalidCommand::CDOTAUserMsg_InvalidCommand()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_InvalidCommand.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_InvalidCommand)
}
CDOTAUserMsg_InvalidCommand::CDOTAUserMsg_InvalidCommand(const CDOTAUserMsg_InvalidCommand& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_InvalidCommand)
}

void CDOTAUserMsg_InvalidCommand::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CDOTAUserMsg_InvalidCommand::~CDOTAUserMsg_InvalidCommand() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_InvalidCommand)
  SharedDtor();
}

void CDOTAUserMsg_InvalidCommand::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTAUserMsg_InvalidCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_InvalidCommand::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_InvalidCommand& CDOTAUserMsg_InvalidCommand::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_InvalidCommand.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_InvalidCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_InvalidCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    message_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_InvalidCommand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_InvalidCommand)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_InvalidCommand.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_InvalidCommand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_InvalidCommand)
  return false;
#undef DO_
}

void CDOTAUserMsg_InvalidCommand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_InvalidCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_InvalidCommand.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_InvalidCommand)
}

::google::protobuf::uint8* CDOTAUserMsg_InvalidCommand::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_InvalidCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_InvalidCommand.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_InvalidCommand)
  return target;
}

size_t CDOTAUserMsg_InvalidCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_InvalidCommand)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string message = 1;
  if (has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_InvalidCommand::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_InvalidCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_InvalidCommand* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_InvalidCommand>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_InvalidCommand)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_InvalidCommand)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_InvalidCommand::MergeFrom(const CDOTAUserMsg_InvalidCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_InvalidCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_message()) {
    set_has_message();
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void CDOTAUserMsg_InvalidCommand::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_InvalidCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_InvalidCommand::CopyFrom(const CDOTAUserMsg_InvalidCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_InvalidCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_InvalidCommand::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_InvalidCommand::Swap(CDOTAUserMsg_InvalidCommand* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_InvalidCommand::InternalSwap(CDOTAUserMsg_InvalidCommand* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_InvalidCommand::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_HudError::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_HudError::kOrderIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_HudError::CDOTAUserMsg_HudError()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_HudError.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_HudError)
}
CDOTAUserMsg_HudError::CDOTAUserMsg_HudError(const CDOTAUserMsg_HudError& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  order_id_ = from.order_id_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_HudError)
}

void CDOTAUserMsg_HudError::SharedCtor() {
  order_id_ = 0;
}

CDOTAUserMsg_HudError::~CDOTAUserMsg_HudError() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_HudError)
  SharedDtor();
}

void CDOTAUserMsg_HudError::SharedDtor() {
}

void CDOTAUserMsg_HudError::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_HudError::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_HudError& CDOTAUserMsg_HudError::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_HudError.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_HudError::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_HudError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  order_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_HudError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_HudError)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 order_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_order_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &order_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_HudError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_HudError)
  return false;
#undef DO_
}

void CDOTAUserMsg_HudError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_HudError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 order_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->order_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_HudError)
}

::google::protobuf::uint8* CDOTAUserMsg_HudError::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_HudError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 order_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->order_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_HudError)
  return target;
}

size_t CDOTAUserMsg_HudError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_HudError)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 order_id = 1;
  if (has_order_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->order_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_HudError::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_HudError)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_HudError* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_HudError>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_HudError)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_HudError)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_HudError::MergeFrom(const CDOTAUserMsg_HudError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_HudError)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_order_id()) {
    set_order_id(from.order_id());
  }
}

void CDOTAUserMsg_HudError::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_HudError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_HudError::CopyFrom(const CDOTAUserMsg_HudError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_HudError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_HudError::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_HudError::Swap(CDOTAUserMsg_HudError* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_HudError::InternalSwap(CDOTAUserMsg_HudError* other) {
  using std::swap;
  swap(order_id_, other->order_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_HudError::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_SharedCooldown::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_SharedCooldown::kEntindexFieldNumber;
const int CDOTAUserMsg_SharedCooldown::kNameFieldNumber;
const int CDOTAUserMsg_SharedCooldown::kCooldownFieldNumber;
const int CDOTAUserMsg_SharedCooldown::kNameIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_SharedCooldown::CDOTAUserMsg_SharedCooldown()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_SharedCooldown.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_SharedCooldown)
}
CDOTAUserMsg_SharedCooldown::CDOTAUserMsg_SharedCooldown(const CDOTAUserMsg_SharedCooldown& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&entindex_, &from.entindex_,
    static_cast<size_t>(reinterpret_cast<char*>(&name_index_) -
    reinterpret_cast<char*>(&entindex_)) + sizeof(name_index_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_SharedCooldown)
}

void CDOTAUserMsg_SharedCooldown::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&entindex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&name_index_) -
      reinterpret_cast<char*>(&entindex_)) + sizeof(name_index_));
}

CDOTAUserMsg_SharedCooldown::~CDOTAUserMsg_SharedCooldown() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_SharedCooldown)
  SharedDtor();
}

void CDOTAUserMsg_SharedCooldown::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTAUserMsg_SharedCooldown::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_SharedCooldown::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_SharedCooldown& CDOTAUserMsg_SharedCooldown::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_SharedCooldown.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_SharedCooldown::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_SharedCooldown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&entindex_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&name_index_) -
        reinterpret_cast<char*>(&entindex_)) + sizeof(name_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_SharedCooldown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_SharedCooldown)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 entindex = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_entindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_SharedCooldown.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float cooldown = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_cooldown();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cooldown_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 name_index = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_name_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &name_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_SharedCooldown)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_SharedCooldown)
  return false;
#undef DO_
}

void CDOTAUserMsg_SharedCooldown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_SharedCooldown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 entindex = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->entindex(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_SharedCooldown.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional float cooldown = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->cooldown(), output);
  }

  // optional int32 name_index = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->name_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_SharedCooldown)
}

::google::protobuf::uint8* CDOTAUserMsg_SharedCooldown::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_SharedCooldown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 entindex = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->entindex(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_SharedCooldown.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional float cooldown = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->cooldown(), target);
  }

  // optional int32 name_index = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->name_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_SharedCooldown)
  return target;
}

size_t CDOTAUserMsg_SharedCooldown::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_SharedCooldown)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 entindex = 1;
    if (has_entindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entindex());
    }

    // optional float cooldown = 3;
    if (has_cooldown()) {
      total_size += 1 + 4;
    }

    // optional int32 name_index = 4;
    if (has_name_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->name_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_SharedCooldown::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_SharedCooldown)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_SharedCooldown* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_SharedCooldown>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_SharedCooldown)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_SharedCooldown)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_SharedCooldown::MergeFrom(const CDOTAUserMsg_SharedCooldown& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_SharedCooldown)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      entindex_ = from.entindex_;
    }
    if (cached_has_bits & 0x00000004u) {
      cooldown_ = from.cooldown_;
    }
    if (cached_has_bits & 0x00000008u) {
      name_index_ = from.name_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_SharedCooldown::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_SharedCooldown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_SharedCooldown::CopyFrom(const CDOTAUserMsg_SharedCooldown& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_SharedCooldown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_SharedCooldown::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_SharedCooldown::Swap(CDOTAUserMsg_SharedCooldown* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_SharedCooldown::InternalSwap(CDOTAUserMsg_SharedCooldown* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(entindex_, other->entindex_);
  swap(cooldown_, other->cooldown_);
  swap(name_index_, other->name_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_SharedCooldown::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_SetNextAutobuyItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_SetNextAutobuyItem::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_SetNextAutobuyItem::CDOTAUserMsg_SetNextAutobuyItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_SetNextAutobuyItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_SetNextAutobuyItem)
}
CDOTAUserMsg_SetNextAutobuyItem::CDOTAUserMsg_SetNextAutobuyItem(const CDOTAUserMsg_SetNextAutobuyItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_SetNextAutobuyItem)
}

void CDOTAUserMsg_SetNextAutobuyItem::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CDOTAUserMsg_SetNextAutobuyItem::~CDOTAUserMsg_SetNextAutobuyItem() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_SetNextAutobuyItem)
  SharedDtor();
}

void CDOTAUserMsg_SetNextAutobuyItem::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTAUserMsg_SetNextAutobuyItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_SetNextAutobuyItem::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_SetNextAutobuyItem& CDOTAUserMsg_SetNextAutobuyItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_SetNextAutobuyItem.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_SetNextAutobuyItem::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_SetNextAutobuyItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_SetNextAutobuyItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_SetNextAutobuyItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_SetNextAutobuyItem.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_SetNextAutobuyItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_SetNextAutobuyItem)
  return false;
#undef DO_
}

void CDOTAUserMsg_SetNextAutobuyItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_SetNextAutobuyItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_SetNextAutobuyItem.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_SetNextAutobuyItem)
}

::google::protobuf::uint8* CDOTAUserMsg_SetNextAutobuyItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_SetNextAutobuyItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_SetNextAutobuyItem.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_SetNextAutobuyItem)
  return target;
}

size_t CDOTAUserMsg_SetNextAutobuyItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_SetNextAutobuyItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_SetNextAutobuyItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_SetNextAutobuyItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_SetNextAutobuyItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_SetNextAutobuyItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_SetNextAutobuyItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_SetNextAutobuyItem)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_SetNextAutobuyItem::MergeFrom(const CDOTAUserMsg_SetNextAutobuyItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_SetNextAutobuyItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void CDOTAUserMsg_SetNextAutobuyItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_SetNextAutobuyItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_SetNextAutobuyItem::CopyFrom(const CDOTAUserMsg_SetNextAutobuyItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_SetNextAutobuyItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_SetNextAutobuyItem::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_SetNextAutobuyItem::Swap(CDOTAUserMsg_SetNextAutobuyItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_SetNextAutobuyItem::InternalSwap(CDOTAUserMsg_SetNextAutobuyItem* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_SetNextAutobuyItem::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_HalloweenDrops::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_HalloweenDrops::kItemDefsFieldNumber;
const int CDOTAUserMsg_HalloweenDrops::kPlayerIdsFieldNumber;
const int CDOTAUserMsg_HalloweenDrops::kPrizeListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_HalloweenDrops::CDOTAUserMsg_HalloweenDrops()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_HalloweenDrops.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_HalloweenDrops)
}
CDOTAUserMsg_HalloweenDrops::CDOTAUserMsg_HalloweenDrops(const CDOTAUserMsg_HalloweenDrops& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      item_defs_(from.item_defs_),
      player_ids_(from.player_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  prize_list_ = from.prize_list_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_HalloweenDrops)
}

void CDOTAUserMsg_HalloweenDrops::SharedCtor() {
  prize_list_ = 0u;
}

CDOTAUserMsg_HalloweenDrops::~CDOTAUserMsg_HalloweenDrops() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_HalloweenDrops)
  SharedDtor();
}

void CDOTAUserMsg_HalloweenDrops::SharedDtor() {
}

void CDOTAUserMsg_HalloweenDrops::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_HalloweenDrops::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_HalloweenDrops& CDOTAUserMsg_HalloweenDrops::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_HalloweenDrops.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_HalloweenDrops::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_HalloweenDrops)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_defs_.Clear();
  player_ids_.Clear();
  prize_list_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_HalloweenDrops::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_HalloweenDrops)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 item_defs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_item_defs())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_item_defs())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 player_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_player_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_player_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 prize_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_prize_list();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prize_list_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_HalloweenDrops)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_HalloweenDrops)
  return false;
#undef DO_
}

void CDOTAUserMsg_HalloweenDrops::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_HalloweenDrops)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 item_defs = 1;
  for (int i = 0, n = this->item_defs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->item_defs(i), output);
  }

  // repeated uint32 player_ids = 2;
  for (int i = 0, n = this->player_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->player_ids(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 prize_list = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->prize_list(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_HalloweenDrops)
}

::google::protobuf::uint8* CDOTAUserMsg_HalloweenDrops::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_HalloweenDrops)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 item_defs = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->item_defs_, target);

  // repeated uint32 player_ids = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->player_ids_, target);

  cached_has_bits = _has_bits_[0];
  // optional uint32 prize_list = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->prize_list(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_HalloweenDrops)
  return target;
}

size_t CDOTAUserMsg_HalloweenDrops::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_HalloweenDrops)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 item_defs = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->item_defs_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->item_defs_size());
    total_size += data_size;
  }

  // repeated uint32 player_ids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->player_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->player_ids_size());
    total_size += data_size;
  }

  // optional uint32 prize_list = 3;
  if (has_prize_list()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prize_list());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_HalloweenDrops::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_HalloweenDrops)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_HalloweenDrops* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_HalloweenDrops>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_HalloweenDrops)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_HalloweenDrops)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_HalloweenDrops::MergeFrom(const CDOTAUserMsg_HalloweenDrops& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_HalloweenDrops)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_defs_.MergeFrom(from.item_defs_);
  player_ids_.MergeFrom(from.player_ids_);
  if (from.has_prize_list()) {
    set_prize_list(from.prize_list());
  }
}

void CDOTAUserMsg_HalloweenDrops::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_HalloweenDrops)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_HalloweenDrops::CopyFrom(const CDOTAUserMsg_HalloweenDrops& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_HalloweenDrops)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_HalloweenDrops::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_HalloweenDrops::Swap(CDOTAUserMsg_HalloweenDrops* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_HalloweenDrops::InternalSwap(CDOTAUserMsg_HalloweenDrops* other) {
  using std::swap;
  item_defs_.InternalSwap(&other->item_defs_);
  player_ids_.InternalSwap(&other->player_ids_);
  swap(prize_list_, other->prize_list_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_HalloweenDrops::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_PredictionResult_Prediction::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_PredictionResult_Prediction::kItemDefFieldNumber;
const int CDOTAUserMsg_PredictionResult_Prediction::kNumCorrectFieldNumber;
const int CDOTAUserMsg_PredictionResult_Prediction::kNumFailsFieldNumber;
const int CDOTAUserMsg_PredictionResult_Prediction::kResultFieldNumber;
const int CDOTAUserMsg_PredictionResult_Prediction::kGrantedItemDefsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_PredictionResult_Prediction::CDOTAUserMsg_PredictionResult_Prediction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_PredictionResult_Prediction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_PredictionResult.Prediction)
}
CDOTAUserMsg_PredictionResult_Prediction::CDOTAUserMsg_PredictionResult_Prediction(const CDOTAUserMsg_PredictionResult_Prediction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      granted_item_defs_(from.granted_item_defs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_def_, &from.item_def_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&item_def_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_PredictionResult.Prediction)
}

void CDOTAUserMsg_PredictionResult_Prediction::SharedCtor() {
  ::memset(&item_def_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_fails_) -
      reinterpret_cast<char*>(&item_def_)) + sizeof(num_fails_));
  result_ = 1;
}

CDOTAUserMsg_PredictionResult_Prediction::~CDOTAUserMsg_PredictionResult_Prediction() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_PredictionResult.Prediction)
  SharedDtor();
}

void CDOTAUserMsg_PredictionResult_Prediction::SharedDtor() {
}

void CDOTAUserMsg_PredictionResult_Prediction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_PredictionResult_Prediction::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_PredictionResult_Prediction& CDOTAUserMsg_PredictionResult_Prediction::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_PredictionResult_Prediction.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_PredictionResult_Prediction::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_PredictionResult.Prediction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  granted_item_defs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&item_def_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&num_fails_) -
        reinterpret_cast<char*>(&item_def_)) + sizeof(num_fails_));
    result_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_PredictionResult_Prediction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_PredictionResult.Prediction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 item_def = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_item_def();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 num_correct = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_num_correct();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_correct_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 num_fails = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_num_fails();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_fails_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CDOTAUserMsg_PredictionResult.Prediction.EResult result = 4 [default = k_eResult_ItemGranted];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CDOTAUserMsg_PredictionResult_Prediction_EResult_IsValid(value)) {
            set_result(static_cast< ::CDOTAUserMsg_PredictionResult_Prediction_EResult >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 granted_item_defs = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 48u, input, this->mutable_granted_item_defs())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_granted_item_defs())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_PredictionResult.Prediction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_PredictionResult.Prediction)
  return false;
#undef DO_
}

void CDOTAUserMsg_PredictionResult_Prediction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_PredictionResult.Prediction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_def = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_def(), output);
  }

  // optional uint32 num_correct = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num_correct(), output);
  }

  // optional uint32 num_fails = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->num_fails(), output);
  }

  // optional .CDOTAUserMsg_PredictionResult.Prediction.EResult result = 4 [default = k_eResult_ItemGranted];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->result(), output);
  }

  // repeated uint32 granted_item_defs = 6;
  for (int i = 0, n = this->granted_item_defs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      6, this->granted_item_defs(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_PredictionResult.Prediction)
}

::google::protobuf::uint8* CDOTAUserMsg_PredictionResult_Prediction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_PredictionResult.Prediction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_def = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_def(), target);
  }

  // optional uint32 num_correct = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num_correct(), target);
  }

  // optional uint32 num_fails = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->num_fails(), target);
  }

  // optional .CDOTAUserMsg_PredictionResult.Prediction.EResult result = 4 [default = k_eResult_ItemGranted];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->result(), target);
  }

  // repeated uint32 granted_item_defs = 6;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(6, this->granted_item_defs_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_PredictionResult.Prediction)
  return target;
}

size_t CDOTAUserMsg_PredictionResult_Prediction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_PredictionResult.Prediction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 granted_item_defs = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->granted_item_defs_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->granted_item_defs_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 item_def = 1;
    if (has_item_def()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def());
    }

    // optional uint32 num_correct = 2;
    if (has_num_correct()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_correct());
    }

    // optional uint32 num_fails = 3;
    if (has_num_fails()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_fails());
    }

    // optional .CDOTAUserMsg_PredictionResult.Prediction.EResult result = 4 [default = k_eResult_ItemGranted];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_PredictionResult_Prediction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_PredictionResult.Prediction)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_PredictionResult_Prediction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_PredictionResult_Prediction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_PredictionResult.Prediction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_PredictionResult.Prediction)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_PredictionResult_Prediction::MergeFrom(const CDOTAUserMsg_PredictionResult_Prediction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_PredictionResult.Prediction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  granted_item_defs_.MergeFrom(from.granted_item_defs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      item_def_ = from.item_def_;
    }
    if (cached_has_bits & 0x00000002u) {
      num_correct_ = from.num_correct_;
    }
    if (cached_has_bits & 0x00000004u) {
      num_fails_ = from.num_fails_;
    }
    if (cached_has_bits & 0x00000008u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_PredictionResult_Prediction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_PredictionResult.Prediction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_PredictionResult_Prediction::CopyFrom(const CDOTAUserMsg_PredictionResult_Prediction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_PredictionResult.Prediction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_PredictionResult_Prediction::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_PredictionResult_Prediction::Swap(CDOTAUserMsg_PredictionResult_Prediction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_PredictionResult_Prediction::InternalSwap(CDOTAUserMsg_PredictionResult_Prediction* other) {
  using std::swap;
  granted_item_defs_.InternalSwap(&other->granted_item_defs_);
  swap(item_def_, other->item_def_);
  swap(num_correct_, other->num_correct_);
  swap(num_fails_, other->num_fails_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_PredictionResult_Prediction::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_PredictionResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_PredictionResult::kAccountIdFieldNumber;
const int CDOTAUserMsg_PredictionResult::kMatchIdFieldNumber;
const int CDOTAUserMsg_PredictionResult::kCorrectFieldNumber;
const int CDOTAUserMsg_PredictionResult::kPredictionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_PredictionResult::CDOTAUserMsg_PredictionResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_PredictionResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_PredictionResult)
}
CDOTAUserMsg_PredictionResult::CDOTAUserMsg_PredictionResult(const CDOTAUserMsg_PredictionResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      predictions_(from.predictions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&match_id_, &from.match_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&correct_) -
    reinterpret_cast<char*>(&match_id_)) + sizeof(correct_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_PredictionResult)
}

void CDOTAUserMsg_PredictionResult::SharedCtor() {
  ::memset(&match_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&correct_) -
      reinterpret_cast<char*>(&match_id_)) + sizeof(correct_));
}

CDOTAUserMsg_PredictionResult::~CDOTAUserMsg_PredictionResult() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_PredictionResult)
  SharedDtor();
}

void CDOTAUserMsg_PredictionResult::SharedDtor() {
}

void CDOTAUserMsg_PredictionResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_PredictionResult::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_PredictionResult& CDOTAUserMsg_PredictionResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_PredictionResult.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_PredictionResult::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_PredictionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  predictions_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&match_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&correct_) -
        reinterpret_cast<char*>(&match_id_)) + sizeof(correct_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_PredictionResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_PredictionResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 match_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_match_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &match_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool correct = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_correct();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &correct_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_predictions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_PredictionResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_PredictionResult)
  return false;
#undef DO_
}

void CDOTAUserMsg_PredictionResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_PredictionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint64 match_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->match_id(), output);
  }

  // optional bool correct = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->correct(), output);
  }

  // repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->predictions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->predictions(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_PredictionResult)
}

::google::protobuf::uint8* CDOTAUserMsg_PredictionResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_PredictionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint64 match_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->match_id(), target);
  }

  // optional bool correct = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->correct(), target);
  }

  // repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->predictions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->predictions(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_PredictionResult)
  return target;
}

size_t CDOTAUserMsg_PredictionResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_PredictionResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->predictions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->predictions(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional uint64 match_id = 2;
    if (has_match_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->match_id());
    }

    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional bool correct = 3;
    if (has_correct()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_PredictionResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_PredictionResult)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_PredictionResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_PredictionResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_PredictionResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_PredictionResult)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_PredictionResult::MergeFrom(const CDOTAUserMsg_PredictionResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_PredictionResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  predictions_.MergeFrom(from.predictions_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      match_id_ = from.match_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      correct_ = from.correct_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_PredictionResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_PredictionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_PredictionResult::CopyFrom(const CDOTAUserMsg_PredictionResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_PredictionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_PredictionResult::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_PredictionResult::Swap(CDOTAUserMsg_PredictionResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_PredictionResult::InternalSwap(CDOTAUserMsg_PredictionResult* other) {
  using std::swap;
  CastToBase(&predictions_)->InternalSwap(CastToBase(&other->predictions_));
  swap(match_id_, other->match_id_);
  swap(account_id_, other->account_id_);
  swap(correct_, other->correct_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_PredictionResult::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAResponseQuerySerialized_Fact::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAResponseQuerySerialized_Fact::kKeyFieldNumber;
const int CDOTAResponseQuerySerialized_Fact::kValtypeFieldNumber;
const int CDOTAResponseQuerySerialized_Fact::kValNumericFieldNumber;
const int CDOTAResponseQuerySerialized_Fact::kValStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAResponseQuerySerialized_Fact::CDOTAResponseQuerySerialized_Fact()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAResponseQuerySerialized_Fact.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAResponseQuerySerialized.Fact)
}
CDOTAResponseQuerySerialized_Fact::CDOTAResponseQuerySerialized_Fact(const CDOTAResponseQuerySerialized_Fact& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  val_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_val_string()) {
    val_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.val_string_);
  }
  ::memcpy(&key_, &from.key_,
    static_cast<size_t>(reinterpret_cast<char*>(&valtype_) -
    reinterpret_cast<char*>(&key_)) + sizeof(valtype_));
  // @@protoc_insertion_point(copy_constructor:CDOTAResponseQuerySerialized.Fact)
}

void CDOTAResponseQuerySerialized_Fact::SharedCtor() {
  val_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&val_numeric_) -
      reinterpret_cast<char*>(&key_)) + sizeof(val_numeric_));
  valtype_ = 1;
}

CDOTAResponseQuerySerialized_Fact::~CDOTAResponseQuerySerialized_Fact() {
  // @@protoc_insertion_point(destructor:CDOTAResponseQuerySerialized.Fact)
  SharedDtor();
}

void CDOTAResponseQuerySerialized_Fact::SharedDtor() {
  val_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTAResponseQuerySerialized_Fact::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAResponseQuerySerialized_Fact::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAResponseQuerySerialized_Fact& CDOTAResponseQuerySerialized_Fact::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAResponseQuerySerialized_Fact.base);
  return *internal_default_instance();
}


void CDOTAResponseQuerySerialized_Fact::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAResponseQuerySerialized.Fact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    val_string_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&key_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&val_numeric_) -
        reinterpret_cast<char*>(&key_)) + sizeof(val_numeric_));
    valtype_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAResponseQuerySerialized_Fact::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAResponseQuerySerialized.Fact)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_key();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .CDOTAResponseQuerySerialized.Fact.ValueType valtype = 2 [default = NUMERIC];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CDOTAResponseQuerySerialized_Fact_ValueType_IsValid(value)) {
            set_valtype(static_cast< ::CDOTAResponseQuerySerialized_Fact_ValueType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float val_numeric = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_val_numeric();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &val_numeric_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string val_string = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_val_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->val_string().data(), static_cast<int>(this->val_string().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAResponseQuerySerialized.Fact.val_string");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAResponseQuerySerialized.Fact)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAResponseQuerySerialized.Fact)
  return false;
#undef DO_
}

void CDOTAResponseQuerySerialized_Fact::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAResponseQuerySerialized.Fact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 key = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->key(), output);
  }

  // required .CDOTAResponseQuerySerialized.Fact.ValueType valtype = 2 [default = NUMERIC];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->valtype(), output);
  }

  // optional float val_numeric = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->val_numeric(), output);
  }

  // optional string val_string = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->val_string().data(), static_cast<int>(this->val_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAResponseQuerySerialized.Fact.val_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->val_string(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAResponseQuerySerialized.Fact)
}

::google::protobuf::uint8* CDOTAResponseQuerySerialized_Fact::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAResponseQuerySerialized.Fact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 key = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->key(), target);
  }

  // required .CDOTAResponseQuerySerialized.Fact.ValueType valtype = 2 [default = NUMERIC];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->valtype(), target);
  }

  // optional float val_numeric = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->val_numeric(), target);
  }

  // optional string val_string = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->val_string().data(), static_cast<int>(this->val_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAResponseQuerySerialized.Fact.val_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->val_string(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAResponseQuerySerialized.Fact)
  return target;
}

size_t CDOTAResponseQuerySerialized_Fact::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CDOTAResponseQuerySerialized.Fact)
  size_t total_size = 0;

  if (has_key()) {
    // required int32 key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->key());
  }

  if (has_valtype()) {
    // required .CDOTAResponseQuerySerialized.Fact.ValueType valtype = 2 [default = NUMERIC];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->valtype());
  }

  return total_size;
}
size_t CDOTAResponseQuerySerialized_Fact::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAResponseQuerySerialized.Fact)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000a) ^ 0x0000000a) == 0) {  // All required fields are present.
    // required int32 key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->key());

    // required .CDOTAResponseQuerySerialized.Fact.ValueType valtype = 2 [default = NUMERIC];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->valtype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string val_string = 4;
  if (has_val_string()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->val_string());
  }

  // optional float val_numeric = 3;
  if (has_val_numeric()) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAResponseQuerySerialized_Fact::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAResponseQuerySerialized.Fact)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAResponseQuerySerialized_Fact* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAResponseQuerySerialized_Fact>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAResponseQuerySerialized.Fact)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAResponseQuerySerialized.Fact)
    MergeFrom(*source);
  }
}

void CDOTAResponseQuerySerialized_Fact::MergeFrom(const CDOTAResponseQuerySerialized_Fact& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAResponseQuerySerialized.Fact)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_val_string();
      val_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.val_string_);
    }
    if (cached_has_bits & 0x00000002u) {
      key_ = from.key_;
    }
    if (cached_has_bits & 0x00000004u) {
      val_numeric_ = from.val_numeric_;
    }
    if (cached_has_bits & 0x00000008u) {
      valtype_ = from.valtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAResponseQuerySerialized_Fact::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAResponseQuerySerialized.Fact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAResponseQuerySerialized_Fact::CopyFrom(const CDOTAResponseQuerySerialized_Fact& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAResponseQuerySerialized.Fact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAResponseQuerySerialized_Fact::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000a) != 0x0000000a) return false;
  return true;
}

void CDOTAResponseQuerySerialized_Fact::Swap(CDOTAResponseQuerySerialized_Fact* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAResponseQuerySerialized_Fact::InternalSwap(CDOTAResponseQuerySerialized_Fact* other) {
  using std::swap;
  val_string_.Swap(&other->val_string_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(key_, other->key_);
  swap(val_numeric_, other->val_numeric_);
  swap(valtype_, other->valtype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAResponseQuerySerialized_Fact::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAResponseQuerySerialized::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAResponseQuerySerialized::kFactsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAResponseQuerySerialized::CDOTAResponseQuerySerialized()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAResponseQuerySerialized.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAResponseQuerySerialized)
}
CDOTAResponseQuerySerialized::CDOTAResponseQuerySerialized(const CDOTAResponseQuerySerialized& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      facts_(from.facts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CDOTAResponseQuerySerialized)
}

void CDOTAResponseQuerySerialized::SharedCtor() {
}

CDOTAResponseQuerySerialized::~CDOTAResponseQuerySerialized() {
  // @@protoc_insertion_point(destructor:CDOTAResponseQuerySerialized)
  SharedDtor();
}

void CDOTAResponseQuerySerialized::SharedDtor() {
}

void CDOTAResponseQuerySerialized::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAResponseQuerySerialized::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAResponseQuerySerialized& CDOTAResponseQuerySerialized::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAResponseQuerySerialized.base);
  return *internal_default_instance();
}


void CDOTAResponseQuerySerialized::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAResponseQuerySerialized)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  facts_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAResponseQuerySerialized::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAResponseQuerySerialized)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CDOTAResponseQuerySerialized.Fact facts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_facts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAResponseQuerySerialized)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAResponseQuerySerialized)
  return false;
#undef DO_
}

void CDOTAResponseQuerySerialized::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAResponseQuerySerialized)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CDOTAResponseQuerySerialized.Fact facts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->facts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->facts(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAResponseQuerySerialized)
}

::google::protobuf::uint8* CDOTAResponseQuerySerialized::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAResponseQuerySerialized)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CDOTAResponseQuerySerialized.Fact facts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->facts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->facts(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAResponseQuerySerialized)
  return target;
}

size_t CDOTAResponseQuerySerialized::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAResponseQuerySerialized)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CDOTAResponseQuerySerialized.Fact facts = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->facts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->facts(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAResponseQuerySerialized::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAResponseQuerySerialized)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAResponseQuerySerialized* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAResponseQuerySerialized>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAResponseQuerySerialized)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAResponseQuerySerialized)
    MergeFrom(*source);
  }
}

void CDOTAResponseQuerySerialized::MergeFrom(const CDOTAResponseQuerySerialized& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAResponseQuerySerialized)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  facts_.MergeFrom(from.facts_);
}

void CDOTAResponseQuerySerialized::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAResponseQuerySerialized)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAResponseQuerySerialized::CopyFrom(const CDOTAResponseQuerySerialized& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAResponseQuerySerialized)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAResponseQuerySerialized::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->facts())) return false;
  return true;
}

void CDOTAResponseQuerySerialized::Swap(CDOTAResponseQuerySerialized* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAResponseQuerySerialized::InternalSwap(CDOTAResponseQuerySerialized* other) {
  using std::swap;
  CastToBase(&facts_)->InternalSwap(CastToBase(&other->facts_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAResponseQuerySerialized::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTASpeechMatchOnClient::InitAsDefaultInstance() {
  ::_CDOTASpeechMatchOnClient_default_instance_._instance.get_mutable()->responsequery_ = const_cast< ::CDOTAResponseQuerySerialized*>(
      ::CDOTAResponseQuerySerialized::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTASpeechMatchOnClient::kConceptFieldNumber;
const int CDOTASpeechMatchOnClient::kRecipientTypeFieldNumber;
const int CDOTASpeechMatchOnClient::kResponsequeryFieldNumber;
const int CDOTASpeechMatchOnClient::kRandomseedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTASpeechMatchOnClient::CDOTASpeechMatchOnClient()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTASpeechMatchOnClient.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTASpeechMatchOnClient)
}
CDOTASpeechMatchOnClient::CDOTASpeechMatchOnClient(const CDOTASpeechMatchOnClient& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_responsequery()) {
    responsequery_ = new ::CDOTAResponseQuerySerialized(*from.responsequery_);
  } else {
    responsequery_ = NULL;
  }
  ::memcpy(&concept_, &from.concept_,
    static_cast<size_t>(reinterpret_cast<char*>(&randomseed_) -
    reinterpret_cast<char*>(&concept_)) + sizeof(randomseed_));
  // @@protoc_insertion_point(copy_constructor:CDOTASpeechMatchOnClient)
}

void CDOTASpeechMatchOnClient::SharedCtor() {
  ::memset(&responsequery_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&randomseed_) -
      reinterpret_cast<char*>(&responsequery_)) + sizeof(randomseed_));
}

CDOTASpeechMatchOnClient::~CDOTASpeechMatchOnClient() {
  // @@protoc_insertion_point(destructor:CDOTASpeechMatchOnClient)
  SharedDtor();
}

void CDOTASpeechMatchOnClient::SharedDtor() {
  if (this != internal_default_instance()) delete responsequery_;
}

void CDOTASpeechMatchOnClient::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTASpeechMatchOnClient::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTASpeechMatchOnClient& CDOTASpeechMatchOnClient::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTASpeechMatchOnClient.base);
  return *internal_default_instance();
}


void CDOTASpeechMatchOnClient::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTASpeechMatchOnClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(responsequery_ != NULL);
    responsequery_->Clear();
  }
  if (cached_has_bits & 14u) {
    ::memset(&concept_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&randomseed_) -
        reinterpret_cast<char*>(&concept_)) + sizeof(randomseed_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTASpeechMatchOnClient::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTASpeechMatchOnClient)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 concept = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_concept();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &concept_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 recipient_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_recipient_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &recipient_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CDOTAResponseQuerySerialized responsequery = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_responsequery()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sfixed32 randomseed = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_randomseed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &randomseed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTASpeechMatchOnClient)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTASpeechMatchOnClient)
  return false;
#undef DO_
}

void CDOTASpeechMatchOnClient::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTASpeechMatchOnClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 concept = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->concept(), output);
  }

  // optional int32 recipient_type = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->recipient_type(), output);
  }

  // optional .CDOTAResponseQuerySerialized responsequery = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_responsequery(), output);
  }

  // optional sfixed32 randomseed = 4 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(4, this->randomseed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTASpeechMatchOnClient)
}

::google::protobuf::uint8* CDOTASpeechMatchOnClient::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTASpeechMatchOnClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 concept = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->concept(), target);
  }

  // optional int32 recipient_type = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->recipient_type(), target);
  }

  // optional .CDOTAResponseQuerySerialized responsequery = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_responsequery(), deterministic, target);
  }

  // optional sfixed32 randomseed = 4 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(4, this->randomseed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTASpeechMatchOnClient)
  return target;
}

size_t CDOTASpeechMatchOnClient::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTASpeechMatchOnClient)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .CDOTAResponseQuerySerialized responsequery = 3;
    if (has_responsequery()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *responsequery_);
    }

    // optional int32 concept = 1;
    if (has_concept()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->concept());
    }

    // optional int32 recipient_type = 2;
    if (has_recipient_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recipient_type());
    }

    // optional sfixed32 randomseed = 4 [default = 0];
    if (has_randomseed()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTASpeechMatchOnClient::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTASpeechMatchOnClient)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTASpeechMatchOnClient* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTASpeechMatchOnClient>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTASpeechMatchOnClient)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTASpeechMatchOnClient)
    MergeFrom(*source);
  }
}

void CDOTASpeechMatchOnClient::MergeFrom(const CDOTASpeechMatchOnClient& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTASpeechMatchOnClient)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_responsequery()->::CDOTAResponseQuerySerialized::MergeFrom(from.responsequery());
    }
    if (cached_has_bits & 0x00000002u) {
      concept_ = from.concept_;
    }
    if (cached_has_bits & 0x00000004u) {
      recipient_type_ = from.recipient_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      randomseed_ = from.randomseed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTASpeechMatchOnClient::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTASpeechMatchOnClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTASpeechMatchOnClient::CopyFrom(const CDOTASpeechMatchOnClient& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTASpeechMatchOnClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTASpeechMatchOnClient::IsInitialized() const {
  if (has_responsequery()) {
    if (!this->responsequery_->IsInitialized()) return false;
  }
  return true;
}

void CDOTASpeechMatchOnClient::Swap(CDOTASpeechMatchOnClient* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTASpeechMatchOnClient::InternalSwap(CDOTASpeechMatchOnClient* other) {
  using std::swap;
  swap(responsequery_, other->responsequery_);
  swap(concept_, other->concept_);
  swap(recipient_type_, other->recipient_type_);
  swap(randomseed_, other->randomseed_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTASpeechMatchOnClient::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_UnitEvent_Speech::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_UnitEvent_Speech::kConceptFieldNumber;
const int CDOTAUserMsg_UnitEvent_Speech::kResponseFieldNumber;
const int CDOTAUserMsg_UnitEvent_Speech::kRecipientTypeFieldNumber;
const int CDOTAUserMsg_UnitEvent_Speech::kLevelFieldNumber;
const int CDOTAUserMsg_UnitEvent_Speech::kMuteableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_UnitEvent_Speech::CDOTAUserMsg_UnitEvent_Speech()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_UnitEvent_Speech.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_UnitEvent.Speech)
}
CDOTAUserMsg_UnitEvent_Speech::CDOTAUserMsg_UnitEvent_Speech(const CDOTAUserMsg_UnitEvent_Speech& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  response_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_response()) {
    response_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_);
  }
  ::memcpy(&concept_, &from.concept_,
    static_cast<size_t>(reinterpret_cast<char*>(&muteable_) -
    reinterpret_cast<char*>(&concept_)) + sizeof(muteable_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_UnitEvent.Speech)
}

void CDOTAUserMsg_UnitEvent_Speech::SharedCtor() {
  response_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&concept_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&muteable_) -
      reinterpret_cast<char*>(&concept_)) + sizeof(muteable_));
}

CDOTAUserMsg_UnitEvent_Speech::~CDOTAUserMsg_UnitEvent_Speech() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_UnitEvent.Speech)
  SharedDtor();
}

void CDOTAUserMsg_UnitEvent_Speech::SharedDtor() {
  response_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTAUserMsg_UnitEvent_Speech::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_UnitEvent_Speech::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_UnitEvent_Speech& CDOTAUserMsg_UnitEvent_Speech::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_UnitEvent_Speech.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_UnitEvent_Speech::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_UnitEvent.Speech)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    response_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 30u) {
    ::memset(&concept_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&muteable_) -
        reinterpret_cast<char*>(&concept_)) + sizeof(muteable_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_UnitEvent_Speech::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_UnitEvent.Speech)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 concept = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_concept();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &concept_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string response = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->response().data(), static_cast<int>(this->response().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_UnitEvent.Speech.response");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 recipient_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_recipient_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &recipient_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 level = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool muteable = 5 [default = false];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_muteable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &muteable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_UnitEvent.Speech)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_UnitEvent.Speech)
  return false;
#undef DO_
}

void CDOTAUserMsg_UnitEvent_Speech::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_UnitEvent.Speech)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 concept = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->concept(), output);
  }

  // optional string response = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->response().data(), static_cast<int>(this->response().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_UnitEvent.Speech.response");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->response(), output);
  }

  // optional int32 recipient_type = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->recipient_type(), output);
  }

  // optional int32 level = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->level(), output);
  }

  // optional bool muteable = 5 [default = false];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->muteable(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_UnitEvent.Speech)
}

::google::protobuf::uint8* CDOTAUserMsg_UnitEvent_Speech::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_UnitEvent.Speech)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 concept = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->concept(), target);
  }

  // optional string response = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->response().data(), static_cast<int>(this->response().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_UnitEvent.Speech.response");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->response(), target);
  }

  // optional int32 recipient_type = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->recipient_type(), target);
  }

  // optional int32 level = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->level(), target);
  }

  // optional bool muteable = 5 [default = false];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->muteable(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_UnitEvent.Speech)
  return target;
}

size_t CDOTAUserMsg_UnitEvent_Speech::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_UnitEvent.Speech)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string response = 2;
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->response());
    }

    // optional int32 concept = 1;
    if (has_concept()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->concept());
    }

    // optional int32 recipient_type = 3;
    if (has_recipient_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recipient_type());
    }

    // optional int32 level = 4;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional bool muteable = 5 [default = false];
    if (has_muteable()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_UnitEvent_Speech::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_UnitEvent.Speech)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_UnitEvent_Speech* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_UnitEvent_Speech>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_UnitEvent.Speech)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_UnitEvent.Speech)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_UnitEvent_Speech::MergeFrom(const CDOTAUserMsg_UnitEvent_Speech& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_UnitEvent.Speech)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_response();
      response_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_);
    }
    if (cached_has_bits & 0x00000002u) {
      concept_ = from.concept_;
    }
    if (cached_has_bits & 0x00000004u) {
      recipient_type_ = from.recipient_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000010u) {
      muteable_ = from.muteable_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_UnitEvent_Speech::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_UnitEvent.Speech)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_UnitEvent_Speech::CopyFrom(const CDOTAUserMsg_UnitEvent_Speech& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_UnitEvent.Speech)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_UnitEvent_Speech::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_UnitEvent_Speech::Swap(CDOTAUserMsg_UnitEvent_Speech* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_UnitEvent_Speech::InternalSwap(CDOTAUserMsg_UnitEvent_Speech* other) {
  using std::swap;
  response_.Swap(&other->response_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(concept_, other->concept_);
  swap(recipient_type_, other->recipient_type_);
  swap(level_, other->level_);
  swap(muteable_, other->muteable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_UnitEvent_Speech::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_UnitEvent_SpeechMute::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_UnitEvent_SpeechMute::kDelayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_UnitEvent_SpeechMute::CDOTAUserMsg_UnitEvent_SpeechMute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_UnitEvent_SpeechMute.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_UnitEvent.SpeechMute)
}
CDOTAUserMsg_UnitEvent_SpeechMute::CDOTAUserMsg_UnitEvent_SpeechMute(const CDOTAUserMsg_UnitEvent_SpeechMute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  delay_ = from.delay_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_UnitEvent.SpeechMute)
}

void CDOTAUserMsg_UnitEvent_SpeechMute::SharedCtor() {
  delay_ = 0.5f;
}

CDOTAUserMsg_UnitEvent_SpeechMute::~CDOTAUserMsg_UnitEvent_SpeechMute() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_UnitEvent.SpeechMute)
  SharedDtor();
}

void CDOTAUserMsg_UnitEvent_SpeechMute::SharedDtor() {
}

void CDOTAUserMsg_UnitEvent_SpeechMute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_UnitEvent_SpeechMute::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_UnitEvent_SpeechMute& CDOTAUserMsg_UnitEvent_SpeechMute::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_UnitEvent_SpeechMute.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_UnitEvent_SpeechMute::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_UnitEvent.SpeechMute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  delay_ = 0.5f;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_UnitEvent_SpeechMute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_UnitEvent.SpeechMute)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float delay = 1 [default = 0.5];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_delay();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &delay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_UnitEvent.SpeechMute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_UnitEvent.SpeechMute)
  return false;
#undef DO_
}

void CDOTAUserMsg_UnitEvent_SpeechMute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_UnitEvent.SpeechMute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float delay = 1 [default = 0.5];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->delay(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_UnitEvent.SpeechMute)
}

::google::protobuf::uint8* CDOTAUserMsg_UnitEvent_SpeechMute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_UnitEvent.SpeechMute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float delay = 1 [default = 0.5];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->delay(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_UnitEvent.SpeechMute)
  return target;
}

size_t CDOTAUserMsg_UnitEvent_SpeechMute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_UnitEvent.SpeechMute)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional float delay = 1 [default = 0.5];
  if (has_delay()) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_UnitEvent_SpeechMute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_UnitEvent.SpeechMute)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_UnitEvent_SpeechMute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_UnitEvent_SpeechMute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_UnitEvent.SpeechMute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_UnitEvent.SpeechMute)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_UnitEvent_SpeechMute::MergeFrom(const CDOTAUserMsg_UnitEvent_SpeechMute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_UnitEvent.SpeechMute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_delay()) {
    set_delay(from.delay());
  }
}

void CDOTAUserMsg_UnitEvent_SpeechMute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_UnitEvent.SpeechMute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_UnitEvent_SpeechMute::CopyFrom(const CDOTAUserMsg_UnitEvent_SpeechMute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_UnitEvent.SpeechMute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_UnitEvent_SpeechMute::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_UnitEvent_SpeechMute::Swap(CDOTAUserMsg_UnitEvent_SpeechMute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_UnitEvent_SpeechMute::InternalSwap(CDOTAUserMsg_UnitEvent_SpeechMute* other) {
  using std::swap;
  swap(delay_, other->delay_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_UnitEvent_SpeechMute::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_UnitEvent_AddGesture::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_UnitEvent_AddGesture::kActivityFieldNumber;
const int CDOTAUserMsg_UnitEvent_AddGesture::kSlotFieldNumber;
const int CDOTAUserMsg_UnitEvent_AddGesture::kFadeInFieldNumber;
const int CDOTAUserMsg_UnitEvent_AddGesture::kFadeOutFieldNumber;
const int CDOTAUserMsg_UnitEvent_AddGesture::kPlaybackRateFieldNumber;
const int CDOTAUserMsg_UnitEvent_AddGesture::kSequenceVariantFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_UnitEvent_AddGesture::CDOTAUserMsg_UnitEvent_AddGesture()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_UnitEvent_AddGesture.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_UnitEvent.AddGesture)
}
CDOTAUserMsg_UnitEvent_AddGesture::CDOTAUserMsg_UnitEvent_AddGesture(const CDOTAUserMsg_UnitEvent_AddGesture& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&activity_, &from.activity_,
    static_cast<size_t>(reinterpret_cast<char*>(&playback_rate_) -
    reinterpret_cast<char*>(&activity_)) + sizeof(playback_rate_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_UnitEvent.AddGesture)
}

void CDOTAUserMsg_UnitEvent_AddGesture::SharedCtor() {
  ::memset(&activity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sequence_variant_) -
      reinterpret_cast<char*>(&activity_)) + sizeof(sequence_variant_));
  fade_out_ = 0.1f;
  playback_rate_ = 1;
}

CDOTAUserMsg_UnitEvent_AddGesture::~CDOTAUserMsg_UnitEvent_AddGesture() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_UnitEvent.AddGesture)
  SharedDtor();
}

void CDOTAUserMsg_UnitEvent_AddGesture::SharedDtor() {
}

void CDOTAUserMsg_UnitEvent_AddGesture::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_UnitEvent_AddGesture::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_UnitEvent_AddGesture& CDOTAUserMsg_UnitEvent_AddGesture::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_UnitEvent_AddGesture.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_UnitEvent_AddGesture::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_UnitEvent.AddGesture)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&activity_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&sequence_variant_) -
        reinterpret_cast<char*>(&activity_)) + sizeof(sequence_variant_));
    fade_out_ = 0.1f;
    playback_rate_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_UnitEvent_AddGesture::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_UnitEvent.AddGesture)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_activity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 slot = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_slot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float fade_in = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_fade_in();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fade_in_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float fade_out = 4 [default = 0.1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_fade_out();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fade_out_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float playback_rate = 5 [default = 1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_playback_rate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &playback_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 sequence_variant = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_sequence_variant();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sequence_variant_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_UnitEvent.AddGesture)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_UnitEvent.AddGesture)
  return false;
#undef DO_
}

void CDOTAUserMsg_UnitEvent_AddGesture::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_UnitEvent.AddGesture)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 activity = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity(), output);
  }

  // optional int32 slot = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->slot(), output);
  }

  // optional float fade_in = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->fade_in(), output);
  }

  // optional float fade_out = 4 [default = 0.1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->fade_out(), output);
  }

  // optional float playback_rate = 5 [default = 1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->playback_rate(), output);
  }

  // optional int32 sequence_variant = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->sequence_variant(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_UnitEvent.AddGesture)
}

::google::protobuf::uint8* CDOTAUserMsg_UnitEvent_AddGesture::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_UnitEvent.AddGesture)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 activity = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity(), target);
  }

  // optional int32 slot = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->slot(), target);
  }

  // optional float fade_in = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->fade_in(), target);
  }

  // optional float fade_out = 4 [default = 0.1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->fade_out(), target);
  }

  // optional float playback_rate = 5 [default = 1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->playback_rate(), target);
  }

  // optional int32 sequence_variant = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->sequence_variant(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_UnitEvent.AddGesture)
  return target;
}

size_t CDOTAUserMsg_UnitEvent_AddGesture::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_UnitEvent.AddGesture)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional int32 activity = 1;
    if (has_activity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity());
    }

    // optional int32 slot = 2;
    if (has_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slot());
    }

    // optional float fade_in = 3 [default = 0];
    if (has_fade_in()) {
      total_size += 1 + 4;
    }

    // optional int32 sequence_variant = 6;
    if (has_sequence_variant()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sequence_variant());
    }

    // optional float fade_out = 4 [default = 0.1];
    if (has_fade_out()) {
      total_size += 1 + 4;
    }

    // optional float playback_rate = 5 [default = 1];
    if (has_playback_rate()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_UnitEvent_AddGesture::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_UnitEvent.AddGesture)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_UnitEvent_AddGesture* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_UnitEvent_AddGesture>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_UnitEvent.AddGesture)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_UnitEvent.AddGesture)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_UnitEvent_AddGesture::MergeFrom(const CDOTAUserMsg_UnitEvent_AddGesture& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_UnitEvent.AddGesture)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      activity_ = from.activity_;
    }
    if (cached_has_bits & 0x00000002u) {
      slot_ = from.slot_;
    }
    if (cached_has_bits & 0x00000004u) {
      fade_in_ = from.fade_in_;
    }
    if (cached_has_bits & 0x00000008u) {
      sequence_variant_ = from.sequence_variant_;
    }
    if (cached_has_bits & 0x00000010u) {
      fade_out_ = from.fade_out_;
    }
    if (cached_has_bits & 0x00000020u) {
      playback_rate_ = from.playback_rate_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_UnitEvent_AddGesture::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_UnitEvent.AddGesture)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_UnitEvent_AddGesture::CopyFrom(const CDOTAUserMsg_UnitEvent_AddGesture& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_UnitEvent.AddGesture)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_UnitEvent_AddGesture::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_UnitEvent_AddGesture::Swap(CDOTAUserMsg_UnitEvent_AddGesture* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_UnitEvent_AddGesture::InternalSwap(CDOTAUserMsg_UnitEvent_AddGesture* other) {
  using std::swap;
  swap(activity_, other->activity_);
  swap(slot_, other->slot_);
  swap(fade_in_, other->fade_in_);
  swap(sequence_variant_, other->sequence_variant_);
  swap(fade_out_, other->fade_out_);
  swap(playback_rate_, other->playback_rate_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_UnitEvent_AddGesture::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_UnitEvent_RemoveGesture::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_UnitEvent_RemoveGesture::kActivityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_UnitEvent_RemoveGesture::CDOTAUserMsg_UnitEvent_RemoveGesture()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_UnitEvent_RemoveGesture.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_UnitEvent.RemoveGesture)
}
CDOTAUserMsg_UnitEvent_RemoveGesture::CDOTAUserMsg_UnitEvent_RemoveGesture(const CDOTAUserMsg_UnitEvent_RemoveGesture& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  activity_ = from.activity_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_UnitEvent.RemoveGesture)
}

void CDOTAUserMsg_UnitEvent_RemoveGesture::SharedCtor() {
  activity_ = 0;
}

CDOTAUserMsg_UnitEvent_RemoveGesture::~CDOTAUserMsg_UnitEvent_RemoveGesture() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_UnitEvent.RemoveGesture)
  SharedDtor();
}

void CDOTAUserMsg_UnitEvent_RemoveGesture::SharedDtor() {
}

void CDOTAUserMsg_UnitEvent_RemoveGesture::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_UnitEvent_RemoveGesture::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_UnitEvent_RemoveGesture& CDOTAUserMsg_UnitEvent_RemoveGesture::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_UnitEvent_RemoveGesture.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_UnitEvent_RemoveGesture::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_UnitEvent.RemoveGesture)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  activity_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_UnitEvent_RemoveGesture::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_UnitEvent.RemoveGesture)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_activity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_UnitEvent.RemoveGesture)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_UnitEvent.RemoveGesture)
  return false;
#undef DO_
}

void CDOTAUserMsg_UnitEvent_RemoveGesture::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_UnitEvent.RemoveGesture)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 activity = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_UnitEvent.RemoveGesture)
}

::google::protobuf::uint8* CDOTAUserMsg_UnitEvent_RemoveGesture::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_UnitEvent.RemoveGesture)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 activity = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_UnitEvent.RemoveGesture)
  return target;
}

size_t CDOTAUserMsg_UnitEvent_RemoveGesture::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_UnitEvent.RemoveGesture)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 activity = 1;
  if (has_activity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->activity());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_UnitEvent_RemoveGesture::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_UnitEvent.RemoveGesture)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_UnitEvent_RemoveGesture* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_UnitEvent_RemoveGesture>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_UnitEvent.RemoveGesture)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_UnitEvent.RemoveGesture)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_UnitEvent_RemoveGesture::MergeFrom(const CDOTAUserMsg_UnitEvent_RemoveGesture& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_UnitEvent.RemoveGesture)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_activity()) {
    set_activity(from.activity());
  }
}

void CDOTAUserMsg_UnitEvent_RemoveGesture::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_UnitEvent.RemoveGesture)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_UnitEvent_RemoveGesture::CopyFrom(const CDOTAUserMsg_UnitEvent_RemoveGesture& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_UnitEvent.RemoveGesture)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_UnitEvent_RemoveGesture::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_UnitEvent_RemoveGesture::Swap(CDOTAUserMsg_UnitEvent_RemoveGesture* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_UnitEvent_RemoveGesture::InternalSwap(CDOTAUserMsg_UnitEvent_RemoveGesture* other) {
  using std::swap;
  swap(activity_, other->activity_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_UnitEvent_RemoveGesture::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_UnitEvent_BloodImpact::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_UnitEvent_BloodImpact::kScaleFieldNumber;
const int CDOTAUserMsg_UnitEvent_BloodImpact::kXNormalFieldNumber;
const int CDOTAUserMsg_UnitEvent_BloodImpact::kYNormalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_UnitEvent_BloodImpact::CDOTAUserMsg_UnitEvent_BloodImpact()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_UnitEvent_BloodImpact.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_UnitEvent.BloodImpact)
}
CDOTAUserMsg_UnitEvent_BloodImpact::CDOTAUserMsg_UnitEvent_BloodImpact(const CDOTAUserMsg_UnitEvent_BloodImpact& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&scale_, &from.scale_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_normal_) -
    reinterpret_cast<char*>(&scale_)) + sizeof(y_normal_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_UnitEvent.BloodImpact)
}

void CDOTAUserMsg_UnitEvent_BloodImpact::SharedCtor() {
  ::memset(&scale_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_normal_) -
      reinterpret_cast<char*>(&scale_)) + sizeof(y_normal_));
}

CDOTAUserMsg_UnitEvent_BloodImpact::~CDOTAUserMsg_UnitEvent_BloodImpact() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_UnitEvent.BloodImpact)
  SharedDtor();
}

void CDOTAUserMsg_UnitEvent_BloodImpact::SharedDtor() {
}

void CDOTAUserMsg_UnitEvent_BloodImpact::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_UnitEvent_BloodImpact::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_UnitEvent_BloodImpact& CDOTAUserMsg_UnitEvent_BloodImpact::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_UnitEvent_BloodImpact.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_UnitEvent_BloodImpact::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_UnitEvent.BloodImpact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&scale_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_normal_) -
        reinterpret_cast<char*>(&scale_)) + sizeof(y_normal_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_UnitEvent_BloodImpact::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_UnitEvent.BloodImpact)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scale = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_scale();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 x_normal = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_x_normal();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_normal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 y_normal = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_y_normal();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_normal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_UnitEvent.BloodImpact)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_UnitEvent.BloodImpact)
  return false;
#undef DO_
}

void CDOTAUserMsg_UnitEvent_BloodImpact::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_UnitEvent.BloodImpact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 scale = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scale(), output);
  }

  // optional int32 x_normal = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->x_normal(), output);
  }

  // optional int32 y_normal = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->y_normal(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_UnitEvent.BloodImpact)
}

::google::protobuf::uint8* CDOTAUserMsg_UnitEvent_BloodImpact::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_UnitEvent.BloodImpact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 scale = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scale(), target);
  }

  // optional int32 x_normal = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->x_normal(), target);
  }

  // optional int32 y_normal = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->y_normal(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_UnitEvent.BloodImpact)
  return target;
}

size_t CDOTAUserMsg_UnitEvent_BloodImpact::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_UnitEvent.BloodImpact)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 scale = 1;
    if (has_scale()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scale());
    }

    // optional int32 x_normal = 2;
    if (has_x_normal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x_normal());
    }

    // optional int32 y_normal = 3;
    if (has_y_normal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y_normal());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_UnitEvent_BloodImpact::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_UnitEvent.BloodImpact)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_UnitEvent_BloodImpact* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_UnitEvent_BloodImpact>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_UnitEvent.BloodImpact)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_UnitEvent.BloodImpact)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_UnitEvent_BloodImpact::MergeFrom(const CDOTAUserMsg_UnitEvent_BloodImpact& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_UnitEvent.BloodImpact)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      scale_ = from.scale_;
    }
    if (cached_has_bits & 0x00000002u) {
      x_normal_ = from.x_normal_;
    }
    if (cached_has_bits & 0x00000004u) {
      y_normal_ = from.y_normal_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_UnitEvent_BloodImpact::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_UnitEvent.BloodImpact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_UnitEvent_BloodImpact::CopyFrom(const CDOTAUserMsg_UnitEvent_BloodImpact& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_UnitEvent.BloodImpact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_UnitEvent_BloodImpact::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_UnitEvent_BloodImpact::Swap(CDOTAUserMsg_UnitEvent_BloodImpact* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_UnitEvent_BloodImpact::InternalSwap(CDOTAUserMsg_UnitEvent_BloodImpact* other) {
  using std::swap;
  swap(scale_, other->scale_);
  swap(x_normal_, other->x_normal_);
  swap(y_normal_, other->y_normal_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_UnitEvent_BloodImpact::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_UnitEvent_FadeGesture::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_UnitEvent_FadeGesture::kActivityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_UnitEvent_FadeGesture::CDOTAUserMsg_UnitEvent_FadeGesture()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_UnitEvent_FadeGesture.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_UnitEvent.FadeGesture)
}
CDOTAUserMsg_UnitEvent_FadeGesture::CDOTAUserMsg_UnitEvent_FadeGesture(const CDOTAUserMsg_UnitEvent_FadeGesture& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  activity_ = from.activity_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_UnitEvent.FadeGesture)
}

void CDOTAUserMsg_UnitEvent_FadeGesture::SharedCtor() {
  activity_ = 0;
}

CDOTAUserMsg_UnitEvent_FadeGesture::~CDOTAUserMsg_UnitEvent_FadeGesture() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_UnitEvent.FadeGesture)
  SharedDtor();
}

void CDOTAUserMsg_UnitEvent_FadeGesture::SharedDtor() {
}

void CDOTAUserMsg_UnitEvent_FadeGesture::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_UnitEvent_FadeGesture::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_UnitEvent_FadeGesture& CDOTAUserMsg_UnitEvent_FadeGesture::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_UnitEvent_FadeGesture.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_UnitEvent_FadeGesture::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_UnitEvent.FadeGesture)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  activity_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_UnitEvent_FadeGesture::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_UnitEvent.FadeGesture)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_activity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_UnitEvent.FadeGesture)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_UnitEvent.FadeGesture)
  return false;
#undef DO_
}

void CDOTAUserMsg_UnitEvent_FadeGesture::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_UnitEvent.FadeGesture)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 activity = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_UnitEvent.FadeGesture)
}

::google::protobuf::uint8* CDOTAUserMsg_UnitEvent_FadeGesture::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_UnitEvent.FadeGesture)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 activity = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_UnitEvent.FadeGesture)
  return target;
}

size_t CDOTAUserMsg_UnitEvent_FadeGesture::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_UnitEvent.FadeGesture)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 activity = 1;
  if (has_activity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->activity());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_UnitEvent_FadeGesture::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_UnitEvent.FadeGesture)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_UnitEvent_FadeGesture* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_UnitEvent_FadeGesture>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_UnitEvent.FadeGesture)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_UnitEvent.FadeGesture)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_UnitEvent_FadeGesture::MergeFrom(const CDOTAUserMsg_UnitEvent_FadeGesture& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_UnitEvent.FadeGesture)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_activity()) {
    set_activity(from.activity());
  }
}

void CDOTAUserMsg_UnitEvent_FadeGesture::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_UnitEvent.FadeGesture)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_UnitEvent_FadeGesture::CopyFrom(const CDOTAUserMsg_UnitEvent_FadeGesture& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_UnitEvent.FadeGesture)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_UnitEvent_FadeGesture::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_UnitEvent_FadeGesture::Swap(CDOTAUserMsg_UnitEvent_FadeGesture* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_UnitEvent_FadeGesture::InternalSwap(CDOTAUserMsg_UnitEvent_FadeGesture* other) {
  using std::swap;
  swap(activity_, other->activity_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_UnitEvent_FadeGesture::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_UnitEvent::InitAsDefaultInstance() {
  ::_CDOTAUserMsg_UnitEvent_default_instance_._instance.get_mutable()->speech_ = const_cast< ::CDOTAUserMsg_UnitEvent_Speech*>(
      ::CDOTAUserMsg_UnitEvent_Speech::internal_default_instance());
  ::_CDOTAUserMsg_UnitEvent_default_instance_._instance.get_mutable()->speech_mute_ = const_cast< ::CDOTAUserMsg_UnitEvent_SpeechMute*>(
      ::CDOTAUserMsg_UnitEvent_SpeechMute::internal_default_instance());
  ::_CDOTAUserMsg_UnitEvent_default_instance_._instance.get_mutable()->add_gesture_ = const_cast< ::CDOTAUserMsg_UnitEvent_AddGesture*>(
      ::CDOTAUserMsg_UnitEvent_AddGesture::internal_default_instance());
  ::_CDOTAUserMsg_UnitEvent_default_instance_._instance.get_mutable()->remove_gesture_ = const_cast< ::CDOTAUserMsg_UnitEvent_RemoveGesture*>(
      ::CDOTAUserMsg_UnitEvent_RemoveGesture::internal_default_instance());
  ::_CDOTAUserMsg_UnitEvent_default_instance_._instance.get_mutable()->blood_impact_ = const_cast< ::CDOTAUserMsg_UnitEvent_BloodImpact*>(
      ::CDOTAUserMsg_UnitEvent_BloodImpact::internal_default_instance());
  ::_CDOTAUserMsg_UnitEvent_default_instance_._instance.get_mutable()->fade_gesture_ = const_cast< ::CDOTAUserMsg_UnitEvent_FadeGesture*>(
      ::CDOTAUserMsg_UnitEvent_FadeGesture::internal_default_instance());
  ::_CDOTAUserMsg_UnitEvent_default_instance_._instance.get_mutable()->speech_match_on_client_ = const_cast< ::CDOTASpeechMatchOnClient*>(
      ::CDOTASpeechMatchOnClient::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_UnitEvent::kMsgTypeFieldNumber;
const int CDOTAUserMsg_UnitEvent::kEntityIndexFieldNumber;
const int CDOTAUserMsg_UnitEvent::kSpeechFieldNumber;
const int CDOTAUserMsg_UnitEvent::kSpeechMuteFieldNumber;
const int CDOTAUserMsg_UnitEvent::kAddGestureFieldNumber;
const int CDOTAUserMsg_UnitEvent::kRemoveGestureFieldNumber;
const int CDOTAUserMsg_UnitEvent::kBloodImpactFieldNumber;
const int CDOTAUserMsg_UnitEvent::kFadeGestureFieldNumber;
const int CDOTAUserMsg_UnitEvent::kSpeechMatchOnClientFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_UnitEvent::CDOTAUserMsg_UnitEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_UnitEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_UnitEvent)
}
CDOTAUserMsg_UnitEvent::CDOTAUserMsg_UnitEvent(const CDOTAUserMsg_UnitEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_speech()) {
    speech_ = new ::CDOTAUserMsg_UnitEvent_Speech(*from.speech_);
  } else {
    speech_ = NULL;
  }
  if (from.has_speech_mute()) {
    speech_mute_ = new ::CDOTAUserMsg_UnitEvent_SpeechMute(*from.speech_mute_);
  } else {
    speech_mute_ = NULL;
  }
  if (from.has_add_gesture()) {
    add_gesture_ = new ::CDOTAUserMsg_UnitEvent_AddGesture(*from.add_gesture_);
  } else {
    add_gesture_ = NULL;
  }
  if (from.has_remove_gesture()) {
    remove_gesture_ = new ::CDOTAUserMsg_UnitEvent_RemoveGesture(*from.remove_gesture_);
  } else {
    remove_gesture_ = NULL;
  }
  if (from.has_blood_impact()) {
    blood_impact_ = new ::CDOTAUserMsg_UnitEvent_BloodImpact(*from.blood_impact_);
  } else {
    blood_impact_ = NULL;
  }
  if (from.has_fade_gesture()) {
    fade_gesture_ = new ::CDOTAUserMsg_UnitEvent_FadeGesture(*from.fade_gesture_);
  } else {
    fade_gesture_ = NULL;
  }
  if (from.has_speech_match_on_client()) {
    speech_match_on_client_ = new ::CDOTASpeechMatchOnClient(*from.speech_match_on_client_);
  } else {
    speech_match_on_client_ = NULL;
  }
  ::memcpy(&msg_type_, &from.msg_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&entity_index_) -
    reinterpret_cast<char*>(&msg_type_)) + sizeof(entity_index_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_UnitEvent)
}

void CDOTAUserMsg_UnitEvent::SharedCtor() {
  ::memset(&speech_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_index_) -
      reinterpret_cast<char*>(&speech_)) + sizeof(entity_index_));
}

CDOTAUserMsg_UnitEvent::~CDOTAUserMsg_UnitEvent() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_UnitEvent)
  SharedDtor();
}

void CDOTAUserMsg_UnitEvent::SharedDtor() {
  if (this != internal_default_instance()) delete speech_;
  if (this != internal_default_instance()) delete speech_mute_;
  if (this != internal_default_instance()) delete add_gesture_;
  if (this != internal_default_instance()) delete remove_gesture_;
  if (this != internal_default_instance()) delete blood_impact_;
  if (this != internal_default_instance()) delete fade_gesture_;
  if (this != internal_default_instance()) delete speech_match_on_client_;
}

void CDOTAUserMsg_UnitEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_UnitEvent::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_UnitEvent& CDOTAUserMsg_UnitEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_UnitEvent.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_UnitEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_UnitEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(speech_ != NULL);
      speech_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(speech_mute_ != NULL);
      speech_mute_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(add_gesture_ != NULL);
      add_gesture_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(remove_gesture_ != NULL);
      remove_gesture_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(blood_impact_ != NULL);
      blood_impact_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(fade_gesture_ != NULL);
      fade_gesture_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(speech_match_on_client_ != NULL);
      speech_match_on_client_->Clear();
    }
  }
  msg_type_ = 0;
  entity_index_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_UnitEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_UnitEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .EDotaEntityMessages msg_type = 1 [default = DOTA_UNIT_SPEECH];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::EDotaEntityMessages_IsValid(value)) {
            set_msg_type(static_cast< ::EDotaEntityMessages >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 entity_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_entity_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entity_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CDOTAUserMsg_UnitEvent.Speech speech = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_speech()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CDOTAUserMsg_UnitEvent.SpeechMute speech_mute = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_speech_mute()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CDOTAUserMsg_UnitEvent.AddGesture add_gesture = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_add_gesture()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CDOTAUserMsg_UnitEvent.RemoveGesture remove_gesture = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_remove_gesture()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CDOTAUserMsg_UnitEvent.BloodImpact blood_impact = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_blood_impact()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CDOTAUserMsg_UnitEvent.FadeGesture fade_gesture = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fade_gesture()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CDOTASpeechMatchOnClient speech_match_on_client = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_speech_match_on_client()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_UnitEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_UnitEvent)
  return false;
#undef DO_
}

void CDOTAUserMsg_UnitEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_UnitEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .EDotaEntityMessages msg_type = 1 [default = DOTA_UNIT_SPEECH];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msg_type(), output);
  }

  // required int32 entity_index = 2;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->entity_index(), output);
  }

  // optional .CDOTAUserMsg_UnitEvent.Speech speech = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_speech(), output);
  }

  // optional .CDOTAUserMsg_UnitEvent.SpeechMute speech_mute = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_speech_mute(), output);
  }

  // optional .CDOTAUserMsg_UnitEvent.AddGesture add_gesture = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_add_gesture(), output);
  }

  // optional .CDOTAUserMsg_UnitEvent.RemoveGesture remove_gesture = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_remove_gesture(), output);
  }

  // optional .CDOTAUserMsg_UnitEvent.BloodImpact blood_impact = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_blood_impact(), output);
  }

  // optional .CDOTAUserMsg_UnitEvent.FadeGesture fade_gesture = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_fade_gesture(), output);
  }

  // optional .CDOTASpeechMatchOnClient speech_match_on_client = 9;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_speech_match_on_client(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_UnitEvent)
}

::google::protobuf::uint8* CDOTAUserMsg_UnitEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_UnitEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .EDotaEntityMessages msg_type = 1 [default = DOTA_UNIT_SPEECH];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msg_type(), target);
  }

  // required int32 entity_index = 2;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->entity_index(), target);
  }

  // optional .CDOTAUserMsg_UnitEvent.Speech speech = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_speech(), deterministic, target);
  }

  // optional .CDOTAUserMsg_UnitEvent.SpeechMute speech_mute = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_speech_mute(), deterministic, target);
  }

  // optional .CDOTAUserMsg_UnitEvent.AddGesture add_gesture = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_add_gesture(), deterministic, target);
  }

  // optional .CDOTAUserMsg_UnitEvent.RemoveGesture remove_gesture = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_remove_gesture(), deterministic, target);
  }

  // optional .CDOTAUserMsg_UnitEvent.BloodImpact blood_impact = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_blood_impact(), deterministic, target);
  }

  // optional .CDOTAUserMsg_UnitEvent.FadeGesture fade_gesture = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_fade_gesture(), deterministic, target);
  }

  // optional .CDOTASpeechMatchOnClient speech_match_on_client = 9;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_speech_match_on_client(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_UnitEvent)
  return target;
}

size_t CDOTAUserMsg_UnitEvent::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CDOTAUserMsg_UnitEvent)
  size_t total_size = 0;

  if (has_msg_type()) {
    // required .EDotaEntityMessages msg_type = 1 [default = DOTA_UNIT_SPEECH];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msg_type());
  }

  if (has_entity_index()) {
    // required int32 entity_index = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->entity_index());
  }

  return total_size;
}
size_t CDOTAUserMsg_UnitEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_UnitEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000180) ^ 0x00000180) == 0) {  // All required fields are present.
    // required .EDotaEntityMessages msg_type = 1 [default = DOTA_UNIT_SPEECH];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msg_type());

    // required int32 entity_index = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->entity_index());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional .CDOTAUserMsg_UnitEvent.Speech speech = 3;
    if (has_speech()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *speech_);
    }

    // optional .CDOTAUserMsg_UnitEvent.SpeechMute speech_mute = 4;
    if (has_speech_mute()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *speech_mute_);
    }

    // optional .CDOTAUserMsg_UnitEvent.AddGesture add_gesture = 5;
    if (has_add_gesture()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *add_gesture_);
    }

    // optional .CDOTAUserMsg_UnitEvent.RemoveGesture remove_gesture = 6;
    if (has_remove_gesture()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *remove_gesture_);
    }

    // optional .CDOTAUserMsg_UnitEvent.BloodImpact blood_impact = 7;
    if (has_blood_impact()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *blood_impact_);
    }

    // optional .CDOTAUserMsg_UnitEvent.FadeGesture fade_gesture = 8;
    if (has_fade_gesture()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fade_gesture_);
    }

    // optional .CDOTASpeechMatchOnClient speech_match_on_client = 9;
    if (has_speech_match_on_client()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *speech_match_on_client_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_UnitEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_UnitEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_UnitEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_UnitEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_UnitEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_UnitEvent)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_UnitEvent::MergeFrom(const CDOTAUserMsg_UnitEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_UnitEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_speech()->::CDOTAUserMsg_UnitEvent_Speech::MergeFrom(from.speech());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_speech_mute()->::CDOTAUserMsg_UnitEvent_SpeechMute::MergeFrom(from.speech_mute());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_add_gesture()->::CDOTAUserMsg_UnitEvent_AddGesture::MergeFrom(from.add_gesture());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_remove_gesture()->::CDOTAUserMsg_UnitEvent_RemoveGesture::MergeFrom(from.remove_gesture());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_blood_impact()->::CDOTAUserMsg_UnitEvent_BloodImpact::MergeFrom(from.blood_impact());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_fade_gesture()->::CDOTAUserMsg_UnitEvent_FadeGesture::MergeFrom(from.fade_gesture());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_speech_match_on_client()->::CDOTASpeechMatchOnClient::MergeFrom(from.speech_match_on_client());
    }
    if (cached_has_bits & 0x00000080u) {
      msg_type_ = from.msg_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_entity_index(from.entity_index());
  }
}

void CDOTAUserMsg_UnitEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_UnitEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_UnitEvent::CopyFrom(const CDOTAUserMsg_UnitEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_UnitEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_UnitEvent::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000180) != 0x00000180) return false;
  if (has_speech_match_on_client()) {
    if (!this->speech_match_on_client_->IsInitialized()) return false;
  }
  return true;
}

void CDOTAUserMsg_UnitEvent::Swap(CDOTAUserMsg_UnitEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_UnitEvent::InternalSwap(CDOTAUserMsg_UnitEvent* other) {
  using std::swap;
  swap(speech_, other->speech_);
  swap(speech_mute_, other->speech_mute_);
  swap(add_gesture_, other->add_gesture_);
  swap(remove_gesture_, other->remove_gesture_);
  swap(blood_impact_, other->blood_impact_);
  swap(fade_gesture_, other->fade_gesture_);
  swap(speech_match_on_client_, other->speech_match_on_client_);
  swap(msg_type_, other->msg_type_);
  swap(entity_index_, other->entity_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_UnitEvent::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_ItemPurchased::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_ItemPurchased::kItemAbilityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_ItemPurchased::CDOTAUserMsg_ItemPurchased()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_ItemPurchased.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_ItemPurchased)
}
CDOTAUserMsg_ItemPurchased::CDOTAUserMsg_ItemPurchased(const CDOTAUserMsg_ItemPurchased& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  item_ability_id_ = from.item_ability_id_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_ItemPurchased)
}

void CDOTAUserMsg_ItemPurchased::SharedCtor() {
  item_ability_id_ = 0;
}

CDOTAUserMsg_ItemPurchased::~CDOTAUserMsg_ItemPurchased() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_ItemPurchased)
  SharedDtor();
}

void CDOTAUserMsg_ItemPurchased::SharedDtor() {
}

void CDOTAUserMsg_ItemPurchased::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_ItemPurchased::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_ItemPurchased& CDOTAUserMsg_ItemPurchased::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_ItemPurchased.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_ItemPurchased::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_ItemPurchased)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_ability_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_ItemPurchased::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_ItemPurchased)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_ability_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_item_ability_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_ability_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_ItemPurchased)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_ItemPurchased)
  return false;
#undef DO_
}

void CDOTAUserMsg_ItemPurchased::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_ItemPurchased)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 item_ability_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_ability_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_ItemPurchased)
}

::google::protobuf::uint8* CDOTAUserMsg_ItemPurchased::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_ItemPurchased)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 item_ability_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_ability_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_ItemPurchased)
  return target;
}

size_t CDOTAUserMsg_ItemPurchased::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_ItemPurchased)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 item_ability_id = 1;
  if (has_item_ability_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->item_ability_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_ItemPurchased::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_ItemPurchased)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_ItemPurchased* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_ItemPurchased>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_ItemPurchased)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_ItemPurchased)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_ItemPurchased::MergeFrom(const CDOTAUserMsg_ItemPurchased& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_ItemPurchased)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_item_ability_id()) {
    set_item_ability_id(from.item_ability_id());
  }
}

void CDOTAUserMsg_ItemPurchased::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_ItemPurchased)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_ItemPurchased::CopyFrom(const CDOTAUserMsg_ItemPurchased& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_ItemPurchased)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_ItemPurchased::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_ItemPurchased::Swap(CDOTAUserMsg_ItemPurchased* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_ItemPurchased::InternalSwap(CDOTAUserMsg_ItemPurchased* other) {
  using std::swap;
  swap(item_ability_id_, other->item_ability_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_ItemPurchased::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_ItemSold::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_ItemSold::kItemAbilityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_ItemSold::CDOTAUserMsg_ItemSold()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_ItemSold.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_ItemSold)
}
CDOTAUserMsg_ItemSold::CDOTAUserMsg_ItemSold(const CDOTAUserMsg_ItemSold& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  item_ability_id_ = from.item_ability_id_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_ItemSold)
}

void CDOTAUserMsg_ItemSold::SharedCtor() {
  item_ability_id_ = 0;
}

CDOTAUserMsg_ItemSold::~CDOTAUserMsg_ItemSold() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_ItemSold)
  SharedDtor();
}

void CDOTAUserMsg_ItemSold::SharedDtor() {
}

void CDOTAUserMsg_ItemSold::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_ItemSold::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_ItemSold& CDOTAUserMsg_ItemSold::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_ItemSold.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_ItemSold::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_ItemSold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_ability_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_ItemSold::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_ItemSold)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_ability_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_item_ability_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_ability_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_ItemSold)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_ItemSold)
  return false;
#undef DO_
}

void CDOTAUserMsg_ItemSold::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_ItemSold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 item_ability_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_ability_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_ItemSold)
}

::google::protobuf::uint8* CDOTAUserMsg_ItemSold::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_ItemSold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 item_ability_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_ability_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_ItemSold)
  return target;
}

size_t CDOTAUserMsg_ItemSold::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_ItemSold)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 item_ability_id = 1;
  if (has_item_ability_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->item_ability_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_ItemSold::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_ItemSold)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_ItemSold* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_ItemSold>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_ItemSold)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_ItemSold)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_ItemSold::MergeFrom(const CDOTAUserMsg_ItemSold& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_ItemSold)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_item_ability_id()) {
    set_item_ability_id(from.item_ability_id());
  }
}

void CDOTAUserMsg_ItemSold::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_ItemSold)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_ItemSold::CopyFrom(const CDOTAUserMsg_ItemSold& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_ItemSold)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_ItemSold::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_ItemSold::Swap(CDOTAUserMsg_ItemSold* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_ItemSold::InternalSwap(CDOTAUserMsg_ItemSold* other) {
  using std::swap;
  swap(item_ability_id_, other->item_ability_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_ItemSold::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_ItemFound::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_ItemFound::kPlayerFieldNumber;
const int CDOTAUserMsg_ItemFound::kQualityFieldNumber;
const int CDOTAUserMsg_ItemFound::kRarityFieldNumber;
const int CDOTAUserMsg_ItemFound::kMethodFieldNumber;
const int CDOTAUserMsg_ItemFound::kItemdefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_ItemFound::CDOTAUserMsg_ItemFound()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_ItemFound.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_ItemFound)
}
CDOTAUserMsg_ItemFound::CDOTAUserMsg_ItemFound(const CDOTAUserMsg_ItemFound& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_, &from.player_,
    static_cast<size_t>(reinterpret_cast<char*>(&itemdef_) -
    reinterpret_cast<char*>(&player_)) + sizeof(itemdef_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_ItemFound)
}

void CDOTAUserMsg_ItemFound::SharedCtor() {
  ::memset(&player_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&itemdef_) -
      reinterpret_cast<char*>(&player_)) + sizeof(itemdef_));
}

CDOTAUserMsg_ItemFound::~CDOTAUserMsg_ItemFound() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_ItemFound)
  SharedDtor();
}

void CDOTAUserMsg_ItemFound::SharedDtor() {
}

void CDOTAUserMsg_ItemFound::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_ItemFound::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_ItemFound& CDOTAUserMsg_ItemFound::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_ItemFound.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_ItemFound::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_ItemFound)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&player_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&itemdef_) -
        reinterpret_cast<char*>(&player_)) + sizeof(itemdef_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_ItemFound::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_ItemFound)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 player = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 quality = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_quality();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &quality_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 rarity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_rarity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rarity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 method = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_method();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &method_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 itemdef = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_itemdef();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemdef_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_ItemFound)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_ItemFound)
  return false;
#undef DO_
}

void CDOTAUserMsg_ItemFound::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_ItemFound)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 player = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->player(), output);
  }

  // optional int32 quality = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->quality(), output);
  }

  // optional int32 rarity = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->rarity(), output);
  }

  // optional int32 method = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->method(), output);
  }

  // optional int32 itemdef = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->itemdef(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_ItemFound)
}

::google::protobuf::uint8* CDOTAUserMsg_ItemFound::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_ItemFound)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 player = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->player(), target);
  }

  // optional int32 quality = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->quality(), target);
  }

  // optional int32 rarity = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->rarity(), target);
  }

  // optional int32 method = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->method(), target);
  }

  // optional int32 itemdef = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->itemdef(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_ItemFound)
  return target;
}

size_t CDOTAUserMsg_ItemFound::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_ItemFound)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 player = 1;
    if (has_player()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player());
    }

    // optional int32 quality = 2;
    if (has_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->quality());
    }

    // optional int32 rarity = 3;
    if (has_rarity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rarity());
    }

    // optional int32 method = 4;
    if (has_method()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->method());
    }

    // optional int32 itemdef = 5;
    if (has_itemdef()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemdef());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_ItemFound::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_ItemFound)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_ItemFound* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_ItemFound>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_ItemFound)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_ItemFound)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_ItemFound::MergeFrom(const CDOTAUserMsg_ItemFound& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_ItemFound)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      player_ = from.player_;
    }
    if (cached_has_bits & 0x00000002u) {
      quality_ = from.quality_;
    }
    if (cached_has_bits & 0x00000004u) {
      rarity_ = from.rarity_;
    }
    if (cached_has_bits & 0x00000008u) {
      method_ = from.method_;
    }
    if (cached_has_bits & 0x00000010u) {
      itemdef_ = from.itemdef_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_ItemFound::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_ItemFound)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_ItemFound::CopyFrom(const CDOTAUserMsg_ItemFound& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_ItemFound)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_ItemFound::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_ItemFound::Swap(CDOTAUserMsg_ItemFound* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_ItemFound::InternalSwap(CDOTAUserMsg_ItemFound* other) {
  using std::swap;
  swap(player_, other->player_);
  swap(quality_, other->quality_);
  swap(rarity_, other->rarity_);
  swap(method_, other->method_);
  swap(itemdef_, other->itemdef_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_ItemFound::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_OverheadEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_OverheadEvent::kMessageTypeFieldNumber;
const int CDOTAUserMsg_OverheadEvent::kValueFieldNumber;
const int CDOTAUserMsg_OverheadEvent::kTargetPlayerEntindexFieldNumber;
const int CDOTAUserMsg_OverheadEvent::kTargetEntindexFieldNumber;
const int CDOTAUserMsg_OverheadEvent::kSourcePlayerEntindexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_OverheadEvent::CDOTAUserMsg_OverheadEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_OverheadEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_OverheadEvent)
}
CDOTAUserMsg_OverheadEvent::CDOTAUserMsg_OverheadEvent(const CDOTAUserMsg_OverheadEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&message_type_, &from.message_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&source_player_entindex_) -
    reinterpret_cast<char*>(&message_type_)) + sizeof(source_player_entindex_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_OverheadEvent)
}

void CDOTAUserMsg_OverheadEvent::SharedCtor() {
  ::memset(&message_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&source_player_entindex_) -
      reinterpret_cast<char*>(&message_type_)) + sizeof(source_player_entindex_));
}

CDOTAUserMsg_OverheadEvent::~CDOTAUserMsg_OverheadEvent() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_OverheadEvent)
  SharedDtor();
}

void CDOTAUserMsg_OverheadEvent::SharedDtor() {
}

void CDOTAUserMsg_OverheadEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_OverheadEvent::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_OverheadEvent& CDOTAUserMsg_OverheadEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_OverheadEvent.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_OverheadEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_OverheadEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&message_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&source_player_entindex_) -
        reinterpret_cast<char*>(&message_type_)) + sizeof(source_player_entindex_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_OverheadEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_OverheadEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DOTA_OVERHEAD_ALERT message_type = 1 [default = OVERHEAD_ALERT_GOLD];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::DOTA_OVERHEAD_ALERT_IsValid(value)) {
            set_message_type(static_cast< ::DOTA_OVERHEAD_ALERT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 target_player_entindex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_target_player_entindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_player_entindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 target_entindex = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_target_entindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_entindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 source_player_entindex = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_source_player_entindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &source_player_entindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_OverheadEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_OverheadEvent)
  return false;
#undef DO_
}

void CDOTAUserMsg_OverheadEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_OverheadEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .DOTA_OVERHEAD_ALERT message_type = 1 [default = OVERHEAD_ALERT_GOLD];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->message_type(), output);
  }

  // optional int32 value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->value(), output);
  }

  // optional int32 target_player_entindex = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->target_player_entindex(), output);
  }

  // optional int32 target_entindex = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->target_entindex(), output);
  }

  // optional int32 source_player_entindex = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->source_player_entindex(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_OverheadEvent)
}

::google::protobuf::uint8* CDOTAUserMsg_OverheadEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_OverheadEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .DOTA_OVERHEAD_ALERT message_type = 1 [default = OVERHEAD_ALERT_GOLD];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->message_type(), target);
  }

  // optional int32 value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->value(), target);
  }

  // optional int32 target_player_entindex = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->target_player_entindex(), target);
  }

  // optional int32 target_entindex = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->target_entindex(), target);
  }

  // optional int32 source_player_entindex = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->source_player_entindex(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_OverheadEvent)
  return target;
}

size_t CDOTAUserMsg_OverheadEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_OverheadEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .DOTA_OVERHEAD_ALERT message_type = 1 [default = OVERHEAD_ALERT_GOLD];
  if (has_message_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->message_type());
  }
  if (_has_bits_[0 / 32] & 30u) {
    // optional int32 value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }

    // optional int32 target_player_entindex = 3;
    if (has_target_player_entindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_player_entindex());
    }

    // optional int32 target_entindex = 4;
    if (has_target_entindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_entindex());
    }

    // optional int32 source_player_entindex = 5;
    if (has_source_player_entindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->source_player_entindex());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_OverheadEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_OverheadEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_OverheadEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_OverheadEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_OverheadEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_OverheadEvent)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_OverheadEvent::MergeFrom(const CDOTAUserMsg_OverheadEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_OverheadEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      message_type_ = from.message_type_;
    }
    if (cached_has_bits & 0x00000002u) {
      value_ = from.value_;
    }
    if (cached_has_bits & 0x00000004u) {
      target_player_entindex_ = from.target_player_entindex_;
    }
    if (cached_has_bits & 0x00000008u) {
      target_entindex_ = from.target_entindex_;
    }
    if (cached_has_bits & 0x00000010u) {
      source_player_entindex_ = from.source_player_entindex_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_OverheadEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_OverheadEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_OverheadEvent::CopyFrom(const CDOTAUserMsg_OverheadEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_OverheadEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_OverheadEvent::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CDOTAUserMsg_OverheadEvent::Swap(CDOTAUserMsg_OverheadEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_OverheadEvent::InternalSwap(CDOTAUserMsg_OverheadEvent* other) {
  using std::swap;
  swap(message_type_, other->message_type_);
  swap(value_, other->value_);
  swap(target_player_entindex_, other->target_player_entindex_);
  swap(target_entindex_, other->target_entindex_);
  swap(source_player_entindex_, other->source_player_entindex_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_OverheadEvent::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_TutorialTipInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_TutorialTipInfo::kNameFieldNumber;
const int CDOTAUserMsg_TutorialTipInfo::kProgressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_TutorialTipInfo::CDOTAUserMsg_TutorialTipInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_TutorialTipInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_TutorialTipInfo)
}
CDOTAUserMsg_TutorialTipInfo::CDOTAUserMsg_TutorialTipInfo(const CDOTAUserMsg_TutorialTipInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  progress_ = from.progress_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_TutorialTipInfo)
}

void CDOTAUserMsg_TutorialTipInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  progress_ = 0;
}

CDOTAUserMsg_TutorialTipInfo::~CDOTAUserMsg_TutorialTipInfo() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_TutorialTipInfo)
  SharedDtor();
}

void CDOTAUserMsg_TutorialTipInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTAUserMsg_TutorialTipInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_TutorialTipInfo::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_TutorialTipInfo& CDOTAUserMsg_TutorialTipInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_TutorialTipInfo.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_TutorialTipInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_TutorialTipInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  progress_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_TutorialTipInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_TutorialTipInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_TutorialTipInfo.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 progress = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_progress();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_TutorialTipInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_TutorialTipInfo)
  return false;
#undef DO_
}

void CDOTAUserMsg_TutorialTipInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_TutorialTipInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_TutorialTipInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int32 progress = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->progress(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_TutorialTipInfo)
}

::google::protobuf::uint8* CDOTAUserMsg_TutorialTipInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_TutorialTipInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_TutorialTipInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional int32 progress = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->progress(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_TutorialTipInfo)
  return target;
}

size_t CDOTAUserMsg_TutorialTipInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_TutorialTipInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 progress = 2;
    if (has_progress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->progress());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_TutorialTipInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_TutorialTipInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_TutorialTipInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_TutorialTipInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_TutorialTipInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_TutorialTipInfo)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_TutorialTipInfo::MergeFrom(const CDOTAUserMsg_TutorialTipInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_TutorialTipInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      progress_ = from.progress_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_TutorialTipInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_TutorialTipInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_TutorialTipInfo::CopyFrom(const CDOTAUserMsg_TutorialTipInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_TutorialTipInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_TutorialTipInfo::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_TutorialTipInfo::Swap(CDOTAUserMsg_TutorialTipInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_TutorialTipInfo::InternalSwap(CDOTAUserMsg_TutorialTipInfo* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(progress_, other->progress_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_TutorialTipInfo::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_TutorialFinish::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_TutorialFinish::kHeadingFieldNumber;
const int CDOTAUserMsg_TutorialFinish::kEmblemFieldNumber;
const int CDOTAUserMsg_TutorialFinish::kBodyFieldNumber;
const int CDOTAUserMsg_TutorialFinish::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_TutorialFinish::CDOTAUserMsg_TutorialFinish()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_TutorialFinish.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_TutorialFinish)
}
CDOTAUserMsg_TutorialFinish::CDOTAUserMsg_TutorialFinish(const CDOTAUserMsg_TutorialFinish& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  heading_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_heading()) {
    heading_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.heading_);
  }
  emblem_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_emblem()) {
    emblem_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.emblem_);
  }
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_body()) {
    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_TutorialFinish)
}

void CDOTAUserMsg_TutorialFinish::SharedCtor() {
  heading_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emblem_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

CDOTAUserMsg_TutorialFinish::~CDOTAUserMsg_TutorialFinish() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_TutorialFinish)
  SharedDtor();
}

void CDOTAUserMsg_TutorialFinish::SharedDtor() {
  heading_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emblem_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTAUserMsg_TutorialFinish::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_TutorialFinish::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_TutorialFinish& CDOTAUserMsg_TutorialFinish::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_TutorialFinish.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_TutorialFinish::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_TutorialFinish)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      heading_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      emblem_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      body_.ClearNonDefaultToEmptyNoArena();
    }
  }
  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_TutorialFinish::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_TutorialFinish)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string heading = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_heading()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->heading().data(), static_cast<int>(this->heading().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_TutorialFinish.heading");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string emblem = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_emblem()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->emblem().data(), static_cast<int>(this->emblem().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_TutorialFinish.emblem");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string body = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_body()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->body().data(), static_cast<int>(this->body().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_TutorialFinish.body");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool success = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_TutorialFinish)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_TutorialFinish)
  return false;
#undef DO_
}

void CDOTAUserMsg_TutorialFinish::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_TutorialFinish)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string heading = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->heading().data(), static_cast<int>(this->heading().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_TutorialFinish.heading");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->heading(), output);
  }

  // optional string emblem = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emblem().data(), static_cast<int>(this->emblem().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_TutorialFinish.emblem");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->emblem(), output);
  }

  // optional string body = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->body().data(), static_cast<int>(this->body().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_TutorialFinish.body");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->body(), output);
  }

  // optional bool success = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->success(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_TutorialFinish)
}

::google::protobuf::uint8* CDOTAUserMsg_TutorialFinish::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_TutorialFinish)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string heading = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->heading().data(), static_cast<int>(this->heading().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_TutorialFinish.heading");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->heading(), target);
  }

  // optional string emblem = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emblem().data(), static_cast<int>(this->emblem().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_TutorialFinish.emblem");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->emblem(), target);
  }

  // optional string body = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->body().data(), static_cast<int>(this->body().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_TutorialFinish.body");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->body(), target);
  }

  // optional bool success = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->success(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_TutorialFinish)
  return target;
}

size_t CDOTAUserMsg_TutorialFinish::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_TutorialFinish)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string heading = 1;
    if (has_heading()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->heading());
    }

    // optional string emblem = 2;
    if (has_emblem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->emblem());
    }

    // optional string body = 3;
    if (has_body()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->body());
    }

    // optional bool success = 4;
    if (has_success()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_TutorialFinish::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_TutorialFinish)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_TutorialFinish* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_TutorialFinish>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_TutorialFinish)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_TutorialFinish)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_TutorialFinish::MergeFrom(const CDOTAUserMsg_TutorialFinish& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_TutorialFinish)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_heading();
      heading_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.heading_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_emblem();
      emblem_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.emblem_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_body();
      body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
    }
    if (cached_has_bits & 0x00000008u) {
      success_ = from.success_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_TutorialFinish::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_TutorialFinish)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_TutorialFinish::CopyFrom(const CDOTAUserMsg_TutorialFinish& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_TutorialFinish)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_TutorialFinish::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_TutorialFinish::Swap(CDOTAUserMsg_TutorialFinish* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_TutorialFinish::InternalSwap(CDOTAUserMsg_TutorialFinish* other) {
  using std::swap;
  heading_.Swap(&other->heading_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  emblem_.Swap(&other->emblem_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  body_.Swap(&other->body_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_TutorialFinish::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_TutorialMinimapPosition::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_TutorialMinimapPosition::CDOTAUserMsg_TutorialMinimapPosition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_TutorialMinimapPosition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_TutorialMinimapPosition)
}
CDOTAUserMsg_TutorialMinimapPosition::CDOTAUserMsg_TutorialMinimapPosition(const CDOTAUserMsg_TutorialMinimapPosition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_TutorialMinimapPosition)
}

void CDOTAUserMsg_TutorialMinimapPosition::SharedCtor() {
}

CDOTAUserMsg_TutorialMinimapPosition::~CDOTAUserMsg_TutorialMinimapPosition() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_TutorialMinimapPosition)
  SharedDtor();
}

void CDOTAUserMsg_TutorialMinimapPosition::SharedDtor() {
}

void CDOTAUserMsg_TutorialMinimapPosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_TutorialMinimapPosition::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_TutorialMinimapPosition& CDOTAUserMsg_TutorialMinimapPosition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_TutorialMinimapPosition.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_TutorialMinimapPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_TutorialMinimapPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_TutorialMinimapPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_TutorialMinimapPosition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_TutorialMinimapPosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_TutorialMinimapPosition)
  return false;
#undef DO_
}

void CDOTAUserMsg_TutorialMinimapPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_TutorialMinimapPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_TutorialMinimapPosition)
}

::google::protobuf::uint8* CDOTAUserMsg_TutorialMinimapPosition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_TutorialMinimapPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_TutorialMinimapPosition)
  return target;
}

size_t CDOTAUserMsg_TutorialMinimapPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_TutorialMinimapPosition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_TutorialMinimapPosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_TutorialMinimapPosition)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_TutorialMinimapPosition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_TutorialMinimapPosition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_TutorialMinimapPosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_TutorialMinimapPosition)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_TutorialMinimapPosition::MergeFrom(const CDOTAUserMsg_TutorialMinimapPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_TutorialMinimapPosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CDOTAUserMsg_TutorialMinimapPosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_TutorialMinimapPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_TutorialMinimapPosition::CopyFrom(const CDOTAUserMsg_TutorialMinimapPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_TutorialMinimapPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_TutorialMinimapPosition::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_TutorialMinimapPosition::Swap(CDOTAUserMsg_TutorialMinimapPosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_TutorialMinimapPosition::InternalSwap(CDOTAUserMsg_TutorialMinimapPosition* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_TutorialMinimapPosition::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_SendGenericToolTip::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_SendGenericToolTip::kTitleFieldNumber;
const int CDOTAUserMsg_SendGenericToolTip::kTextFieldNumber;
const int CDOTAUserMsg_SendGenericToolTip::kEntindexFieldNumber;
const int CDOTAUserMsg_SendGenericToolTip::kCloseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_SendGenericToolTip::CDOTAUserMsg_SendGenericToolTip()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_SendGenericToolTip.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_SendGenericToolTip)
}
CDOTAUserMsg_SendGenericToolTip::CDOTAUserMsg_SendGenericToolTip(const CDOTAUserMsg_SendGenericToolTip& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  ::memcpy(&entindex_, &from.entindex_,
    static_cast<size_t>(reinterpret_cast<char*>(&close_) -
    reinterpret_cast<char*>(&entindex_)) + sizeof(close_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_SendGenericToolTip)
}

void CDOTAUserMsg_SendGenericToolTip::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&entindex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&close_) -
      reinterpret_cast<char*>(&entindex_)) + sizeof(close_));
}

CDOTAUserMsg_SendGenericToolTip::~CDOTAUserMsg_SendGenericToolTip() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_SendGenericToolTip)
  SharedDtor();
}

void CDOTAUserMsg_SendGenericToolTip::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTAUserMsg_SendGenericToolTip::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_SendGenericToolTip::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_SendGenericToolTip& CDOTAUserMsg_SendGenericToolTip::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_SendGenericToolTip.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_SendGenericToolTip::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_SendGenericToolTip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      title_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      text_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&entindex_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&close_) -
        reinterpret_cast<char*>(&entindex_)) + sizeof(close_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_SendGenericToolTip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_SendGenericToolTip)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string title = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_SendGenericToolTip.title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_SendGenericToolTip.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 entindex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_entindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool close = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_close();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &close_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_SendGenericToolTip)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_SendGenericToolTip)
  return false;
#undef DO_
}

void CDOTAUserMsg_SendGenericToolTip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_SendGenericToolTip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string title = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_SendGenericToolTip.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->title(), output);
  }

  // optional string text = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_SendGenericToolTip.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  // optional int32 entindex = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->entindex(), output);
  }

  // optional bool close = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->close(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_SendGenericToolTip)
}

::google::protobuf::uint8* CDOTAUserMsg_SendGenericToolTip::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_SendGenericToolTip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string title = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_SendGenericToolTip.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->title(), target);
  }

  // optional string text = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_SendGenericToolTip.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  // optional int32 entindex = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->entindex(), target);
  }

  // optional bool close = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->close(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_SendGenericToolTip)
  return target;
}

size_t CDOTAUserMsg_SendGenericToolTip::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_SendGenericToolTip)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string title = 1;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string text = 2;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional int32 entindex = 3;
    if (has_entindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entindex());
    }

    // optional bool close = 4;
    if (has_close()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_SendGenericToolTip::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_SendGenericToolTip)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_SendGenericToolTip* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_SendGenericToolTip>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_SendGenericToolTip)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_SendGenericToolTip)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_SendGenericToolTip::MergeFrom(const CDOTAUserMsg_SendGenericToolTip& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_SendGenericToolTip)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000004u) {
      entindex_ = from.entindex_;
    }
    if (cached_has_bits & 0x00000008u) {
      close_ = from.close_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_SendGenericToolTip::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_SendGenericToolTip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_SendGenericToolTip::CopyFrom(const CDOTAUserMsg_SendGenericToolTip& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_SendGenericToolTip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_SendGenericToolTip::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_SendGenericToolTip::Swap(CDOTAUserMsg_SendGenericToolTip* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_SendGenericToolTip::InternalSwap(CDOTAUserMsg_SendGenericToolTip* other) {
  using std::swap;
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(entindex_, other->entindex_);
  swap(close_, other->close_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_SendGenericToolTip::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_WorldLine::InitAsDefaultInstance() {
  ::_CDOTAUserMsg_WorldLine_default_instance_._instance.get_mutable()->worldline_ = const_cast< ::CDOTAMsg_WorldLine*>(
      ::CDOTAMsg_WorldLine::internal_default_instance());
}
void CDOTAUserMsg_WorldLine::clear_worldline() {
  if (worldline_ != NULL) worldline_->Clear();
  clear_has_worldline();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_WorldLine::kPlayerIdFieldNumber;
const int CDOTAUserMsg_WorldLine::kWorldlineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_WorldLine::CDOTAUserMsg_WorldLine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_WorldLine.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_WorldLine)
}
CDOTAUserMsg_WorldLine::CDOTAUserMsg_WorldLine(const CDOTAUserMsg_WorldLine& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_worldline()) {
    worldline_ = new ::CDOTAMsg_WorldLine(*from.worldline_);
  } else {
    worldline_ = NULL;
  }
  player_id_ = from.player_id_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_WorldLine)
}

void CDOTAUserMsg_WorldLine::SharedCtor() {
  ::memset(&worldline_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_id_) -
      reinterpret_cast<char*>(&worldline_)) + sizeof(player_id_));
}

CDOTAUserMsg_WorldLine::~CDOTAUserMsg_WorldLine() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_WorldLine)
  SharedDtor();
}

void CDOTAUserMsg_WorldLine::SharedDtor() {
  if (this != internal_default_instance()) delete worldline_;
}

void CDOTAUserMsg_WorldLine::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_WorldLine::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_WorldLine& CDOTAUserMsg_WorldLine::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_WorldLine.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_WorldLine::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_WorldLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(worldline_ != NULL);
    worldline_->Clear();
  }
  player_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_WorldLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_WorldLine)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CDOTAMsg_WorldLine worldline = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_worldline()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_WorldLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_WorldLine)
  return false;
#undef DO_
}

void CDOTAUserMsg_WorldLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_WorldLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 player_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->player_id(), output);
  }

  // optional .CDOTAMsg_WorldLine worldline = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_worldline(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_WorldLine)
}

::google::protobuf::uint8* CDOTAUserMsg_WorldLine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_WorldLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 player_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->player_id(), target);
  }

  // optional .CDOTAMsg_WorldLine worldline = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_worldline(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_WorldLine)
  return target;
}

size_t CDOTAUserMsg_WorldLine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_WorldLine)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .CDOTAMsg_WorldLine worldline = 2;
    if (has_worldline()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *worldline_);
    }

    // optional int32 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_WorldLine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_WorldLine)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_WorldLine* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_WorldLine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_WorldLine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_WorldLine)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_WorldLine::MergeFrom(const CDOTAUserMsg_WorldLine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_WorldLine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_worldline()->::CDOTAMsg_WorldLine::MergeFrom(from.worldline());
    }
    if (cached_has_bits & 0x00000002u) {
      player_id_ = from.player_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_WorldLine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_WorldLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_WorldLine::CopyFrom(const CDOTAUserMsg_WorldLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_WorldLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_WorldLine::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_WorldLine::Swap(CDOTAUserMsg_WorldLine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_WorldLine::InternalSwap(CDOTAUserMsg_WorldLine* other) {
  using std::swap;
  swap(worldline_, other->worldline_);
  swap(player_id_, other->player_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_WorldLine::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_ChatWheel::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_ChatWheel::kChatMessageIdFieldNumber;
const int CDOTAUserMsg_ChatWheel::kPlayerIdFieldNumber;
const int CDOTAUserMsg_ChatWheel::kAccountIdFieldNumber;
const int CDOTAUserMsg_ChatWheel::kParamHeroIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_ChatWheel::CDOTAUserMsg_ChatWheel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_ChatWheel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_ChatWheel)
}
CDOTAUserMsg_ChatWheel::CDOTAUserMsg_ChatWheel(const CDOTAUserMsg_ChatWheel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&chat_message_id_, &from.chat_message_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&param_hero_id_) -
    reinterpret_cast<char*>(&chat_message_id_)) + sizeof(param_hero_id_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_ChatWheel)
}

void CDOTAUserMsg_ChatWheel::SharedCtor() {
  ::memset(&chat_message_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param_hero_id_) -
      reinterpret_cast<char*>(&chat_message_id_)) + sizeof(param_hero_id_));
}

CDOTAUserMsg_ChatWheel::~CDOTAUserMsg_ChatWheel() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_ChatWheel)
  SharedDtor();
}

void CDOTAUserMsg_ChatWheel::SharedDtor() {
}

void CDOTAUserMsg_ChatWheel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_ChatWheel::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_ChatWheel& CDOTAUserMsg_ChatWheel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_ChatWheel.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_ChatWheel::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_ChatWheel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&chat_message_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&param_hero_id_) -
        reinterpret_cast<char*>(&chat_message_id_)) + sizeof(param_hero_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_ChatWheel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_ChatWheel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 chat_message_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_chat_message_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chat_message_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 player_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 account_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 param_hero_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_param_hero_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param_hero_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_ChatWheel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_ChatWheel)
  return false;
#undef DO_
}

void CDOTAUserMsg_ChatWheel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_ChatWheel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 chat_message_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chat_message_id(), output);
  }

  // optional uint32 player_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->player_id(), output);
  }

  // optional uint32 account_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->account_id(), output);
  }

  // optional uint32 param_hero_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->param_hero_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_ChatWheel)
}

::google::protobuf::uint8* CDOTAUserMsg_ChatWheel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_ChatWheel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 chat_message_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chat_message_id(), target);
  }

  // optional uint32 player_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->player_id(), target);
  }

  // optional uint32 account_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->account_id(), target);
  }

  // optional uint32 param_hero_id = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->param_hero_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_ChatWheel)
  return target;
}

size_t CDOTAUserMsg_ChatWheel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_ChatWheel)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 chat_message_id = 1;
    if (has_chat_message_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chat_message_id());
    }

    // optional uint32 player_id = 2;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->player_id());
    }

    // optional uint32 account_id = 3;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 param_hero_id = 4;
    if (has_param_hero_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->param_hero_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_ChatWheel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_ChatWheel)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_ChatWheel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_ChatWheel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_ChatWheel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_ChatWheel)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_ChatWheel::MergeFrom(const CDOTAUserMsg_ChatWheel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_ChatWheel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      chat_message_id_ = from.chat_message_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      param_hero_id_ = from.param_hero_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_ChatWheel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_ChatWheel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_ChatWheel::CopyFrom(const CDOTAUserMsg_ChatWheel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_ChatWheel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_ChatWheel::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_ChatWheel::Swap(CDOTAUserMsg_ChatWheel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_ChatWheel::InternalSwap(CDOTAUserMsg_ChatWheel* other) {
  using std::swap;
  swap(chat_message_id_, other->chat_message_id_);
  swap(player_id_, other->player_id_);
  swap(account_id_, other->account_id_);
  swap(param_hero_id_, other->param_hero_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_ChatWheel::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_ReceivedXmasGift::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_ReceivedXmasGift::kPlayerIdFieldNumber;
const int CDOTAUserMsg_ReceivedXmasGift::kItemNameFieldNumber;
const int CDOTAUserMsg_ReceivedXmasGift::kInventorySlotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_ReceivedXmasGift::CDOTAUserMsg_ReceivedXmasGift()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_ReceivedXmasGift.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_ReceivedXmasGift)
}
CDOTAUserMsg_ReceivedXmasGift::CDOTAUserMsg_ReceivedXmasGift(const CDOTAUserMsg_ReceivedXmasGift& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  item_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_item_name()) {
    item_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_name_);
  }
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&inventory_slot_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(inventory_slot_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_ReceivedXmasGift)
}

void CDOTAUserMsg_ReceivedXmasGift::SharedCtor() {
  item_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&inventory_slot_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(inventory_slot_));
}

CDOTAUserMsg_ReceivedXmasGift::~CDOTAUserMsg_ReceivedXmasGift() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_ReceivedXmasGift)
  SharedDtor();
}

void CDOTAUserMsg_ReceivedXmasGift::SharedDtor() {
  item_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTAUserMsg_ReceivedXmasGift::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_ReceivedXmasGift::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_ReceivedXmasGift& CDOTAUserMsg_ReceivedXmasGift::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_ReceivedXmasGift.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_ReceivedXmasGift::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_ReceivedXmasGift)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    item_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&inventory_slot_) -
        reinterpret_cast<char*>(&player_id_)) + sizeof(inventory_slot_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_ReceivedXmasGift::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_ReceivedXmasGift)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string item_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_name().data(), static_cast<int>(this->item_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_ReceivedXmasGift.item_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 inventory_slot = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_inventory_slot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &inventory_slot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_ReceivedXmasGift)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_ReceivedXmasGift)
  return false;
#undef DO_
}

void CDOTAUserMsg_ReceivedXmasGift::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_ReceivedXmasGift)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 player_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->player_id(), output);
  }

  // optional string item_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_name().data(), static_cast<int>(this->item_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_ReceivedXmasGift.item_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_name(), output);
  }

  // optional int32 inventory_slot = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->inventory_slot(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_ReceivedXmasGift)
}

::google::protobuf::uint8* CDOTAUserMsg_ReceivedXmasGift::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_ReceivedXmasGift)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 player_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->player_id(), target);
  }

  // optional string item_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_name().data(), static_cast<int>(this->item_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_ReceivedXmasGift.item_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_name(), target);
  }

  // optional int32 inventory_slot = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->inventory_slot(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_ReceivedXmasGift)
  return target;
}

size_t CDOTAUserMsg_ReceivedXmasGift::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_ReceivedXmasGift)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string item_name = 2;
    if (has_item_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_name());
    }

    // optional int32 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player_id());
    }

    // optional int32 inventory_slot = 3;
    if (has_inventory_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->inventory_slot());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_ReceivedXmasGift::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_ReceivedXmasGift)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_ReceivedXmasGift* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_ReceivedXmasGift>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_ReceivedXmasGift)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_ReceivedXmasGift)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_ReceivedXmasGift::MergeFrom(const CDOTAUserMsg_ReceivedXmasGift& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_ReceivedXmasGift)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_item_name();
      item_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      inventory_slot_ = from.inventory_slot_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_ReceivedXmasGift::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_ReceivedXmasGift)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_ReceivedXmasGift::CopyFrom(const CDOTAUserMsg_ReceivedXmasGift& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_ReceivedXmasGift)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_ReceivedXmasGift::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_ReceivedXmasGift::Swap(CDOTAUserMsg_ReceivedXmasGift* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_ReceivedXmasGift::InternalSwap(CDOTAUserMsg_ReceivedXmasGift* other) {
  using std::swap;
  item_name_.Swap(&other->item_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(player_id_, other->player_id_);
  swap(inventory_slot_, other->inventory_slot_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_ReceivedXmasGift::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_ShowSurvey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_ShowSurvey::kSurveyIdFieldNumber;
const int CDOTAUserMsg_ShowSurvey::kMatchIdFieldNumber;
const int CDOTAUserMsg_ShowSurvey::kResponseStyleFieldNumber;
const int CDOTAUserMsg_ShowSurvey::kTeammateHeroIdFieldNumber;
const int CDOTAUserMsg_ShowSurvey::kTeammateNameFieldNumber;
const int CDOTAUserMsg_ShowSurvey::kTeammateAccountIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_ShowSurvey::CDOTAUserMsg_ShowSurvey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_ShowSurvey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_ShowSurvey)
}
CDOTAUserMsg_ShowSurvey::CDOTAUserMsg_ShowSurvey(const CDOTAUserMsg_ShowSurvey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  response_style_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_response_style()) {
    response_style_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_style_);
  }
  teammate_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_teammate_name()) {
    teammate_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.teammate_name_);
  }
  ::memcpy(&match_id_, &from.match_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&teammate_account_id_) -
    reinterpret_cast<char*>(&match_id_)) + sizeof(teammate_account_id_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_ShowSurvey)
}

void CDOTAUserMsg_ShowSurvey::SharedCtor() {
  response_style_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  teammate_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&match_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&teammate_account_id_) -
      reinterpret_cast<char*>(&match_id_)) + sizeof(teammate_account_id_));
}

CDOTAUserMsg_ShowSurvey::~CDOTAUserMsg_ShowSurvey() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_ShowSurvey)
  SharedDtor();
}

void CDOTAUserMsg_ShowSurvey::SharedDtor() {
  response_style_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  teammate_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTAUserMsg_ShowSurvey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_ShowSurvey::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_ShowSurvey& CDOTAUserMsg_ShowSurvey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_ShowSurvey.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_ShowSurvey::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_ShowSurvey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      response_style_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      teammate_name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 60u) {
    ::memset(&match_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&teammate_account_id_) -
        reinterpret_cast<char*>(&match_id_)) + sizeof(teammate_account_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_ShowSurvey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_ShowSurvey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 survey_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_survey_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &survey_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 match_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_match_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &match_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string response_style = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response_style()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->response_style().data(), static_cast<int>(this->response_style().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_ShowSurvey.response_style");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 teammate_hero_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_teammate_hero_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &teammate_hero_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string teammate_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_teammate_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->teammate_name().data(), static_cast<int>(this->teammate_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_ShowSurvey.teammate_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 teammate_account_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_teammate_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &teammate_account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_ShowSurvey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_ShowSurvey)
  return false;
#undef DO_
}

void CDOTAUserMsg_ShowSurvey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_ShowSurvey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 survey_id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->survey_id(), output);
  }

  // optional uint64 match_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->match_id(), output);
  }

  // optional string response_style = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->response_style().data(), static_cast<int>(this->response_style().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_ShowSurvey.response_style");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->response_style(), output);
  }

  // optional uint32 teammate_hero_id = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->teammate_hero_id(), output);
  }

  // optional string teammate_name = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->teammate_name().data(), static_cast<int>(this->teammate_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_ShowSurvey.teammate_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->teammate_name(), output);
  }

  // optional uint32 teammate_account_id = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->teammate_account_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_ShowSurvey)
}

::google::protobuf::uint8* CDOTAUserMsg_ShowSurvey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_ShowSurvey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 survey_id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->survey_id(), target);
  }

  // optional uint64 match_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->match_id(), target);
  }

  // optional string response_style = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->response_style().data(), static_cast<int>(this->response_style().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_ShowSurvey.response_style");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->response_style(), target);
  }

  // optional uint32 teammate_hero_id = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->teammate_hero_id(), target);
  }

  // optional string teammate_name = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->teammate_name().data(), static_cast<int>(this->teammate_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_ShowSurvey.teammate_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->teammate_name(), target);
  }

  // optional uint32 teammate_account_id = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->teammate_account_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_ShowSurvey)
  return target;
}

size_t CDOTAUserMsg_ShowSurvey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_ShowSurvey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string response_style = 3;
    if (has_response_style()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->response_style());
    }

    // optional string teammate_name = 5;
    if (has_teammate_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->teammate_name());
    }

    // optional uint64 match_id = 2;
    if (has_match_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->match_id());
    }

    // optional int32 survey_id = 1;
    if (has_survey_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->survey_id());
    }

    // optional uint32 teammate_hero_id = 4;
    if (has_teammate_hero_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->teammate_hero_id());
    }

    // optional uint32 teammate_account_id = 6;
    if (has_teammate_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->teammate_account_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_ShowSurvey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_ShowSurvey)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_ShowSurvey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_ShowSurvey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_ShowSurvey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_ShowSurvey)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_ShowSurvey::MergeFrom(const CDOTAUserMsg_ShowSurvey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_ShowSurvey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_response_style();
      response_style_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_style_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_teammate_name();
      teammate_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.teammate_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      match_id_ = from.match_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      survey_id_ = from.survey_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      teammate_hero_id_ = from.teammate_hero_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      teammate_account_id_ = from.teammate_account_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_ShowSurvey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_ShowSurvey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_ShowSurvey::CopyFrom(const CDOTAUserMsg_ShowSurvey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_ShowSurvey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_ShowSurvey::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_ShowSurvey::Swap(CDOTAUserMsg_ShowSurvey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_ShowSurvey::InternalSwap(CDOTAUserMsg_ShowSurvey* other) {
  using std::swap;
  response_style_.Swap(&other->response_style_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  teammate_name_.Swap(&other->teammate_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(match_id_, other->match_id_);
  swap(survey_id_, other->survey_id_);
  swap(teammate_hero_id_, other->teammate_hero_id_);
  swap(teammate_account_id_, other->teammate_account_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_ShowSurvey::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_UpdateSharedContent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_UpdateSharedContent::kSlotTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_UpdateSharedContent::CDOTAUserMsg_UpdateSharedContent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_UpdateSharedContent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_UpdateSharedContent)
}
CDOTAUserMsg_UpdateSharedContent::CDOTAUserMsg_UpdateSharedContent(const CDOTAUserMsg_UpdateSharedContent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  slot_type_ = from.slot_type_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_UpdateSharedContent)
}

void CDOTAUserMsg_UpdateSharedContent::SharedCtor() {
  slot_type_ = 0;
}

CDOTAUserMsg_UpdateSharedContent::~CDOTAUserMsg_UpdateSharedContent() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_UpdateSharedContent)
  SharedDtor();
}

void CDOTAUserMsg_UpdateSharedContent::SharedDtor() {
}

void CDOTAUserMsg_UpdateSharedContent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_UpdateSharedContent::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_UpdateSharedContent& CDOTAUserMsg_UpdateSharedContent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_UpdateSharedContent.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_UpdateSharedContent::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_UpdateSharedContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  slot_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_UpdateSharedContent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_UpdateSharedContent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 slot_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_slot_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_UpdateSharedContent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_UpdateSharedContent)
  return false;
#undef DO_
}

void CDOTAUserMsg_UpdateSharedContent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_UpdateSharedContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 slot_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->slot_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_UpdateSharedContent)
}

::google::protobuf::uint8* CDOTAUserMsg_UpdateSharedContent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_UpdateSharedContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 slot_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->slot_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_UpdateSharedContent)
  return target;
}

size_t CDOTAUserMsg_UpdateSharedContent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_UpdateSharedContent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 slot_type = 1;
  if (has_slot_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->slot_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_UpdateSharedContent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_UpdateSharedContent)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_UpdateSharedContent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_UpdateSharedContent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_UpdateSharedContent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_UpdateSharedContent)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_UpdateSharedContent::MergeFrom(const CDOTAUserMsg_UpdateSharedContent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_UpdateSharedContent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_slot_type()) {
    set_slot_type(from.slot_type());
  }
}

void CDOTAUserMsg_UpdateSharedContent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_UpdateSharedContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_UpdateSharedContent::CopyFrom(const CDOTAUserMsg_UpdateSharedContent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_UpdateSharedContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_UpdateSharedContent::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_UpdateSharedContent::Swap(CDOTAUserMsg_UpdateSharedContent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_UpdateSharedContent::InternalSwap(CDOTAUserMsg_UpdateSharedContent* other) {
  using std::swap;
  swap(slot_type_, other->slot_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_UpdateSharedContent::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_TutorialRequestExp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_TutorialRequestExp::CDOTAUserMsg_TutorialRequestExp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_TutorialRequestExp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_TutorialRequestExp)
}
CDOTAUserMsg_TutorialRequestExp::CDOTAUserMsg_TutorialRequestExp(const CDOTAUserMsg_TutorialRequestExp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_TutorialRequestExp)
}

void CDOTAUserMsg_TutorialRequestExp::SharedCtor() {
}

CDOTAUserMsg_TutorialRequestExp::~CDOTAUserMsg_TutorialRequestExp() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_TutorialRequestExp)
  SharedDtor();
}

void CDOTAUserMsg_TutorialRequestExp::SharedDtor() {
}

void CDOTAUserMsg_TutorialRequestExp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_TutorialRequestExp::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_TutorialRequestExp& CDOTAUserMsg_TutorialRequestExp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_TutorialRequestExp.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_TutorialRequestExp::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_TutorialRequestExp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_TutorialRequestExp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_TutorialRequestExp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_TutorialRequestExp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_TutorialRequestExp)
  return false;
#undef DO_
}

void CDOTAUserMsg_TutorialRequestExp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_TutorialRequestExp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_TutorialRequestExp)
}

::google::protobuf::uint8* CDOTAUserMsg_TutorialRequestExp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_TutorialRequestExp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_TutorialRequestExp)
  return target;
}

size_t CDOTAUserMsg_TutorialRequestExp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_TutorialRequestExp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_TutorialRequestExp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_TutorialRequestExp)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_TutorialRequestExp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_TutorialRequestExp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_TutorialRequestExp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_TutorialRequestExp)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_TutorialRequestExp::MergeFrom(const CDOTAUserMsg_TutorialRequestExp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_TutorialRequestExp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CDOTAUserMsg_TutorialRequestExp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_TutorialRequestExp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_TutorialRequestExp::CopyFrom(const CDOTAUserMsg_TutorialRequestExp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_TutorialRequestExp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_TutorialRequestExp::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_TutorialRequestExp::Swap(CDOTAUserMsg_TutorialRequestExp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_TutorialRequestExp::InternalSwap(CDOTAUserMsg_TutorialRequestExp* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_TutorialRequestExp::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_TutorialFade::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_TutorialFade::kTgtAlphaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_TutorialFade::CDOTAUserMsg_TutorialFade()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_TutorialFade.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_TutorialFade)
}
CDOTAUserMsg_TutorialFade::CDOTAUserMsg_TutorialFade(const CDOTAUserMsg_TutorialFade& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tgt_alpha_ = from.tgt_alpha_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_TutorialFade)
}

void CDOTAUserMsg_TutorialFade::SharedCtor() {
  tgt_alpha_ = 0;
}

CDOTAUserMsg_TutorialFade::~CDOTAUserMsg_TutorialFade() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_TutorialFade)
  SharedDtor();
}

void CDOTAUserMsg_TutorialFade::SharedDtor() {
}

void CDOTAUserMsg_TutorialFade::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_TutorialFade::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_TutorialFade& CDOTAUserMsg_TutorialFade::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_TutorialFade.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_TutorialFade::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_TutorialFade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tgt_alpha_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_TutorialFade::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_TutorialFade)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 tgt_alpha = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tgt_alpha();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tgt_alpha_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_TutorialFade)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_TutorialFade)
  return false;
#undef DO_
}

void CDOTAUserMsg_TutorialFade::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_TutorialFade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 tgt_alpha = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tgt_alpha(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_TutorialFade)
}

::google::protobuf::uint8* CDOTAUserMsg_TutorialFade::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_TutorialFade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 tgt_alpha = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->tgt_alpha(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_TutorialFade)
  return target;
}

size_t CDOTAUserMsg_TutorialFade::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_TutorialFade)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 tgt_alpha = 1;
  if (has_tgt_alpha()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tgt_alpha());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_TutorialFade::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_TutorialFade)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_TutorialFade* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_TutorialFade>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_TutorialFade)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_TutorialFade)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_TutorialFade::MergeFrom(const CDOTAUserMsg_TutorialFade& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_TutorialFade)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_tgt_alpha()) {
    set_tgt_alpha(from.tgt_alpha());
  }
}

void CDOTAUserMsg_TutorialFade::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_TutorialFade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_TutorialFade::CopyFrom(const CDOTAUserMsg_TutorialFade& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_TutorialFade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_TutorialFade::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_TutorialFade::Swap(CDOTAUserMsg_TutorialFade* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_TutorialFade::InternalSwap(CDOTAUserMsg_TutorialFade* other) {
  using std::swap;
  swap(tgt_alpha_, other->tgt_alpha_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_TutorialFade::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_TutorialPingMinimap::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_TutorialPingMinimap::kPlayerIdFieldNumber;
const int CDOTAUserMsg_TutorialPingMinimap::kPosXFieldNumber;
const int CDOTAUserMsg_TutorialPingMinimap::kPosYFieldNumber;
const int CDOTAUserMsg_TutorialPingMinimap::kPosZFieldNumber;
const int CDOTAUserMsg_TutorialPingMinimap::kEntityIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_TutorialPingMinimap::CDOTAUserMsg_TutorialPingMinimap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_TutorialPingMinimap.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_TutorialPingMinimap)
}
CDOTAUserMsg_TutorialPingMinimap::CDOTAUserMsg_TutorialPingMinimap(const CDOTAUserMsg_TutorialPingMinimap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&entity_index_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(entity_index_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_TutorialPingMinimap)
}

void CDOTAUserMsg_TutorialPingMinimap::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_index_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(entity_index_));
}

CDOTAUserMsg_TutorialPingMinimap::~CDOTAUserMsg_TutorialPingMinimap() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_TutorialPingMinimap)
  SharedDtor();
}

void CDOTAUserMsg_TutorialPingMinimap::SharedDtor() {
}

void CDOTAUserMsg_TutorialPingMinimap::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_TutorialPingMinimap::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_TutorialPingMinimap& CDOTAUserMsg_TutorialPingMinimap::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_TutorialPingMinimap.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_TutorialPingMinimap::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_TutorialPingMinimap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&entity_index_) -
        reinterpret_cast<char*>(&player_id_)) + sizeof(entity_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_TutorialPingMinimap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_TutorialPingMinimap)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float pos_x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_pos_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pos_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float pos_y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_pos_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pos_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float pos_z = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_pos_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pos_z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 entity_index = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_entity_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entity_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_TutorialPingMinimap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_TutorialPingMinimap)
  return false;
#undef DO_
}

void CDOTAUserMsg_TutorialPingMinimap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_TutorialPingMinimap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // optional float pos_x = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->pos_x(), output);
  }

  // optional float pos_y = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->pos_y(), output);
  }

  // optional float pos_z = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->pos_z(), output);
  }

  // optional int32 entity_index = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->entity_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_TutorialPingMinimap)
}

::google::protobuf::uint8* CDOTAUserMsg_TutorialPingMinimap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_TutorialPingMinimap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // optional float pos_x = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->pos_x(), target);
  }

  // optional float pos_y = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->pos_y(), target);
  }

  // optional float pos_z = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->pos_z(), target);
  }

  // optional int32 entity_index = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->entity_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_TutorialPingMinimap)
  return target;
}

size_t CDOTAUserMsg_TutorialPingMinimap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_TutorialPingMinimap)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional uint32 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->player_id());
    }

    // optional float pos_x = 2;
    if (has_pos_x()) {
      total_size += 1 + 4;
    }

    // optional float pos_y = 3;
    if (has_pos_y()) {
      total_size += 1 + 4;
    }

    // optional float pos_z = 4;
    if (has_pos_z()) {
      total_size += 1 + 4;
    }

    // optional int32 entity_index = 5;
    if (has_entity_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entity_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_TutorialPingMinimap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_TutorialPingMinimap)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_TutorialPingMinimap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_TutorialPingMinimap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_TutorialPingMinimap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_TutorialPingMinimap)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_TutorialPingMinimap::MergeFrom(const CDOTAUserMsg_TutorialPingMinimap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_TutorialPingMinimap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      pos_x_ = from.pos_x_;
    }
    if (cached_has_bits & 0x00000004u) {
      pos_y_ = from.pos_y_;
    }
    if (cached_has_bits & 0x00000008u) {
      pos_z_ = from.pos_z_;
    }
    if (cached_has_bits & 0x00000010u) {
      entity_index_ = from.entity_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_TutorialPingMinimap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_TutorialPingMinimap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_TutorialPingMinimap::CopyFrom(const CDOTAUserMsg_TutorialPingMinimap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_TutorialPingMinimap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_TutorialPingMinimap::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_TutorialPingMinimap::Swap(CDOTAUserMsg_TutorialPingMinimap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_TutorialPingMinimap::InternalSwap(CDOTAUserMsg_TutorialPingMinimap* other) {
  using std::swap;
  swap(player_id_, other->player_id_);
  swap(pos_x_, other->pos_x_);
  swap(pos_y_, other->pos_y_);
  swap(pos_z_, other->pos_z_);
  swap(entity_index_, other->entity_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_TutorialPingMinimap::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_GamerulesStateChanged::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_GamerulesStateChanged::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_GamerulesStateChanged::CDOTAUserMsg_GamerulesStateChanged()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_GamerulesStateChanged.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_GamerulesStateChanged)
}
CDOTAUserMsg_GamerulesStateChanged::CDOTAUserMsg_GamerulesStateChanged(const CDOTAUserMsg_GamerulesStateChanged& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_GamerulesStateChanged)
}

void CDOTAUserMsg_GamerulesStateChanged::SharedCtor() {
  state_ = 0u;
}

CDOTAUserMsg_GamerulesStateChanged::~CDOTAUserMsg_GamerulesStateChanged() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_GamerulesStateChanged)
  SharedDtor();
}

void CDOTAUserMsg_GamerulesStateChanged::SharedDtor() {
}

void CDOTAUserMsg_GamerulesStateChanged::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_GamerulesStateChanged::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_GamerulesStateChanged& CDOTAUserMsg_GamerulesStateChanged::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_GamerulesStateChanged.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_GamerulesStateChanged::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_GamerulesStateChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_GamerulesStateChanged::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_GamerulesStateChanged)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_GamerulesStateChanged)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_GamerulesStateChanged)
  return false;
#undef DO_
}

void CDOTAUserMsg_GamerulesStateChanged::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_GamerulesStateChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 state = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_GamerulesStateChanged)
}

::google::protobuf::uint8* CDOTAUserMsg_GamerulesStateChanged::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_GamerulesStateChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 state = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_GamerulesStateChanged)
  return target;
}

size_t CDOTAUserMsg_GamerulesStateChanged::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_GamerulesStateChanged)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 state = 1;
  if (has_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_GamerulesStateChanged::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_GamerulesStateChanged)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_GamerulesStateChanged* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_GamerulesStateChanged>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_GamerulesStateChanged)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_GamerulesStateChanged)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_GamerulesStateChanged::MergeFrom(const CDOTAUserMsg_GamerulesStateChanged& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_GamerulesStateChanged)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    set_state(from.state());
  }
}

void CDOTAUserMsg_GamerulesStateChanged::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_GamerulesStateChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_GamerulesStateChanged::CopyFrom(const CDOTAUserMsg_GamerulesStateChanged& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_GamerulesStateChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_GamerulesStateChanged::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_GamerulesStateChanged::Swap(CDOTAUserMsg_GamerulesStateChanged* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_GamerulesStateChanged::InternalSwap(CDOTAUserMsg_GamerulesStateChanged* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_GamerulesStateChanged::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_AddQuestLogEntry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_AddQuestLogEntry::kNpcNameFieldNumber;
const int CDOTAUserMsg_AddQuestLogEntry::kNpcDialogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_AddQuestLogEntry::CDOTAUserMsg_AddQuestLogEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_AddQuestLogEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_AddQuestLogEntry)
}
CDOTAUserMsg_AddQuestLogEntry::CDOTAUserMsg_AddQuestLogEntry(const CDOTAUserMsg_AddQuestLogEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  npc_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_npc_name()) {
    npc_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.npc_name_);
  }
  npc_dialog_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_npc_dialog()) {
    npc_dialog_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.npc_dialog_);
  }
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_AddQuestLogEntry)
}

void CDOTAUserMsg_AddQuestLogEntry::SharedCtor() {
  npc_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  npc_dialog_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CDOTAUserMsg_AddQuestLogEntry::~CDOTAUserMsg_AddQuestLogEntry() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_AddQuestLogEntry)
  SharedDtor();
}

void CDOTAUserMsg_AddQuestLogEntry::SharedDtor() {
  npc_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  npc_dialog_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTAUserMsg_AddQuestLogEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_AddQuestLogEntry::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_AddQuestLogEntry& CDOTAUserMsg_AddQuestLogEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_AddQuestLogEntry.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_AddQuestLogEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_AddQuestLogEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      npc_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      npc_dialog_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_AddQuestLogEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_AddQuestLogEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string npc_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_npc_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->npc_name().data(), static_cast<int>(this->npc_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_AddQuestLogEntry.npc_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string npc_dialog = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_npc_dialog()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->npc_dialog().data(), static_cast<int>(this->npc_dialog().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_AddQuestLogEntry.npc_dialog");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_AddQuestLogEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_AddQuestLogEntry)
  return false;
#undef DO_
}

void CDOTAUserMsg_AddQuestLogEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_AddQuestLogEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string npc_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->npc_name().data(), static_cast<int>(this->npc_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_AddQuestLogEntry.npc_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->npc_name(), output);
  }

  // optional string npc_dialog = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->npc_dialog().data(), static_cast<int>(this->npc_dialog().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_AddQuestLogEntry.npc_dialog");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->npc_dialog(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_AddQuestLogEntry)
}

::google::protobuf::uint8* CDOTAUserMsg_AddQuestLogEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_AddQuestLogEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string npc_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->npc_name().data(), static_cast<int>(this->npc_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_AddQuestLogEntry.npc_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->npc_name(), target);
  }

  // optional string npc_dialog = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->npc_dialog().data(), static_cast<int>(this->npc_dialog().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_AddQuestLogEntry.npc_dialog");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->npc_dialog(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_AddQuestLogEntry)
  return target;
}

size_t CDOTAUserMsg_AddQuestLogEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_AddQuestLogEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string npc_name = 1;
    if (has_npc_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->npc_name());
    }

    // optional string npc_dialog = 2;
    if (has_npc_dialog()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->npc_dialog());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_AddQuestLogEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_AddQuestLogEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_AddQuestLogEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_AddQuestLogEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_AddQuestLogEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_AddQuestLogEntry)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_AddQuestLogEntry::MergeFrom(const CDOTAUserMsg_AddQuestLogEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_AddQuestLogEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_npc_name();
      npc_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.npc_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_npc_dialog();
      npc_dialog_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.npc_dialog_);
    }
  }
}

void CDOTAUserMsg_AddQuestLogEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_AddQuestLogEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_AddQuestLogEntry::CopyFrom(const CDOTAUserMsg_AddQuestLogEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_AddQuestLogEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_AddQuestLogEntry::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_AddQuestLogEntry::Swap(CDOTAUserMsg_AddQuestLogEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_AddQuestLogEntry::InternalSwap(CDOTAUserMsg_AddQuestLogEntry* other) {
  using std::swap;
  npc_name_.Swap(&other->npc_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  npc_dialog_.Swap(&other->npc_dialog_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_AddQuestLogEntry::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_SendStatPopup::InitAsDefaultInstance() {
  ::_CDOTAUserMsg_SendStatPopup_default_instance_._instance.get_mutable()->statpopup_ = const_cast< ::CDOTAMsg_SendStatPopup*>(
      ::CDOTAMsg_SendStatPopup::internal_default_instance());
}
void CDOTAUserMsg_SendStatPopup::clear_statpopup() {
  if (statpopup_ != NULL) statpopup_->Clear();
  clear_has_statpopup();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_SendStatPopup::kPlayerIdFieldNumber;
const int CDOTAUserMsg_SendStatPopup::kStatpopupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_SendStatPopup::CDOTAUserMsg_SendStatPopup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_SendStatPopup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_SendStatPopup)
}
CDOTAUserMsg_SendStatPopup::CDOTAUserMsg_SendStatPopup(const CDOTAUserMsg_SendStatPopup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_statpopup()) {
    statpopup_ = new ::CDOTAMsg_SendStatPopup(*from.statpopup_);
  } else {
    statpopup_ = NULL;
  }
  player_id_ = from.player_id_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_SendStatPopup)
}

void CDOTAUserMsg_SendStatPopup::SharedCtor() {
  ::memset(&statpopup_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_id_) -
      reinterpret_cast<char*>(&statpopup_)) + sizeof(player_id_));
}

CDOTAUserMsg_SendStatPopup::~CDOTAUserMsg_SendStatPopup() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_SendStatPopup)
  SharedDtor();
}

void CDOTAUserMsg_SendStatPopup::SharedDtor() {
  if (this != internal_default_instance()) delete statpopup_;
}

void CDOTAUserMsg_SendStatPopup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_SendStatPopup::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_SendStatPopup& CDOTAUserMsg_SendStatPopup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_SendStatPopup.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_SendStatPopup::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_SendStatPopup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(statpopup_ != NULL);
    statpopup_->Clear();
  }
  player_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_SendStatPopup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_SendStatPopup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CDOTAMsg_SendStatPopup statpopup = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_statpopup()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_SendStatPopup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_SendStatPopup)
  return false;
#undef DO_
}

void CDOTAUserMsg_SendStatPopup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_SendStatPopup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 player_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->player_id(), output);
  }

  // optional .CDOTAMsg_SendStatPopup statpopup = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_statpopup(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_SendStatPopup)
}

::google::protobuf::uint8* CDOTAUserMsg_SendStatPopup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_SendStatPopup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 player_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->player_id(), target);
  }

  // optional .CDOTAMsg_SendStatPopup statpopup = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_statpopup(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_SendStatPopup)
  return target;
}

size_t CDOTAUserMsg_SendStatPopup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_SendStatPopup)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .CDOTAMsg_SendStatPopup statpopup = 2;
    if (has_statpopup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *statpopup_);
    }

    // optional int32 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_SendStatPopup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_SendStatPopup)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_SendStatPopup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_SendStatPopup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_SendStatPopup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_SendStatPopup)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_SendStatPopup::MergeFrom(const CDOTAUserMsg_SendStatPopup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_SendStatPopup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_statpopup()->::CDOTAMsg_SendStatPopup::MergeFrom(from.statpopup());
    }
    if (cached_has_bits & 0x00000002u) {
      player_id_ = from.player_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_SendStatPopup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_SendStatPopup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_SendStatPopup::CopyFrom(const CDOTAUserMsg_SendStatPopup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_SendStatPopup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_SendStatPopup::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_SendStatPopup::Swap(CDOTAUserMsg_SendStatPopup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_SendStatPopup::InternalSwap(CDOTAUserMsg_SendStatPopup* other) {
  using std::swap;
  swap(statpopup_, other->statpopup_);
  swap(player_id_, other->player_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_SendStatPopup::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_DismissAllStatPopups::InitAsDefaultInstance() {
  ::_CDOTAUserMsg_DismissAllStatPopups_default_instance_._instance.get_mutable()->dismissallmsg_ = const_cast< ::CDOTAMsg_DismissAllStatPopups*>(
      ::CDOTAMsg_DismissAllStatPopups::internal_default_instance());
}
void CDOTAUserMsg_DismissAllStatPopups::clear_dismissallmsg() {
  if (dismissallmsg_ != NULL) dismissallmsg_->Clear();
  clear_has_dismissallmsg();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_DismissAllStatPopups::kDismissallmsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_DismissAllStatPopups::CDOTAUserMsg_DismissAllStatPopups()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_DismissAllStatPopups.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_DismissAllStatPopups)
}
CDOTAUserMsg_DismissAllStatPopups::CDOTAUserMsg_DismissAllStatPopups(const CDOTAUserMsg_DismissAllStatPopups& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_dismissallmsg()) {
    dismissallmsg_ = new ::CDOTAMsg_DismissAllStatPopups(*from.dismissallmsg_);
  } else {
    dismissallmsg_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_DismissAllStatPopups)
}

void CDOTAUserMsg_DismissAllStatPopups::SharedCtor() {
  dismissallmsg_ = NULL;
}

CDOTAUserMsg_DismissAllStatPopups::~CDOTAUserMsg_DismissAllStatPopups() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_DismissAllStatPopups)
  SharedDtor();
}

void CDOTAUserMsg_DismissAllStatPopups::SharedDtor() {
  if (this != internal_default_instance()) delete dismissallmsg_;
}

void CDOTAUserMsg_DismissAllStatPopups::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_DismissAllStatPopups::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_DismissAllStatPopups& CDOTAUserMsg_DismissAllStatPopups::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_DismissAllStatPopups.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_DismissAllStatPopups::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_DismissAllStatPopups)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(dismissallmsg_ != NULL);
    dismissallmsg_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_DismissAllStatPopups::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_DismissAllStatPopups)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CDOTAMsg_DismissAllStatPopups dismissallmsg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dismissallmsg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_DismissAllStatPopups)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_DismissAllStatPopups)
  return false;
#undef DO_
}

void CDOTAUserMsg_DismissAllStatPopups::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_DismissAllStatPopups)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CDOTAMsg_DismissAllStatPopups dismissallmsg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_dismissallmsg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_DismissAllStatPopups)
}

::google::protobuf::uint8* CDOTAUserMsg_DismissAllStatPopups::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_DismissAllStatPopups)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CDOTAMsg_DismissAllStatPopups dismissallmsg = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_dismissallmsg(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_DismissAllStatPopups)
  return target;
}

size_t CDOTAUserMsg_DismissAllStatPopups::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_DismissAllStatPopups)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .CDOTAMsg_DismissAllStatPopups dismissallmsg = 1;
  if (has_dismissallmsg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dismissallmsg_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_DismissAllStatPopups::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_DismissAllStatPopups)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_DismissAllStatPopups* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_DismissAllStatPopups>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_DismissAllStatPopups)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_DismissAllStatPopups)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_DismissAllStatPopups::MergeFrom(const CDOTAUserMsg_DismissAllStatPopups& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_DismissAllStatPopups)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dismissallmsg()) {
    mutable_dismissallmsg()->::CDOTAMsg_DismissAllStatPopups::MergeFrom(from.dismissallmsg());
  }
}

void CDOTAUserMsg_DismissAllStatPopups::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_DismissAllStatPopups)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_DismissAllStatPopups::CopyFrom(const CDOTAUserMsg_DismissAllStatPopups& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_DismissAllStatPopups)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_DismissAllStatPopups::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_DismissAllStatPopups::Swap(CDOTAUserMsg_DismissAllStatPopups* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_DismissAllStatPopups::InternalSwap(CDOTAUserMsg_DismissAllStatPopups* other) {
  using std::swap;
  swap(dismissallmsg_, other->dismissallmsg_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_DismissAllStatPopups::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_SendRoshanSpectatorPhase::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_SendRoshanSpectatorPhase::kPhaseFieldNumber;
const int CDOTAUserMsg_SendRoshanSpectatorPhase::kPhaseStartTimeFieldNumber;
const int CDOTAUserMsg_SendRoshanSpectatorPhase::kPhaseLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_SendRoshanSpectatorPhase::CDOTAUserMsg_SendRoshanSpectatorPhase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_SendRoshanSpectatorPhase.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_SendRoshanSpectatorPhase)
}
CDOTAUserMsg_SendRoshanSpectatorPhase::CDOTAUserMsg_SendRoshanSpectatorPhase(const CDOTAUserMsg_SendRoshanSpectatorPhase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&phase_, &from.phase_,
    static_cast<size_t>(reinterpret_cast<char*>(&phase_length_) -
    reinterpret_cast<char*>(&phase_)) + sizeof(phase_length_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_SendRoshanSpectatorPhase)
}

void CDOTAUserMsg_SendRoshanSpectatorPhase::SharedCtor() {
  ::memset(&phase_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&phase_length_) -
      reinterpret_cast<char*>(&phase_)) + sizeof(phase_length_));
}

CDOTAUserMsg_SendRoshanSpectatorPhase::~CDOTAUserMsg_SendRoshanSpectatorPhase() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_SendRoshanSpectatorPhase)
  SharedDtor();
}

void CDOTAUserMsg_SendRoshanSpectatorPhase::SharedDtor() {
}

void CDOTAUserMsg_SendRoshanSpectatorPhase::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_SendRoshanSpectatorPhase::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_SendRoshanSpectatorPhase& CDOTAUserMsg_SendRoshanSpectatorPhase::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_SendRoshanSpectatorPhase.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_SendRoshanSpectatorPhase::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_SendRoshanSpectatorPhase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&phase_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&phase_length_) -
        reinterpret_cast<char*>(&phase_)) + sizeof(phase_length_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_SendRoshanSpectatorPhase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_SendRoshanSpectatorPhase)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .DOTA_ROSHAN_PHASE phase = 1 [default = k_SRSP_ROSHAN_ALIVE];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::DOTA_ROSHAN_PHASE_IsValid(value)) {
            set_phase(static_cast< ::DOTA_ROSHAN_PHASE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 phase_start_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_phase_start_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &phase_start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 phase_length = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_phase_length();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &phase_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_SendRoshanSpectatorPhase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_SendRoshanSpectatorPhase)
  return false;
#undef DO_
}

void CDOTAUserMsg_SendRoshanSpectatorPhase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_SendRoshanSpectatorPhase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .DOTA_ROSHAN_PHASE phase = 1 [default = k_SRSP_ROSHAN_ALIVE];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->phase(), output);
  }

  // optional int32 phase_start_time = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->phase_start_time(), output);
  }

  // optional int32 phase_length = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->phase_length(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_SendRoshanSpectatorPhase)
}

::google::protobuf::uint8* CDOTAUserMsg_SendRoshanSpectatorPhase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_SendRoshanSpectatorPhase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .DOTA_ROSHAN_PHASE phase = 1 [default = k_SRSP_ROSHAN_ALIVE];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->phase(), target);
  }

  // optional int32 phase_start_time = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->phase_start_time(), target);
  }

  // optional int32 phase_length = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->phase_length(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_SendRoshanSpectatorPhase)
  return target;
}

size_t CDOTAUserMsg_SendRoshanSpectatorPhase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_SendRoshanSpectatorPhase)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .DOTA_ROSHAN_PHASE phase = 1 [default = k_SRSP_ROSHAN_ALIVE];
    if (has_phase()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->phase());
    }

    // optional int32 phase_start_time = 2;
    if (has_phase_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->phase_start_time());
    }

    // optional int32 phase_length = 3;
    if (has_phase_length()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->phase_length());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_SendRoshanSpectatorPhase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_SendRoshanSpectatorPhase)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_SendRoshanSpectatorPhase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_SendRoshanSpectatorPhase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_SendRoshanSpectatorPhase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_SendRoshanSpectatorPhase)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_SendRoshanSpectatorPhase::MergeFrom(const CDOTAUserMsg_SendRoshanSpectatorPhase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_SendRoshanSpectatorPhase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      phase_ = from.phase_;
    }
    if (cached_has_bits & 0x00000002u) {
      phase_start_time_ = from.phase_start_time_;
    }
    if (cached_has_bits & 0x00000004u) {
      phase_length_ = from.phase_length_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_SendRoshanSpectatorPhase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_SendRoshanSpectatorPhase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_SendRoshanSpectatorPhase::CopyFrom(const CDOTAUserMsg_SendRoshanSpectatorPhase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_SendRoshanSpectatorPhase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_SendRoshanSpectatorPhase::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_SendRoshanSpectatorPhase::Swap(CDOTAUserMsg_SendRoshanSpectatorPhase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_SendRoshanSpectatorPhase::InternalSwap(CDOTAUserMsg_SendRoshanSpectatorPhase* other) {
  using std::swap;
  swap(phase_, other->phase_);
  swap(phase_start_time_, other->phase_start_time_);
  swap(phase_length_, other->phase_length_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_SendRoshanSpectatorPhase::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_SendRoshanPopup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_SendRoshanPopup::kReclaimedFieldNumber;
const int CDOTAUserMsg_SendRoshanPopup::kGametimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_SendRoshanPopup::CDOTAUserMsg_SendRoshanPopup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_SendRoshanPopup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_SendRoshanPopup)
}
CDOTAUserMsg_SendRoshanPopup::CDOTAUserMsg_SendRoshanPopup(const CDOTAUserMsg_SendRoshanPopup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&reclaimed_, &from.reclaimed_,
    static_cast<size_t>(reinterpret_cast<char*>(&gametime_) -
    reinterpret_cast<char*>(&reclaimed_)) + sizeof(gametime_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_SendRoshanPopup)
}

void CDOTAUserMsg_SendRoshanPopup::SharedCtor() {
  ::memset(&reclaimed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gametime_) -
      reinterpret_cast<char*>(&reclaimed_)) + sizeof(gametime_));
}

CDOTAUserMsg_SendRoshanPopup::~CDOTAUserMsg_SendRoshanPopup() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_SendRoshanPopup)
  SharedDtor();
}

void CDOTAUserMsg_SendRoshanPopup::SharedDtor() {
}

void CDOTAUserMsg_SendRoshanPopup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_SendRoshanPopup::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_SendRoshanPopup& CDOTAUserMsg_SendRoshanPopup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_SendRoshanPopup.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_SendRoshanPopup::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_SendRoshanPopup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&reclaimed_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&gametime_) -
        reinterpret_cast<char*>(&reclaimed_)) + sizeof(gametime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_SendRoshanPopup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_SendRoshanPopup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool reclaimed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_reclaimed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reclaimed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 gametime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_gametime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gametime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_SendRoshanPopup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_SendRoshanPopup)
  return false;
#undef DO_
}

void CDOTAUserMsg_SendRoshanPopup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_SendRoshanPopup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool reclaimed = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->reclaimed(), output);
  }

  // optional int32 gametime = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->gametime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_SendRoshanPopup)
}

::google::protobuf::uint8* CDOTAUserMsg_SendRoshanPopup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_SendRoshanPopup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool reclaimed = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->reclaimed(), target);
  }

  // optional int32 gametime = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->gametime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_SendRoshanPopup)
  return target;
}

size_t CDOTAUserMsg_SendRoshanPopup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_SendRoshanPopup)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bool reclaimed = 1;
    if (has_reclaimed()) {
      total_size += 1 + 1;
    }

    // optional int32 gametime = 2;
    if (has_gametime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gametime());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_SendRoshanPopup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_SendRoshanPopup)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_SendRoshanPopup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_SendRoshanPopup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_SendRoshanPopup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_SendRoshanPopup)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_SendRoshanPopup::MergeFrom(const CDOTAUserMsg_SendRoshanPopup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_SendRoshanPopup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      reclaimed_ = from.reclaimed_;
    }
    if (cached_has_bits & 0x00000002u) {
      gametime_ = from.gametime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_SendRoshanPopup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_SendRoshanPopup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_SendRoshanPopup::CopyFrom(const CDOTAUserMsg_SendRoshanPopup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_SendRoshanPopup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_SendRoshanPopup::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_SendRoshanPopup::Swap(CDOTAUserMsg_SendRoshanPopup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_SendRoshanPopup::InternalSwap(CDOTAUserMsg_SendRoshanPopup* other) {
  using std::swap;
  swap(reclaimed_, other->reclaimed_);
  swap(gametime_, other->gametime_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_SendRoshanPopup::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_SendFinalGold::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_SendFinalGold::kReliableGoldFieldNumber;
const int CDOTAUserMsg_SendFinalGold::kUnreliableGoldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_SendFinalGold::CDOTAUserMsg_SendFinalGold()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_SendFinalGold.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_SendFinalGold)
}
CDOTAUserMsg_SendFinalGold::CDOTAUserMsg_SendFinalGold(const CDOTAUserMsg_SendFinalGold& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      reliable_gold_(from.reliable_gold_),
      unreliable_gold_(from.unreliable_gold_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_SendFinalGold)
}

void CDOTAUserMsg_SendFinalGold::SharedCtor() {
}

CDOTAUserMsg_SendFinalGold::~CDOTAUserMsg_SendFinalGold() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_SendFinalGold)
  SharedDtor();
}

void CDOTAUserMsg_SendFinalGold::SharedDtor() {
}

void CDOTAUserMsg_SendFinalGold::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_SendFinalGold::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_SendFinalGold& CDOTAUserMsg_SendFinalGold::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_SendFinalGold.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_SendFinalGold::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_SendFinalGold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reliable_gold_.Clear();
  unreliable_gold_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_SendFinalGold::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_SendFinalGold)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 reliable_gold = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_reliable_gold())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_reliable_gold())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 unreliable_gold = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_unreliable_gold())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_unreliable_gold())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_SendFinalGold)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_SendFinalGold)
  return false;
#undef DO_
}

void CDOTAUserMsg_SendFinalGold::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_SendFinalGold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 reliable_gold = 1;
  for (int i = 0, n = this->reliable_gold_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->reliable_gold(i), output);
  }

  // repeated uint32 unreliable_gold = 2;
  for (int i = 0, n = this->unreliable_gold_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->unreliable_gold(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_SendFinalGold)
}

::google::protobuf::uint8* CDOTAUserMsg_SendFinalGold::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_SendFinalGold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 reliable_gold = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->reliable_gold_, target);

  // repeated uint32 unreliable_gold = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->unreliable_gold_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_SendFinalGold)
  return target;
}

size_t CDOTAUserMsg_SendFinalGold::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_SendFinalGold)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 reliable_gold = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->reliable_gold_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->reliable_gold_size());
    total_size += data_size;
  }

  // repeated uint32 unreliable_gold = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->unreliable_gold_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->unreliable_gold_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_SendFinalGold::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_SendFinalGold)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_SendFinalGold* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_SendFinalGold>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_SendFinalGold)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_SendFinalGold)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_SendFinalGold::MergeFrom(const CDOTAUserMsg_SendFinalGold& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_SendFinalGold)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  reliable_gold_.MergeFrom(from.reliable_gold_);
  unreliable_gold_.MergeFrom(from.unreliable_gold_);
}

void CDOTAUserMsg_SendFinalGold::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_SendFinalGold)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_SendFinalGold::CopyFrom(const CDOTAUserMsg_SendFinalGold& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_SendFinalGold)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_SendFinalGold::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_SendFinalGold::Swap(CDOTAUserMsg_SendFinalGold* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_SendFinalGold::InternalSwap(CDOTAUserMsg_SendFinalGold* other) {
  using std::swap;
  reliable_gold_.InternalSwap(&other->reliable_gold_);
  unreliable_gold_.InternalSwap(&other->unreliable_gold_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_SendFinalGold::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_CustomMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_CustomMsg::kMessageFieldNumber;
const int CDOTAUserMsg_CustomMsg::kPlayerIdFieldNumber;
const int CDOTAUserMsg_CustomMsg::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_CustomMsg::CDOTAUserMsg_CustomMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_CustomMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_CustomMsg)
}
CDOTAUserMsg_CustomMsg::CDOTAUserMsg_CustomMsg(const CDOTAUserMsg_CustomMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_CustomMsg)
}

void CDOTAUserMsg_CustomMsg::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(value_));
}

CDOTAUserMsg_CustomMsg::~CDOTAUserMsg_CustomMsg() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_CustomMsg)
  SharedDtor();
}

void CDOTAUserMsg_CustomMsg::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTAUserMsg_CustomMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_CustomMsg::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_CustomMsg& CDOTAUserMsg_CustomMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_CustomMsg.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_CustomMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_CustomMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    message_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&value_) -
        reinterpret_cast<char*>(&player_id_)) + sizeof(value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_CustomMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_CustomMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_CustomMsg.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 player_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_CustomMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_CustomMsg)
  return false;
#undef DO_
}

void CDOTAUserMsg_CustomMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_CustomMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_CustomMsg.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // optional int32 player_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->player_id(), output);
  }

  // optional int32 value = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_CustomMsg)
}

::google::protobuf::uint8* CDOTAUserMsg_CustomMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_CustomMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_CustomMsg.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // optional int32 player_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->player_id(), target);
  }

  // optional int32 value = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_CustomMsg)
  return target;
}

size_t CDOTAUserMsg_CustomMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_CustomMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string message = 1;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional int32 player_id = 2;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player_id());
    }

    // optional int32 value = 3;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_CustomMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_CustomMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_CustomMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_CustomMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_CustomMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_CustomMsg)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_CustomMsg::MergeFrom(const CDOTAUserMsg_CustomMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_CustomMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      value_ = from.value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_CustomMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_CustomMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_CustomMsg::CopyFrom(const CDOTAUserMsg_CustomMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_CustomMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_CustomMsg::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_CustomMsg::Swap(CDOTAUserMsg_CustomMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_CustomMsg::InternalSwap(CDOTAUserMsg_CustomMsg* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(player_id_, other->player_id_);
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_CustomMsg::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_CoachHUDPing::InitAsDefaultInstance() {
  ::_CDOTAUserMsg_CoachHUDPing_default_instance_._instance.get_mutable()->hud_ping_ = const_cast< ::CDOTAMsg_CoachHUDPing*>(
      ::CDOTAMsg_CoachHUDPing::internal_default_instance());
}
void CDOTAUserMsg_CoachHUDPing::clear_hud_ping() {
  if (hud_ping_ != NULL) hud_ping_->Clear();
  clear_has_hud_ping();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_CoachHUDPing::kPlayerIdFieldNumber;
const int CDOTAUserMsg_CoachHUDPing::kHudPingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_CoachHUDPing::CDOTAUserMsg_CoachHUDPing()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_CoachHUDPing.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_CoachHUDPing)
}
CDOTAUserMsg_CoachHUDPing::CDOTAUserMsg_CoachHUDPing(const CDOTAUserMsg_CoachHUDPing& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_hud_ping()) {
    hud_ping_ = new ::CDOTAMsg_CoachHUDPing(*from.hud_ping_);
  } else {
    hud_ping_ = NULL;
  }
  player_id_ = from.player_id_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_CoachHUDPing)
}

void CDOTAUserMsg_CoachHUDPing::SharedCtor() {
  ::memset(&hud_ping_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_id_) -
      reinterpret_cast<char*>(&hud_ping_)) + sizeof(player_id_));
}

CDOTAUserMsg_CoachHUDPing::~CDOTAUserMsg_CoachHUDPing() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_CoachHUDPing)
  SharedDtor();
}

void CDOTAUserMsg_CoachHUDPing::SharedDtor() {
  if (this != internal_default_instance()) delete hud_ping_;
}

void CDOTAUserMsg_CoachHUDPing::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_CoachHUDPing::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_CoachHUDPing& CDOTAUserMsg_CoachHUDPing::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_CoachHUDPing.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_CoachHUDPing::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_CoachHUDPing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(hud_ping_ != NULL);
    hud_ping_->Clear();
  }
  player_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_CoachHUDPing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_CoachHUDPing)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CDOTAMsg_CoachHUDPing hud_ping = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hud_ping()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_CoachHUDPing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_CoachHUDPing)
  return false;
#undef DO_
}

void CDOTAUserMsg_CoachHUDPing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_CoachHUDPing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // optional .CDOTAMsg_CoachHUDPing hud_ping = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_hud_ping(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_CoachHUDPing)
}

::google::protobuf::uint8* CDOTAUserMsg_CoachHUDPing::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_CoachHUDPing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // optional .CDOTAMsg_CoachHUDPing hud_ping = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_hud_ping(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_CoachHUDPing)
  return target;
}

size_t CDOTAUserMsg_CoachHUDPing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_CoachHUDPing)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .CDOTAMsg_CoachHUDPing hud_ping = 2;
    if (has_hud_ping()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *hud_ping_);
    }

    // optional uint32 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->player_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_CoachHUDPing::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_CoachHUDPing)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_CoachHUDPing* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_CoachHUDPing>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_CoachHUDPing)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_CoachHUDPing)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_CoachHUDPing::MergeFrom(const CDOTAUserMsg_CoachHUDPing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_CoachHUDPing)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_hud_ping()->::CDOTAMsg_CoachHUDPing::MergeFrom(from.hud_ping());
    }
    if (cached_has_bits & 0x00000002u) {
      player_id_ = from.player_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_CoachHUDPing::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_CoachHUDPing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_CoachHUDPing::CopyFrom(const CDOTAUserMsg_CoachHUDPing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_CoachHUDPing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_CoachHUDPing::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_CoachHUDPing::Swap(CDOTAUserMsg_CoachHUDPing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_CoachHUDPing::InternalSwap(CDOTAUserMsg_CoachHUDPing* other) {
  using std::swap;
  swap(hud_ping_, other->hud_ping_);
  swap(player_id_, other->player_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_CoachHUDPing::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_ClientLoadGridNav::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_ClientLoadGridNav::CDOTAUserMsg_ClientLoadGridNav()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_ClientLoadGridNav.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_ClientLoadGridNav)
}
CDOTAUserMsg_ClientLoadGridNav::CDOTAUserMsg_ClientLoadGridNav(const CDOTAUserMsg_ClientLoadGridNav& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_ClientLoadGridNav)
}

void CDOTAUserMsg_ClientLoadGridNav::SharedCtor() {
}

CDOTAUserMsg_ClientLoadGridNav::~CDOTAUserMsg_ClientLoadGridNav() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_ClientLoadGridNav)
  SharedDtor();
}

void CDOTAUserMsg_ClientLoadGridNav::SharedDtor() {
}

void CDOTAUserMsg_ClientLoadGridNav::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_ClientLoadGridNav::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_ClientLoadGridNav& CDOTAUserMsg_ClientLoadGridNav::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_ClientLoadGridNav.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_ClientLoadGridNav::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_ClientLoadGridNav)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_ClientLoadGridNav::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_ClientLoadGridNav)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_ClientLoadGridNav)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_ClientLoadGridNav)
  return false;
#undef DO_
}

void CDOTAUserMsg_ClientLoadGridNav::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_ClientLoadGridNav)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_ClientLoadGridNav)
}

::google::protobuf::uint8* CDOTAUserMsg_ClientLoadGridNav::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_ClientLoadGridNav)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_ClientLoadGridNav)
  return target;
}

size_t CDOTAUserMsg_ClientLoadGridNav::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_ClientLoadGridNav)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_ClientLoadGridNav::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_ClientLoadGridNav)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_ClientLoadGridNav* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_ClientLoadGridNav>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_ClientLoadGridNav)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_ClientLoadGridNav)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_ClientLoadGridNav::MergeFrom(const CDOTAUserMsg_ClientLoadGridNav& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_ClientLoadGridNav)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CDOTAUserMsg_ClientLoadGridNav::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_ClientLoadGridNav)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_ClientLoadGridNav::CopyFrom(const CDOTAUserMsg_ClientLoadGridNav& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_ClientLoadGridNav)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_ClientLoadGridNav::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_ClientLoadGridNav::Swap(CDOTAUserMsg_ClientLoadGridNav* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_ClientLoadGridNav::InternalSwap(CDOTAUserMsg_ClientLoadGridNav* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_ClientLoadGridNav::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_TE_Projectile::InitAsDefaultInstance() {
  ::_CDOTAUserMsg_TE_Projectile_default_instance_._instance.get_mutable()->vtargetloc_ = const_cast< ::CMsgVector*>(
      ::CMsgVector::internal_default_instance());
}
void CDOTAUserMsg_TE_Projectile::clear_vtargetloc() {
  if (vtargetloc_ != NULL) vtargetloc_->Clear();
  clear_has_vtargetloc();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_TE_Projectile::kHSourceFieldNumber;
const int CDOTAUserMsg_TE_Projectile::kHTargetFieldNumber;
const int CDOTAUserMsg_TE_Projectile::kMoveSpeedFieldNumber;
const int CDOTAUserMsg_TE_Projectile::kSourceAttachmentFieldNumber;
const int CDOTAUserMsg_TE_Projectile::kParticleSystemHandleFieldNumber;
const int CDOTAUserMsg_TE_Projectile::kDodgeableFieldNumber;
const int CDOTAUserMsg_TE_Projectile::kIsAttackFieldNumber;
const int CDOTAUserMsg_TE_Projectile::kExpireTimeFieldNumber;
const int CDOTAUserMsg_TE_Projectile::kMaximpacttimeFieldNumber;
const int CDOTAUserMsg_TE_Projectile::kColorgemcolorFieldNumber;
const int CDOTAUserMsg_TE_Projectile::kLaunchTickFieldNumber;
const int CDOTAUserMsg_TE_Projectile::kHandleFieldNumber;
const int CDOTAUserMsg_TE_Projectile::kVTargetLocFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_TE_Projectile::CDOTAUserMsg_TE_Projectile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_TE_Projectile.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_TE_Projectile)
}
CDOTAUserMsg_TE_Projectile::CDOTAUserMsg_TE_Projectile(const CDOTAUserMsg_TE_Projectile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_vtargetloc()) {
    vtargetloc_ = new ::CMsgVector(*from.vtargetloc_);
  } else {
    vtargetloc_ = NULL;
  }
  ::memcpy(&hsource_, &from.hsource_,
    static_cast<size_t>(reinterpret_cast<char*>(&handle_) -
    reinterpret_cast<char*>(&hsource_)) + sizeof(handle_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_TE_Projectile)
}

void CDOTAUserMsg_TE_Projectile::SharedCtor() {
  ::memset(&vtargetloc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&handle_) -
      reinterpret_cast<char*>(&vtargetloc_)) + sizeof(handle_));
}

CDOTAUserMsg_TE_Projectile::~CDOTAUserMsg_TE_Projectile() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_TE_Projectile)
  SharedDtor();
}

void CDOTAUserMsg_TE_Projectile::SharedDtor() {
  if (this != internal_default_instance()) delete vtargetloc_;
}

void CDOTAUserMsg_TE_Projectile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_TE_Projectile::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_TE_Projectile& CDOTAUserMsg_TE_Projectile::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_TE_Projectile.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_TE_Projectile::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_TE_Projectile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(vtargetloc_ != NULL);
    vtargetloc_->Clear();
  }
  if (cached_has_bits & 254u) {
    ::memset(&hsource_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&isattack_) -
        reinterpret_cast<char*>(&hsource_)) + sizeof(isattack_));
  }
  if (cached_has_bits & 7936u) {
    ::memset(&expiretime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&handle_) -
        reinterpret_cast<char*>(&expiretime_)) + sizeof(handle_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_TE_Projectile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_TE_Projectile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 hSource = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_hsource();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hsource_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 hTarget = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_htarget();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &htarget_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 moveSpeed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_movespeed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &movespeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 sourceAttachment = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_sourceattachment();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sourceattachment_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 particleSystemHandle = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_particlesystemhandle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &particlesystemhandle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool dodgeable = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_dodgeable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dodgeable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool isAttack = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_isattack();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isattack_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float expireTime = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {
          set_has_expiretime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &expiretime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float maximpacttime = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {
          set_has_maximpacttime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &maximpacttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 colorgemcolor = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {
          set_has_colorgemcolor();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &colorgemcolor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 launch_tick = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_launch_tick();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &launch_tick_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 handle = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgVector vTargetLoc = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vtargetloc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_TE_Projectile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_TE_Projectile)
  return false;
#undef DO_
}

void CDOTAUserMsg_TE_Projectile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_TE_Projectile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 hSource = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->hsource(), output);
  }

  // optional int32 hTarget = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->htarget(), output);
  }

  // optional int32 moveSpeed = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->movespeed(), output);
  }

  // optional int32 sourceAttachment = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->sourceattachment(), output);
  }

  // optional int64 particleSystemHandle = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->particlesystemhandle(), output);
  }

  // optional bool dodgeable = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->dodgeable(), output);
  }

  // optional bool isAttack = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->isattack(), output);
  }

  // optional float expireTime = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->expiretime(), output);
  }

  // optional float maximpacttime = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->maximpacttime(), output);
  }

  // optional fixed32 colorgemcolor = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(11, this->colorgemcolor(), output);
  }

  // optional int32 launch_tick = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->launch_tick(), output);
  }

  // optional int32 handle = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->handle(), output);
  }

  // optional .CMsgVector vTargetLoc = 14;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_vtargetloc(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_TE_Projectile)
}

::google::protobuf::uint8* CDOTAUserMsg_TE_Projectile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_TE_Projectile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 hSource = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->hsource(), target);
  }

  // optional int32 hTarget = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->htarget(), target);
  }

  // optional int32 moveSpeed = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->movespeed(), target);
  }

  // optional int32 sourceAttachment = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->sourceattachment(), target);
  }

  // optional int64 particleSystemHandle = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->particlesystemhandle(), target);
  }

  // optional bool dodgeable = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->dodgeable(), target);
  }

  // optional bool isAttack = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->isattack(), target);
  }

  // optional float expireTime = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->expiretime(), target);
  }

  // optional float maximpacttime = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->maximpacttime(), target);
  }

  // optional fixed32 colorgemcolor = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(11, this->colorgemcolor(), target);
  }

  // optional int32 launch_tick = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->launch_tick(), target);
  }

  // optional int32 handle = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->handle(), target);
  }

  // optional .CMsgVector vTargetLoc = 14;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_vtargetloc(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_TE_Projectile)
  return target;
}

size_t CDOTAUserMsg_TE_Projectile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_TE_Projectile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .CMsgVector vTargetLoc = 14;
    if (has_vtargetloc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *vtargetloc_);
    }

    // optional int32 hSource = 1;
    if (has_hsource()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hsource());
    }

    // optional int32 hTarget = 2;
    if (has_htarget()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->htarget());
    }

    // optional int32 moveSpeed = 3;
    if (has_movespeed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->movespeed());
    }

    // optional int32 sourceAttachment = 4;
    if (has_sourceattachment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sourceattachment());
    }

    // optional int64 particleSystemHandle = 5;
    if (has_particlesystemhandle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->particlesystemhandle());
    }

    // optional bool dodgeable = 6;
    if (has_dodgeable()) {
      total_size += 1 + 1;
    }

    // optional bool isAttack = 7;
    if (has_isattack()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 7936u) {
    // optional float expireTime = 9;
    if (has_expiretime()) {
      total_size += 1 + 4;
    }

    // optional float maximpacttime = 10;
    if (has_maximpacttime()) {
      total_size += 1 + 4;
    }

    // optional fixed32 colorgemcolor = 11;
    if (has_colorgemcolor()) {
      total_size += 1 + 4;
    }

    // optional int32 launch_tick = 12;
    if (has_launch_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->launch_tick());
    }

    // optional int32 handle = 13;
    if (has_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_TE_Projectile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_TE_Projectile)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_TE_Projectile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_TE_Projectile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_TE_Projectile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_TE_Projectile)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_TE_Projectile::MergeFrom(const CDOTAUserMsg_TE_Projectile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_TE_Projectile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_vtargetloc()->::CMsgVector::MergeFrom(from.vtargetloc());
    }
    if (cached_has_bits & 0x00000002u) {
      hsource_ = from.hsource_;
    }
    if (cached_has_bits & 0x00000004u) {
      htarget_ = from.htarget_;
    }
    if (cached_has_bits & 0x00000008u) {
      movespeed_ = from.movespeed_;
    }
    if (cached_has_bits & 0x00000010u) {
      sourceattachment_ = from.sourceattachment_;
    }
    if (cached_has_bits & 0x00000020u) {
      particlesystemhandle_ = from.particlesystemhandle_;
    }
    if (cached_has_bits & 0x00000040u) {
      dodgeable_ = from.dodgeable_;
    }
    if (cached_has_bits & 0x00000080u) {
      isattack_ = from.isattack_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 7936u) {
    if (cached_has_bits & 0x00000100u) {
      expiretime_ = from.expiretime_;
    }
    if (cached_has_bits & 0x00000200u) {
      maximpacttime_ = from.maximpacttime_;
    }
    if (cached_has_bits & 0x00000400u) {
      colorgemcolor_ = from.colorgemcolor_;
    }
    if (cached_has_bits & 0x00000800u) {
      launch_tick_ = from.launch_tick_;
    }
    if (cached_has_bits & 0x00001000u) {
      handle_ = from.handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_TE_Projectile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_TE_Projectile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_TE_Projectile::CopyFrom(const CDOTAUserMsg_TE_Projectile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_TE_Projectile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_TE_Projectile::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_TE_Projectile::Swap(CDOTAUserMsg_TE_Projectile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_TE_Projectile::InternalSwap(CDOTAUserMsg_TE_Projectile* other) {
  using std::swap;
  swap(vtargetloc_, other->vtargetloc_);
  swap(hsource_, other->hsource_);
  swap(htarget_, other->htarget_);
  swap(movespeed_, other->movespeed_);
  swap(sourceattachment_, other->sourceattachment_);
  swap(particlesystemhandle_, other->particlesystemhandle_);
  swap(dodgeable_, other->dodgeable_);
  swap(isattack_, other->isattack_);
  swap(expiretime_, other->expiretime_);
  swap(maximpacttime_, other->maximpacttime_);
  swap(colorgemcolor_, other->colorgemcolor_);
  swap(launch_tick_, other->launch_tick_);
  swap(handle_, other->handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_TE_Projectile::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_TE_ProjectileLoc::InitAsDefaultInstance() {
  ::_CDOTAUserMsg_TE_ProjectileLoc_default_instance_._instance.get_mutable()->vsourceloc_ = const_cast< ::CMsgVector*>(
      ::CMsgVector::internal_default_instance());
  ::_CDOTAUserMsg_TE_ProjectileLoc_default_instance_._instance.get_mutable()->vtargetloc_ = const_cast< ::CMsgVector*>(
      ::CMsgVector::internal_default_instance());
}
void CDOTAUserMsg_TE_ProjectileLoc::clear_vsourceloc() {
  if (vsourceloc_ != NULL) vsourceloc_->Clear();
  clear_has_vsourceloc();
}
void CDOTAUserMsg_TE_ProjectileLoc::clear_vtargetloc() {
  if (vtargetloc_ != NULL) vtargetloc_->Clear();
  clear_has_vtargetloc();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_TE_ProjectileLoc::kVSourceLocFieldNumber;
const int CDOTAUserMsg_TE_ProjectileLoc::kHTargetFieldNumber;
const int CDOTAUserMsg_TE_ProjectileLoc::kMoveSpeedFieldNumber;
const int CDOTAUserMsg_TE_ProjectileLoc::kParticleSystemHandleFieldNumber;
const int CDOTAUserMsg_TE_ProjectileLoc::kDodgeableFieldNumber;
const int CDOTAUserMsg_TE_ProjectileLoc::kIsAttackFieldNumber;
const int CDOTAUserMsg_TE_ProjectileLoc::kExpireTimeFieldNumber;
const int CDOTAUserMsg_TE_ProjectileLoc::kVTargetLocFieldNumber;
const int CDOTAUserMsg_TE_ProjectileLoc::kColorgemcolorFieldNumber;
const int CDOTAUserMsg_TE_ProjectileLoc::kLaunchTickFieldNumber;
const int CDOTAUserMsg_TE_ProjectileLoc::kHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_TE_ProjectileLoc::CDOTAUserMsg_TE_ProjectileLoc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_TE_ProjectileLoc.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_TE_ProjectileLoc)
}
CDOTAUserMsg_TE_ProjectileLoc::CDOTAUserMsg_TE_ProjectileLoc(const CDOTAUserMsg_TE_ProjectileLoc& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_vsourceloc()) {
    vsourceloc_ = new ::CMsgVector(*from.vsourceloc_);
  } else {
    vsourceloc_ = NULL;
  }
  if (from.has_vtargetloc()) {
    vtargetloc_ = new ::CMsgVector(*from.vtargetloc_);
  } else {
    vtargetloc_ = NULL;
  }
  ::memcpy(&htarget_, &from.htarget_,
    static_cast<size_t>(reinterpret_cast<char*>(&handle_) -
    reinterpret_cast<char*>(&htarget_)) + sizeof(handle_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_TE_ProjectileLoc)
}

void CDOTAUserMsg_TE_ProjectileLoc::SharedCtor() {
  ::memset(&vsourceloc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&handle_) -
      reinterpret_cast<char*>(&vsourceloc_)) + sizeof(handle_));
}

CDOTAUserMsg_TE_ProjectileLoc::~CDOTAUserMsg_TE_ProjectileLoc() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_TE_ProjectileLoc)
  SharedDtor();
}

void CDOTAUserMsg_TE_ProjectileLoc::SharedDtor() {
  if (this != internal_default_instance()) delete vsourceloc_;
  if (this != internal_default_instance()) delete vtargetloc_;
}

void CDOTAUserMsg_TE_ProjectileLoc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_TE_ProjectileLoc::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_TE_ProjectileLoc& CDOTAUserMsg_TE_ProjectileLoc::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_TE_ProjectileLoc.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_TE_ProjectileLoc::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_TE_ProjectileLoc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(vsourceloc_ != NULL);
      vsourceloc_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(vtargetloc_ != NULL);
      vtargetloc_->Clear();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&htarget_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&expiretime_) -
        reinterpret_cast<char*>(&htarget_)) + sizeof(expiretime_));
  }
  if (cached_has_bits & 1792u) {
    ::memset(&colorgemcolor_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&handle_) -
        reinterpret_cast<char*>(&colorgemcolor_)) + sizeof(handle_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_TE_ProjectileLoc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_TE_ProjectileLoc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsgVector vSourceLoc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vsourceloc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 hTarget = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_htarget();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &htarget_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 moveSpeed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_movespeed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &movespeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 particleSystemHandle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_particlesystemhandle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &particlesystemhandle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool dodgeable = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_dodgeable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dodgeable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool isAttack = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_isattack();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isattack_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float expireTime = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {
          set_has_expiretime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &expiretime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgVector vTargetLoc = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vtargetloc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 colorgemcolor = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {
          set_has_colorgemcolor();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &colorgemcolor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 launch_tick = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_launch_tick();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &launch_tick_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 handle = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_TE_ProjectileLoc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_TE_ProjectileLoc)
  return false;
#undef DO_
}

void CDOTAUserMsg_TE_ProjectileLoc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_TE_ProjectileLoc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgVector vSourceLoc = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_vsourceloc(), output);
  }

  // optional int32 hTarget = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->htarget(), output);
  }

  // optional int32 moveSpeed = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->movespeed(), output);
  }

  // optional int64 particleSystemHandle = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->particlesystemhandle(), output);
  }

  // optional bool dodgeable = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->dodgeable(), output);
  }

  // optional bool isAttack = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->isattack(), output);
  }

  // optional float expireTime = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->expiretime(), output);
  }

  // optional .CMsgVector vTargetLoc = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_vtargetloc(), output);
  }

  // optional fixed32 colorgemcolor = 11;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(11, this->colorgemcolor(), output);
  }

  // optional int32 launch_tick = 12;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->launch_tick(), output);
  }

  // optional int32 handle = 13;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_TE_ProjectileLoc)
}

::google::protobuf::uint8* CDOTAUserMsg_TE_ProjectileLoc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_TE_ProjectileLoc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgVector vSourceLoc = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_vsourceloc(), deterministic, target);
  }

  // optional int32 hTarget = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->htarget(), target);
  }

  // optional int32 moveSpeed = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->movespeed(), target);
  }

  // optional int64 particleSystemHandle = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->particlesystemhandle(), target);
  }

  // optional bool dodgeable = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->dodgeable(), target);
  }

  // optional bool isAttack = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->isattack(), target);
  }

  // optional float expireTime = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->expiretime(), target);
  }

  // optional .CMsgVector vTargetLoc = 10;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_vtargetloc(), deterministic, target);
  }

  // optional fixed32 colorgemcolor = 11;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(11, this->colorgemcolor(), target);
  }

  // optional int32 launch_tick = 12;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->launch_tick(), target);
  }

  // optional int32 handle = 13;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_TE_ProjectileLoc)
  return target;
}

size_t CDOTAUserMsg_TE_ProjectileLoc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_TE_ProjectileLoc)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .CMsgVector vSourceLoc = 1;
    if (has_vsourceloc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *vsourceloc_);
    }

    // optional .CMsgVector vTargetLoc = 10;
    if (has_vtargetloc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *vtargetloc_);
    }

    // optional int32 hTarget = 2;
    if (has_htarget()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->htarget());
    }

    // optional int32 moveSpeed = 3;
    if (has_movespeed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->movespeed());
    }

    // optional int64 particleSystemHandle = 4;
    if (has_particlesystemhandle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->particlesystemhandle());
    }

    // optional bool dodgeable = 5;
    if (has_dodgeable()) {
      total_size += 1 + 1;
    }

    // optional bool isAttack = 6;
    if (has_isattack()) {
      total_size += 1 + 1;
    }

    // optional float expireTime = 9;
    if (has_expiretime()) {
      total_size += 1 + 4;
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional fixed32 colorgemcolor = 11;
    if (has_colorgemcolor()) {
      total_size += 1 + 4;
    }

    // optional int32 launch_tick = 12;
    if (has_launch_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->launch_tick());
    }

    // optional int32 handle = 13;
    if (has_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_TE_ProjectileLoc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_TE_ProjectileLoc)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_TE_ProjectileLoc* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_TE_ProjectileLoc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_TE_ProjectileLoc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_TE_ProjectileLoc)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_TE_ProjectileLoc::MergeFrom(const CDOTAUserMsg_TE_ProjectileLoc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_TE_ProjectileLoc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_vsourceloc()->::CMsgVector::MergeFrom(from.vsourceloc());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_vtargetloc()->::CMsgVector::MergeFrom(from.vtargetloc());
    }
    if (cached_has_bits & 0x00000004u) {
      htarget_ = from.htarget_;
    }
    if (cached_has_bits & 0x00000008u) {
      movespeed_ = from.movespeed_;
    }
    if (cached_has_bits & 0x00000010u) {
      particlesystemhandle_ = from.particlesystemhandle_;
    }
    if (cached_has_bits & 0x00000020u) {
      dodgeable_ = from.dodgeable_;
    }
    if (cached_has_bits & 0x00000040u) {
      isattack_ = from.isattack_;
    }
    if (cached_has_bits & 0x00000080u) {
      expiretime_ = from.expiretime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      colorgemcolor_ = from.colorgemcolor_;
    }
    if (cached_has_bits & 0x00000200u) {
      launch_tick_ = from.launch_tick_;
    }
    if (cached_has_bits & 0x00000400u) {
      handle_ = from.handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_TE_ProjectileLoc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_TE_ProjectileLoc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_TE_ProjectileLoc::CopyFrom(const CDOTAUserMsg_TE_ProjectileLoc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_TE_ProjectileLoc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_TE_ProjectileLoc::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_TE_ProjectileLoc::Swap(CDOTAUserMsg_TE_ProjectileLoc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_TE_ProjectileLoc::InternalSwap(CDOTAUserMsg_TE_ProjectileLoc* other) {
  using std::swap;
  swap(vsourceloc_, other->vsourceloc_);
  swap(vtargetloc_, other->vtargetloc_);
  swap(htarget_, other->htarget_);
  swap(movespeed_, other->movespeed_);
  swap(particlesystemhandle_, other->particlesystemhandle_);
  swap(dodgeable_, other->dodgeable_);
  swap(isattack_, other->isattack_);
  swap(expiretime_, other->expiretime_);
  swap(colorgemcolor_, other->colorgemcolor_);
  swap(launch_tick_, other->launch_tick_);
  swap(handle_, other->handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_TE_ProjectileLoc::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_TE_DestroyProjectile::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_TE_DestroyProjectile::kHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_TE_DestroyProjectile::CDOTAUserMsg_TE_DestroyProjectile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_TE_DestroyProjectile.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_TE_DestroyProjectile)
}
CDOTAUserMsg_TE_DestroyProjectile::CDOTAUserMsg_TE_DestroyProjectile(const CDOTAUserMsg_TE_DestroyProjectile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  handle_ = from.handle_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_TE_DestroyProjectile)
}

void CDOTAUserMsg_TE_DestroyProjectile::SharedCtor() {
  handle_ = 0;
}

CDOTAUserMsg_TE_DestroyProjectile::~CDOTAUserMsg_TE_DestroyProjectile() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_TE_DestroyProjectile)
  SharedDtor();
}

void CDOTAUserMsg_TE_DestroyProjectile::SharedDtor() {
}

void CDOTAUserMsg_TE_DestroyProjectile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_TE_DestroyProjectile::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_TE_DestroyProjectile& CDOTAUserMsg_TE_DestroyProjectile::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_TE_DestroyProjectile.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_TE_DestroyProjectile::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_TE_DestroyProjectile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  handle_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_TE_DestroyProjectile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_TE_DestroyProjectile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_TE_DestroyProjectile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_TE_DestroyProjectile)
  return false;
#undef DO_
}

void CDOTAUserMsg_TE_DestroyProjectile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_TE_DestroyProjectile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 handle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_TE_DestroyProjectile)
}

::google::protobuf::uint8* CDOTAUserMsg_TE_DestroyProjectile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_TE_DestroyProjectile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 handle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_TE_DestroyProjectile)
  return target;
}

size_t CDOTAUserMsg_TE_DestroyProjectile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_TE_DestroyProjectile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 handle = 1;
  if (has_handle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->handle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_TE_DestroyProjectile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_TE_DestroyProjectile)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_TE_DestroyProjectile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_TE_DestroyProjectile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_TE_DestroyProjectile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_TE_DestroyProjectile)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_TE_DestroyProjectile::MergeFrom(const CDOTAUserMsg_TE_DestroyProjectile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_TE_DestroyProjectile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_handle()) {
    set_handle(from.handle());
  }
}

void CDOTAUserMsg_TE_DestroyProjectile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_TE_DestroyProjectile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_TE_DestroyProjectile::CopyFrom(const CDOTAUserMsg_TE_DestroyProjectile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_TE_DestroyProjectile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_TE_DestroyProjectile::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_TE_DestroyProjectile::Swap(CDOTAUserMsg_TE_DestroyProjectile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_TE_DestroyProjectile::InternalSwap(CDOTAUserMsg_TE_DestroyProjectile* other) {
  using std::swap;
  swap(handle_, other->handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_TE_DestroyProjectile::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_TE_DotaBloodImpact::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_TE_DotaBloodImpact::kEntityFieldNumber;
const int CDOTAUserMsg_TE_DotaBloodImpact::kScaleFieldNumber;
const int CDOTAUserMsg_TE_DotaBloodImpact::kXnormalFieldNumber;
const int CDOTAUserMsg_TE_DotaBloodImpact::kYnormalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_TE_DotaBloodImpact::CDOTAUserMsg_TE_DotaBloodImpact()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_TE_DotaBloodImpact.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_TE_DotaBloodImpact)
}
CDOTAUserMsg_TE_DotaBloodImpact::CDOTAUserMsg_TE_DotaBloodImpact(const CDOTAUserMsg_TE_DotaBloodImpact& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&entity_, &from.entity_,
    static_cast<size_t>(reinterpret_cast<char*>(&ynormal_) -
    reinterpret_cast<char*>(&entity_)) + sizeof(ynormal_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_TE_DotaBloodImpact)
}

void CDOTAUserMsg_TE_DotaBloodImpact::SharedCtor() {
  ::memset(&entity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ynormal_) -
      reinterpret_cast<char*>(&entity_)) + sizeof(ynormal_));
}

CDOTAUserMsg_TE_DotaBloodImpact::~CDOTAUserMsg_TE_DotaBloodImpact() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_TE_DotaBloodImpact)
  SharedDtor();
}

void CDOTAUserMsg_TE_DotaBloodImpact::SharedDtor() {
}

void CDOTAUserMsg_TE_DotaBloodImpact::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_TE_DotaBloodImpact::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_TE_DotaBloodImpact& CDOTAUserMsg_TE_DotaBloodImpact::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_TE_DotaBloodImpact.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_TE_DotaBloodImpact::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_TE_DotaBloodImpact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&entity_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ynormal_) -
        reinterpret_cast<char*>(&entity_)) + sizeof(ynormal_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_TE_DotaBloodImpact::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_TE_DotaBloodImpact)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 entity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_entity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float scale = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_scale();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &scale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float xnormal = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_xnormal();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &xnormal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float ynormal = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_ynormal();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ynormal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_TE_DotaBloodImpact)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_TE_DotaBloodImpact)
  return false;
#undef DO_
}

void CDOTAUserMsg_TE_DotaBloodImpact::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_TE_DotaBloodImpact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 entity = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->entity(), output);
  }

  // optional float scale = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->scale(), output);
  }

  // optional float xnormal = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->xnormal(), output);
  }

  // optional float ynormal = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->ynormal(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_TE_DotaBloodImpact)
}

::google::protobuf::uint8* CDOTAUserMsg_TE_DotaBloodImpact::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_TE_DotaBloodImpact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 entity = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->entity(), target);
  }

  // optional float scale = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->scale(), target);
  }

  // optional float xnormal = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->xnormal(), target);
  }

  // optional float ynormal = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->ynormal(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_TE_DotaBloodImpact)
  return target;
}

size_t CDOTAUserMsg_TE_DotaBloodImpact::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_TE_DotaBloodImpact)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 entity = 1;
    if (has_entity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entity());
    }

    // optional float scale = 2;
    if (has_scale()) {
      total_size += 1 + 4;
    }

    // optional float xnormal = 3;
    if (has_xnormal()) {
      total_size += 1 + 4;
    }

    // optional float ynormal = 4;
    if (has_ynormal()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_TE_DotaBloodImpact::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_TE_DotaBloodImpact)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_TE_DotaBloodImpact* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_TE_DotaBloodImpact>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_TE_DotaBloodImpact)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_TE_DotaBloodImpact)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_TE_DotaBloodImpact::MergeFrom(const CDOTAUserMsg_TE_DotaBloodImpact& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_TE_DotaBloodImpact)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      entity_ = from.entity_;
    }
    if (cached_has_bits & 0x00000002u) {
      scale_ = from.scale_;
    }
    if (cached_has_bits & 0x00000004u) {
      xnormal_ = from.xnormal_;
    }
    if (cached_has_bits & 0x00000008u) {
      ynormal_ = from.ynormal_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_TE_DotaBloodImpact::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_TE_DotaBloodImpact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_TE_DotaBloodImpact::CopyFrom(const CDOTAUserMsg_TE_DotaBloodImpact& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_TE_DotaBloodImpact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_TE_DotaBloodImpact::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_TE_DotaBloodImpact::Swap(CDOTAUserMsg_TE_DotaBloodImpact* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_TE_DotaBloodImpact::InternalSwap(CDOTAUserMsg_TE_DotaBloodImpact* other) {
  using std::swap;
  swap(entity_, other->entity_);
  swap(scale_, other->scale_);
  swap(xnormal_, other->xnormal_);
  swap(ynormal_, other->ynormal_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_TE_DotaBloodImpact::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_AbilityPing::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_AbilityPing::kPlayerIdFieldNumber;
const int CDOTAUserMsg_AbilityPing::kAbilityIdFieldNumber;
const int CDOTAUserMsg_AbilityPing::kTypeFieldNumber;
const int CDOTAUserMsg_AbilityPing::kCooldownSecondsFieldNumber;
const int CDOTAUserMsg_AbilityPing::kLevelFieldNumber;
const int CDOTAUserMsg_AbilityPing::kPassiveFieldNumber;
const int CDOTAUserMsg_AbilityPing::kManaNeededFieldNumber;
const int CDOTAUserMsg_AbilityPing::kEntityIdFieldNumber;
const int CDOTAUserMsg_AbilityPing::kPrimaryChargesFieldNumber;
const int CDOTAUserMsg_AbilityPing::kSecondaryChargesFieldNumber;
const int CDOTAUserMsg_AbilityPing::kCasterIdFieldNumber;
const int CDOTAUserMsg_AbilityPing::kCtrlHeldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_AbilityPing::CDOTAUserMsg_AbilityPing()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_AbilityPing.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_AbilityPing)
}
CDOTAUserMsg_AbilityPing::CDOTAUserMsg_AbilityPing(const CDOTAUserMsg_AbilityPing& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_AbilityPing)
}

void CDOTAUserMsg_AbilityPing::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&caster_id_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(caster_id_));
  type_ = 1;
}

CDOTAUserMsg_AbilityPing::~CDOTAUserMsg_AbilityPing() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_AbilityPing)
  SharedDtor();
}

void CDOTAUserMsg_AbilityPing::SharedDtor() {
}

void CDOTAUserMsg_AbilityPing::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_AbilityPing::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_AbilityPing& CDOTAUserMsg_AbilityPing::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_AbilityPing.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_AbilityPing::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_AbilityPing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&passive_) -
        reinterpret_cast<char*>(&player_id_)) + sizeof(passive_));
  }
  if (cached_has_bits & 3840u) {
    ::memset(&ctrl_held_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&caster_id_) -
        reinterpret_cast<char*>(&ctrl_held_)) + sizeof(caster_id_));
    type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_AbilityPing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_AbilityPing)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ability_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_ability_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ability_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .DOTA_ABILITY_PING_TYPE type = 3 [default = ABILITY_PING_READY];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::DOTA_ABILITY_PING_TYPE_IsValid(value)) {
            set_type(static_cast< ::DOTA_ABILITY_PING_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cooldown_seconds = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_cooldown_seconds();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cooldown_seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 level = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool passive = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_passive();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &passive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 mana_needed = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_mana_needed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mana_needed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 entity_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_entity_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 primary_charges = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_primary_charges();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &primary_charges_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 secondary_charges = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_secondary_charges();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &secondary_charges_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 caster_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_caster_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &caster_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool ctrl_held = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_ctrl_held();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ctrl_held_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_AbilityPing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_AbilityPing)
  return false;
#undef DO_
}

void CDOTAUserMsg_AbilityPing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_AbilityPing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // optional uint32 ability_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ability_id(), output);
  }

  // optional .DOTA_ABILITY_PING_TYPE type = 3 [default = ABILITY_PING_READY];
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  // optional uint32 cooldown_seconds = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->cooldown_seconds(), output);
  }

  // optional uint32 level = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->level(), output);
  }

  // optional bool passive = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->passive(), output);
  }

  // optional uint32 mana_needed = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->mana_needed(), output);
  }

  // optional uint32 entity_id = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->entity_id(), output);
  }

  // optional int32 primary_charges = 9;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->primary_charges(), output);
  }

  // optional int32 secondary_charges = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->secondary_charges(), output);
  }

  // optional uint32 caster_id = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->caster_id(), output);
  }

  // optional bool ctrl_held = 12;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->ctrl_held(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_AbilityPing)
}

::google::protobuf::uint8* CDOTAUserMsg_AbilityPing::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_AbilityPing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // optional uint32 ability_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ability_id(), target);
  }

  // optional .DOTA_ABILITY_PING_TYPE type = 3 [default = ABILITY_PING_READY];
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  // optional uint32 cooldown_seconds = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->cooldown_seconds(), target);
  }

  // optional uint32 level = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->level(), target);
  }

  // optional bool passive = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->passive(), target);
  }

  // optional uint32 mana_needed = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->mana_needed(), target);
  }

  // optional uint32 entity_id = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->entity_id(), target);
  }

  // optional int32 primary_charges = 9;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->primary_charges(), target);
  }

  // optional int32 secondary_charges = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->secondary_charges(), target);
  }

  // optional uint32 caster_id = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->caster_id(), target);
  }

  // optional bool ctrl_held = 12;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->ctrl_held(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_AbilityPing)
  return target;
}

size_t CDOTAUserMsg_AbilityPing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_AbilityPing)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->player_id());
    }

    // optional uint32 ability_id = 2;
    if (has_ability_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ability_id());
    }

    // optional uint32 cooldown_seconds = 4;
    if (has_cooldown_seconds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cooldown_seconds());
    }

    // optional uint32 level = 5;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // optional uint32 mana_needed = 7;
    if (has_mana_needed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mana_needed());
    }

    // optional uint32 entity_id = 8;
    if (has_entity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->entity_id());
    }

    // optional int32 primary_charges = 9;
    if (has_primary_charges()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->primary_charges());
    }

    // optional bool passive = 6;
    if (has_passive()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional bool ctrl_held = 12;
    if (has_ctrl_held()) {
      total_size += 1 + 1;
    }

    // optional int32 secondary_charges = 10;
    if (has_secondary_charges()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->secondary_charges());
    }

    // optional uint32 caster_id = 11;
    if (has_caster_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->caster_id());
    }

    // optional .DOTA_ABILITY_PING_TYPE type = 3 [default = ABILITY_PING_READY];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_AbilityPing::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_AbilityPing)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_AbilityPing* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_AbilityPing>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_AbilityPing)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_AbilityPing)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_AbilityPing::MergeFrom(const CDOTAUserMsg_AbilityPing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_AbilityPing)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      ability_id_ = from.ability_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      cooldown_seconds_ = from.cooldown_seconds_;
    }
    if (cached_has_bits & 0x00000008u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000010u) {
      mana_needed_ = from.mana_needed_;
    }
    if (cached_has_bits & 0x00000020u) {
      entity_id_ = from.entity_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      primary_charges_ = from.primary_charges_;
    }
    if (cached_has_bits & 0x00000080u) {
      passive_ = from.passive_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      ctrl_held_ = from.ctrl_held_;
    }
    if (cached_has_bits & 0x00000200u) {
      secondary_charges_ = from.secondary_charges_;
    }
    if (cached_has_bits & 0x00000400u) {
      caster_id_ = from.caster_id_;
    }
    if (cached_has_bits & 0x00000800u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_AbilityPing::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_AbilityPing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_AbilityPing::CopyFrom(const CDOTAUserMsg_AbilityPing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_AbilityPing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_AbilityPing::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_AbilityPing::Swap(CDOTAUserMsg_AbilityPing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_AbilityPing::InternalSwap(CDOTAUserMsg_AbilityPing* other) {
  using std::swap;
  swap(player_id_, other->player_id_);
  swap(ability_id_, other->ability_id_);
  swap(cooldown_seconds_, other->cooldown_seconds_);
  swap(level_, other->level_);
  swap(mana_needed_, other->mana_needed_);
  swap(entity_id_, other->entity_id_);
  swap(primary_charges_, other->primary_charges_);
  swap(passive_, other->passive_);
  swap(ctrl_held_, other->ctrl_held_);
  swap(secondary_charges_, other->secondary_charges_);
  swap(caster_id_, other->caster_id_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_AbilityPing::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_TE_UnitAnimation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_TE_UnitAnimation::kEntityFieldNumber;
const int CDOTAUserMsg_TE_UnitAnimation::kSequenceVariantFieldNumber;
const int CDOTAUserMsg_TE_UnitAnimation::kPlaybackrateFieldNumber;
const int CDOTAUserMsg_TE_UnitAnimation::kCastpointFieldNumber;
const int CDOTAUserMsg_TE_UnitAnimation::kTypeFieldNumber;
const int CDOTAUserMsg_TE_UnitAnimation::kActivityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_TE_UnitAnimation::CDOTAUserMsg_TE_UnitAnimation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_TE_UnitAnimation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_TE_UnitAnimation)
}
CDOTAUserMsg_TE_UnitAnimation::CDOTAUserMsg_TE_UnitAnimation(const CDOTAUserMsg_TE_UnitAnimation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&entity_, &from.entity_,
    static_cast<size_t>(reinterpret_cast<char*>(&activity_) -
    reinterpret_cast<char*>(&entity_)) + sizeof(activity_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_TE_UnitAnimation)
}

void CDOTAUserMsg_TE_UnitAnimation::SharedCtor() {
  ::memset(&entity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&activity_) -
      reinterpret_cast<char*>(&entity_)) + sizeof(activity_));
}

CDOTAUserMsg_TE_UnitAnimation::~CDOTAUserMsg_TE_UnitAnimation() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_TE_UnitAnimation)
  SharedDtor();
}

void CDOTAUserMsg_TE_UnitAnimation::SharedDtor() {
}

void CDOTAUserMsg_TE_UnitAnimation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_TE_UnitAnimation::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_TE_UnitAnimation& CDOTAUserMsg_TE_UnitAnimation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_TE_UnitAnimation.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_TE_UnitAnimation::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_TE_UnitAnimation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&entity_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&activity_) -
        reinterpret_cast<char*>(&entity_)) + sizeof(activity_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_TE_UnitAnimation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_TE_UnitAnimation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 entity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_entity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 sequenceVariant = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_sequencevariant();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sequencevariant_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float playbackrate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_playbackrate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &playbackrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float castpoint = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_castpoint();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &castpoint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 activity = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_activity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_TE_UnitAnimation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_TE_UnitAnimation)
  return false;
#undef DO_
}

void CDOTAUserMsg_TE_UnitAnimation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_TE_UnitAnimation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 entity = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->entity(), output);
  }

  // optional int32 sequenceVariant = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sequencevariant(), output);
  }

  // optional float playbackrate = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->playbackrate(), output);
  }

  // optional float castpoint = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->castpoint(), output);
  }

  // optional int32 type = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->type(), output);
  }

  // optional int32 activity = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->activity(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_TE_UnitAnimation)
}

::google::protobuf::uint8* CDOTAUserMsg_TE_UnitAnimation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_TE_UnitAnimation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 entity = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->entity(), target);
  }

  // optional int32 sequenceVariant = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sequencevariant(), target);
  }

  // optional float playbackrate = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->playbackrate(), target);
  }

  // optional float castpoint = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->castpoint(), target);
  }

  // optional int32 type = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->type(), target);
  }

  // optional int32 activity = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->activity(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_TE_UnitAnimation)
  return target;
}

size_t CDOTAUserMsg_TE_UnitAnimation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_TE_UnitAnimation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional int32 entity = 1;
    if (has_entity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entity());
    }

    // optional int32 sequenceVariant = 2;
    if (has_sequencevariant()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sequencevariant());
    }

    // optional float playbackrate = 3;
    if (has_playbackrate()) {
      total_size += 1 + 4;
    }

    // optional float castpoint = 4;
    if (has_castpoint()) {
      total_size += 1 + 4;
    }

    // optional int32 type = 5;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 activity = 6;
    if (has_activity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_TE_UnitAnimation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_TE_UnitAnimation)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_TE_UnitAnimation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_TE_UnitAnimation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_TE_UnitAnimation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_TE_UnitAnimation)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_TE_UnitAnimation::MergeFrom(const CDOTAUserMsg_TE_UnitAnimation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_TE_UnitAnimation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      entity_ = from.entity_;
    }
    if (cached_has_bits & 0x00000002u) {
      sequencevariant_ = from.sequencevariant_;
    }
    if (cached_has_bits & 0x00000004u) {
      playbackrate_ = from.playbackrate_;
    }
    if (cached_has_bits & 0x00000008u) {
      castpoint_ = from.castpoint_;
    }
    if (cached_has_bits & 0x00000010u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000020u) {
      activity_ = from.activity_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_TE_UnitAnimation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_TE_UnitAnimation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_TE_UnitAnimation::CopyFrom(const CDOTAUserMsg_TE_UnitAnimation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_TE_UnitAnimation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_TE_UnitAnimation::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_TE_UnitAnimation::Swap(CDOTAUserMsg_TE_UnitAnimation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_TE_UnitAnimation::InternalSwap(CDOTAUserMsg_TE_UnitAnimation* other) {
  using std::swap;
  swap(entity_, other->entity_);
  swap(sequencevariant_, other->sequencevariant_);
  swap(playbackrate_, other->playbackrate_);
  swap(castpoint_, other->castpoint_);
  swap(type_, other->type_);
  swap(activity_, other->activity_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_TE_UnitAnimation::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_TE_UnitAnimationEnd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_TE_UnitAnimationEnd::kEntityFieldNumber;
const int CDOTAUserMsg_TE_UnitAnimationEnd::kSnapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_TE_UnitAnimationEnd::CDOTAUserMsg_TE_UnitAnimationEnd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_TE_UnitAnimationEnd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_TE_UnitAnimationEnd)
}
CDOTAUserMsg_TE_UnitAnimationEnd::CDOTAUserMsg_TE_UnitAnimationEnd(const CDOTAUserMsg_TE_UnitAnimationEnd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&entity_, &from.entity_,
    static_cast<size_t>(reinterpret_cast<char*>(&snap_) -
    reinterpret_cast<char*>(&entity_)) + sizeof(snap_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_TE_UnitAnimationEnd)
}

void CDOTAUserMsg_TE_UnitAnimationEnd::SharedCtor() {
  ::memset(&entity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&snap_) -
      reinterpret_cast<char*>(&entity_)) + sizeof(snap_));
}

CDOTAUserMsg_TE_UnitAnimationEnd::~CDOTAUserMsg_TE_UnitAnimationEnd() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_TE_UnitAnimationEnd)
  SharedDtor();
}

void CDOTAUserMsg_TE_UnitAnimationEnd::SharedDtor() {
}

void CDOTAUserMsg_TE_UnitAnimationEnd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_TE_UnitAnimationEnd::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_TE_UnitAnimationEnd& CDOTAUserMsg_TE_UnitAnimationEnd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_TE_UnitAnimationEnd.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_TE_UnitAnimationEnd::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_TE_UnitAnimationEnd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&entity_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&snap_) -
        reinterpret_cast<char*>(&entity_)) + sizeof(snap_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_TE_UnitAnimationEnd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_TE_UnitAnimationEnd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 entity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_entity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool snap = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_snap();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &snap_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_TE_UnitAnimationEnd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_TE_UnitAnimationEnd)
  return false;
#undef DO_
}

void CDOTAUserMsg_TE_UnitAnimationEnd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_TE_UnitAnimationEnd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 entity = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->entity(), output);
  }

  // optional bool snap = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->snap(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_TE_UnitAnimationEnd)
}

::google::protobuf::uint8* CDOTAUserMsg_TE_UnitAnimationEnd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_TE_UnitAnimationEnd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 entity = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->entity(), target);
  }

  // optional bool snap = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->snap(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_TE_UnitAnimationEnd)
  return target;
}

size_t CDOTAUserMsg_TE_UnitAnimationEnd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_TE_UnitAnimationEnd)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 entity = 1;
    if (has_entity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entity());
    }

    // optional bool snap = 2;
    if (has_snap()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_TE_UnitAnimationEnd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_TE_UnitAnimationEnd)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_TE_UnitAnimationEnd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_TE_UnitAnimationEnd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_TE_UnitAnimationEnd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_TE_UnitAnimationEnd)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_TE_UnitAnimationEnd::MergeFrom(const CDOTAUserMsg_TE_UnitAnimationEnd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_TE_UnitAnimationEnd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      entity_ = from.entity_;
    }
    if (cached_has_bits & 0x00000002u) {
      snap_ = from.snap_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_TE_UnitAnimationEnd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_TE_UnitAnimationEnd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_TE_UnitAnimationEnd::CopyFrom(const CDOTAUserMsg_TE_UnitAnimationEnd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_TE_UnitAnimationEnd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_TE_UnitAnimationEnd::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_TE_UnitAnimationEnd::Swap(CDOTAUserMsg_TE_UnitAnimationEnd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_TE_UnitAnimationEnd::InternalSwap(CDOTAUserMsg_TE_UnitAnimationEnd* other) {
  using std::swap;
  swap(entity_, other->entity_);
  swap(snap_, other->snap_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_TE_UnitAnimationEnd::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_ShowGenericPopup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_ShowGenericPopup::kHeaderFieldNumber;
const int CDOTAUserMsg_ShowGenericPopup::kBodyFieldNumber;
const int CDOTAUserMsg_ShowGenericPopup::kParam1FieldNumber;
const int CDOTAUserMsg_ShowGenericPopup::kParam2FieldNumber;
const int CDOTAUserMsg_ShowGenericPopup::kTintScreenFieldNumber;
const int CDOTAUserMsg_ShowGenericPopup::kShowNoOtherDialogsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_ShowGenericPopup::CDOTAUserMsg_ShowGenericPopup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_ShowGenericPopup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_ShowGenericPopup)
}
CDOTAUserMsg_ShowGenericPopup::CDOTAUserMsg_ShowGenericPopup(const CDOTAUserMsg_ShowGenericPopup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  header_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_header()) {
    header_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.header_);
  }
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_body()) {
    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  param1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_param1()) {
    param1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param1_);
  }
  param2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_param2()) {
    param2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param2_);
  }
  ::memcpy(&tint_screen_, &from.tint_screen_,
    static_cast<size_t>(reinterpret_cast<char*>(&show_no_other_dialogs_) -
    reinterpret_cast<char*>(&tint_screen_)) + sizeof(show_no_other_dialogs_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_ShowGenericPopup)
}

void CDOTAUserMsg_ShowGenericPopup::SharedCtor() {
  header_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tint_screen_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&show_no_other_dialogs_) -
      reinterpret_cast<char*>(&tint_screen_)) + sizeof(show_no_other_dialogs_));
}

CDOTAUserMsg_ShowGenericPopup::~CDOTAUserMsg_ShowGenericPopup() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_ShowGenericPopup)
  SharedDtor();
}

void CDOTAUserMsg_ShowGenericPopup::SharedDtor() {
  header_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTAUserMsg_ShowGenericPopup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_ShowGenericPopup::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_ShowGenericPopup& CDOTAUserMsg_ShowGenericPopup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_ShowGenericPopup.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_ShowGenericPopup::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_ShowGenericPopup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      header_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      body_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      param1_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      param2_.ClearNonDefaultToEmptyNoArena();
    }
  }
  ::memset(&tint_screen_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&show_no_other_dialogs_) -
      reinterpret_cast<char*>(&tint_screen_)) + sizeof(show_no_other_dialogs_));
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_ShowGenericPopup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_ShowGenericPopup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_header()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->header().data(), static_cast<int>(this->header().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_ShowGenericPopup.header");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string body = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_body()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->body().data(), static_cast<int>(this->body().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_ShowGenericPopup.body");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string param1 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->param1().data(), static_cast<int>(this->param1().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_ShowGenericPopup.param1");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string param2 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->param2().data(), static_cast<int>(this->param2().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_ShowGenericPopup.param2");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool tint_screen = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_tint_screen();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &tint_screen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool show_no_other_dialogs = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_show_no_other_dialogs();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_no_other_dialogs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_ShowGenericPopup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_ShowGenericPopup)
  return false;
#undef DO_
}

void CDOTAUserMsg_ShowGenericPopup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_ShowGenericPopup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string header = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->header().data(), static_cast<int>(this->header().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_ShowGenericPopup.header");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->header(), output);
  }

  // required string body = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->body().data(), static_cast<int>(this->body().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_ShowGenericPopup.body");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->body(), output);
  }

  // optional string param1 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param1().data(), static_cast<int>(this->param1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_ShowGenericPopup.param1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->param1(), output);
  }

  // optional string param2 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param2().data(), static_cast<int>(this->param2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_ShowGenericPopup.param2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->param2(), output);
  }

  // optional bool tint_screen = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->tint_screen(), output);
  }

  // optional bool show_no_other_dialogs = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->show_no_other_dialogs(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_ShowGenericPopup)
}

::google::protobuf::uint8* CDOTAUserMsg_ShowGenericPopup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_ShowGenericPopup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string header = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->header().data(), static_cast<int>(this->header().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_ShowGenericPopup.header");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->header(), target);
  }

  // required string body = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->body().data(), static_cast<int>(this->body().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_ShowGenericPopup.body");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->body(), target);
  }

  // optional string param1 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param1().data(), static_cast<int>(this->param1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_ShowGenericPopup.param1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->param1(), target);
  }

  // optional string param2 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param2().data(), static_cast<int>(this->param2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_ShowGenericPopup.param2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->param2(), target);
  }

  // optional bool tint_screen = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->tint_screen(), target);
  }

  // optional bool show_no_other_dialogs = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->show_no_other_dialogs(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_ShowGenericPopup)
  return target;
}

size_t CDOTAUserMsg_ShowGenericPopup::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CDOTAUserMsg_ShowGenericPopup)
  size_t total_size = 0;

  if (has_header()) {
    // required string header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->header());
  }

  if (has_body()) {
    // required string body = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->body());
  }

  return total_size;
}
size_t CDOTAUserMsg_ShowGenericPopup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_ShowGenericPopup)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string header = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->header());

    // required string body = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->body());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 60u) {
    // optional string param1 = 3;
    if (has_param1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->param1());
    }

    // optional string param2 = 4;
    if (has_param2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->param2());
    }

    // optional bool tint_screen = 5;
    if (has_tint_screen()) {
      total_size += 1 + 1;
    }

    // optional bool show_no_other_dialogs = 6;
    if (has_show_no_other_dialogs()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_ShowGenericPopup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_ShowGenericPopup)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_ShowGenericPopup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_ShowGenericPopup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_ShowGenericPopup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_ShowGenericPopup)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_ShowGenericPopup::MergeFrom(const CDOTAUserMsg_ShowGenericPopup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_ShowGenericPopup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_header();
      header_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.header_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_body();
      body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_param1();
      param1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param1_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_param2();
      param2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param2_);
    }
    if (cached_has_bits & 0x00000010u) {
      tint_screen_ = from.tint_screen_;
    }
    if (cached_has_bits & 0x00000020u) {
      show_no_other_dialogs_ = from.show_no_other_dialogs_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_ShowGenericPopup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_ShowGenericPopup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_ShowGenericPopup::CopyFrom(const CDOTAUserMsg_ShowGenericPopup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_ShowGenericPopup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_ShowGenericPopup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void CDOTAUserMsg_ShowGenericPopup::Swap(CDOTAUserMsg_ShowGenericPopup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_ShowGenericPopup::InternalSwap(CDOTAUserMsg_ShowGenericPopup* other) {
  using std::swap;
  header_.Swap(&other->header_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  body_.Swap(&other->body_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  param1_.Swap(&other->param1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  param2_.Swap(&other->param2_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(tint_screen_, other->tint_screen_);
  swap(show_no_other_dialogs_, other->show_no_other_dialogs_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_ShowGenericPopup::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_VoteStart::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_VoteStart::kTitleFieldNumber;
const int CDOTAUserMsg_VoteStart::kDurationFieldNumber;
const int CDOTAUserMsg_VoteStart::kChoiceCountFieldNumber;
const int CDOTAUserMsg_VoteStart::kChoicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_VoteStart::CDOTAUserMsg_VoteStart()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_VoteStart.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_VoteStart)
}
CDOTAUserMsg_VoteStart::CDOTAUserMsg_VoteStart(const CDOTAUserMsg_VoteStart& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      choices_(from.choices_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  ::memcpy(&duration_, &from.duration_,
    static_cast<size_t>(reinterpret_cast<char*>(&choice_count_) -
    reinterpret_cast<char*>(&duration_)) + sizeof(choice_count_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_VoteStart)
}

void CDOTAUserMsg_VoteStart::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&duration_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&choice_count_) -
      reinterpret_cast<char*>(&duration_)) + sizeof(choice_count_));
}

CDOTAUserMsg_VoteStart::~CDOTAUserMsg_VoteStart() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_VoteStart)
  SharedDtor();
}

void CDOTAUserMsg_VoteStart::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTAUserMsg_VoteStart::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_VoteStart::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_VoteStart& CDOTAUserMsg_VoteStart::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_VoteStart.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_VoteStart::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_VoteStart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  choices_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    title_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&duration_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&choice_count_) -
        reinterpret_cast<char*>(&duration_)) + sizeof(choice_count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_VoteStart::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_VoteStart)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string title = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_VoteStart.title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float duration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 choice_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_choice_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &choice_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string choices = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_choices()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->choices(this->choices_size() - 1).data(),
            static_cast<int>(this->choices(this->choices_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_VoteStart.choices");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_VoteStart)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_VoteStart)
  return false;
#undef DO_
}

void CDOTAUserMsg_VoteStart::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_VoteStart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string title = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_VoteStart.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->title(), output);
  }

  // optional float duration = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->duration(), output);
  }

  // optional int32 choice_count = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->choice_count(), output);
  }

  // repeated string choices = 4;
  for (int i = 0, n = this->choices_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->choices(i).data(), static_cast<int>(this->choices(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_VoteStart.choices");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->choices(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_VoteStart)
}

::google::protobuf::uint8* CDOTAUserMsg_VoteStart::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_VoteStart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string title = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_VoteStart.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->title(), target);
  }

  // optional float duration = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->duration(), target);
  }

  // optional int32 choice_count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->choice_count(), target);
  }

  // repeated string choices = 4;
  for (int i = 0, n = this->choices_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->choices(i).data(), static_cast<int>(this->choices(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_VoteStart.choices");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->choices(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_VoteStart)
  return target;
}

size_t CDOTAUserMsg_VoteStart::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_VoteStart)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string choices = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->choices_size());
  for (int i = 0, n = this->choices_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->choices(i));
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string title = 1;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional float duration = 2;
    if (has_duration()) {
      total_size += 1 + 4;
    }

    // optional int32 choice_count = 3;
    if (has_choice_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->choice_count());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_VoteStart::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_VoteStart)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_VoteStart* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_VoteStart>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_VoteStart)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_VoteStart)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_VoteStart::MergeFrom(const CDOTAUserMsg_VoteStart& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_VoteStart)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  choices_.MergeFrom(from.choices_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000002u) {
      duration_ = from.duration_;
    }
    if (cached_has_bits & 0x00000004u) {
      choice_count_ = from.choice_count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_VoteStart::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_VoteStart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_VoteStart::CopyFrom(const CDOTAUserMsg_VoteStart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_VoteStart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_VoteStart::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_VoteStart::Swap(CDOTAUserMsg_VoteStart* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_VoteStart::InternalSwap(CDOTAUserMsg_VoteStart* other) {
  using std::swap;
  choices_.InternalSwap(CastToBase(&other->choices_));
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(duration_, other->duration_);
  swap(choice_count_, other->choice_count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_VoteStart::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_VoteUpdate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_VoteUpdate::kChoiceCountsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_VoteUpdate::CDOTAUserMsg_VoteUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_VoteUpdate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_VoteUpdate)
}
CDOTAUserMsg_VoteUpdate::CDOTAUserMsg_VoteUpdate(const CDOTAUserMsg_VoteUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      choice_counts_(from.choice_counts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_VoteUpdate)
}

void CDOTAUserMsg_VoteUpdate::SharedCtor() {
}

CDOTAUserMsg_VoteUpdate::~CDOTAUserMsg_VoteUpdate() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_VoteUpdate)
  SharedDtor();
}

void CDOTAUserMsg_VoteUpdate::SharedDtor() {
}

void CDOTAUserMsg_VoteUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_VoteUpdate::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_VoteUpdate& CDOTAUserMsg_VoteUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_VoteUpdate.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_VoteUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_VoteUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  choice_counts_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_VoteUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_VoteUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 choice_counts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_choice_counts())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_choice_counts())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_VoteUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_VoteUpdate)
  return false;
#undef DO_
}

void CDOTAUserMsg_VoteUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_VoteUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 choice_counts = 1;
  for (int i = 0, n = this->choice_counts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->choice_counts(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_VoteUpdate)
}

::google::protobuf::uint8* CDOTAUserMsg_VoteUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_VoteUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 choice_counts = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->choice_counts_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_VoteUpdate)
  return target;
}

size_t CDOTAUserMsg_VoteUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_VoteUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 choice_counts = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->choice_counts_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->choice_counts_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_VoteUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_VoteUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_VoteUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_VoteUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_VoteUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_VoteUpdate)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_VoteUpdate::MergeFrom(const CDOTAUserMsg_VoteUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_VoteUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  choice_counts_.MergeFrom(from.choice_counts_);
}

void CDOTAUserMsg_VoteUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_VoteUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_VoteUpdate::CopyFrom(const CDOTAUserMsg_VoteUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_VoteUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_VoteUpdate::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_VoteUpdate::Swap(CDOTAUserMsg_VoteUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_VoteUpdate::InternalSwap(CDOTAUserMsg_VoteUpdate* other) {
  using std::swap;
  choice_counts_.InternalSwap(&other->choice_counts_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_VoteUpdate::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_VoteEnd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_VoteEnd::kSelectedChoiceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_VoteEnd::CDOTAUserMsg_VoteEnd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_VoteEnd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_VoteEnd)
}
CDOTAUserMsg_VoteEnd::CDOTAUserMsg_VoteEnd(const CDOTAUserMsg_VoteEnd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  selected_choice_ = from.selected_choice_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_VoteEnd)
}

void CDOTAUserMsg_VoteEnd::SharedCtor() {
  selected_choice_ = 0;
}

CDOTAUserMsg_VoteEnd::~CDOTAUserMsg_VoteEnd() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_VoteEnd)
  SharedDtor();
}

void CDOTAUserMsg_VoteEnd::SharedDtor() {
}

void CDOTAUserMsg_VoteEnd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_VoteEnd::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_VoteEnd& CDOTAUserMsg_VoteEnd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_VoteEnd.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_VoteEnd::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_VoteEnd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  selected_choice_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_VoteEnd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_VoteEnd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 selected_choice = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_selected_choice();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &selected_choice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_VoteEnd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_VoteEnd)
  return false;
#undef DO_
}

void CDOTAUserMsg_VoteEnd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_VoteEnd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 selected_choice = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->selected_choice(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_VoteEnd)
}

::google::protobuf::uint8* CDOTAUserMsg_VoteEnd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_VoteEnd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 selected_choice = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->selected_choice(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_VoteEnd)
  return target;
}

size_t CDOTAUserMsg_VoteEnd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_VoteEnd)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 selected_choice = 1;
  if (has_selected_choice()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->selected_choice());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_VoteEnd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_VoteEnd)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_VoteEnd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_VoteEnd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_VoteEnd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_VoteEnd)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_VoteEnd::MergeFrom(const CDOTAUserMsg_VoteEnd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_VoteEnd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_selected_choice()) {
    set_selected_choice(from.selected_choice());
  }
}

void CDOTAUserMsg_VoteEnd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_VoteEnd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_VoteEnd::CopyFrom(const CDOTAUserMsg_VoteEnd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_VoteEnd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_VoteEnd::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_VoteEnd::Swap(CDOTAUserMsg_VoteEnd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_VoteEnd::InternalSwap(CDOTAUserMsg_VoteEnd* other) {
  using std::swap;
  swap(selected_choice_, other->selected_choice_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_VoteEnd::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_BoosterStatePlayer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_BoosterStatePlayer::kPlayerIdFieldNumber;
const int CDOTAUserMsg_BoosterStatePlayer::kBonusFieldNumber;
const int CDOTAUserMsg_BoosterStatePlayer::kEventBonusFieldNumber;
const int CDOTAUserMsg_BoosterStatePlayer::kBonusItemIdFieldNumber;
const int CDOTAUserMsg_BoosterStatePlayer::kEventBonusItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_BoosterStatePlayer::CDOTAUserMsg_BoosterStatePlayer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_BoosterStatePlayer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_BoosterStatePlayer)
}
CDOTAUserMsg_BoosterStatePlayer::CDOTAUserMsg_BoosterStatePlayer(const CDOTAUserMsg_BoosterStatePlayer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&event_bonus_item_id_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(event_bonus_item_id_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_BoosterStatePlayer)
}

void CDOTAUserMsg_BoosterStatePlayer::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&event_bonus_item_id_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(event_bonus_item_id_));
}

CDOTAUserMsg_BoosterStatePlayer::~CDOTAUserMsg_BoosterStatePlayer() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_BoosterStatePlayer)
  SharedDtor();
}

void CDOTAUserMsg_BoosterStatePlayer::SharedDtor() {
}

void CDOTAUserMsg_BoosterStatePlayer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_BoosterStatePlayer::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_BoosterStatePlayer& CDOTAUserMsg_BoosterStatePlayer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_BoosterStatePlayer.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_BoosterStatePlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_BoosterStatePlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&event_bonus_item_id_) -
        reinterpret_cast<char*>(&player_id_)) + sizeof(event_bonus_item_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_BoosterStatePlayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_BoosterStatePlayer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float bonus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_bonus();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bonus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float event_bonus = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_event_bonus();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &event_bonus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 bonus_item_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_bonus_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bonus_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 event_bonus_item_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_event_bonus_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &event_bonus_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_BoosterStatePlayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_BoosterStatePlayer)
  return false;
#undef DO_
}

void CDOTAUserMsg_BoosterStatePlayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_BoosterStatePlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // optional float bonus = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->bonus(), output);
  }

  // optional float event_bonus = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->event_bonus(), output);
  }

  // optional uint32 bonus_item_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->bonus_item_id(), output);
  }

  // optional uint32 event_bonus_item_id = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->event_bonus_item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_BoosterStatePlayer)
}

::google::protobuf::uint8* CDOTAUserMsg_BoosterStatePlayer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_BoosterStatePlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // optional float bonus = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->bonus(), target);
  }

  // optional float event_bonus = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->event_bonus(), target);
  }

  // optional uint32 bonus_item_id = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->bonus_item_id(), target);
  }

  // optional uint32 event_bonus_item_id = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->event_bonus_item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_BoosterStatePlayer)
  return target;
}

size_t CDOTAUserMsg_BoosterStatePlayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_BoosterStatePlayer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional uint32 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->player_id());
    }

    // optional float bonus = 2;
    if (has_bonus()) {
      total_size += 1 + 4;
    }

    // optional float event_bonus = 3;
    if (has_event_bonus()) {
      total_size += 1 + 4;
    }

    // optional uint32 bonus_item_id = 4;
    if (has_bonus_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bonus_item_id());
    }

    // optional uint32 event_bonus_item_id = 5;
    if (has_event_bonus_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->event_bonus_item_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_BoosterStatePlayer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_BoosterStatePlayer)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_BoosterStatePlayer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_BoosterStatePlayer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_BoosterStatePlayer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_BoosterStatePlayer)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_BoosterStatePlayer::MergeFrom(const CDOTAUserMsg_BoosterStatePlayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_BoosterStatePlayer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      bonus_ = from.bonus_;
    }
    if (cached_has_bits & 0x00000004u) {
      event_bonus_ = from.event_bonus_;
    }
    if (cached_has_bits & 0x00000008u) {
      bonus_item_id_ = from.bonus_item_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      event_bonus_item_id_ = from.event_bonus_item_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_BoosterStatePlayer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_BoosterStatePlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_BoosterStatePlayer::CopyFrom(const CDOTAUserMsg_BoosterStatePlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_BoosterStatePlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_BoosterStatePlayer::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_BoosterStatePlayer::Swap(CDOTAUserMsg_BoosterStatePlayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_BoosterStatePlayer::InternalSwap(CDOTAUserMsg_BoosterStatePlayer* other) {
  using std::swap;
  swap(player_id_, other->player_id_);
  swap(bonus_, other->bonus_);
  swap(event_bonus_, other->event_bonus_);
  swap(bonus_item_id_, other->bonus_item_id_);
  swap(event_bonus_item_id_, other->event_bonus_item_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_BoosterStatePlayer::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_BoosterState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_BoosterState::kBoostedPlayersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_BoosterState::CDOTAUserMsg_BoosterState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_BoosterState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_BoosterState)
}
CDOTAUserMsg_BoosterState::CDOTAUserMsg_BoosterState(const CDOTAUserMsg_BoosterState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      boosted_players_(from.boosted_players_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_BoosterState)
}

void CDOTAUserMsg_BoosterState::SharedCtor() {
}

CDOTAUserMsg_BoosterState::~CDOTAUserMsg_BoosterState() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_BoosterState)
  SharedDtor();
}

void CDOTAUserMsg_BoosterState::SharedDtor() {
}

void CDOTAUserMsg_BoosterState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_BoosterState::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_BoosterState& CDOTAUserMsg_BoosterState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_BoosterState.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_BoosterState::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_BoosterState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  boosted_players_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_BoosterState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_BoosterState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_boosted_players()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_BoosterState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_BoosterState)
  return false;
#undef DO_
}

void CDOTAUserMsg_BoosterState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_BoosterState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->boosted_players_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->boosted_players(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_BoosterState)
}

::google::protobuf::uint8* CDOTAUserMsg_BoosterState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_BoosterState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->boosted_players_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->boosted_players(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_BoosterState)
  return target;
}

size_t CDOTAUserMsg_BoosterState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_BoosterState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->boosted_players_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->boosted_players(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_BoosterState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_BoosterState)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_BoosterState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_BoosterState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_BoosterState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_BoosterState)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_BoosterState::MergeFrom(const CDOTAUserMsg_BoosterState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_BoosterState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  boosted_players_.MergeFrom(from.boosted_players_);
}

void CDOTAUserMsg_BoosterState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_BoosterState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_BoosterState::CopyFrom(const CDOTAUserMsg_BoosterState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_BoosterState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_BoosterState::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_BoosterState::Swap(CDOTAUserMsg_BoosterState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_BoosterState::InternalSwap(CDOTAUserMsg_BoosterState* other) {
  using std::swap;
  CastToBase(&boosted_players_)->InternalSwap(CastToBase(&other->boosted_players_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_BoosterState::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_PlayerMMR::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_PlayerMMR::kMmrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_PlayerMMR::CDOTAUserMsg_PlayerMMR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_PlayerMMR.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_PlayerMMR)
}
CDOTAUserMsg_PlayerMMR::CDOTAUserMsg_PlayerMMR(const CDOTAUserMsg_PlayerMMR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      mmr_(from.mmr_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_PlayerMMR)
}

void CDOTAUserMsg_PlayerMMR::SharedCtor() {
}

CDOTAUserMsg_PlayerMMR::~CDOTAUserMsg_PlayerMMR() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_PlayerMMR)
  SharedDtor();
}

void CDOTAUserMsg_PlayerMMR::SharedDtor() {
}

void CDOTAUserMsg_PlayerMMR::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_PlayerMMR::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_PlayerMMR& CDOTAUserMsg_PlayerMMR::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_PlayerMMR.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_PlayerMMR::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_PlayerMMR)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mmr_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_PlayerMMR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_PlayerMMR)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint32 mmr = 1 [packed = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_mmr())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 10u, input, this->mutable_mmr())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_PlayerMMR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_PlayerMMR)
  return false;
#undef DO_
}

void CDOTAUserMsg_PlayerMMR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_PlayerMMR)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 mmr = 1 [packed = true];
  if (this->mmr_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _mmr_cached_byte_size_));
  }
  for (int i = 0, n = this->mmr_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->mmr(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_PlayerMMR)
}

::google::protobuf::uint8* CDOTAUserMsg_PlayerMMR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_PlayerMMR)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 mmr = 1 [packed = true];
  if (this->mmr_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _mmr_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->mmr_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_PlayerMMR)
  return target;
}

size_t CDOTAUserMsg_PlayerMMR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_PlayerMMR)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated sint32 mmr = 1 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->mmr_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _mmr_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_PlayerMMR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_PlayerMMR)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_PlayerMMR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_PlayerMMR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_PlayerMMR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_PlayerMMR)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_PlayerMMR::MergeFrom(const CDOTAUserMsg_PlayerMMR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_PlayerMMR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mmr_.MergeFrom(from.mmr_);
}

void CDOTAUserMsg_PlayerMMR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_PlayerMMR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_PlayerMMR::CopyFrom(const CDOTAUserMsg_PlayerMMR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_PlayerMMR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_PlayerMMR::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_PlayerMMR::Swap(CDOTAUserMsg_PlayerMMR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_PlayerMMR::InternalSwap(CDOTAUserMsg_PlayerMMR* other) {
  using std::swap;
  mmr_.InternalSwap(&other->mmr_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_PlayerMMR::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_AbilitySteal::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_AbilitySteal::kPlayerIdFieldNumber;
const int CDOTAUserMsg_AbilitySteal::kAbilityIdFieldNumber;
const int CDOTAUserMsg_AbilitySteal::kAbilityLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_AbilitySteal::CDOTAUserMsg_AbilitySteal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_AbilitySteal.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_AbilitySteal)
}
CDOTAUserMsg_AbilitySteal::CDOTAUserMsg_AbilitySteal(const CDOTAUserMsg_AbilitySteal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&ability_level_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(ability_level_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_AbilitySteal)
}

void CDOTAUserMsg_AbilitySteal::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ability_level_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(ability_level_));
}

CDOTAUserMsg_AbilitySteal::~CDOTAUserMsg_AbilitySteal() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_AbilitySteal)
  SharedDtor();
}

void CDOTAUserMsg_AbilitySteal::SharedDtor() {
}

void CDOTAUserMsg_AbilitySteal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_AbilitySteal::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_AbilitySteal& CDOTAUserMsg_AbilitySteal::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_AbilitySteal.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_AbilitySteal::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_AbilitySteal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ability_level_) -
        reinterpret_cast<char*>(&player_id_)) + sizeof(ability_level_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_AbilitySteal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_AbilitySteal)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ability_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_ability_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ability_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ability_level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_ability_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ability_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_AbilitySteal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_AbilitySteal)
  return false;
#undef DO_
}

void CDOTAUserMsg_AbilitySteal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_AbilitySteal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // optional uint32 ability_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ability_id(), output);
  }

  // optional uint32 ability_level = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ability_level(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_AbilitySteal)
}

::google::protobuf::uint8* CDOTAUserMsg_AbilitySteal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_AbilitySteal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // optional uint32 ability_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ability_id(), target);
  }

  // optional uint32 ability_level = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ability_level(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_AbilitySteal)
  return target;
}

size_t CDOTAUserMsg_AbilitySteal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_AbilitySteal)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->player_id());
    }

    // optional uint32 ability_id = 2;
    if (has_ability_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ability_id());
    }

    // optional uint32 ability_level = 3;
    if (has_ability_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ability_level());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_AbilitySteal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_AbilitySteal)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_AbilitySteal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_AbilitySteal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_AbilitySteal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_AbilitySteal)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_AbilitySteal::MergeFrom(const CDOTAUserMsg_AbilitySteal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_AbilitySteal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      ability_id_ = from.ability_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      ability_level_ = from.ability_level_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_AbilitySteal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_AbilitySteal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_AbilitySteal::CopyFrom(const CDOTAUserMsg_AbilitySteal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_AbilitySteal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_AbilitySteal::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_AbilitySteal::Swap(CDOTAUserMsg_AbilitySteal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_AbilitySteal::InternalSwap(CDOTAUserMsg_AbilitySteal* other) {
  using std::swap;
  swap(player_id_, other->player_id_);
  swap(ability_id_, other->ability_id_);
  swap(ability_level_, other->ability_level_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_AbilitySteal::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_StatsHeroLookup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_StatsHeroLookup::kPlayerIdFieldNumber;
const int CDOTAUserMsg_StatsHeroLookup::kHeroIdFieldNumber;
const int CDOTAUserMsg_StatsHeroLookup::kHeroNameFieldNumber;
const int CDOTAUserMsg_StatsHeroLookup::kPersonaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_StatsHeroLookup::CDOTAUserMsg_StatsHeroLookup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_StatsHeroLookup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_StatsHeroLookup)
}
CDOTAUserMsg_StatsHeroLookup::CDOTAUserMsg_StatsHeroLookup(const CDOTAUserMsg_StatsHeroLookup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hero_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hero_name()) {
    hero_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hero_name_);
  }
  persona_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_persona()) {
    persona_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.persona_);
  }
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&hero_id_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(hero_id_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_StatsHeroLookup)
}

void CDOTAUserMsg_StatsHeroLookup::SharedCtor() {
  hero_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  persona_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hero_id_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(hero_id_));
}

CDOTAUserMsg_StatsHeroLookup::~CDOTAUserMsg_StatsHeroLookup() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_StatsHeroLookup)
  SharedDtor();
}

void CDOTAUserMsg_StatsHeroLookup::SharedDtor() {
  hero_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  persona_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTAUserMsg_StatsHeroLookup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_StatsHeroLookup::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_StatsHeroLookup& CDOTAUserMsg_StatsHeroLookup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_StatsHeroLookup.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_StatsHeroLookup::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_StatsHeroLookup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      hero_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      persona_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&hero_id_) -
        reinterpret_cast<char*>(&player_id_)) + sizeof(hero_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_StatsHeroLookup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_StatsHeroLookup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 hero_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_hero_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hero_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string hero_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hero_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hero_name().data(), static_cast<int>(this->hero_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_StatsHeroLookup.hero_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string persona = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_persona()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->persona().data(), static_cast<int>(this->persona().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_StatsHeroLookup.persona");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_StatsHeroLookup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_StatsHeroLookup)
  return false;
#undef DO_
}

void CDOTAUserMsg_StatsHeroLookup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_StatsHeroLookup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 player_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->player_id(), output);
  }

  // optional int32 hero_id = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->hero_id(), output);
  }

  // optional string hero_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hero_name().data(), static_cast<int>(this->hero_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_StatsHeroLookup.hero_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->hero_name(), output);
  }

  // optional string persona = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->persona().data(), static_cast<int>(this->persona().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_StatsHeroLookup.persona");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->persona(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_StatsHeroLookup)
}

::google::protobuf::uint8* CDOTAUserMsg_StatsHeroLookup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_StatsHeroLookup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 player_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->player_id(), target);
  }

  // optional int32 hero_id = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->hero_id(), target);
  }

  // optional string hero_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hero_name().data(), static_cast<int>(this->hero_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_StatsHeroLookup.hero_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->hero_name(), target);
  }

  // optional string persona = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->persona().data(), static_cast<int>(this->persona().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_StatsHeroLookup.persona");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->persona(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_StatsHeroLookup)
  return target;
}

size_t CDOTAUserMsg_StatsHeroLookup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_StatsHeroLookup)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string hero_name = 3;
    if (has_hero_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hero_name());
    }

    // optional string persona = 4;
    if (has_persona()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->persona());
    }

    // optional int32 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player_id());
    }

    // optional int32 hero_id = 2;
    if (has_hero_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hero_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_StatsHeroLookup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_StatsHeroLookup)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_StatsHeroLookup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_StatsHeroLookup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_StatsHeroLookup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_StatsHeroLookup)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_StatsHeroLookup::MergeFrom(const CDOTAUserMsg_StatsHeroLookup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_StatsHeroLookup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_hero_name();
      hero_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hero_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_persona();
      persona_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.persona_);
    }
    if (cached_has_bits & 0x00000004u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      hero_id_ = from.hero_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_StatsHeroLookup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_StatsHeroLookup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_StatsHeroLookup::CopyFrom(const CDOTAUserMsg_StatsHeroLookup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_StatsHeroLookup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_StatsHeroLookup::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_StatsHeroLookup::Swap(CDOTAUserMsg_StatsHeroLookup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_StatsHeroLookup::InternalSwap(CDOTAUserMsg_StatsHeroLookup* other) {
  using std::swap;
  hero_name_.Swap(&other->hero_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  persona_.Swap(&other->persona_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(player_id_, other->player_id_);
  swap(hero_id_, other->hero_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_StatsHeroLookup::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::kPositionCategoryFieldNumber;
const int CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::kPositionCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_StatsHeroPositionInfo_PositionPair.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_StatsHeroPositionInfo.PositionPair)
}
CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair(const CDOTAUserMsg_StatsHeroPositionInfo_PositionPair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&position_category_, &from.position_category_,
    static_cast<size_t>(reinterpret_cast<char*>(&position_count_) -
    reinterpret_cast<char*>(&position_category_)) + sizeof(position_count_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_StatsHeroPositionInfo.PositionPair)
}

void CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::SharedCtor() {
  ::memset(&position_category_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&position_count_) -
      reinterpret_cast<char*>(&position_category_)) + sizeof(position_count_));
}

CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::~CDOTAUserMsg_StatsHeroPositionInfo_PositionPair() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_StatsHeroPositionInfo.PositionPair)
  SharedDtor();
}

void CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::SharedDtor() {
}

void CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_StatsHeroPositionInfo_PositionPair& CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_StatsHeroPositionInfo_PositionPair.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_StatsHeroPositionInfo.PositionPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&position_category_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&position_count_) -
        reinterpret_cast<char*>(&position_category_)) + sizeof(position_count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_StatsHeroPositionInfo.PositionPair)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .DOTA_POSITION_CATEGORY position_category = 1 [default = DOTA_POSITION_NONE];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::DOTA_POSITION_CATEGORY_IsValid(value)) {
            set_position_category(static_cast< ::DOTA_POSITION_CATEGORY >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 position_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_position_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &position_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_StatsHeroPositionInfo.PositionPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_StatsHeroPositionInfo.PositionPair)
  return false;
#undef DO_
}

void CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_StatsHeroPositionInfo.PositionPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .DOTA_POSITION_CATEGORY position_category = 1 [default = DOTA_POSITION_NONE];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->position_category(), output);
  }

  // optional uint32 position_count = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->position_count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_StatsHeroPositionInfo.PositionPair)
}

::google::protobuf::uint8* CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_StatsHeroPositionInfo.PositionPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .DOTA_POSITION_CATEGORY position_category = 1 [default = DOTA_POSITION_NONE];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->position_category(), target);
  }

  // optional uint32 position_count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->position_count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_StatsHeroPositionInfo.PositionPair)
  return target;
}

size_t CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_StatsHeroPositionInfo.PositionPair)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .DOTA_POSITION_CATEGORY position_category = 1 [default = DOTA_POSITION_NONE];
    if (has_position_category()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->position_category());
    }

    // optional uint32 position_count = 2;
    if (has_position_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->position_count());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_StatsHeroPositionInfo.PositionPair)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_StatsHeroPositionInfo_PositionPair* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_StatsHeroPositionInfo_PositionPair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_StatsHeroPositionInfo.PositionPair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_StatsHeroPositionInfo.PositionPair)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::MergeFrom(const CDOTAUserMsg_StatsHeroPositionInfo_PositionPair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_StatsHeroPositionInfo.PositionPair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      position_category_ = from.position_category_;
    }
    if (cached_has_bits & 0x00000002u) {
      position_count_ = from.position_count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_StatsHeroPositionInfo.PositionPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::CopyFrom(const CDOTAUserMsg_StatsHeroPositionInfo_PositionPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_StatsHeroPositionInfo.PositionPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::Swap(CDOTAUserMsg_StatsHeroPositionInfo_PositionPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::InternalSwap(CDOTAUserMsg_StatsHeroPositionInfo_PositionPair* other) {
  using std::swap;
  swap(position_category_, other->position_category_);
  swap(position_count_, other->position_count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_StatsHeroPositionInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_StatsHeroPositionInfo::kAveragePositionFieldNumber;
const int CDOTAUserMsg_StatsHeroPositionInfo::kPositionDetailsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_StatsHeroPositionInfo::CDOTAUserMsg_StatsHeroPositionInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_StatsHeroPositionInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_StatsHeroPositionInfo)
}
CDOTAUserMsg_StatsHeroPositionInfo::CDOTAUserMsg_StatsHeroPositionInfo(const CDOTAUserMsg_StatsHeroPositionInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      position_details_(from.position_details_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  average_position_ = from.average_position_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_StatsHeroPositionInfo)
}

void CDOTAUserMsg_StatsHeroPositionInfo::SharedCtor() {
  average_position_ = 0;
}

CDOTAUserMsg_StatsHeroPositionInfo::~CDOTAUserMsg_StatsHeroPositionInfo() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_StatsHeroPositionInfo)
  SharedDtor();
}

void CDOTAUserMsg_StatsHeroPositionInfo::SharedDtor() {
}

void CDOTAUserMsg_StatsHeroPositionInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_StatsHeroPositionInfo::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_StatsHeroPositionInfo& CDOTAUserMsg_StatsHeroPositionInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_StatsHeroPositionInfo.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_StatsHeroPositionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_StatsHeroPositionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  position_details_.Clear();
  average_position_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_StatsHeroPositionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_StatsHeroPositionInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float average_position = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_average_position();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &average_position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_position_details()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_StatsHeroPositionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_StatsHeroPositionInfo)
  return false;
#undef DO_
}

void CDOTAUserMsg_StatsHeroPositionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_StatsHeroPositionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float average_position = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->average_position(), output);
  }

  // repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->position_details_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->position_details(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_StatsHeroPositionInfo)
}

::google::protobuf::uint8* CDOTAUserMsg_StatsHeroPositionInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_StatsHeroPositionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float average_position = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->average_position(), target);
  }

  // repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->position_details_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->position_details(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_StatsHeroPositionInfo)
  return target;
}

size_t CDOTAUserMsg_StatsHeroPositionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_StatsHeroPositionInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->position_details_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->position_details(static_cast<int>(i)));
    }
  }

  // optional float average_position = 1;
  if (has_average_position()) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_StatsHeroPositionInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_StatsHeroPositionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_StatsHeroPositionInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_StatsHeroPositionInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_StatsHeroPositionInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_StatsHeroPositionInfo)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_StatsHeroPositionInfo::MergeFrom(const CDOTAUserMsg_StatsHeroPositionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_StatsHeroPositionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  position_details_.MergeFrom(from.position_details_);
  if (from.has_average_position()) {
    set_average_position(from.average_position());
  }
}

void CDOTAUserMsg_StatsHeroPositionInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_StatsHeroPositionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_StatsHeroPositionInfo::CopyFrom(const CDOTAUserMsg_StatsHeroPositionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_StatsHeroPositionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_StatsHeroPositionInfo::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_StatsHeroPositionInfo::Swap(CDOTAUserMsg_StatsHeroPositionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_StatsHeroPositionInfo::InternalSwap(CDOTAUserMsg_StatsHeroPositionInfo* other) {
  using std::swap;
  CastToBase(&position_details_)->InternalSwap(CastToBase(&other->position_details_));
  swap(average_position_, other->average_position_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_StatsHeroPositionInfo::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_StatsHeroMinuteDetails::InitAsDefaultInstance() {
  ::_CDOTAUserMsg_StatsHeroMinuteDetails_default_instance_._instance.get_mutable()->position_info_ = const_cast< ::CDOTAUserMsg_StatsHeroPositionInfo*>(
      ::CDOTAUserMsg_StatsHeroPositionInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_StatsHeroMinuteDetails::kLastHitsFieldNumber;
const int CDOTAUserMsg_StatsHeroMinuteDetails::kHeroKillsFieldNumber;
const int CDOTAUserMsg_StatsHeroMinuteDetails::kHeroDamageFieldNumber;
const int CDOTAUserMsg_StatsHeroMinuteDetails::kTowerDamageFieldNumber;
const int CDOTAUserMsg_StatsHeroMinuteDetails::kPositionInfoFieldNumber;
const int CDOTAUserMsg_StatsHeroMinuteDetails::kTotalXpFieldNumber;
const int CDOTAUserMsg_StatsHeroMinuteDetails::kNetWorthFieldNumber;
const int CDOTAUserMsg_StatsHeroMinuteDetails::kHarvestedCreepGoldFieldNumber;
const int CDOTAUserMsg_StatsHeroMinuteDetails::kClaimedFarmFieldNumber;
const int CDOTAUserMsg_StatsHeroMinuteDetails::kWardsPlacedFieldNumber;
const int CDOTAUserMsg_StatsHeroMinuteDetails::kRunesCollectedFieldNumber;
const int CDOTAUserMsg_StatsHeroMinuteDetails::kTpsUsedFieldNumber;
const int CDOTAUserMsg_StatsHeroMinuteDetails::kManaSpentFieldNumber;
const int CDOTAUserMsg_StatsHeroMinuteDetails::kDamageAbsorbedFieldNumber;
const int CDOTAUserMsg_StatsHeroMinuteDetails::kDamageDoneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_StatsHeroMinuteDetails::CDOTAUserMsg_StatsHeroMinuteDetails()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_StatsHeroMinuteDetails.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_StatsHeroMinuteDetails)
}
CDOTAUserMsg_StatsHeroMinuteDetails::CDOTAUserMsg_StatsHeroMinuteDetails(const CDOTAUserMsg_StatsHeroMinuteDetails& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      mana_spent_(from.mana_spent_),
      damage_absorbed_(from.damage_absorbed_),
      damage_done_(from.damage_done_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position_info()) {
    position_info_ = new ::CDOTAUserMsg_StatsHeroPositionInfo(*from.position_info_);
  } else {
    position_info_ = NULL;
  }
  ::memcpy(&last_hits_, &from.last_hits_,
    static_cast<size_t>(reinterpret_cast<char*>(&tps_used_) -
    reinterpret_cast<char*>(&last_hits_)) + sizeof(tps_used_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_StatsHeroMinuteDetails)
}

void CDOTAUserMsg_StatsHeroMinuteDetails::SharedCtor() {
  ::memset(&position_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tps_used_) -
      reinterpret_cast<char*>(&position_info_)) + sizeof(tps_used_));
}

CDOTAUserMsg_StatsHeroMinuteDetails::~CDOTAUserMsg_StatsHeroMinuteDetails() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_StatsHeroMinuteDetails)
  SharedDtor();
}

void CDOTAUserMsg_StatsHeroMinuteDetails::SharedDtor() {
  if (this != internal_default_instance()) delete position_info_;
}

void CDOTAUserMsg_StatsHeroMinuteDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_StatsHeroMinuteDetails::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_StatsHeroMinuteDetails& CDOTAUserMsg_StatsHeroMinuteDetails::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_StatsHeroMinuteDetails.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_StatsHeroMinuteDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_StatsHeroMinuteDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mana_spent_.Clear();
  damage_absorbed_.Clear();
  damage_done_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(position_info_ != NULL);
    position_info_->Clear();
  }
  if (cached_has_bits & 254u) {
    ::memset(&last_hits_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&harvested_creep_gold_) -
        reinterpret_cast<char*>(&last_hits_)) + sizeof(harvested_creep_gold_));
  }
  if (cached_has_bits & 3840u) {
    ::memset(&claimed_farm_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tps_used_) -
        reinterpret_cast<char*>(&claimed_farm_)) + sizeof(tps_used_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_StatsHeroMinuteDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_StatsHeroMinuteDetails)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 last_hits = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_last_hits();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_hits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 hero_kills = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_hero_kills();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hero_kills_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 hero_damage = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_hero_damage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hero_damage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 tower_damage = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_tower_damage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tower_damage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CDOTAUserMsg_StatsHeroPositionInfo position_info = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 total_xp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_total_xp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_xp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 net_worth = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_net_worth();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &net_worth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 harvested_creep_gold = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_harvested_creep_gold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &harvested_creep_gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 claimed_farm = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_claimed_farm();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &claimed_farm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 wards_placed = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_wards_placed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wards_placed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 runes_collected = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_runes_collected();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &runes_collected_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 tps_used = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_tps_used();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tps_used_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 mana_spent = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 104u, input, this->mutable_mana_spent())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_mana_spent())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 damage_absorbed = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 112u, input, this->mutable_damage_absorbed())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_damage_absorbed())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 damage_done = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 120u, input, this->mutable_damage_done())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_damage_done())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_StatsHeroMinuteDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_StatsHeroMinuteDetails)
  return false;
#undef DO_
}

void CDOTAUserMsg_StatsHeroMinuteDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_StatsHeroMinuteDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 last_hits = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->last_hits(), output);
  }

  // optional uint32 hero_kills = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hero_kills(), output);
  }

  // optional uint32 hero_damage = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->hero_damage(), output);
  }

  // optional uint32 tower_damage = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->tower_damage(), output);
  }

  // optional .CDOTAUserMsg_StatsHeroPositionInfo position_info = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_position_info(), output);
  }

  // optional uint32 total_xp = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->total_xp(), output);
  }

  // optional uint32 net_worth = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->net_worth(), output);
  }

  // optional uint32 harvested_creep_gold = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->harvested_creep_gold(), output);
  }

  // optional uint32 claimed_farm = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->claimed_farm(), output);
  }

  // optional uint32 wards_placed = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->wards_placed(), output);
  }

  // optional uint32 runes_collected = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->runes_collected(), output);
  }

  // optional uint32 tps_used = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->tps_used(), output);
  }

  // repeated uint32 mana_spent = 13;
  for (int i = 0, n = this->mana_spent_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      13, this->mana_spent(i), output);
  }

  // repeated uint32 damage_absorbed = 14;
  for (int i = 0, n = this->damage_absorbed_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      14, this->damage_absorbed(i), output);
  }

  // repeated uint32 damage_done = 15;
  for (int i = 0, n = this->damage_done_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      15, this->damage_done(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_StatsHeroMinuteDetails)
}

::google::protobuf::uint8* CDOTAUserMsg_StatsHeroMinuteDetails::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_StatsHeroMinuteDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 last_hits = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->last_hits(), target);
  }

  // optional uint32 hero_kills = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hero_kills(), target);
  }

  // optional uint32 hero_damage = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->hero_damage(), target);
  }

  // optional uint32 tower_damage = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->tower_damage(), target);
  }

  // optional .CDOTAUserMsg_StatsHeroPositionInfo position_info = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_position_info(), deterministic, target);
  }

  // optional uint32 total_xp = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->total_xp(), target);
  }

  // optional uint32 net_worth = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->net_worth(), target);
  }

  // optional uint32 harvested_creep_gold = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->harvested_creep_gold(), target);
  }

  // optional uint32 claimed_farm = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->claimed_farm(), target);
  }

  // optional uint32 wards_placed = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->wards_placed(), target);
  }

  // optional uint32 runes_collected = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->runes_collected(), target);
  }

  // optional uint32 tps_used = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->tps_used(), target);
  }

  // repeated uint32 mana_spent = 13;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(13, this->mana_spent_, target);

  // repeated uint32 damage_absorbed = 14;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(14, this->damage_absorbed_, target);

  // repeated uint32 damage_done = 15;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(15, this->damage_done_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_StatsHeroMinuteDetails)
  return target;
}

size_t CDOTAUserMsg_StatsHeroMinuteDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_StatsHeroMinuteDetails)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 mana_spent = 13;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->mana_spent_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->mana_spent_size());
    total_size += data_size;
  }

  // repeated uint32 damage_absorbed = 14;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->damage_absorbed_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->damage_absorbed_size());
    total_size += data_size;
  }

  // repeated uint32 damage_done = 15;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->damage_done_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->damage_done_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional .CDOTAUserMsg_StatsHeroPositionInfo position_info = 5;
    if (has_position_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *position_info_);
    }

    // optional uint32 last_hits = 1;
    if (has_last_hits()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_hits());
    }

    // optional uint32 hero_kills = 2;
    if (has_hero_kills()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hero_kills());
    }

    // optional uint32 hero_damage = 3;
    if (has_hero_damage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hero_damage());
    }

    // optional uint32 tower_damage = 4;
    if (has_tower_damage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tower_damage());
    }

    // optional uint32 total_xp = 6;
    if (has_total_xp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_xp());
    }

    // optional uint32 net_worth = 7;
    if (has_net_worth()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->net_worth());
    }

    // optional uint32 harvested_creep_gold = 8;
    if (has_harvested_creep_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->harvested_creep_gold());
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional uint32 claimed_farm = 9;
    if (has_claimed_farm()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->claimed_farm());
    }

    // optional uint32 wards_placed = 10;
    if (has_wards_placed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->wards_placed());
    }

    // optional uint32 runes_collected = 11;
    if (has_runes_collected()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->runes_collected());
    }

    // optional uint32 tps_used = 12;
    if (has_tps_used()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tps_used());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_StatsHeroMinuteDetails::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_StatsHeroMinuteDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_StatsHeroMinuteDetails* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_StatsHeroMinuteDetails>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_StatsHeroMinuteDetails)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_StatsHeroMinuteDetails)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_StatsHeroMinuteDetails::MergeFrom(const CDOTAUserMsg_StatsHeroMinuteDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_StatsHeroMinuteDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mana_spent_.MergeFrom(from.mana_spent_);
  damage_absorbed_.MergeFrom(from.damage_absorbed_);
  damage_done_.MergeFrom(from.damage_done_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_position_info()->::CDOTAUserMsg_StatsHeroPositionInfo::MergeFrom(from.position_info());
    }
    if (cached_has_bits & 0x00000002u) {
      last_hits_ = from.last_hits_;
    }
    if (cached_has_bits & 0x00000004u) {
      hero_kills_ = from.hero_kills_;
    }
    if (cached_has_bits & 0x00000008u) {
      hero_damage_ = from.hero_damage_;
    }
    if (cached_has_bits & 0x00000010u) {
      tower_damage_ = from.tower_damage_;
    }
    if (cached_has_bits & 0x00000020u) {
      total_xp_ = from.total_xp_;
    }
    if (cached_has_bits & 0x00000040u) {
      net_worth_ = from.net_worth_;
    }
    if (cached_has_bits & 0x00000080u) {
      harvested_creep_gold_ = from.harvested_creep_gold_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      claimed_farm_ = from.claimed_farm_;
    }
    if (cached_has_bits & 0x00000200u) {
      wards_placed_ = from.wards_placed_;
    }
    if (cached_has_bits & 0x00000400u) {
      runes_collected_ = from.runes_collected_;
    }
    if (cached_has_bits & 0x00000800u) {
      tps_used_ = from.tps_used_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_StatsHeroMinuteDetails::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_StatsHeroMinuteDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_StatsHeroMinuteDetails::CopyFrom(const CDOTAUserMsg_StatsHeroMinuteDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_StatsHeroMinuteDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_StatsHeroMinuteDetails::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_StatsHeroMinuteDetails::Swap(CDOTAUserMsg_StatsHeroMinuteDetails* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_StatsHeroMinuteDetails::InternalSwap(CDOTAUserMsg_StatsHeroMinuteDetails* other) {
  using std::swap;
  mana_spent_.InternalSwap(&other->mana_spent_);
  damage_absorbed_.InternalSwap(&other->damage_absorbed_);
  damage_done_.InternalSwap(&other->damage_done_);
  swap(position_info_, other->position_info_);
  swap(last_hits_, other->last_hits_);
  swap(hero_kills_, other->hero_kills_);
  swap(hero_damage_, other->hero_damage_);
  swap(tower_damage_, other->tower_damage_);
  swap(total_xp_, other->total_xp_);
  swap(net_worth_, other->net_worth_);
  swap(harvested_creep_gold_, other->harvested_creep_gold_);
  swap(claimed_farm_, other->claimed_farm_);
  swap(wards_placed_, other->wards_placed_);
  swap(runes_collected_, other->runes_collected_);
  swap(tps_used_, other->tps_used_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_StatsHeroMinuteDetails::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::kLocationCategoryFieldNumber;
const int CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::kStatTypeFieldNumber;
const int CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance)
}
CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance(const CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&location_category_, &from.location_category_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&location_category_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance)
}

void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::SharedCtor() {
  ::memset(&location_category_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&location_category_)) + sizeof(value_));
}

CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::~CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance)
  SharedDtor();
}

void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::SharedDtor() {
}

void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance& CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&location_category_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&value_) -
        reinterpret_cast<char*>(&location_category_)) + sizeof(value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 location_category = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_location_category();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &location_category_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 stat_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_stat_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stat_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance)
  return false;
#undef DO_
}

void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 location_category = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->location_category(), output);
  }

  // optional uint32 stat_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->stat_type(), output);
  }

  // optional uint32 value = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance)
}

::google::protobuf::uint8* CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 location_category = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->location_category(), target);
  }

  // optional uint32 stat_type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->stat_type(), target);
  }

  // optional uint32 value = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance)
  return target;
}

size_t CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 location_category = 1;
    if (has_location_category()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->location_category());
    }

    // optional uint32 stat_type = 2;
    if (has_stat_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stat_type());
    }

    // optional uint32 value = 3;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::MergeFrom(const CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      location_category_ = from.location_category_;
    }
    if (cached_has_bits & 0x00000002u) {
      stat_type_ = from.stat_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      value_ = from.value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::CopyFrom(const CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::Swap(CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::InternalSwap(CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance* other) {
  using std::swap;
  swap(location_category_, other->location_category_);
  swap(stat_type_, other->stat_type_);
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_StatsTeamMinuteDetails::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_StatsTeamMinuteDetails::kPlayerStatsFieldNumber;
const int CDOTAUserMsg_StatsTeamMinuteDetails::kTowerKillsFieldNumber;
const int CDOTAUserMsg_StatsTeamMinuteDetails::kBarrackKillsFieldNumber;
const int CDOTAUserMsg_StatsTeamMinuteDetails::kAvailableLaneCreepGoldFieldNumber;
const int CDOTAUserMsg_StatsTeamMinuteDetails::kBalanceKillValueFieldNumber;
const int CDOTAUserMsg_StatsTeamMinuteDetails::kBalanceTowerValueFieldNumber;
const int CDOTAUserMsg_StatsTeamMinuteDetails::kBalanceBarracksValueFieldNumber;
const int CDOTAUserMsg_StatsTeamMinuteDetails::kBalanceGoldValueFieldNumber;
const int CDOTAUserMsg_StatsTeamMinuteDetails::kBalanceXpValueFieldNumber;
const int CDOTAUserMsg_StatsTeamMinuteDetails::kLanePerformanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_StatsTeamMinuteDetails::CDOTAUserMsg_StatsTeamMinuteDetails()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_StatsTeamMinuteDetails.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_StatsTeamMinuteDetails)
}
CDOTAUserMsg_StatsTeamMinuteDetails::CDOTAUserMsg_StatsTeamMinuteDetails(const CDOTAUserMsg_StatsTeamMinuteDetails& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      player_stats_(from.player_stats_),
      lane_performance_(from.lane_performance_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&tower_kills_, &from.tower_kills_,
    static_cast<size_t>(reinterpret_cast<char*>(&balance_xp_value_) -
    reinterpret_cast<char*>(&tower_kills_)) + sizeof(balance_xp_value_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_StatsTeamMinuteDetails)
}

void CDOTAUserMsg_StatsTeamMinuteDetails::SharedCtor() {
  ::memset(&tower_kills_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&balance_xp_value_) -
      reinterpret_cast<char*>(&tower_kills_)) + sizeof(balance_xp_value_));
}

CDOTAUserMsg_StatsTeamMinuteDetails::~CDOTAUserMsg_StatsTeamMinuteDetails() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_StatsTeamMinuteDetails)
  SharedDtor();
}

void CDOTAUserMsg_StatsTeamMinuteDetails::SharedDtor() {
}

void CDOTAUserMsg_StatsTeamMinuteDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_StatsTeamMinuteDetails::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_StatsTeamMinuteDetails& CDOTAUserMsg_StatsTeamMinuteDetails::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_StatsTeamMinuteDetails.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_StatsTeamMinuteDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_StatsTeamMinuteDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_stats_.Clear();
  lane_performance_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&tower_kills_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&balance_xp_value_) -
        reinterpret_cast<char*>(&tower_kills_)) + sizeof(balance_xp_value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_StatsTeamMinuteDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_StatsTeamMinuteDetails)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_player_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 tower_kills = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_tower_kills();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tower_kills_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 barrack_kills = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_barrack_kills();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &barrack_kills_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 available_lane_creep_gold = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_available_lane_creep_gold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &available_lane_creep_gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 balance_kill_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_balance_kill_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &balance_kill_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 balance_tower_value = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_balance_tower_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &balance_tower_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 balance_barracks_value = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_balance_barracks_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &balance_barracks_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 balance_gold_value = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_balance_gold_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &balance_gold_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 balance_xp_value = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_balance_xp_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &balance_xp_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lane_performance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_StatsTeamMinuteDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_StatsTeamMinuteDetails)
  return false;
#undef DO_
}

void CDOTAUserMsg_StatsTeamMinuteDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_StatsTeamMinuteDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_stats_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->player_stats(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 tower_kills = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->tower_kills(), output);
  }

  // optional uint32 barrack_kills = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->barrack_kills(), output);
  }

  // optional uint32 available_lane_creep_gold = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->available_lane_creep_gold(), output);
  }

  // optional uint32 balance_kill_value = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->balance_kill_value(), output);
  }

  // optional uint32 balance_tower_value = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->balance_tower_value(), output);
  }

  // optional uint32 balance_barracks_value = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->balance_barracks_value(), output);
  }

  // optional uint32 balance_gold_value = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->balance_gold_value(), output);
  }

  // optional uint32 balance_xp_value = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->balance_xp_value(), output);
  }

  // repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lane_performance_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->lane_performance(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_StatsTeamMinuteDetails)
}

::google::protobuf::uint8* CDOTAUserMsg_StatsTeamMinuteDetails::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_StatsTeamMinuteDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_stats_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->player_stats(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 tower_kills = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->tower_kills(), target);
  }

  // optional uint32 barrack_kills = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->barrack_kills(), target);
  }

  // optional uint32 available_lane_creep_gold = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->available_lane_creep_gold(), target);
  }

  // optional uint32 balance_kill_value = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->balance_kill_value(), target);
  }

  // optional uint32 balance_tower_value = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->balance_tower_value(), target);
  }

  // optional uint32 balance_barracks_value = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->balance_barracks_value(), target);
  }

  // optional uint32 balance_gold_value = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->balance_gold_value(), target);
  }

  // optional uint32 balance_xp_value = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->balance_xp_value(), target);
  }

  // repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lane_performance_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->lane_performance(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_StatsTeamMinuteDetails)
  return target;
}

size_t CDOTAUserMsg_StatsTeamMinuteDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_StatsTeamMinuteDetails)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->player_stats_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->player_stats(static_cast<int>(i)));
    }
  }

  // repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->lane_performance_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lane_performance(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 tower_kills = 2;
    if (has_tower_kills()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tower_kills());
    }

    // optional uint32 barrack_kills = 3;
    if (has_barrack_kills()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->barrack_kills());
    }

    // optional uint32 available_lane_creep_gold = 4;
    if (has_available_lane_creep_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->available_lane_creep_gold());
    }

    // optional uint32 balance_kill_value = 5;
    if (has_balance_kill_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->balance_kill_value());
    }

    // optional uint32 balance_tower_value = 6;
    if (has_balance_tower_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->balance_tower_value());
    }

    // optional uint32 balance_barracks_value = 7;
    if (has_balance_barracks_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->balance_barracks_value());
    }

    // optional uint32 balance_gold_value = 8;
    if (has_balance_gold_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->balance_gold_value());
    }

    // optional uint32 balance_xp_value = 9;
    if (has_balance_xp_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->balance_xp_value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_StatsTeamMinuteDetails::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_StatsTeamMinuteDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_StatsTeamMinuteDetails* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_StatsTeamMinuteDetails>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_StatsTeamMinuteDetails)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_StatsTeamMinuteDetails)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_StatsTeamMinuteDetails::MergeFrom(const CDOTAUserMsg_StatsTeamMinuteDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_StatsTeamMinuteDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_stats_.MergeFrom(from.player_stats_);
  lane_performance_.MergeFrom(from.lane_performance_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      tower_kills_ = from.tower_kills_;
    }
    if (cached_has_bits & 0x00000002u) {
      barrack_kills_ = from.barrack_kills_;
    }
    if (cached_has_bits & 0x00000004u) {
      available_lane_creep_gold_ = from.available_lane_creep_gold_;
    }
    if (cached_has_bits & 0x00000008u) {
      balance_kill_value_ = from.balance_kill_value_;
    }
    if (cached_has_bits & 0x00000010u) {
      balance_tower_value_ = from.balance_tower_value_;
    }
    if (cached_has_bits & 0x00000020u) {
      balance_barracks_value_ = from.balance_barracks_value_;
    }
    if (cached_has_bits & 0x00000040u) {
      balance_gold_value_ = from.balance_gold_value_;
    }
    if (cached_has_bits & 0x00000080u) {
      balance_xp_value_ = from.balance_xp_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_StatsTeamMinuteDetails::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_StatsTeamMinuteDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_StatsTeamMinuteDetails::CopyFrom(const CDOTAUserMsg_StatsTeamMinuteDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_StatsTeamMinuteDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_StatsTeamMinuteDetails::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_StatsTeamMinuteDetails::Swap(CDOTAUserMsg_StatsTeamMinuteDetails* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_StatsTeamMinuteDetails::InternalSwap(CDOTAUserMsg_StatsTeamMinuteDetails* other) {
  using std::swap;
  CastToBase(&player_stats_)->InternalSwap(CastToBase(&other->player_stats_));
  CastToBase(&lane_performance_)->InternalSwap(CastToBase(&other->lane_performance_));
  swap(tower_kills_, other->tower_kills_);
  swap(barrack_kills_, other->barrack_kills_);
  swap(available_lane_creep_gold_, other->available_lane_creep_gold_);
  swap(balance_kill_value_, other->balance_kill_value_);
  swap(balance_tower_value_, other->balance_tower_value_);
  swap(balance_barracks_value_, other->balance_barracks_value_);
  swap(balance_gold_value_, other->balance_gold_value_);
  swap(balance_xp_value_, other->balance_xp_value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_StatsTeamMinuteDetails::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_StatsPlayerKillShare::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_StatsPlayerKillShare::kPlayerIdFieldNumber;
const int CDOTAUserMsg_StatsPlayerKillShare::kKillSharePercentFieldNumber;
const int CDOTAUserMsg_StatsPlayerKillShare::kPlayerLocXFieldNumber;
const int CDOTAUserMsg_StatsPlayerKillShare::kPlayerLocYFieldNumber;
const int CDOTAUserMsg_StatsPlayerKillShare::kHealthPercentFieldNumber;
const int CDOTAUserMsg_StatsPlayerKillShare::kManaPercentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_StatsPlayerKillShare::CDOTAUserMsg_StatsPlayerKillShare()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_StatsPlayerKillShare.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_StatsPlayerKillShare)
}
CDOTAUserMsg_StatsPlayerKillShare::CDOTAUserMsg_StatsPlayerKillShare(const CDOTAUserMsg_StatsPlayerKillShare& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&mana_percent_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(mana_percent_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_StatsPlayerKillShare)
}

void CDOTAUserMsg_StatsPlayerKillShare::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mana_percent_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(mana_percent_));
}

CDOTAUserMsg_StatsPlayerKillShare::~CDOTAUserMsg_StatsPlayerKillShare() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_StatsPlayerKillShare)
  SharedDtor();
}

void CDOTAUserMsg_StatsPlayerKillShare::SharedDtor() {
}

void CDOTAUserMsg_StatsPlayerKillShare::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_StatsPlayerKillShare::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_StatsPlayerKillShare& CDOTAUserMsg_StatsPlayerKillShare::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_StatsPlayerKillShare.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_StatsPlayerKillShare::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_StatsPlayerKillShare)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mana_percent_) -
        reinterpret_cast<char*>(&player_id_)) + sizeof(mana_percent_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_StatsPlayerKillShare::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_StatsPlayerKillShare)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float kill_share_percent = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_kill_share_percent();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &kill_share_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float player_loc_x = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_player_loc_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &player_loc_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float player_loc_y = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_player_loc_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &player_loc_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float health_percent = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_health_percent();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &health_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float mana_percent = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          set_has_mana_percent();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &mana_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_StatsPlayerKillShare)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_StatsPlayerKillShare)
  return false;
#undef DO_
}

void CDOTAUserMsg_StatsPlayerKillShare::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_StatsPlayerKillShare)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->player_id(), output);
  }

  // optional float kill_share_percent = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->kill_share_percent(), output);
  }

  // optional float player_loc_x = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->player_loc_x(), output);
  }

  // optional float player_loc_y = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->player_loc_y(), output);
  }

  // optional float health_percent = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->health_percent(), output);
  }

  // optional float mana_percent = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->mana_percent(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_StatsPlayerKillShare)
}

::google::protobuf::uint8* CDOTAUserMsg_StatsPlayerKillShare::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_StatsPlayerKillShare)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->player_id(), target);
  }

  // optional float kill_share_percent = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->kill_share_percent(), target);
  }

  // optional float player_loc_x = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->player_loc_x(), target);
  }

  // optional float player_loc_y = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->player_loc_y(), target);
  }

  // optional float health_percent = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->health_percent(), target);
  }

  // optional float mana_percent = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->mana_percent(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_StatsPlayerKillShare)
  return target;
}

size_t CDOTAUserMsg_StatsPlayerKillShare::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_StatsPlayerKillShare)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional int32 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player_id());
    }

    // optional float kill_share_percent = 2;
    if (has_kill_share_percent()) {
      total_size += 1 + 4;
    }

    // optional float player_loc_x = 3;
    if (has_player_loc_x()) {
      total_size += 1 + 4;
    }

    // optional float player_loc_y = 4;
    if (has_player_loc_y()) {
      total_size += 1 + 4;
    }

    // optional float health_percent = 5;
    if (has_health_percent()) {
      total_size += 1 + 4;
    }

    // optional float mana_percent = 6;
    if (has_mana_percent()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_StatsPlayerKillShare::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_StatsPlayerKillShare)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_StatsPlayerKillShare* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_StatsPlayerKillShare>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_StatsPlayerKillShare)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_StatsPlayerKillShare)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_StatsPlayerKillShare::MergeFrom(const CDOTAUserMsg_StatsPlayerKillShare& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_StatsPlayerKillShare)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      kill_share_percent_ = from.kill_share_percent_;
    }
    if (cached_has_bits & 0x00000004u) {
      player_loc_x_ = from.player_loc_x_;
    }
    if (cached_has_bits & 0x00000008u) {
      player_loc_y_ = from.player_loc_y_;
    }
    if (cached_has_bits & 0x00000010u) {
      health_percent_ = from.health_percent_;
    }
    if (cached_has_bits & 0x00000020u) {
      mana_percent_ = from.mana_percent_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_StatsPlayerKillShare::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_StatsPlayerKillShare)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_StatsPlayerKillShare::CopyFrom(const CDOTAUserMsg_StatsPlayerKillShare& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_StatsPlayerKillShare)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_StatsPlayerKillShare::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_StatsPlayerKillShare::Swap(CDOTAUserMsg_StatsPlayerKillShare* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_StatsPlayerKillShare::InternalSwap(CDOTAUserMsg_StatsPlayerKillShare* other) {
  using std::swap;
  swap(player_id_, other->player_id_);
  swap(kill_share_percent_, other->kill_share_percent_);
  swap(player_loc_x_, other->player_loc_x_);
  swap(player_loc_y_, other->player_loc_y_);
  swap(health_percent_, other->health_percent_);
  swap(mana_percent_, other->mana_percent_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_StatsPlayerKillShare::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_StatsKillDetails::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_StatsKillDetails::kVictimIdFieldNumber;
const int CDOTAUserMsg_StatsKillDetails::kKillSharesFieldNumber;
const int CDOTAUserMsg_StatsKillDetails::kDamageToKillFieldNumber;
const int CDOTAUserMsg_StatsKillDetails::kEffectiveHealthFieldNumber;
const int CDOTAUserMsg_StatsKillDetails::kDeathTimeFieldNumber;
const int CDOTAUserMsg_StatsKillDetails::kKillerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_StatsKillDetails::CDOTAUserMsg_StatsKillDetails()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_StatsKillDetails.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_StatsKillDetails)
}
CDOTAUserMsg_StatsKillDetails::CDOTAUserMsg_StatsKillDetails(const CDOTAUserMsg_StatsKillDetails& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      kill_shares_(from.kill_shares_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&victim_id_, &from.victim_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&killer_id_) -
    reinterpret_cast<char*>(&victim_id_)) + sizeof(killer_id_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_StatsKillDetails)
}

void CDOTAUserMsg_StatsKillDetails::SharedCtor() {
  ::memset(&victim_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&killer_id_) -
      reinterpret_cast<char*>(&victim_id_)) + sizeof(killer_id_));
}

CDOTAUserMsg_StatsKillDetails::~CDOTAUserMsg_StatsKillDetails() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_StatsKillDetails)
  SharedDtor();
}

void CDOTAUserMsg_StatsKillDetails::SharedDtor() {
}

void CDOTAUserMsg_StatsKillDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_StatsKillDetails::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_StatsKillDetails& CDOTAUserMsg_StatsKillDetails::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_StatsKillDetails.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_StatsKillDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_StatsKillDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kill_shares_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&victim_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&killer_id_) -
        reinterpret_cast<char*>(&victim_id_)) + sizeof(killer_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_StatsKillDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_StatsKillDetails)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 victim_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_victim_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &victim_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_kill_shares()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 damage_to_kill = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_damage_to_kill();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &damage_to_kill_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 effective_health = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_effective_health();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &effective_health_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float death_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_death_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &death_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 killer_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_killer_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &killer_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_StatsKillDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_StatsKillDetails)
  return false;
#undef DO_
}

void CDOTAUserMsg_StatsKillDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_StatsKillDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 victim_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->victim_id(), output);
  }

  // repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->kill_shares_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->kill_shares(static_cast<int>(i)),
      output);
  }

  // optional uint32 damage_to_kill = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->damage_to_kill(), output);
  }

  // optional uint32 effective_health = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->effective_health(), output);
  }

  // optional float death_time = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->death_time(), output);
  }

  // optional uint32 killer_id = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->killer_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_StatsKillDetails)
}

::google::protobuf::uint8* CDOTAUserMsg_StatsKillDetails::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_StatsKillDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 victim_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->victim_id(), target);
  }

  // repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->kill_shares_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->kill_shares(static_cast<int>(i)), deterministic, target);
  }

  // optional uint32 damage_to_kill = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->damage_to_kill(), target);
  }

  // optional uint32 effective_health = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->effective_health(), target);
  }

  // optional float death_time = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->death_time(), target);
  }

  // optional uint32 killer_id = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->killer_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_StatsKillDetails)
  return target;
}

size_t CDOTAUserMsg_StatsKillDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_StatsKillDetails)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->kill_shares_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->kill_shares(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional uint32 victim_id = 1;
    if (has_victim_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->victim_id());
    }

    // optional uint32 damage_to_kill = 3;
    if (has_damage_to_kill()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->damage_to_kill());
    }

    // optional uint32 effective_health = 4;
    if (has_effective_health()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->effective_health());
    }

    // optional float death_time = 5;
    if (has_death_time()) {
      total_size += 1 + 4;
    }

    // optional uint32 killer_id = 6;
    if (has_killer_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->killer_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_StatsKillDetails::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_StatsKillDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_StatsKillDetails* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_StatsKillDetails>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_StatsKillDetails)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_StatsKillDetails)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_StatsKillDetails::MergeFrom(const CDOTAUserMsg_StatsKillDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_StatsKillDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  kill_shares_.MergeFrom(from.kill_shares_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      victim_id_ = from.victim_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      damage_to_kill_ = from.damage_to_kill_;
    }
    if (cached_has_bits & 0x00000004u) {
      effective_health_ = from.effective_health_;
    }
    if (cached_has_bits & 0x00000008u) {
      death_time_ = from.death_time_;
    }
    if (cached_has_bits & 0x00000010u) {
      killer_id_ = from.killer_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_StatsKillDetails::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_StatsKillDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_StatsKillDetails::CopyFrom(const CDOTAUserMsg_StatsKillDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_StatsKillDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_StatsKillDetails::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_StatsKillDetails::Swap(CDOTAUserMsg_StatsKillDetails* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_StatsKillDetails::InternalSwap(CDOTAUserMsg_StatsKillDetails* other) {
  using std::swap;
  CastToBase(&kill_shares_)->InternalSwap(CastToBase(&other->kill_shares_));
  swap(victim_id_, other->victim_id_);
  swap(damage_to_kill_, other->damage_to_kill_);
  swap(effective_health_, other->effective_health_);
  swap(death_time_, other->death_time_);
  swap(killer_id_, other->killer_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_StatsKillDetails::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::kParticipantsFieldNumber;
const int CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::kDeathsFieldNumber;
const int CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::kGoldDeltaFieldNumber;
const int CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::kXpDeltaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails)
}
CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails(const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      participants_(from.participants_),
      deaths_(from.deaths_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gold_delta_, &from.gold_delta_,
    static_cast<size_t>(reinterpret_cast<char*>(&xp_delta_) -
    reinterpret_cast<char*>(&gold_delta_)) + sizeof(xp_delta_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails)
}

void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::SharedCtor() {
  ::memset(&gold_delta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&xp_delta_) -
      reinterpret_cast<char*>(&gold_delta_)) + sizeof(xp_delta_));
}

CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::~CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails)
  SharedDtor();
}

void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::SharedDtor() {
}

void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails& CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  participants_.Clear();
  deaths_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&gold_delta_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&xp_delta_) -
        reinterpret_cast<char*>(&gold_delta_)) + sizeof(xp_delta_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 participants = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_participants())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_participants())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 deaths = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_deaths())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_deaths())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 gold_delta = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_gold_delta();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gold_delta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 xp_delta = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_xp_delta();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &xp_delta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails)
  return false;
#undef DO_
}

void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 participants = 1;
  for (int i = 0, n = this->participants_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->participants(i), output);
  }

  // repeated uint32 deaths = 2;
  for (int i = 0, n = this->deaths_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->deaths(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 gold_delta = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->gold_delta(), output);
  }

  // optional uint32 xp_delta = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->xp_delta(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails)
}

::google::protobuf::uint8* CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 participants = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->participants_, target);

  // repeated uint32 deaths = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->deaths_, target);

  cached_has_bits = _has_bits_[0];
  // optional uint32 gold_delta = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->gold_delta(), target);
  }

  // optional uint32 xp_delta = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->xp_delta(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails)
  return target;
}

size_t CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 participants = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->participants_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->participants_size());
    total_size += data_size;
  }

  // repeated uint32 deaths = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->deaths_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->deaths_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 gold_delta = 3;
    if (has_gold_delta()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gold_delta());
    }

    // optional uint32 xp_delta = 4;
    if (has_xp_delta()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->xp_delta());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::MergeFrom(const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  participants_.MergeFrom(from.participants_);
  deaths_.MergeFrom(from.deaths_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      gold_delta_ = from.gold_delta_;
    }
    if (cached_has_bits & 0x00000002u) {
      xp_delta_ = from.xp_delta_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::CopyFrom(const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::Swap(CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::InternalSwap(CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* other) {
  using std::swap;
  participants_.InternalSwap(&other->participants_);
  deaths_.InternalSwap(&other->deaths_);
  swap(gold_delta_, other->gold_delta_);
  swap(xp_delta_, other->xp_delta_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::InitAsDefaultInstance() {
  ::_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails_default_instance_._instance.get_mutable()->radiant_fight_details_ = const_cast< ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails*>(
      ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::internal_default_instance());
  ::_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails_default_instance_._instance.get_mutable()->dire_fight_details_ = const_cast< ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails*>(
      ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::kStartTimeFieldNumber;
const int CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::kEndTimeFieldNumber;
const int CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::kRadiantFightDetailsFieldNumber;
const int CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::kDireFightDetailsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails)
}
CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails(const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_radiant_fight_details()) {
    radiant_fight_details_ = new ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails(*from.radiant_fight_details_);
  } else {
    radiant_fight_details_ = NULL;
  }
  if (from.has_dire_fight_details()) {
    dire_fight_details_ = new ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails(*from.dire_fight_details_);
  } else {
    dire_fight_details_ = NULL;
  }
  ::memcpy(&start_time_, &from.start_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_time_) -
    reinterpret_cast<char*>(&start_time_)) + sizeof(end_time_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails)
}

void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::SharedCtor() {
  ::memset(&radiant_fight_details_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_time_) -
      reinterpret_cast<char*>(&radiant_fight_details_)) + sizeof(end_time_));
}

CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::~CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails)
  SharedDtor();
}

void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::SharedDtor() {
  if (this != internal_default_instance()) delete radiant_fight_details_;
  if (this != internal_default_instance()) delete dire_fight_details_;
}

void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails& CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(radiant_fight_details_ != NULL);
      radiant_fight_details_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(dire_fight_details_ != NULL);
      dire_fight_details_->Clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&start_time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&end_time_) -
        reinterpret_cast<char*>(&start_time_)) + sizeof(end_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float start_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_start_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float end_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_end_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails radiant_fight_details = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_radiant_fight_details()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails dire_fight_details = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dire_fight_details()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails)
  return false;
#undef DO_
}

void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float start_time = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->start_time(), output);
  }

  // optional float end_time = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->end_time(), output);
  }

  // optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails radiant_fight_details = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_radiant_fight_details(), output);
  }

  // optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails dire_fight_details = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_dire_fight_details(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails)
}

::google::protobuf::uint8* CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float start_time = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->start_time(), target);
  }

  // optional float end_time = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->end_time(), target);
  }

  // optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails radiant_fight_details = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_radiant_fight_details(), deterministic, target);
  }

  // optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails dire_fight_details = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_dire_fight_details(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails)
  return target;
}

size_t CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails radiant_fight_details = 3;
    if (has_radiant_fight_details()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *radiant_fight_details_);
    }

    // optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails dire_fight_details = 4;
    if (has_dire_fight_details()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *dire_fight_details_);
    }

    // optional float start_time = 1;
    if (has_start_time()) {
      total_size += 1 + 4;
    }

    // optional float end_time = 2;
    if (has_end_time()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::MergeFrom(const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_radiant_fight_details()->::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::MergeFrom(from.radiant_fight_details());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_dire_fight_details()->::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::MergeFrom(from.dire_fight_details());
    }
    if (cached_has_bits & 0x00000004u) {
      start_time_ = from.start_time_;
    }
    if (cached_has_bits & 0x00000008u) {
      end_time_ = from.end_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::CopyFrom(const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::Swap(CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::InternalSwap(CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails* other) {
  using std::swap;
  swap(radiant_fight_details_, other->radiant_fight_details_);
  swap(dire_fight_details_, other->dire_fight_details_);
  swap(start_time_, other->start_time_);
  swap(end_time_, other->end_time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_StatsMatchDetails::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_StatsMatchDetails::kHeroLookupFieldNumber;
const int CDOTAUserMsg_StatsMatchDetails::kRadiantStatsFieldNumber;
const int CDOTAUserMsg_StatsMatchDetails::kDireStatsFieldNumber;
const int CDOTAUserMsg_StatsMatchDetails::kRadiantKillsFieldNumber;
const int CDOTAUserMsg_StatsMatchDetails::kDireKillsFieldNumber;
const int CDOTAUserMsg_StatsMatchDetails::kFightDetailsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_StatsMatchDetails::CDOTAUserMsg_StatsMatchDetails()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_StatsMatchDetails.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_StatsMatchDetails)
}
CDOTAUserMsg_StatsMatchDetails::CDOTAUserMsg_StatsMatchDetails(const CDOTAUserMsg_StatsMatchDetails& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      hero_lookup_(from.hero_lookup_),
      radiant_stats_(from.radiant_stats_),
      dire_stats_(from.dire_stats_),
      radiant_kills_(from.radiant_kills_),
      dire_kills_(from.dire_kills_),
      fight_details_(from.fight_details_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_StatsMatchDetails)
}

void CDOTAUserMsg_StatsMatchDetails::SharedCtor() {
}

CDOTAUserMsg_StatsMatchDetails::~CDOTAUserMsg_StatsMatchDetails() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_StatsMatchDetails)
  SharedDtor();
}

void CDOTAUserMsg_StatsMatchDetails::SharedDtor() {
}

void CDOTAUserMsg_StatsMatchDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_StatsMatchDetails::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_StatsMatchDetails& CDOTAUserMsg_StatsMatchDetails::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_StatsMatchDetails.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_StatsMatchDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_StatsMatchDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hero_lookup_.Clear();
  radiant_stats_.Clear();
  dire_stats_.Clear();
  radiant_kills_.Clear();
  dire_kills_.Clear();
  fight_details_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_StatsMatchDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_StatsMatchDetails)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_hero_lookup()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_radiant_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_dire_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_radiant_kills()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_dire_kills()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_fight_details()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_StatsMatchDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_StatsMatchDetails)
  return false;
#undef DO_
}

void CDOTAUserMsg_StatsMatchDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_StatsMatchDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hero_lookup_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->hero_lookup(static_cast<int>(i)),
      output);
  }

  // repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->radiant_stats_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->radiant_stats(static_cast<int>(i)),
      output);
  }

  // repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dire_stats_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->dire_stats(static_cast<int>(i)),
      output);
  }

  // repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->radiant_kills_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->radiant_kills(static_cast<int>(i)),
      output);
  }

  // repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dire_kills_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->dire_kills(static_cast<int>(i)),
      output);
  }

  // repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fight_details_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->fight_details(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_StatsMatchDetails)
}

::google::protobuf::uint8* CDOTAUserMsg_StatsMatchDetails::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_StatsMatchDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hero_lookup_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->hero_lookup(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->radiant_stats_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->radiant_stats(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dire_stats_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->dire_stats(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->radiant_kills_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->radiant_kills(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dire_kills_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->dire_kills(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fight_details_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->fight_details(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_StatsMatchDetails)
  return target;
}

size_t CDOTAUserMsg_StatsMatchDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_StatsMatchDetails)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->hero_lookup_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->hero_lookup(static_cast<int>(i)));
    }
  }

  // repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->radiant_stats_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->radiant_stats(static_cast<int>(i)));
    }
  }

  // repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->dire_stats_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->dire_stats(static_cast<int>(i)));
    }
  }

  // repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->radiant_kills_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->radiant_kills(static_cast<int>(i)));
    }
  }

  // repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->dire_kills_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->dire_kills(static_cast<int>(i)));
    }
  }

  // repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->fight_details_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->fight_details(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_StatsMatchDetails::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_StatsMatchDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_StatsMatchDetails* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_StatsMatchDetails>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_StatsMatchDetails)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_StatsMatchDetails)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_StatsMatchDetails::MergeFrom(const CDOTAUserMsg_StatsMatchDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_StatsMatchDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  hero_lookup_.MergeFrom(from.hero_lookup_);
  radiant_stats_.MergeFrom(from.radiant_stats_);
  dire_stats_.MergeFrom(from.dire_stats_);
  radiant_kills_.MergeFrom(from.radiant_kills_);
  dire_kills_.MergeFrom(from.dire_kills_);
  fight_details_.MergeFrom(from.fight_details_);
}

void CDOTAUserMsg_StatsMatchDetails::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_StatsMatchDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_StatsMatchDetails::CopyFrom(const CDOTAUserMsg_StatsMatchDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_StatsMatchDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_StatsMatchDetails::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_StatsMatchDetails::Swap(CDOTAUserMsg_StatsMatchDetails* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_StatsMatchDetails::InternalSwap(CDOTAUserMsg_StatsMatchDetails* other) {
  using std::swap;
  CastToBase(&hero_lookup_)->InternalSwap(CastToBase(&other->hero_lookup_));
  CastToBase(&radiant_stats_)->InternalSwap(CastToBase(&other->radiant_stats_));
  CastToBase(&dire_stats_)->InternalSwap(CastToBase(&other->dire_stats_));
  CastToBase(&radiant_kills_)->InternalSwap(CastToBase(&other->radiant_kills_));
  CastToBase(&dire_kills_)->InternalSwap(CastToBase(&other->dire_kills_));
  CastToBase(&fight_details_)->InternalSwap(CastToBase(&other->fight_details_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_StatsMatchDetails::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_MiniTaunt::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_MiniTaunt::kTauntingPlayerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_MiniTaunt::CDOTAUserMsg_MiniTaunt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_MiniTaunt.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_MiniTaunt)
}
CDOTAUserMsg_MiniTaunt::CDOTAUserMsg_MiniTaunt(const CDOTAUserMsg_MiniTaunt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  taunting_player_id_ = from.taunting_player_id_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_MiniTaunt)
}

void CDOTAUserMsg_MiniTaunt::SharedCtor() {
  taunting_player_id_ = 0u;
}

CDOTAUserMsg_MiniTaunt::~CDOTAUserMsg_MiniTaunt() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_MiniTaunt)
  SharedDtor();
}

void CDOTAUserMsg_MiniTaunt::SharedDtor() {
}

void CDOTAUserMsg_MiniTaunt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_MiniTaunt::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_MiniTaunt& CDOTAUserMsg_MiniTaunt::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_MiniTaunt.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_MiniTaunt::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_MiniTaunt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  taunting_player_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_MiniTaunt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_MiniTaunt)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 taunting_player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_taunting_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &taunting_player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_MiniTaunt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_MiniTaunt)
  return false;
#undef DO_
}

void CDOTAUserMsg_MiniTaunt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_MiniTaunt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 taunting_player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->taunting_player_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_MiniTaunt)
}

::google::protobuf::uint8* CDOTAUserMsg_MiniTaunt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_MiniTaunt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 taunting_player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->taunting_player_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_MiniTaunt)
  return target;
}

size_t CDOTAUserMsg_MiniTaunt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_MiniTaunt)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 taunting_player_id = 1;
  if (has_taunting_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->taunting_player_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_MiniTaunt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_MiniTaunt)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_MiniTaunt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_MiniTaunt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_MiniTaunt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_MiniTaunt)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_MiniTaunt::MergeFrom(const CDOTAUserMsg_MiniTaunt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_MiniTaunt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_taunting_player_id()) {
    set_taunting_player_id(from.taunting_player_id());
  }
}

void CDOTAUserMsg_MiniTaunt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_MiniTaunt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_MiniTaunt::CopyFrom(const CDOTAUserMsg_MiniTaunt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_MiniTaunt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_MiniTaunt::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_MiniTaunt::Swap(CDOTAUserMsg_MiniTaunt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_MiniTaunt::InternalSwap(CDOTAUserMsg_MiniTaunt* other) {
  using std::swap;
  swap(taunting_player_id_, other->taunting_player_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_MiniTaunt::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_SpeechBubble::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_SpeechBubble::kDestroyAllFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_SpeechBubble::CDOTAUserMsg_SpeechBubble()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_SpeechBubble.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_SpeechBubble)
}
CDOTAUserMsg_SpeechBubble::CDOTAUserMsg_SpeechBubble(const CDOTAUserMsg_SpeechBubble& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  destroy_all_ = from.destroy_all_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_SpeechBubble)
}

void CDOTAUserMsg_SpeechBubble::SharedCtor() {
  destroy_all_ = false;
}

CDOTAUserMsg_SpeechBubble::~CDOTAUserMsg_SpeechBubble() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_SpeechBubble)
  SharedDtor();
}

void CDOTAUserMsg_SpeechBubble::SharedDtor() {
}

void CDOTAUserMsg_SpeechBubble::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_SpeechBubble::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_SpeechBubble& CDOTAUserMsg_SpeechBubble::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_SpeechBubble.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_SpeechBubble::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_SpeechBubble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  destroy_all_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_SpeechBubble::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_SpeechBubble)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool destroy_all = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_destroy_all();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &destroy_all_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_SpeechBubble)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_SpeechBubble)
  return false;
#undef DO_
}

void CDOTAUserMsg_SpeechBubble::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_SpeechBubble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool destroy_all = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->destroy_all(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_SpeechBubble)
}

::google::protobuf::uint8* CDOTAUserMsg_SpeechBubble::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_SpeechBubble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool destroy_all = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->destroy_all(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_SpeechBubble)
  return target;
}

size_t CDOTAUserMsg_SpeechBubble::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_SpeechBubble)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bool destroy_all = 1;
  if (has_destroy_all()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_SpeechBubble::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_SpeechBubble)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_SpeechBubble* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_SpeechBubble>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_SpeechBubble)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_SpeechBubble)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_SpeechBubble::MergeFrom(const CDOTAUserMsg_SpeechBubble& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_SpeechBubble)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_destroy_all()) {
    set_destroy_all(from.destroy_all());
  }
}

void CDOTAUserMsg_SpeechBubble::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_SpeechBubble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_SpeechBubble::CopyFrom(const CDOTAUserMsg_SpeechBubble& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_SpeechBubble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_SpeechBubble::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_SpeechBubble::Swap(CDOTAUserMsg_SpeechBubble* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_SpeechBubble::InternalSwap(CDOTAUserMsg_SpeechBubble* other) {
  using std::swap;
  swap(destroy_all_, other->destroy_all_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_SpeechBubble::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_CustomHeaderMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_CustomHeaderMessage::kPlayerIdFieldNumber;
const int CDOTAUserMsg_CustomHeaderMessage::kDurationFieldNumber;
const int CDOTAUserMsg_CustomHeaderMessage::kMessageFieldNumber;
const int CDOTAUserMsg_CustomHeaderMessage::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_CustomHeaderMessage::CDOTAUserMsg_CustomHeaderMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_CustomHeaderMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_CustomHeaderMessage)
}
CDOTAUserMsg_CustomHeaderMessage::CDOTAUserMsg_CustomHeaderMessage(const CDOTAUserMsg_CustomHeaderMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_CustomHeaderMessage)
}

void CDOTAUserMsg_CustomHeaderMessage::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(value_));
}

CDOTAUserMsg_CustomHeaderMessage::~CDOTAUserMsg_CustomHeaderMessage() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_CustomHeaderMessage)
  SharedDtor();
}

void CDOTAUserMsg_CustomHeaderMessage::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTAUserMsg_CustomHeaderMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_CustomHeaderMessage::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_CustomHeaderMessage& CDOTAUserMsg_CustomHeaderMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_CustomHeaderMessage.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_CustomHeaderMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_CustomHeaderMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    message_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&value_) -
        reinterpret_cast<char*>(&player_id_)) + sizeof(value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_CustomHeaderMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_CustomHeaderMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float duration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_CustomHeaderMessage.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_CustomHeaderMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_CustomHeaderMessage)
  return false;
#undef DO_
}

void CDOTAUserMsg_CustomHeaderMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_CustomHeaderMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // optional float duration = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->duration(), output);
  }

  // optional string message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_CustomHeaderMessage.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->message(), output);
  }

  // optional int32 value = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_CustomHeaderMessage)
}

::google::protobuf::uint8* CDOTAUserMsg_CustomHeaderMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_CustomHeaderMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // optional float duration = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->duration(), target);
  }

  // optional string message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_CustomHeaderMessage.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->message(), target);
  }

  // optional int32 value = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_CustomHeaderMessage)
  return target;
}

size_t CDOTAUserMsg_CustomHeaderMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_CustomHeaderMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string message = 3;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional uint32 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->player_id());
    }

    // optional float duration = 2;
    if (has_duration()) {
      total_size += 1 + 4;
    }

    // optional int32 value = 4;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_CustomHeaderMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_CustomHeaderMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_CustomHeaderMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_CustomHeaderMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_CustomHeaderMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_CustomHeaderMessage)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_CustomHeaderMessage::MergeFrom(const CDOTAUserMsg_CustomHeaderMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_CustomHeaderMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      duration_ = from.duration_;
    }
    if (cached_has_bits & 0x00000008u) {
      value_ = from.value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_CustomHeaderMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_CustomHeaderMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_CustomHeaderMessage::CopyFrom(const CDOTAUserMsg_CustomHeaderMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_CustomHeaderMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_CustomHeaderMessage::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_CustomHeaderMessage::Swap(CDOTAUserMsg_CustomHeaderMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_CustomHeaderMessage::InternalSwap(CDOTAUserMsg_CustomHeaderMessage* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(player_id_, other->player_id_);
  swap(duration_, other->duration_);
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_CustomHeaderMessage::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgHeroAbilityStat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgHeroAbilityStat::kStatTypeFieldNumber;
const int CMsgHeroAbilityStat::kIntValueFieldNumber;
const int CMsgHeroAbilityStat::kFloatValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgHeroAbilityStat::CMsgHeroAbilityStat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CMsgHeroAbilityStat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgHeroAbilityStat)
}
CMsgHeroAbilityStat::CMsgHeroAbilityStat(const CMsgHeroAbilityStat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&stat_type_, &from.stat_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&float_value_) -
    reinterpret_cast<char*>(&stat_type_)) + sizeof(float_value_));
  // @@protoc_insertion_point(copy_constructor:CMsgHeroAbilityStat)
}

void CMsgHeroAbilityStat::SharedCtor() {
  ::memset(&stat_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&float_value_) -
      reinterpret_cast<char*>(&stat_type_)) + sizeof(float_value_));
}

CMsgHeroAbilityStat::~CMsgHeroAbilityStat() {
  // @@protoc_insertion_point(destructor:CMsgHeroAbilityStat)
  SharedDtor();
}

void CMsgHeroAbilityStat::SharedDtor() {
}

void CMsgHeroAbilityStat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgHeroAbilityStat::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgHeroAbilityStat& CMsgHeroAbilityStat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CMsgHeroAbilityStat.base);
  return *internal_default_instance();
}


void CMsgHeroAbilityStat::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgHeroAbilityStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&stat_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&float_value_) -
        reinterpret_cast<char*>(&stat_type_)) + sizeof(float_value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgHeroAbilityStat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgHeroAbilityStat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .EHeroStatType stat_type = 1 [default = k_EHeroStatType_None];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::EHeroStatType_IsValid(value)) {
            set_stat_type(static_cast< ::EHeroStatType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 int_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_int_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float float_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_float_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &float_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgHeroAbilityStat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgHeroAbilityStat)
  return false;
#undef DO_
}

void CMsgHeroAbilityStat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgHeroAbilityStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .EHeroStatType stat_type = 1 [default = k_EHeroStatType_None];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->stat_type(), output);
  }

  // optional int32 int_value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->int_value(), output);
  }

  // optional float float_value = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->float_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgHeroAbilityStat)
}

::google::protobuf::uint8* CMsgHeroAbilityStat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgHeroAbilityStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .EHeroStatType stat_type = 1 [default = k_EHeroStatType_None];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->stat_type(), target);
  }

  // optional int32 int_value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->int_value(), target);
  }

  // optional float float_value = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->float_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgHeroAbilityStat)
  return target;
}

size_t CMsgHeroAbilityStat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgHeroAbilityStat)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .EHeroStatType stat_type = 1 [default = k_EHeroStatType_None];
    if (has_stat_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->stat_type());
    }

    // optional int32 int_value = 2;
    if (has_int_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->int_value());
    }

    // optional float float_value = 3;
    if (has_float_value()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgHeroAbilityStat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgHeroAbilityStat)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgHeroAbilityStat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgHeroAbilityStat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgHeroAbilityStat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgHeroAbilityStat)
    MergeFrom(*source);
  }
}

void CMsgHeroAbilityStat::MergeFrom(const CMsgHeroAbilityStat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgHeroAbilityStat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      stat_type_ = from.stat_type_;
    }
    if (cached_has_bits & 0x00000002u) {
      int_value_ = from.int_value_;
    }
    if (cached_has_bits & 0x00000004u) {
      float_value_ = from.float_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgHeroAbilityStat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgHeroAbilityStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgHeroAbilityStat::CopyFrom(const CMsgHeroAbilityStat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgHeroAbilityStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgHeroAbilityStat::IsInitialized() const {
  return true;
}

void CMsgHeroAbilityStat::Swap(CMsgHeroAbilityStat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgHeroAbilityStat::InternalSwap(CMsgHeroAbilityStat* other) {
  using std::swap;
  swap(stat_type_, other->stat_type_);
  swap(int_value_, other->int_value_);
  swap(float_value_, other->float_value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgHeroAbilityStat::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgCombatAnalyzerPlayerStat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCombatAnalyzerPlayerStat::kAccountIdFieldNumber;
const int CMsgCombatAnalyzerPlayerStat::kHeroAbilityStatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCombatAnalyzerPlayerStat::CMsgCombatAnalyzerPlayerStat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CMsgCombatAnalyzerPlayerStat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgCombatAnalyzerPlayerStat)
}
CMsgCombatAnalyzerPlayerStat::CMsgCombatAnalyzerPlayerStat(const CMsgCombatAnalyzerPlayerStat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      hero_ability_stats_(from.hero_ability_stats_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_id_ = from.account_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgCombatAnalyzerPlayerStat)
}

void CMsgCombatAnalyzerPlayerStat::SharedCtor() {
  account_id_ = 0u;
}

CMsgCombatAnalyzerPlayerStat::~CMsgCombatAnalyzerPlayerStat() {
  // @@protoc_insertion_point(destructor:CMsgCombatAnalyzerPlayerStat)
  SharedDtor();
}

void CMsgCombatAnalyzerPlayerStat::SharedDtor() {
}

void CMsgCombatAnalyzerPlayerStat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgCombatAnalyzerPlayerStat::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCombatAnalyzerPlayerStat& CMsgCombatAnalyzerPlayerStat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CMsgCombatAnalyzerPlayerStat.base);
  return *internal_default_instance();
}


void CMsgCombatAnalyzerPlayerStat::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgCombatAnalyzerPlayerStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hero_ability_stats_.Clear();
  account_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCombatAnalyzerPlayerStat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgCombatAnalyzerPlayerStat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgHeroAbilityStat hero_ability_stats = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_hero_ability_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgCombatAnalyzerPlayerStat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgCombatAnalyzerPlayerStat)
  return false;
#undef DO_
}

void CMsgCombatAnalyzerPlayerStat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgCombatAnalyzerPlayerStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // repeated .CMsgHeroAbilityStat hero_ability_stats = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hero_ability_stats_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->hero_ability_stats(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgCombatAnalyzerPlayerStat)
}

::google::protobuf::uint8* CMsgCombatAnalyzerPlayerStat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCombatAnalyzerPlayerStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // repeated .CMsgHeroAbilityStat hero_ability_stats = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hero_ability_stats_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->hero_ability_stats(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCombatAnalyzerPlayerStat)
  return target;
}

size_t CMsgCombatAnalyzerPlayerStat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgCombatAnalyzerPlayerStat)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgHeroAbilityStat hero_ability_stats = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->hero_ability_stats_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->hero_ability_stats(static_cast<int>(i)));
    }
  }

  // optional uint32 account_id = 1;
  if (has_account_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->account_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCombatAnalyzerPlayerStat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgCombatAnalyzerPlayerStat)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCombatAnalyzerPlayerStat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCombatAnalyzerPlayerStat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgCombatAnalyzerPlayerStat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgCombatAnalyzerPlayerStat)
    MergeFrom(*source);
  }
}

void CMsgCombatAnalyzerPlayerStat::MergeFrom(const CMsgCombatAnalyzerPlayerStat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgCombatAnalyzerPlayerStat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  hero_ability_stats_.MergeFrom(from.hero_ability_stats_);
  if (from.has_account_id()) {
    set_account_id(from.account_id());
  }
}

void CMsgCombatAnalyzerPlayerStat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgCombatAnalyzerPlayerStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCombatAnalyzerPlayerStat::CopyFrom(const CMsgCombatAnalyzerPlayerStat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgCombatAnalyzerPlayerStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCombatAnalyzerPlayerStat::IsInitialized() const {
  return true;
}

void CMsgCombatAnalyzerPlayerStat::Swap(CMsgCombatAnalyzerPlayerStat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCombatAnalyzerPlayerStat::InternalSwap(CMsgCombatAnalyzerPlayerStat* other) {
  using std::swap;
  CastToBase(&hero_ability_stats_)->InternalSwap(CastToBase(&other->hero_ability_stats_));
  swap(account_id_, other->account_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgCombatAnalyzerPlayerStat::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgCombatAnalyzerStats::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCombatAnalyzerStats::kMatchIdFieldNumber;
const int CMsgCombatAnalyzerStats::kPlayerStatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCombatAnalyzerStats::CMsgCombatAnalyzerStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CMsgCombatAnalyzerStats.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgCombatAnalyzerStats)
}
CMsgCombatAnalyzerStats::CMsgCombatAnalyzerStats(const CMsgCombatAnalyzerStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      player_stats_(from.player_stats_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  match_id_ = from.match_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgCombatAnalyzerStats)
}

void CMsgCombatAnalyzerStats::SharedCtor() {
  match_id_ = GOOGLE_ULONGLONG(0);
}

CMsgCombatAnalyzerStats::~CMsgCombatAnalyzerStats() {
  // @@protoc_insertion_point(destructor:CMsgCombatAnalyzerStats)
  SharedDtor();
}

void CMsgCombatAnalyzerStats::SharedDtor() {
}

void CMsgCombatAnalyzerStats::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsgCombatAnalyzerStats::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCombatAnalyzerStats& CMsgCombatAnalyzerStats::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CMsgCombatAnalyzerStats.base);
  return *internal_default_instance();
}


void CMsgCombatAnalyzerStats::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgCombatAnalyzerStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_stats_.Clear();
  match_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCombatAnalyzerStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgCombatAnalyzerStats)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 match_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_match_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &match_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_player_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgCombatAnalyzerStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgCombatAnalyzerStats)
  return false;
#undef DO_
}

void CMsgCombatAnalyzerStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgCombatAnalyzerStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 match_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->match_id(), output);
  }

  // repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_stats_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->player_stats(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgCombatAnalyzerStats)
}

::google::protobuf::uint8* CMsgCombatAnalyzerStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgCombatAnalyzerStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 match_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->match_id(), target);
  }

  // repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_stats_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->player_stats(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgCombatAnalyzerStats)
  return target;
}

size_t CMsgCombatAnalyzerStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgCombatAnalyzerStats)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->player_stats_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->player_stats(static_cast<int>(i)));
    }
  }

  // optional uint64 match_id = 1;
  if (has_match_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->match_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCombatAnalyzerStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgCombatAnalyzerStats)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCombatAnalyzerStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCombatAnalyzerStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgCombatAnalyzerStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgCombatAnalyzerStats)
    MergeFrom(*source);
  }
}

void CMsgCombatAnalyzerStats::MergeFrom(const CMsgCombatAnalyzerStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgCombatAnalyzerStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_stats_.MergeFrom(from.player_stats_);
  if (from.has_match_id()) {
    set_match_id(from.match_id());
  }
}

void CMsgCombatAnalyzerStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgCombatAnalyzerStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCombatAnalyzerStats::CopyFrom(const CMsgCombatAnalyzerStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgCombatAnalyzerStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCombatAnalyzerStats::IsInitialized() const {
  return true;
}

void CMsgCombatAnalyzerStats::Swap(CMsgCombatAnalyzerStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCombatAnalyzerStats::InternalSwap(CMsgCombatAnalyzerStats* other) {
  using std::swap;
  CastToBase(&player_stats_)->InternalSwap(CastToBase(&other->player_stats_));
  swap(match_id_, other->match_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsgCombatAnalyzerStats::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_BeastChat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_BeastChat::kTeamFieldNumber;
const int CDOTAUserMsg_BeastChat::kFormatFieldNumber;
const int CDOTAUserMsg_BeastChat::kMessageFieldNumber;
const int CDOTAUserMsg_BeastChat::kTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_BeastChat::CDOTAUserMsg_BeastChat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_BeastChat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_BeastChat)
}
CDOTAUserMsg_BeastChat::CDOTAUserMsg_BeastChat(const CDOTAUserMsg_BeastChat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  format_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_format()) {
    format_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.format_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_target()) {
    target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_);
  }
  team_ = from.team_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_BeastChat)
}

void CDOTAUserMsg_BeastChat::SharedCtor() {
  format_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  team_ = 0u;
}

CDOTAUserMsg_BeastChat::~CDOTAUserMsg_BeastChat() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_BeastChat)
  SharedDtor();
}

void CDOTAUserMsg_BeastChat::SharedDtor() {
  format_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTAUserMsg_BeastChat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_BeastChat::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_BeastChat& CDOTAUserMsg_BeastChat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_BeastChat.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_BeastChat::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_BeastChat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      format_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      message_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      target_.ClearNonDefaultToEmptyNoArena();
    }
  }
  team_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_BeastChat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_BeastChat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 team = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_team();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &team_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string format = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_format()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->format().data(), static_cast<int>(this->format().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_BeastChat.format");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_BeastChat.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string target = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->target().data(), static_cast<int>(this->target().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_BeastChat.target");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_BeastChat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_BeastChat)
  return false;
#undef DO_
}

void CDOTAUserMsg_BeastChat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_BeastChat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 team = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->team(), output);
  }

  // optional string format = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->format().data(), static_cast<int>(this->format().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_BeastChat.format");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->format(), output);
  }

  // optional string message = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_BeastChat.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->message(), output);
  }

  // optional string target = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->target().data(), static_cast<int>(this->target().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_BeastChat.target");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->target(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_BeastChat)
}

::google::protobuf::uint8* CDOTAUserMsg_BeastChat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_BeastChat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 team = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->team(), target);
  }

  // optional string format = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->format().data(), static_cast<int>(this->format().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_BeastChat.format");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->format(), target);
  }

  // optional string message = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_BeastChat.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->message(), target);
  }

  // optional string target = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->target().data(), static_cast<int>(this->target().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_BeastChat.target");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->target(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_BeastChat)
  return target;
}

size_t CDOTAUserMsg_BeastChat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_BeastChat)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string format = 2;
    if (has_format()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->format());
    }

    // optional string message = 3;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional string target = 4;
    if (has_target()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->target());
    }

    // optional uint32 team = 1;
    if (has_team()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->team());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_BeastChat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_BeastChat)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_BeastChat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_BeastChat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_BeastChat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_BeastChat)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_BeastChat::MergeFrom(const CDOTAUserMsg_BeastChat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_BeastChat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_format();
      format_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.format_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_target();
      target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_);
    }
    if (cached_has_bits & 0x00000008u) {
      team_ = from.team_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_BeastChat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_BeastChat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_BeastChat::CopyFrom(const CDOTAUserMsg_BeastChat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_BeastChat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_BeastChat::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_BeastChat::Swap(CDOTAUserMsg_BeastChat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_BeastChat::InternalSwap(CDOTAUserMsg_BeastChat* other) {
  using std::swap;
  format_.Swap(&other->format_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  target_.Swap(&other->target_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(team_, other->team_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_BeastChat::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_CustomHudElement_Create::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_CustomHudElement_Create::kElementIdFieldNumber;
const int CDOTAUserMsg_CustomHudElement_Create::kLayoutFilenameFieldNumber;
const int CDOTAUserMsg_CustomHudElement_Create::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_CustomHudElement_Create::CDOTAUserMsg_CustomHudElement_Create()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_CustomHudElement_Create.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_CustomHudElement_Create)
}
CDOTAUserMsg_CustomHudElement_Create::CDOTAUserMsg_CustomHudElement_Create(const CDOTAUserMsg_CustomHudElement_Create& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  element_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_element_id()) {
    element_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.element_id_);
  }
  layout_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_layout_filename()) {
    layout_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.layout_filename_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_CustomHudElement_Create)
}

void CDOTAUserMsg_CustomHudElement_Create::SharedCtor() {
  element_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  layout_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CDOTAUserMsg_CustomHudElement_Create::~CDOTAUserMsg_CustomHudElement_Create() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_CustomHudElement_Create)
  SharedDtor();
}

void CDOTAUserMsg_CustomHudElement_Create::SharedDtor() {
  element_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  layout_filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTAUserMsg_CustomHudElement_Create::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_CustomHudElement_Create::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_CustomHudElement_Create& CDOTAUserMsg_CustomHudElement_Create::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_CustomHudElement_Create.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_CustomHudElement_Create::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_CustomHudElement_Create)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      element_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      layout_filename_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      data_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_CustomHudElement_Create::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_CustomHudElement_Create)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string element_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_element_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->element_id().data(), static_cast<int>(this->element_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_CustomHudElement_Create.element_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string layout_filename = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_layout_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->layout_filename().data(), static_cast<int>(this->layout_filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_CustomHudElement_Create.layout_filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_CustomHudElement_Create)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_CustomHudElement_Create)
  return false;
#undef DO_
}

void CDOTAUserMsg_CustomHudElement_Create::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_CustomHudElement_Create)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string element_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->element_id().data(), static_cast<int>(this->element_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_CustomHudElement_Create.element_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->element_id(), output);
  }

  // optional string layout_filename = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layout_filename().data(), static_cast<int>(this->layout_filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_CustomHudElement_Create.layout_filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->layout_filename(), output);
  }

  // optional bytes data = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_CustomHudElement_Create)
}

::google::protobuf::uint8* CDOTAUserMsg_CustomHudElement_Create::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_CustomHudElement_Create)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string element_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->element_id().data(), static_cast<int>(this->element_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_CustomHudElement_Create.element_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->element_id(), target);
  }

  // optional string layout_filename = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->layout_filename().data(), static_cast<int>(this->layout_filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_CustomHudElement_Create.layout_filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->layout_filename(), target);
  }

  // optional bytes data = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_CustomHudElement_Create)
  return target;
}

size_t CDOTAUserMsg_CustomHudElement_Create::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_CustomHudElement_Create)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string element_id = 1;
    if (has_element_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->element_id());
    }

    // optional string layout_filename = 2;
    if (has_layout_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->layout_filename());
    }

    // optional bytes data = 3;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_CustomHudElement_Create::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_CustomHudElement_Create)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_CustomHudElement_Create* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_CustomHudElement_Create>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_CustomHudElement_Create)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_CustomHudElement_Create)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_CustomHudElement_Create::MergeFrom(const CDOTAUserMsg_CustomHudElement_Create& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_CustomHudElement_Create)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_element_id();
      element_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.element_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_layout_filename();
      layout_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.layout_filename_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
}

void CDOTAUserMsg_CustomHudElement_Create::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_CustomHudElement_Create)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_CustomHudElement_Create::CopyFrom(const CDOTAUserMsg_CustomHudElement_Create& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_CustomHudElement_Create)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_CustomHudElement_Create::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_CustomHudElement_Create::Swap(CDOTAUserMsg_CustomHudElement_Create* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_CustomHudElement_Create::InternalSwap(CDOTAUserMsg_CustomHudElement_Create* other) {
  using std::swap;
  element_id_.Swap(&other->element_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  layout_filename_.Swap(&other->layout_filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_CustomHudElement_Create::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_CustomHudElement_Modify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_CustomHudElement_Modify::kElementIdFieldNumber;
const int CDOTAUserMsg_CustomHudElement_Modify::kModifyVisibleFieldNumber;
const int CDOTAUserMsg_CustomHudElement_Modify::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_CustomHudElement_Modify::CDOTAUserMsg_CustomHudElement_Modify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_CustomHudElement_Modify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_CustomHudElement_Modify)
}
CDOTAUserMsg_CustomHudElement_Modify::CDOTAUserMsg_CustomHudElement_Modify(const CDOTAUserMsg_CustomHudElement_Modify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  element_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_element_id()) {
    element_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.element_id_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  modify_visible_ = from.modify_visible_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_CustomHudElement_Modify)
}

void CDOTAUserMsg_CustomHudElement_Modify::SharedCtor() {
  element_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modify_visible_ = false;
}

CDOTAUserMsg_CustomHudElement_Modify::~CDOTAUserMsg_CustomHudElement_Modify() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_CustomHudElement_Modify)
  SharedDtor();
}

void CDOTAUserMsg_CustomHudElement_Modify::SharedDtor() {
  element_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTAUserMsg_CustomHudElement_Modify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_CustomHudElement_Modify::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_CustomHudElement_Modify& CDOTAUserMsg_CustomHudElement_Modify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_CustomHudElement_Modify.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_CustomHudElement_Modify::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_CustomHudElement_Modify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      element_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      data_.ClearNonDefaultToEmptyNoArena();
    }
  }
  modify_visible_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_CustomHudElement_Modify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_CustomHudElement_Modify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string element_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_element_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->element_id().data(), static_cast<int>(this->element_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_CustomHudElement_Modify.element_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool modify_visible = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_modify_visible();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &modify_visible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_CustomHudElement_Modify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_CustomHudElement_Modify)
  return false;
#undef DO_
}

void CDOTAUserMsg_CustomHudElement_Modify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_CustomHudElement_Modify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string element_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->element_id().data(), static_cast<int>(this->element_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_CustomHudElement_Modify.element_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->element_id(), output);
  }

  // optional bool modify_visible = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->modify_visible(), output);
  }

  // optional bytes data = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_CustomHudElement_Modify)
}

::google::protobuf::uint8* CDOTAUserMsg_CustomHudElement_Modify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_CustomHudElement_Modify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string element_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->element_id().data(), static_cast<int>(this->element_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_CustomHudElement_Modify.element_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->element_id(), target);
  }

  // optional bool modify_visible = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->modify_visible(), target);
  }

  // optional bytes data = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_CustomHudElement_Modify)
  return target;
}

size_t CDOTAUserMsg_CustomHudElement_Modify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_CustomHudElement_Modify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string element_id = 1;
    if (has_element_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->element_id());
    }

    // optional bytes data = 3;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

    // optional bool modify_visible = 2;
    if (has_modify_visible()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_CustomHudElement_Modify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_CustomHudElement_Modify)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_CustomHudElement_Modify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_CustomHudElement_Modify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_CustomHudElement_Modify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_CustomHudElement_Modify)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_CustomHudElement_Modify::MergeFrom(const CDOTAUserMsg_CustomHudElement_Modify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_CustomHudElement_Modify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_element_id();
      element_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.element_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
    if (cached_has_bits & 0x00000004u) {
      modify_visible_ = from.modify_visible_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_CustomHudElement_Modify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_CustomHudElement_Modify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_CustomHudElement_Modify::CopyFrom(const CDOTAUserMsg_CustomHudElement_Modify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_CustomHudElement_Modify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_CustomHudElement_Modify::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_CustomHudElement_Modify::Swap(CDOTAUserMsg_CustomHudElement_Modify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_CustomHudElement_Modify::InternalSwap(CDOTAUserMsg_CustomHudElement_Modify* other) {
  using std::swap;
  element_id_.Swap(&other->element_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(modify_visible_, other->modify_visible_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_CustomHudElement_Modify::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_CustomHudElement_Destroy::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_CustomHudElement_Destroy::kElementIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_CustomHudElement_Destroy::CDOTAUserMsg_CustomHudElement_Destroy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_CustomHudElement_Destroy.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_CustomHudElement_Destroy)
}
CDOTAUserMsg_CustomHudElement_Destroy::CDOTAUserMsg_CustomHudElement_Destroy(const CDOTAUserMsg_CustomHudElement_Destroy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  element_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_element_id()) {
    element_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.element_id_);
  }
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_CustomHudElement_Destroy)
}

void CDOTAUserMsg_CustomHudElement_Destroy::SharedCtor() {
  element_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CDOTAUserMsg_CustomHudElement_Destroy::~CDOTAUserMsg_CustomHudElement_Destroy() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_CustomHudElement_Destroy)
  SharedDtor();
}

void CDOTAUserMsg_CustomHudElement_Destroy::SharedDtor() {
  element_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTAUserMsg_CustomHudElement_Destroy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_CustomHudElement_Destroy::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_CustomHudElement_Destroy& CDOTAUserMsg_CustomHudElement_Destroy::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_CustomHudElement_Destroy.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_CustomHudElement_Destroy::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_CustomHudElement_Destroy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    element_id_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_CustomHudElement_Destroy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_CustomHudElement_Destroy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string element_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_element_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->element_id().data(), static_cast<int>(this->element_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_CustomHudElement_Destroy.element_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_CustomHudElement_Destroy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_CustomHudElement_Destroy)
  return false;
#undef DO_
}

void CDOTAUserMsg_CustomHudElement_Destroy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_CustomHudElement_Destroy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string element_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->element_id().data(), static_cast<int>(this->element_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_CustomHudElement_Destroy.element_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->element_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_CustomHudElement_Destroy)
}

::google::protobuf::uint8* CDOTAUserMsg_CustomHudElement_Destroy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_CustomHudElement_Destroy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string element_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->element_id().data(), static_cast<int>(this->element_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_CustomHudElement_Destroy.element_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->element_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_CustomHudElement_Destroy)
  return target;
}

size_t CDOTAUserMsg_CustomHudElement_Destroy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_CustomHudElement_Destroy)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string element_id = 1;
  if (has_element_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->element_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_CustomHudElement_Destroy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_CustomHudElement_Destroy)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_CustomHudElement_Destroy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_CustomHudElement_Destroy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_CustomHudElement_Destroy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_CustomHudElement_Destroy)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_CustomHudElement_Destroy::MergeFrom(const CDOTAUserMsg_CustomHudElement_Destroy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_CustomHudElement_Destroy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_element_id()) {
    set_has_element_id();
    element_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.element_id_);
  }
}

void CDOTAUserMsg_CustomHudElement_Destroy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_CustomHudElement_Destroy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_CustomHudElement_Destroy::CopyFrom(const CDOTAUserMsg_CustomHudElement_Destroy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_CustomHudElement_Destroy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_CustomHudElement_Destroy::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_CustomHudElement_Destroy::Swap(CDOTAUserMsg_CustomHudElement_Destroy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_CustomHudElement_Destroy::InternalSwap(CDOTAUserMsg_CustomHudElement_Destroy* other) {
  using std::swap;
  element_id_.Swap(&other->element_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_CustomHudElement_Destroy::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_CompendiumStatePlayer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_CompendiumStatePlayer::kPlayerIdFieldNumber;
const int CDOTAUserMsg_CompendiumStatePlayer::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_CompendiumStatePlayer::CDOTAUserMsg_CompendiumStatePlayer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_CompendiumStatePlayer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_CompendiumStatePlayer)
}
CDOTAUserMsg_CompendiumStatePlayer::CDOTAUserMsg_CompendiumStatePlayer(const CDOTAUserMsg_CompendiumStatePlayer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_CompendiumStatePlayer)
}

void CDOTAUserMsg_CompendiumStatePlayer::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(level_));
}

CDOTAUserMsg_CompendiumStatePlayer::~CDOTAUserMsg_CompendiumStatePlayer() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_CompendiumStatePlayer)
  SharedDtor();
}

void CDOTAUserMsg_CompendiumStatePlayer::SharedDtor() {
}

void CDOTAUserMsg_CompendiumStatePlayer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_CompendiumStatePlayer::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_CompendiumStatePlayer& CDOTAUserMsg_CompendiumStatePlayer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_CompendiumStatePlayer.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_CompendiumStatePlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_CompendiumStatePlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&level_) -
        reinterpret_cast<char*>(&player_id_)) + sizeof(level_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_CompendiumStatePlayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_CompendiumStatePlayer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_CompendiumStatePlayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_CompendiumStatePlayer)
  return false;
#undef DO_
}

void CDOTAUserMsg_CompendiumStatePlayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_CompendiumStatePlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // optional uint32 level = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->level(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_CompendiumStatePlayer)
}

::google::protobuf::uint8* CDOTAUserMsg_CompendiumStatePlayer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_CompendiumStatePlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // optional uint32 level = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->level(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_CompendiumStatePlayer)
  return target;
}

size_t CDOTAUserMsg_CompendiumStatePlayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_CompendiumStatePlayer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->player_id());
    }

    // optional uint32 level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_CompendiumStatePlayer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_CompendiumStatePlayer)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_CompendiumStatePlayer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_CompendiumStatePlayer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_CompendiumStatePlayer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_CompendiumStatePlayer)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_CompendiumStatePlayer::MergeFrom(const CDOTAUserMsg_CompendiumStatePlayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_CompendiumStatePlayer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      level_ = from.level_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_CompendiumStatePlayer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_CompendiumStatePlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_CompendiumStatePlayer::CopyFrom(const CDOTAUserMsg_CompendiumStatePlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_CompendiumStatePlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_CompendiumStatePlayer::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_CompendiumStatePlayer::Swap(CDOTAUserMsg_CompendiumStatePlayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_CompendiumStatePlayer::InternalSwap(CDOTAUserMsg_CompendiumStatePlayer* other) {
  using std::swap;
  swap(player_id_, other->player_id_);
  swap(level_, other->level_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_CompendiumStatePlayer::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_CompendiumState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_CompendiumState::kCompendiumPlayersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_CompendiumState::CDOTAUserMsg_CompendiumState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_CompendiumState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_CompendiumState)
}
CDOTAUserMsg_CompendiumState::CDOTAUserMsg_CompendiumState(const CDOTAUserMsg_CompendiumState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      compendium_players_(from.compendium_players_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_CompendiumState)
}

void CDOTAUserMsg_CompendiumState::SharedCtor() {
}

CDOTAUserMsg_CompendiumState::~CDOTAUserMsg_CompendiumState() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_CompendiumState)
  SharedDtor();
}

void CDOTAUserMsg_CompendiumState::SharedDtor() {
}

void CDOTAUserMsg_CompendiumState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_CompendiumState::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_CompendiumState& CDOTAUserMsg_CompendiumState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_CompendiumState.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_CompendiumState::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_CompendiumState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  compendium_players_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_CompendiumState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_CompendiumState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_compendium_players()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_CompendiumState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_CompendiumState)
  return false;
#undef DO_
}

void CDOTAUserMsg_CompendiumState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_CompendiumState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->compendium_players_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->compendium_players(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_CompendiumState)
}

::google::protobuf::uint8* CDOTAUserMsg_CompendiumState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_CompendiumState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->compendium_players_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->compendium_players(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_CompendiumState)
  return target;
}

size_t CDOTAUserMsg_CompendiumState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_CompendiumState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->compendium_players_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->compendium_players(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_CompendiumState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_CompendiumState)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_CompendiumState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_CompendiumState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_CompendiumState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_CompendiumState)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_CompendiumState::MergeFrom(const CDOTAUserMsg_CompendiumState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_CompendiumState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  compendium_players_.MergeFrom(from.compendium_players_);
}

void CDOTAUserMsg_CompendiumState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_CompendiumState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_CompendiumState::CopyFrom(const CDOTAUserMsg_CompendiumState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_CompendiumState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_CompendiumState::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_CompendiumState::Swap(CDOTAUserMsg_CompendiumState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_CompendiumState::InternalSwap(CDOTAUserMsg_CompendiumState* other) {
  using std::swap;
  CastToBase(&compendium_players_)->InternalSwap(CastToBase(&other->compendium_players_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_CompendiumState::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_ProjectionAbility::InitAsDefaultInstance() {
  ::_CDOTAUserMsg_ProjectionAbility_default_instance_._instance.get_mutable()->origin_ = const_cast< ::CMsgVector*>(
      ::CMsgVector::internal_default_instance());
}
void CDOTAUserMsg_ProjectionAbility::clear_origin() {
  if (origin_ != NULL) origin_->Clear();
  clear_has_origin();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_ProjectionAbility::kAbilityIdFieldNumber;
const int CDOTAUserMsg_ProjectionAbility::kCasterEntIndexFieldNumber;
const int CDOTAUserMsg_ProjectionAbility::kCasterTeamFieldNumber;
const int CDOTAUserMsg_ProjectionAbility::kChannelEndFieldNumber;
const int CDOTAUserMsg_ProjectionAbility::kOriginFieldNumber;
const int CDOTAUserMsg_ProjectionAbility::kTrackCasterOnlyFieldNumber;
const int CDOTAUserMsg_ProjectionAbility::kEndTimeFieldNumber;
const int CDOTAUserMsg_ProjectionAbility::kVictimEntIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_ProjectionAbility::CDOTAUserMsg_ProjectionAbility()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_ProjectionAbility.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_ProjectionAbility)
}
CDOTAUserMsg_ProjectionAbility::CDOTAUserMsg_ProjectionAbility(const CDOTAUserMsg_ProjectionAbility& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_origin()) {
    origin_ = new ::CMsgVector(*from.origin_);
  } else {
    origin_ = NULL;
  }
  ::memcpy(&ability_id_, &from.ability_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&victim_ent_index_) -
    reinterpret_cast<char*>(&ability_id_)) + sizeof(victim_ent_index_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_ProjectionAbility)
}

void CDOTAUserMsg_ProjectionAbility::SharedCtor() {
  ::memset(&origin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&victim_ent_index_) -
      reinterpret_cast<char*>(&origin_)) + sizeof(victim_ent_index_));
}

CDOTAUserMsg_ProjectionAbility::~CDOTAUserMsg_ProjectionAbility() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_ProjectionAbility)
  SharedDtor();
}

void CDOTAUserMsg_ProjectionAbility::SharedDtor() {
  if (this != internal_default_instance()) delete origin_;
}

void CDOTAUserMsg_ProjectionAbility::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_ProjectionAbility::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_ProjectionAbility& CDOTAUserMsg_ProjectionAbility::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_ProjectionAbility.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_ProjectionAbility::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_ProjectionAbility)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(origin_ != NULL);
    origin_->Clear();
  }
  if (cached_has_bits & 254u) {
    ::memset(&ability_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&victim_ent_index_) -
        reinterpret_cast<char*>(&ability_id_)) + sizeof(victim_ent_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_ProjectionAbility::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_ProjectionAbility)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ability_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ability_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ability_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 caster_ent_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_caster_ent_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &caster_ent_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 caster_team = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_caster_team();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &caster_team_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool channel_end = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_channel_end();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &channel_end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgVector origin = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_origin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool track_caster_only = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_track_caster_only();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &track_caster_only_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float end_time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          set_has_end_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 victim_ent_index = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_victim_ent_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &victim_ent_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_ProjectionAbility)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_ProjectionAbility)
  return false;
#undef DO_
}

void CDOTAUserMsg_ProjectionAbility::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_ProjectionAbility)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 ability_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ability_id(), output);
  }

  // optional int32 caster_ent_index = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->caster_ent_index(), output);
  }

  // optional int32 caster_team = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->caster_team(), output);
  }

  // optional bool channel_end = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->channel_end(), output);
  }

  // optional .CMsgVector origin = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_origin(), output);
  }

  // optional bool track_caster_only = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->track_caster_only(), output);
  }

  // optional float end_time = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->end_time(), output);
  }

  // optional int32 victim_ent_index = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->victim_ent_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_ProjectionAbility)
}

::google::protobuf::uint8* CDOTAUserMsg_ProjectionAbility::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_ProjectionAbility)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 ability_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ability_id(), target);
  }

  // optional int32 caster_ent_index = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->caster_ent_index(), target);
  }

  // optional int32 caster_team = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->caster_team(), target);
  }

  // optional bool channel_end = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->channel_end(), target);
  }

  // optional .CMsgVector origin = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_origin(), deterministic, target);
  }

  // optional bool track_caster_only = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->track_caster_only(), target);
  }

  // optional float end_time = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->end_time(), target);
  }

  // optional int32 victim_ent_index = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->victim_ent_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_ProjectionAbility)
  return target;
}

size_t CDOTAUserMsg_ProjectionAbility::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_ProjectionAbility)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .CMsgVector origin = 5;
    if (has_origin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *origin_);
    }

    // optional uint32 ability_id = 1;
    if (has_ability_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ability_id());
    }

    // optional int32 caster_ent_index = 2;
    if (has_caster_ent_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->caster_ent_index());
    }

    // optional int32 caster_team = 3;
    if (has_caster_team()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->caster_team());
    }

    // optional bool channel_end = 4;
    if (has_channel_end()) {
      total_size += 1 + 1;
    }

    // optional bool track_caster_only = 6;
    if (has_track_caster_only()) {
      total_size += 1 + 1;
    }

    // optional float end_time = 7;
    if (has_end_time()) {
      total_size += 1 + 4;
    }

    // optional int32 victim_ent_index = 8;
    if (has_victim_ent_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->victim_ent_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_ProjectionAbility::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_ProjectionAbility)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_ProjectionAbility* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_ProjectionAbility>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_ProjectionAbility)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_ProjectionAbility)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_ProjectionAbility::MergeFrom(const CDOTAUserMsg_ProjectionAbility& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_ProjectionAbility)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_origin()->::CMsgVector::MergeFrom(from.origin());
    }
    if (cached_has_bits & 0x00000002u) {
      ability_id_ = from.ability_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      caster_ent_index_ = from.caster_ent_index_;
    }
    if (cached_has_bits & 0x00000008u) {
      caster_team_ = from.caster_team_;
    }
    if (cached_has_bits & 0x00000010u) {
      channel_end_ = from.channel_end_;
    }
    if (cached_has_bits & 0x00000020u) {
      track_caster_only_ = from.track_caster_only_;
    }
    if (cached_has_bits & 0x00000040u) {
      end_time_ = from.end_time_;
    }
    if (cached_has_bits & 0x00000080u) {
      victim_ent_index_ = from.victim_ent_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_ProjectionAbility::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_ProjectionAbility)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_ProjectionAbility::CopyFrom(const CDOTAUserMsg_ProjectionAbility& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_ProjectionAbility)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_ProjectionAbility::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_ProjectionAbility::Swap(CDOTAUserMsg_ProjectionAbility* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_ProjectionAbility::InternalSwap(CDOTAUserMsg_ProjectionAbility* other) {
  using std::swap;
  swap(origin_, other->origin_);
  swap(ability_id_, other->ability_id_);
  swap(caster_ent_index_, other->caster_ent_index_);
  swap(caster_team_, other->caster_team_);
  swap(channel_end_, other->channel_end_);
  swap(track_caster_only_, other->track_caster_only_);
  swap(end_time_, other->end_time_);
  swap(victim_ent_index_, other->victim_ent_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_ProjectionAbility::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_ProjectionEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_ProjectionEvent::kEventIdFieldNumber;
const int CDOTAUserMsg_ProjectionEvent::kTeamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_ProjectionEvent::CDOTAUserMsg_ProjectionEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_ProjectionEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_ProjectionEvent)
}
CDOTAUserMsg_ProjectionEvent::CDOTAUserMsg_ProjectionEvent(const CDOTAUserMsg_ProjectionEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&event_id_, &from.event_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&team_) -
    reinterpret_cast<char*>(&event_id_)) + sizeof(team_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_ProjectionEvent)
}

void CDOTAUserMsg_ProjectionEvent::SharedCtor() {
  ::memset(&event_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&team_) -
      reinterpret_cast<char*>(&event_id_)) + sizeof(team_));
}

CDOTAUserMsg_ProjectionEvent::~CDOTAUserMsg_ProjectionEvent() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_ProjectionEvent)
  SharedDtor();
}

void CDOTAUserMsg_ProjectionEvent::SharedDtor() {
}

void CDOTAUserMsg_ProjectionEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_ProjectionEvent::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_ProjectionEvent& CDOTAUserMsg_ProjectionEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_ProjectionEvent.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_ProjectionEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_ProjectionEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&event_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&team_) -
        reinterpret_cast<char*>(&event_id_)) + sizeof(team_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_ProjectionEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_ProjectionEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .EProjectionEvent event_id = 1 [default = ePE_FirstBlood];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::EProjectionEvent_IsValid(value)) {
            set_event_id(static_cast< ::EProjectionEvent >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 team = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_team();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &team_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_ProjectionEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_ProjectionEvent)
  return false;
#undef DO_
}

void CDOTAUserMsg_ProjectionEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_ProjectionEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .EProjectionEvent event_id = 1 [default = ePE_FirstBlood];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->event_id(), output);
  }

  // optional uint32 team = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->team(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_ProjectionEvent)
}

::google::protobuf::uint8* CDOTAUserMsg_ProjectionEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_ProjectionEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .EProjectionEvent event_id = 1 [default = ePE_FirstBlood];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->event_id(), target);
  }

  // optional uint32 team = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->team(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_ProjectionEvent)
  return target;
}

size_t CDOTAUserMsg_ProjectionEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_ProjectionEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .EProjectionEvent event_id = 1 [default = ePE_FirstBlood];
    if (has_event_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->event_id());
    }

    // optional uint32 team = 2;
    if (has_team()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->team());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_ProjectionEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_ProjectionEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_ProjectionEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_ProjectionEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_ProjectionEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_ProjectionEvent)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_ProjectionEvent::MergeFrom(const CDOTAUserMsg_ProjectionEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_ProjectionEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      event_id_ = from.event_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      team_ = from.team_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_ProjectionEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_ProjectionEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_ProjectionEvent::CopyFrom(const CDOTAUserMsg_ProjectionEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_ProjectionEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_ProjectionEvent::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_ProjectionEvent::Swap(CDOTAUserMsg_ProjectionEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_ProjectionEvent::InternalSwap(CDOTAUserMsg_ProjectionEvent* other) {
  using std::swap;
  swap(event_id_, other->event_id_);
  swap(team_, other->team_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_ProjectionEvent::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_XPAlert::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_XPAlert::kPlayerIdFieldNumber;
const int CDOTAUserMsg_XPAlert::kTargetEntindexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_XPAlert::CDOTAUserMsg_XPAlert()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_XPAlert.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_XPAlert)
}
CDOTAUserMsg_XPAlert::CDOTAUserMsg_XPAlert(const CDOTAUserMsg_XPAlert& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_entindex_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(target_entindex_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_XPAlert)
}

void CDOTAUserMsg_XPAlert::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_entindex_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(target_entindex_));
}

CDOTAUserMsg_XPAlert::~CDOTAUserMsg_XPAlert() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_XPAlert)
  SharedDtor();
}

void CDOTAUserMsg_XPAlert::SharedDtor() {
}

void CDOTAUserMsg_XPAlert::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_XPAlert::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_XPAlert& CDOTAUserMsg_XPAlert::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_XPAlert.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_XPAlert::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_XPAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&target_entindex_) -
        reinterpret_cast<char*>(&player_id_)) + sizeof(target_entindex_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_XPAlert::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_XPAlert)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 target_entindex = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_target_entindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_entindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_XPAlert)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_XPAlert)
  return false;
#undef DO_
}

void CDOTAUserMsg_XPAlert::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_XPAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // optional uint32 target_entindex = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->target_entindex(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_XPAlert)
}

::google::protobuf::uint8* CDOTAUserMsg_XPAlert::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_XPAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // optional uint32 target_entindex = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->target_entindex(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_XPAlert)
  return target;
}

size_t CDOTAUserMsg_XPAlert::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_XPAlert)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->player_id());
    }

    // optional uint32 target_entindex = 2;
    if (has_target_entindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->target_entindex());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_XPAlert::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_XPAlert)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_XPAlert* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_XPAlert>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_XPAlert)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_XPAlert)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_XPAlert::MergeFrom(const CDOTAUserMsg_XPAlert& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_XPAlert)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      target_entindex_ = from.target_entindex_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_XPAlert::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_XPAlert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_XPAlert::CopyFrom(const CDOTAUserMsg_XPAlert& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_XPAlert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_XPAlert::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_XPAlert::Swap(CDOTAUserMsg_XPAlert* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_XPAlert::InternalSwap(CDOTAUserMsg_XPAlert* other) {
  using std::swap;
  swap(player_id_, other->player_id_);
  swap(target_entindex_, other->target_entindex_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_XPAlert::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_UpdateQuestProgress::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_UpdateQuestProgress::CDOTAUserMsg_UpdateQuestProgress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_UpdateQuestProgress.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_UpdateQuestProgress)
}
CDOTAUserMsg_UpdateQuestProgress::CDOTAUserMsg_UpdateQuestProgress(const CDOTAUserMsg_UpdateQuestProgress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_UpdateQuestProgress)
}

void CDOTAUserMsg_UpdateQuestProgress::SharedCtor() {
}

CDOTAUserMsg_UpdateQuestProgress::~CDOTAUserMsg_UpdateQuestProgress() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_UpdateQuestProgress)
  SharedDtor();
}

void CDOTAUserMsg_UpdateQuestProgress::SharedDtor() {
}

void CDOTAUserMsg_UpdateQuestProgress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_UpdateQuestProgress::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_UpdateQuestProgress& CDOTAUserMsg_UpdateQuestProgress::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_UpdateQuestProgress.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_UpdateQuestProgress::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_UpdateQuestProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_UpdateQuestProgress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_UpdateQuestProgress)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_UpdateQuestProgress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_UpdateQuestProgress)
  return false;
#undef DO_
}

void CDOTAUserMsg_UpdateQuestProgress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_UpdateQuestProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_UpdateQuestProgress)
}

::google::protobuf::uint8* CDOTAUserMsg_UpdateQuestProgress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_UpdateQuestProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_UpdateQuestProgress)
  return target;
}

size_t CDOTAUserMsg_UpdateQuestProgress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_UpdateQuestProgress)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_UpdateQuestProgress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_UpdateQuestProgress)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_UpdateQuestProgress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_UpdateQuestProgress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_UpdateQuestProgress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_UpdateQuestProgress)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_UpdateQuestProgress::MergeFrom(const CDOTAUserMsg_UpdateQuestProgress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_UpdateQuestProgress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CDOTAUserMsg_UpdateQuestProgress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_UpdateQuestProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_UpdateQuestProgress::CopyFrom(const CDOTAUserMsg_UpdateQuestProgress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_UpdateQuestProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_UpdateQuestProgress::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_UpdateQuestProgress::Swap(CDOTAUserMsg_UpdateQuestProgress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_UpdateQuestProgress::InternalSwap(CDOTAUserMsg_UpdateQuestProgress* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_UpdateQuestProgress::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_QuestStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_QuestStatus::kPlayerIdFieldNumber;
const int CDOTAUserMsg_QuestStatus::kQuestIdFieldNumber;
const int CDOTAUserMsg_QuestStatus::kChallengeIdFieldNumber;
const int CDOTAUserMsg_QuestStatus::kProgressFieldNumber;
const int CDOTAUserMsg_QuestStatus::kGoalFieldNumber;
const int CDOTAUserMsg_QuestStatus::kQueryFieldNumber;
const int CDOTAUserMsg_QuestStatus::kFailGametimeFieldNumber;
const int CDOTAUserMsg_QuestStatus::kItemAbilityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_QuestStatus::CDOTAUserMsg_QuestStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_QuestStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_QuestStatus)
}
CDOTAUserMsg_QuestStatus::CDOTAUserMsg_QuestStatus(const CDOTAUserMsg_QuestStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&item_ability_id_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(item_ability_id_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_QuestStatus)
}

void CDOTAUserMsg_QuestStatus::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&item_ability_id_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(item_ability_id_));
}

CDOTAUserMsg_QuestStatus::~CDOTAUserMsg_QuestStatus() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_QuestStatus)
  SharedDtor();
}

void CDOTAUserMsg_QuestStatus::SharedDtor() {
}

void CDOTAUserMsg_QuestStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_QuestStatus::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_QuestStatus& CDOTAUserMsg_QuestStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_QuestStatus.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_QuestStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_QuestStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&item_ability_id_) -
        reinterpret_cast<char*>(&player_id_)) + sizeof(item_ability_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_QuestStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_QuestStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 quest_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_quest_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 challenge_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_challenge_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &challenge_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 progress = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_progress();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 goal = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_goal();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 query = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_query();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float fail_gametime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          set_has_fail_gametime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fail_gametime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 item_ability_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_item_ability_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_ability_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_QuestStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_QuestStatus)
  return false;
#undef DO_
}

void CDOTAUserMsg_QuestStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_QuestStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // optional uint32 quest_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->quest_id(), output);
  }

  // optional uint32 challenge_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->challenge_id(), output);
  }

  // optional uint32 progress = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->progress(), output);
  }

  // optional uint32 goal = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->goal(), output);
  }

  // optional uint32 query = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->query(), output);
  }

  // optional float fail_gametime = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->fail_gametime(), output);
  }

  // optional uint32 item_ability_id = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->item_ability_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_QuestStatus)
}

::google::protobuf::uint8* CDOTAUserMsg_QuestStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_QuestStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // optional uint32 quest_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->quest_id(), target);
  }

  // optional uint32 challenge_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->challenge_id(), target);
  }

  // optional uint32 progress = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->progress(), target);
  }

  // optional uint32 goal = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->goal(), target);
  }

  // optional uint32 query = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->query(), target);
  }

  // optional float fail_gametime = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->fail_gametime(), target);
  }

  // optional uint32 item_ability_id = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->item_ability_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_QuestStatus)
  return target;
}

size_t CDOTAUserMsg_QuestStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_QuestStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 player_id = 1;
  if (has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_id());
  }
  if (_has_bits_[0 / 32] & 254u) {
    // optional uint32 quest_id = 2;
    if (has_quest_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->quest_id());
    }

    // optional uint32 challenge_id = 3;
    if (has_challenge_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->challenge_id());
    }

    // optional uint32 progress = 4;
    if (has_progress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->progress());
    }

    // optional uint32 goal = 5;
    if (has_goal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goal());
    }

    // optional uint32 query = 6;
    if (has_query()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->query());
    }

    // optional float fail_gametime = 7;
    if (has_fail_gametime()) {
      total_size += 1 + 4;
    }

    // optional uint32 item_ability_id = 8;
    if (has_item_ability_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_ability_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_QuestStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_QuestStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_QuestStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_QuestStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_QuestStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_QuestStatus)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_QuestStatus::MergeFrom(const CDOTAUserMsg_QuestStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_QuestStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      quest_id_ = from.quest_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      challenge_id_ = from.challenge_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      progress_ = from.progress_;
    }
    if (cached_has_bits & 0x00000010u) {
      goal_ = from.goal_;
    }
    if (cached_has_bits & 0x00000020u) {
      query_ = from.query_;
    }
    if (cached_has_bits & 0x00000040u) {
      fail_gametime_ = from.fail_gametime_;
    }
    if (cached_has_bits & 0x00000080u) {
      item_ability_id_ = from.item_ability_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_QuestStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_QuestStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_QuestStatus::CopyFrom(const CDOTAUserMsg_QuestStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_QuestStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_QuestStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CDOTAUserMsg_QuestStatus::Swap(CDOTAUserMsg_QuestStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_QuestStatus::InternalSwap(CDOTAUserMsg_QuestStatus* other) {
  using std::swap;
  swap(player_id_, other->player_id_);
  swap(quest_id_, other->quest_id_);
  swap(challenge_id_, other->challenge_id_);
  swap(progress_, other->progress_);
  swap(goal_, other->goal_);
  swap(query_, other->query_);
  swap(fail_gametime_, other->fail_gametime_);
  swap(item_ability_id_, other->item_ability_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_QuestStatus::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_SuggestHeroPick::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_SuggestHeroPick::kPlayerIdFieldNumber;
const int CDOTAUserMsg_SuggestHeroPick::kHeroIdFieldNumber;
const int CDOTAUserMsg_SuggestHeroPick::kBanFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_SuggestHeroPick::CDOTAUserMsg_SuggestHeroPick()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_SuggestHeroPick.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_SuggestHeroPick)
}
CDOTAUserMsg_SuggestHeroPick::CDOTAUserMsg_SuggestHeroPick(const CDOTAUserMsg_SuggestHeroPick& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&ban_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(ban_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_SuggestHeroPick)
}

void CDOTAUserMsg_SuggestHeroPick::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ban_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(ban_));
}

CDOTAUserMsg_SuggestHeroPick::~CDOTAUserMsg_SuggestHeroPick() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_SuggestHeroPick)
  SharedDtor();
}

void CDOTAUserMsg_SuggestHeroPick::SharedDtor() {
}

void CDOTAUserMsg_SuggestHeroPick::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_SuggestHeroPick::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_SuggestHeroPick& CDOTAUserMsg_SuggestHeroPick::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_SuggestHeroPick.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_SuggestHeroPick::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_SuggestHeroPick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ban_) -
        reinterpret_cast<char*>(&player_id_)) + sizeof(ban_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_SuggestHeroPick::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_SuggestHeroPick)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 hero_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_hero_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hero_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool ban = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_ban();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ban_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_SuggestHeroPick)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_SuggestHeroPick)
  return false;
#undef DO_
}

void CDOTAUserMsg_SuggestHeroPick::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_SuggestHeroPick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // optional uint32 hero_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hero_id(), output);
  }

  // optional bool ban = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->ban(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_SuggestHeroPick)
}

::google::protobuf::uint8* CDOTAUserMsg_SuggestHeroPick::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_SuggestHeroPick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // optional uint32 hero_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hero_id(), target);
  }

  // optional bool ban = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->ban(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_SuggestHeroPick)
  return target;
}

size_t CDOTAUserMsg_SuggestHeroPick::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_SuggestHeroPick)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 player_id = 1;
  if (has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_id());
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional uint32 hero_id = 2;
    if (has_hero_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hero_id());
    }

    // optional bool ban = 3;
    if (has_ban()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_SuggestHeroPick::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_SuggestHeroPick)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_SuggestHeroPick* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_SuggestHeroPick>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_SuggestHeroPick)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_SuggestHeroPick)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_SuggestHeroPick::MergeFrom(const CDOTAUserMsg_SuggestHeroPick& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_SuggestHeroPick)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      hero_id_ = from.hero_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      ban_ = from.ban_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_SuggestHeroPick::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_SuggestHeroPick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_SuggestHeroPick::CopyFrom(const CDOTAUserMsg_SuggestHeroPick& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_SuggestHeroPick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_SuggestHeroPick::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CDOTAUserMsg_SuggestHeroPick::Swap(CDOTAUserMsg_SuggestHeroPick* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_SuggestHeroPick::InternalSwap(CDOTAUserMsg_SuggestHeroPick* other) {
  using std::swap;
  swap(player_id_, other->player_id_);
  swap(hero_id_, other->hero_id_);
  swap(ban_, other->ban_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_SuggestHeroPick::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_SuggestHeroRole::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_SuggestHeroRole::kPlayerIdFieldNumber;
const int CDOTAUserMsg_SuggestHeroRole::kHeroRoleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_SuggestHeroRole::CDOTAUserMsg_SuggestHeroRole()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_SuggestHeroRole.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_SuggestHeroRole)
}
CDOTAUserMsg_SuggestHeroRole::CDOTAUserMsg_SuggestHeroRole(const CDOTAUserMsg_SuggestHeroRole& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hero_role_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hero_role()) {
    hero_role_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hero_role_);
  }
  player_id_ = from.player_id_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_SuggestHeroRole)
}

void CDOTAUserMsg_SuggestHeroRole::SharedCtor() {
  hero_role_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  player_id_ = 0u;
}

CDOTAUserMsg_SuggestHeroRole::~CDOTAUserMsg_SuggestHeroRole() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_SuggestHeroRole)
  SharedDtor();
}

void CDOTAUserMsg_SuggestHeroRole::SharedDtor() {
  hero_role_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTAUserMsg_SuggestHeroRole::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_SuggestHeroRole::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_SuggestHeroRole& CDOTAUserMsg_SuggestHeroRole::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_SuggestHeroRole.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_SuggestHeroRole::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_SuggestHeroRole)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    hero_role_.ClearNonDefaultToEmptyNoArena();
  }
  player_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_SuggestHeroRole::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_SuggestHeroRole)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string hero_role = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hero_role()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hero_role().data(), static_cast<int>(this->hero_role().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_SuggestHeroRole.hero_role");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_SuggestHeroRole)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_SuggestHeroRole)
  return false;
#undef DO_
}

void CDOTAUserMsg_SuggestHeroRole::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_SuggestHeroRole)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 player_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // optional string hero_role = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hero_role().data(), static_cast<int>(this->hero_role().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_SuggestHeroRole.hero_role");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->hero_role(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_SuggestHeroRole)
}

::google::protobuf::uint8* CDOTAUserMsg_SuggestHeroRole::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_SuggestHeroRole)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 player_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // optional string hero_role = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hero_role().data(), static_cast<int>(this->hero_role().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_SuggestHeroRole.hero_role");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->hero_role(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_SuggestHeroRole)
  return target;
}

size_t CDOTAUserMsg_SuggestHeroRole::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_SuggestHeroRole)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 player_id = 1;
  if (has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_id());
  }
  // optional string hero_role = 2;
  if (has_hero_role()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hero_role());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_SuggestHeroRole::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_SuggestHeroRole)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_SuggestHeroRole* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_SuggestHeroRole>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_SuggestHeroRole)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_SuggestHeroRole)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_SuggestHeroRole::MergeFrom(const CDOTAUserMsg_SuggestHeroRole& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_SuggestHeroRole)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_hero_role();
      hero_role_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hero_role_);
    }
    if (cached_has_bits & 0x00000002u) {
      player_id_ = from.player_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_SuggestHeroRole::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_SuggestHeroRole)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_SuggestHeroRole::CopyFrom(const CDOTAUserMsg_SuggestHeroRole& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_SuggestHeroRole)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_SuggestHeroRole::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void CDOTAUserMsg_SuggestHeroRole::Swap(CDOTAUserMsg_SuggestHeroRole* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_SuggestHeroRole::InternalSwap(CDOTAUserMsg_SuggestHeroRole* other) {
  using std::swap;
  hero_role_.Swap(&other->hero_role_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(player_id_, other->player_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_SuggestHeroRole::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_KillcamDamageTaken::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_KillcamDamageTaken::kPlayerIdFieldNumber;
const int CDOTAUserMsg_KillcamDamageTaken::kDamageTakenFieldNumber;
const int CDOTAUserMsg_KillcamDamageTaken::kItemTypeFieldNumber;
const int CDOTAUserMsg_KillcamDamageTaken::kItemAbilityIdFieldNumber;
const int CDOTAUserMsg_KillcamDamageTaken::kHeroNameFieldNumber;
const int CDOTAUserMsg_KillcamDamageTaken::kDamageColorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_KillcamDamageTaken::CDOTAUserMsg_KillcamDamageTaken()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_KillcamDamageTaken.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_KillcamDamageTaken)
}
CDOTAUserMsg_KillcamDamageTaken::CDOTAUserMsg_KillcamDamageTaken(const CDOTAUserMsg_KillcamDamageTaken& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hero_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hero_name()) {
    hero_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hero_name_);
  }
  damage_color_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_damage_color()) {
    damage_color_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.damage_color_);
  }
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&item_ability_id_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(item_ability_id_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_KillcamDamageTaken)
}

void CDOTAUserMsg_KillcamDamageTaken::SharedCtor() {
  hero_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  damage_color_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&item_ability_id_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(item_ability_id_));
}

CDOTAUserMsg_KillcamDamageTaken::~CDOTAUserMsg_KillcamDamageTaken() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_KillcamDamageTaken)
  SharedDtor();
}

void CDOTAUserMsg_KillcamDamageTaken::SharedDtor() {
  hero_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  damage_color_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTAUserMsg_KillcamDamageTaken::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_KillcamDamageTaken::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_KillcamDamageTaken& CDOTAUserMsg_KillcamDamageTaken::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_KillcamDamageTaken.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_KillcamDamageTaken::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_KillcamDamageTaken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      hero_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      damage_color_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 60u) {
    ::memset(&player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&item_ability_id_) -
        reinterpret_cast<char*>(&player_id_)) + sizeof(item_ability_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_KillcamDamageTaken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_KillcamDamageTaken)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 damage_taken = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_damage_taken();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &damage_taken_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 item_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_item_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 item_ability_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_item_ability_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_ability_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string hero_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hero_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hero_name().data(), static_cast<int>(this->hero_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_KillcamDamageTaken.hero_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string damage_color = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_damage_color()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->damage_color().data(), static_cast<int>(this->damage_color().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_KillcamDamageTaken.damage_color");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_KillcamDamageTaken)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_KillcamDamageTaken)
  return false;
#undef DO_
}

void CDOTAUserMsg_KillcamDamageTaken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_KillcamDamageTaken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 player_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // optional uint32 damage_taken = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->damage_taken(), output);
  }

  // optional uint32 item_type = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->item_type(), output);
  }

  // optional uint32 item_ability_id = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->item_ability_id(), output);
  }

  // optional string hero_name = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hero_name().data(), static_cast<int>(this->hero_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_KillcamDamageTaken.hero_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->hero_name(), output);
  }

  // optional string damage_color = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->damage_color().data(), static_cast<int>(this->damage_color().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_KillcamDamageTaken.damage_color");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->damage_color(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_KillcamDamageTaken)
}

::google::protobuf::uint8* CDOTAUserMsg_KillcamDamageTaken::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_KillcamDamageTaken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 player_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // optional uint32 damage_taken = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->damage_taken(), target);
  }

  // optional uint32 item_type = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->item_type(), target);
  }

  // optional uint32 item_ability_id = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->item_ability_id(), target);
  }

  // optional string hero_name = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hero_name().data(), static_cast<int>(this->hero_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_KillcamDamageTaken.hero_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->hero_name(), target);
  }

  // optional string damage_color = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->damage_color().data(), static_cast<int>(this->damage_color().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_KillcamDamageTaken.damage_color");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->damage_color(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_KillcamDamageTaken)
  return target;
}

size_t CDOTAUserMsg_KillcamDamageTaken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_KillcamDamageTaken)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 player_id = 1;
  if (has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_id());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string hero_name = 5;
    if (has_hero_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hero_name());
    }

    // optional string damage_color = 6;
    if (has_damage_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->damage_color());
    }

  }
  if (_has_bits_[0 / 32] & 56u) {
    // optional uint32 damage_taken = 2;
    if (has_damage_taken()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->damage_taken());
    }

    // optional uint32 item_type = 3;
    if (has_item_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_type());
    }

    // optional uint32 item_ability_id = 4;
    if (has_item_ability_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_ability_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_KillcamDamageTaken::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_KillcamDamageTaken)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_KillcamDamageTaken* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_KillcamDamageTaken>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_KillcamDamageTaken)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_KillcamDamageTaken)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_KillcamDamageTaken::MergeFrom(const CDOTAUserMsg_KillcamDamageTaken& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_KillcamDamageTaken)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_hero_name();
      hero_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hero_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_damage_color();
      damage_color_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.damage_color_);
    }
    if (cached_has_bits & 0x00000004u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      damage_taken_ = from.damage_taken_;
    }
    if (cached_has_bits & 0x00000010u) {
      item_type_ = from.item_type_;
    }
    if (cached_has_bits & 0x00000020u) {
      item_ability_id_ = from.item_ability_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_KillcamDamageTaken::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_KillcamDamageTaken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_KillcamDamageTaken::CopyFrom(const CDOTAUserMsg_KillcamDamageTaken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_KillcamDamageTaken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_KillcamDamageTaken::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void CDOTAUserMsg_KillcamDamageTaken::Swap(CDOTAUserMsg_KillcamDamageTaken* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_KillcamDamageTaken::InternalSwap(CDOTAUserMsg_KillcamDamageTaken* other) {
  using std::swap;
  hero_name_.Swap(&other->hero_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  damage_color_.Swap(&other->damage_color_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(player_id_, other->player_id_);
  swap(damage_taken_, other->damage_taken_);
  swap(item_type_, other->item_type_);
  swap(item_ability_id_, other->item_ability_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_KillcamDamageTaken::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_SelectPenaltyGold::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_SelectPenaltyGold::kPlayerIdFieldNumber;
const int CDOTAUserMsg_SelectPenaltyGold::kCostFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_SelectPenaltyGold::CDOTAUserMsg_SelectPenaltyGold()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_SelectPenaltyGold.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_SelectPenaltyGold)
}
CDOTAUserMsg_SelectPenaltyGold::CDOTAUserMsg_SelectPenaltyGold(const CDOTAUserMsg_SelectPenaltyGold& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&cost_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(cost_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_SelectPenaltyGold)
}

void CDOTAUserMsg_SelectPenaltyGold::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cost_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(cost_));
}

CDOTAUserMsg_SelectPenaltyGold::~CDOTAUserMsg_SelectPenaltyGold() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_SelectPenaltyGold)
  SharedDtor();
}

void CDOTAUserMsg_SelectPenaltyGold::SharedDtor() {
}

void CDOTAUserMsg_SelectPenaltyGold::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_SelectPenaltyGold::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_SelectPenaltyGold& CDOTAUserMsg_SelectPenaltyGold::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_SelectPenaltyGold.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_SelectPenaltyGold::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_SelectPenaltyGold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cost_) -
        reinterpret_cast<char*>(&player_id_)) + sizeof(cost_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_SelectPenaltyGold::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_SelectPenaltyGold)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 cost = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_cost();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &cost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_SelectPenaltyGold)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_SelectPenaltyGold)
  return false;
#undef DO_
}

void CDOTAUserMsg_SelectPenaltyGold::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_SelectPenaltyGold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // optional sint32 cost = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->cost(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_SelectPenaltyGold)
}

::google::protobuf::uint8* CDOTAUserMsg_SelectPenaltyGold::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_SelectPenaltyGold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // optional sint32 cost = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->cost(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_SelectPenaltyGold)
  return target;
}

size_t CDOTAUserMsg_SelectPenaltyGold::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_SelectPenaltyGold)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 player_id = 1;
  if (has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_id());
  }
  // optional sint32 cost = 2;
  if (has_cost()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->cost());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_SelectPenaltyGold::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_SelectPenaltyGold)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_SelectPenaltyGold* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_SelectPenaltyGold>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_SelectPenaltyGold)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_SelectPenaltyGold)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_SelectPenaltyGold::MergeFrom(const CDOTAUserMsg_SelectPenaltyGold& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_SelectPenaltyGold)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      cost_ = from.cost_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_SelectPenaltyGold::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_SelectPenaltyGold)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_SelectPenaltyGold::CopyFrom(const CDOTAUserMsg_SelectPenaltyGold& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_SelectPenaltyGold)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_SelectPenaltyGold::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CDOTAUserMsg_SelectPenaltyGold::Swap(CDOTAUserMsg_SelectPenaltyGold* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_SelectPenaltyGold::InternalSwap(CDOTAUserMsg_SelectPenaltyGold* other) {
  using std::swap;
  swap(player_id_, other->player_id_);
  swap(cost_, other->cost_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_SelectPenaltyGold::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_RollDiceResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_RollDiceResult::kPlayerIdFieldNumber;
const int CDOTAUserMsg_RollDiceResult::kChannelTypeFieldNumber;
const int CDOTAUserMsg_RollDiceResult::kRollMinFieldNumber;
const int CDOTAUserMsg_RollDiceResult::kRollMaxFieldNumber;
const int CDOTAUserMsg_RollDiceResult::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_RollDiceResult::CDOTAUserMsg_RollDiceResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_RollDiceResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_RollDiceResult)
}
CDOTAUserMsg_RollDiceResult::CDOTAUserMsg_RollDiceResult(const CDOTAUserMsg_RollDiceResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_RollDiceResult)
}

void CDOTAUserMsg_RollDiceResult::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(result_));
}

CDOTAUserMsg_RollDiceResult::~CDOTAUserMsg_RollDiceResult() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_RollDiceResult)
  SharedDtor();
}

void CDOTAUserMsg_RollDiceResult::SharedDtor() {
}

void CDOTAUserMsg_RollDiceResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_RollDiceResult::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_RollDiceResult& CDOTAUserMsg_RollDiceResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_RollDiceResult.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_RollDiceResult::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_RollDiceResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&result_) -
        reinterpret_cast<char*>(&player_id_)) + sizeof(result_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_RollDiceResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_RollDiceResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 channel_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_channel_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 roll_min = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_roll_min();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roll_min_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 roll_max = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_roll_max();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roll_max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 result = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_RollDiceResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_RollDiceResult)
  return false;
#undef DO_
}

void CDOTAUserMsg_RollDiceResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_RollDiceResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // optional uint32 channel_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->channel_type(), output);
  }

  // optional uint32 roll_min = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->roll_min(), output);
  }

  // optional uint32 roll_max = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->roll_max(), output);
  }

  // optional uint32 result = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_RollDiceResult)
}

::google::protobuf::uint8* CDOTAUserMsg_RollDiceResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_RollDiceResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // optional uint32 channel_type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->channel_type(), target);
  }

  // optional uint32 roll_min = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->roll_min(), target);
  }

  // optional uint32 roll_max = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->roll_max(), target);
  }

  // optional uint32 result = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_RollDiceResult)
  return target;
}

size_t CDOTAUserMsg_RollDiceResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_RollDiceResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional uint32 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->player_id());
    }

    // optional uint32 channel_type = 2;
    if (has_channel_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->channel_type());
    }

    // optional uint32 roll_min = 3;
    if (has_roll_min()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->roll_min());
    }

    // optional uint32 roll_max = 4;
    if (has_roll_max()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->roll_max());
    }

    // optional uint32 result = 5;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_RollDiceResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_RollDiceResult)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_RollDiceResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_RollDiceResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_RollDiceResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_RollDiceResult)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_RollDiceResult::MergeFrom(const CDOTAUserMsg_RollDiceResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_RollDiceResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      channel_type_ = from.channel_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      roll_min_ = from.roll_min_;
    }
    if (cached_has_bits & 0x00000008u) {
      roll_max_ = from.roll_max_;
    }
    if (cached_has_bits & 0x00000010u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_RollDiceResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_RollDiceResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_RollDiceResult::CopyFrom(const CDOTAUserMsg_RollDiceResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_RollDiceResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_RollDiceResult::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_RollDiceResult::Swap(CDOTAUserMsg_RollDiceResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_RollDiceResult::InternalSwap(CDOTAUserMsg_RollDiceResult* other) {
  using std::swap;
  swap(player_id_, other->player_id_);
  swap(channel_type_, other->channel_type_);
  swap(roll_min_, other->roll_min_);
  swap(roll_max_, other->roll_max_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_RollDiceResult::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_FlipCoinResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_FlipCoinResult::kPlayerIdFieldNumber;
const int CDOTAUserMsg_FlipCoinResult::kChannelTypeFieldNumber;
const int CDOTAUserMsg_FlipCoinResult::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_FlipCoinResult::CDOTAUserMsg_FlipCoinResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_FlipCoinResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_FlipCoinResult)
}
CDOTAUserMsg_FlipCoinResult::CDOTAUserMsg_FlipCoinResult(const CDOTAUserMsg_FlipCoinResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_FlipCoinResult)
}

void CDOTAUserMsg_FlipCoinResult::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(result_));
}

CDOTAUserMsg_FlipCoinResult::~CDOTAUserMsg_FlipCoinResult() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_FlipCoinResult)
  SharedDtor();
}

void CDOTAUserMsg_FlipCoinResult::SharedDtor() {
}

void CDOTAUserMsg_FlipCoinResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_FlipCoinResult::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_FlipCoinResult& CDOTAUserMsg_FlipCoinResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_FlipCoinResult.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_FlipCoinResult::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_FlipCoinResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&result_) -
        reinterpret_cast<char*>(&player_id_)) + sizeof(result_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_FlipCoinResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_FlipCoinResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 channel_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_channel_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_FlipCoinResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_FlipCoinResult)
  return false;
#undef DO_
}

void CDOTAUserMsg_FlipCoinResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_FlipCoinResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // optional uint32 channel_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->channel_type(), output);
  }

  // optional bool result = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_FlipCoinResult)
}

::google::protobuf::uint8* CDOTAUserMsg_FlipCoinResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_FlipCoinResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // optional uint32 channel_type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->channel_type(), target);
  }

  // optional bool result = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_FlipCoinResult)
  return target;
}

size_t CDOTAUserMsg_FlipCoinResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_FlipCoinResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->player_id());
    }

    // optional uint32 channel_type = 2;
    if (has_channel_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->channel_type());
    }

    // optional bool result = 3;
    if (has_result()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_FlipCoinResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_FlipCoinResult)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_FlipCoinResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_FlipCoinResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_FlipCoinResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_FlipCoinResult)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_FlipCoinResult::MergeFrom(const CDOTAUserMsg_FlipCoinResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_FlipCoinResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      channel_type_ = from.channel_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_FlipCoinResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_FlipCoinResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_FlipCoinResult::CopyFrom(const CDOTAUserMsg_FlipCoinResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_FlipCoinResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_FlipCoinResult::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_FlipCoinResult::Swap(CDOTAUserMsg_FlipCoinResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_FlipCoinResult::InternalSwap(CDOTAUserMsg_FlipCoinResult* other) {
  using std::swap;
  swap(player_id_, other->player_id_);
  swap(channel_type_, other->channel_type_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_FlipCoinResult::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMessage_RequestItemSuggestions::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMessage_RequestItemSuggestions::kPlayerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMessage_RequestItemSuggestions::CDOTAUserMessage_RequestItemSuggestions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMessage_RequestItemSuggestions.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMessage_RequestItemSuggestions)
}
CDOTAUserMessage_RequestItemSuggestions::CDOTAUserMessage_RequestItemSuggestions(const CDOTAUserMessage_RequestItemSuggestions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  player_id_ = from.player_id_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMessage_RequestItemSuggestions)
}

void CDOTAUserMessage_RequestItemSuggestions::SharedCtor() {
  player_id_ = 0u;
}

CDOTAUserMessage_RequestItemSuggestions::~CDOTAUserMessage_RequestItemSuggestions() {
  // @@protoc_insertion_point(destructor:CDOTAUserMessage_RequestItemSuggestions)
  SharedDtor();
}

void CDOTAUserMessage_RequestItemSuggestions::SharedDtor() {
}

void CDOTAUserMessage_RequestItemSuggestions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMessage_RequestItemSuggestions::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMessage_RequestItemSuggestions& CDOTAUserMessage_RequestItemSuggestions::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMessage_RequestItemSuggestions.base);
  return *internal_default_instance();
}


void CDOTAUserMessage_RequestItemSuggestions::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMessage_RequestItemSuggestions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMessage_RequestItemSuggestions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMessage_RequestItemSuggestions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMessage_RequestItemSuggestions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMessage_RequestItemSuggestions)
  return false;
#undef DO_
}

void CDOTAUserMessage_RequestItemSuggestions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMessage_RequestItemSuggestions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMessage_RequestItemSuggestions)
}

::google::protobuf::uint8* CDOTAUserMessage_RequestItemSuggestions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMessage_RequestItemSuggestions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMessage_RequestItemSuggestions)
  return target;
}

size_t CDOTAUserMessage_RequestItemSuggestions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMessage_RequestItemSuggestions)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 player_id = 1;
  if (has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMessage_RequestItemSuggestions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMessage_RequestItemSuggestions)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMessage_RequestItemSuggestions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMessage_RequestItemSuggestions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMessage_RequestItemSuggestions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMessage_RequestItemSuggestions)
    MergeFrom(*source);
  }
}

void CDOTAUserMessage_RequestItemSuggestions::MergeFrom(const CDOTAUserMessage_RequestItemSuggestions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMessage_RequestItemSuggestions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_player_id()) {
    set_player_id(from.player_id());
  }
}

void CDOTAUserMessage_RequestItemSuggestions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMessage_RequestItemSuggestions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMessage_RequestItemSuggestions::CopyFrom(const CDOTAUserMessage_RequestItemSuggestions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMessage_RequestItemSuggestions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMessage_RequestItemSuggestions::IsInitialized() const {
  return true;
}

void CDOTAUserMessage_RequestItemSuggestions::Swap(CDOTAUserMessage_RequestItemSuggestions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMessage_RequestItemSuggestions::InternalSwap(CDOTAUserMessage_RequestItemSuggestions* other) {
  using std::swap;
  swap(player_id_, other->player_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMessage_RequestItemSuggestions::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMessage_TeamCaptainChanged::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMessage_TeamCaptainChanged::kTeamFieldNumber;
const int CDOTAUserMessage_TeamCaptainChanged::kCaptainPlayerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMessage_TeamCaptainChanged::CDOTAUserMessage_TeamCaptainChanged()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMessage_TeamCaptainChanged.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMessage_TeamCaptainChanged)
}
CDOTAUserMessage_TeamCaptainChanged::CDOTAUserMessage_TeamCaptainChanged(const CDOTAUserMessage_TeamCaptainChanged& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&team_, &from.team_,
    static_cast<size_t>(reinterpret_cast<char*>(&captain_player_id_) -
    reinterpret_cast<char*>(&team_)) + sizeof(captain_player_id_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMessage_TeamCaptainChanged)
}

void CDOTAUserMessage_TeamCaptainChanged::SharedCtor() {
  ::memset(&team_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&captain_player_id_) -
      reinterpret_cast<char*>(&team_)) + sizeof(captain_player_id_));
}

CDOTAUserMessage_TeamCaptainChanged::~CDOTAUserMessage_TeamCaptainChanged() {
  // @@protoc_insertion_point(destructor:CDOTAUserMessage_TeamCaptainChanged)
  SharedDtor();
}

void CDOTAUserMessage_TeamCaptainChanged::SharedDtor() {
}

void CDOTAUserMessage_TeamCaptainChanged::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMessage_TeamCaptainChanged::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMessage_TeamCaptainChanged& CDOTAUserMessage_TeamCaptainChanged::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMessage_TeamCaptainChanged.base);
  return *internal_default_instance();
}


void CDOTAUserMessage_TeamCaptainChanged::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMessage_TeamCaptainChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&team_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&captain_player_id_) -
        reinterpret_cast<char*>(&team_)) + sizeof(captain_player_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMessage_TeamCaptainChanged::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMessage_TeamCaptainChanged)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 team = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_team();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &team_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 captain_player_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_captain_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &captain_player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMessage_TeamCaptainChanged)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMessage_TeamCaptainChanged)
  return false;
#undef DO_
}

void CDOTAUserMessage_TeamCaptainChanged::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMessage_TeamCaptainChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 team = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->team(), output);
  }

  // optional uint32 captain_player_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->captain_player_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMessage_TeamCaptainChanged)
}

::google::protobuf::uint8* CDOTAUserMessage_TeamCaptainChanged::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMessage_TeamCaptainChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 team = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->team(), target);
  }

  // optional uint32 captain_player_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->captain_player_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMessage_TeamCaptainChanged)
  return target;
}

size_t CDOTAUserMessage_TeamCaptainChanged::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMessage_TeamCaptainChanged)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 team = 1;
    if (has_team()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->team());
    }

    // optional uint32 captain_player_id = 2;
    if (has_captain_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->captain_player_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMessage_TeamCaptainChanged::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMessage_TeamCaptainChanged)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMessage_TeamCaptainChanged* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMessage_TeamCaptainChanged>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMessage_TeamCaptainChanged)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMessage_TeamCaptainChanged)
    MergeFrom(*source);
  }
}

void CDOTAUserMessage_TeamCaptainChanged::MergeFrom(const CDOTAUserMessage_TeamCaptainChanged& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMessage_TeamCaptainChanged)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      team_ = from.team_;
    }
    if (cached_has_bits & 0x00000002u) {
      captain_player_id_ = from.captain_player_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMessage_TeamCaptainChanged::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMessage_TeamCaptainChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMessage_TeamCaptainChanged::CopyFrom(const CDOTAUserMessage_TeamCaptainChanged& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMessage_TeamCaptainChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMessage_TeamCaptainChanged::IsInitialized() const {
  return true;
}

void CDOTAUserMessage_TeamCaptainChanged::Swap(CDOTAUserMessage_TeamCaptainChanged* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMessage_TeamCaptainChanged::InternalSwap(CDOTAUserMessage_TeamCaptainChanged* other) {
  using std::swap;
  swap(team_, other->team_);
  swap(captain_player_id_, other->captain_player_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMessage_TeamCaptainChanged::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_ChatWheelCooldown::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_ChatWheelCooldown::kMessageIdFieldNumber;
const int CDOTAUserMsg_ChatWheelCooldown::kCooldownRemainingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_ChatWheelCooldown::CDOTAUserMsg_ChatWheelCooldown()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_ChatWheelCooldown.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_ChatWheelCooldown)
}
CDOTAUserMsg_ChatWheelCooldown::CDOTAUserMsg_ChatWheelCooldown(const CDOTAUserMsg_ChatWheelCooldown& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&message_id_, &from.message_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&cooldown_remaining_) -
    reinterpret_cast<char*>(&message_id_)) + sizeof(cooldown_remaining_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_ChatWheelCooldown)
}

void CDOTAUserMsg_ChatWheelCooldown::SharedCtor() {
  ::memset(&message_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cooldown_remaining_) -
      reinterpret_cast<char*>(&message_id_)) + sizeof(cooldown_remaining_));
}

CDOTAUserMsg_ChatWheelCooldown::~CDOTAUserMsg_ChatWheelCooldown() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_ChatWheelCooldown)
  SharedDtor();
}

void CDOTAUserMsg_ChatWheelCooldown::SharedDtor() {
}

void CDOTAUserMsg_ChatWheelCooldown::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_ChatWheelCooldown::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_ChatWheelCooldown& CDOTAUserMsg_ChatWheelCooldown::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_ChatWheelCooldown.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_ChatWheelCooldown::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_ChatWheelCooldown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&message_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cooldown_remaining_) -
        reinterpret_cast<char*>(&message_id_)) + sizeof(cooldown_remaining_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_ChatWheelCooldown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_ChatWheelCooldown)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 message_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_message_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &message_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float cooldown_remaining = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_cooldown_remaining();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cooldown_remaining_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_ChatWheelCooldown)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_ChatWheelCooldown)
  return false;
#undef DO_
}

void CDOTAUserMsg_ChatWheelCooldown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_ChatWheelCooldown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 message_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->message_id(), output);
  }

  // optional float cooldown_remaining = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->cooldown_remaining(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_ChatWheelCooldown)
}

::google::protobuf::uint8* CDOTAUserMsg_ChatWheelCooldown::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_ChatWheelCooldown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 message_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->message_id(), target);
  }

  // optional float cooldown_remaining = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->cooldown_remaining(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_ChatWheelCooldown)
  return target;
}

size_t CDOTAUserMsg_ChatWheelCooldown::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_ChatWheelCooldown)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 message_id = 1;
    if (has_message_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->message_id());
    }

    // optional float cooldown_remaining = 2;
    if (has_cooldown_remaining()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_ChatWheelCooldown::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_ChatWheelCooldown)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_ChatWheelCooldown* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_ChatWheelCooldown>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_ChatWheelCooldown)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_ChatWheelCooldown)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_ChatWheelCooldown::MergeFrom(const CDOTAUserMsg_ChatWheelCooldown& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_ChatWheelCooldown)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      message_id_ = from.message_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      cooldown_remaining_ = from.cooldown_remaining_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_ChatWheelCooldown::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_ChatWheelCooldown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_ChatWheelCooldown::CopyFrom(const CDOTAUserMsg_ChatWheelCooldown& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_ChatWheelCooldown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_ChatWheelCooldown::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_ChatWheelCooldown::Swap(CDOTAUserMsg_ChatWheelCooldown* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_ChatWheelCooldown::InternalSwap(CDOTAUserMsg_ChatWheelCooldown* other) {
  using std::swap;
  swap(message_id_, other->message_id_);
  swap(cooldown_remaining_, other->cooldown_remaining_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_ChatWheelCooldown::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_HeroRelicProgress::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_HeroRelicProgress::kHeroRelicTypeFieldNumber;
const int CDOTAUserMsg_HeroRelicProgress::kValueFieldNumber;
const int CDOTAUserMsg_HeroRelicProgress::kEhandleFieldNumber;
const int CDOTAUserMsg_HeroRelicProgress::kEventIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_HeroRelicProgress::CDOTAUserMsg_HeroRelicProgress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_HeroRelicProgress.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_HeroRelicProgress)
}
CDOTAUserMsg_HeroRelicProgress::CDOTAUserMsg_HeroRelicProgress(const CDOTAUserMsg_HeroRelicProgress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hero_relic_type_, &from.hero_relic_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&event_id_) -
    reinterpret_cast<char*>(&hero_relic_type_)) + sizeof(event_id_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_HeroRelicProgress)
}

void CDOTAUserMsg_HeroRelicProgress::SharedCtor() {
  ::memset(&hero_relic_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&event_id_) -
      reinterpret_cast<char*>(&hero_relic_type_)) + sizeof(event_id_));
}

CDOTAUserMsg_HeroRelicProgress::~CDOTAUserMsg_HeroRelicProgress() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_HeroRelicProgress)
  SharedDtor();
}

void CDOTAUserMsg_HeroRelicProgress::SharedDtor() {
}

void CDOTAUserMsg_HeroRelicProgress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_HeroRelicProgress::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_HeroRelicProgress& CDOTAUserMsg_HeroRelicProgress::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_HeroRelicProgress.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_HeroRelicProgress::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_HeroRelicProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&hero_relic_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&event_id_) -
        reinterpret_cast<char*>(&hero_relic_type_)) + sizeof(event_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_HeroRelicProgress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_HeroRelicProgress)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 hero_relic_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_hero_relic_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hero_relic_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ehandle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_ehandle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ehandle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 event_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_event_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &event_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_HeroRelicProgress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_HeroRelicProgress)
  return false;
#undef DO_
}

void CDOTAUserMsg_HeroRelicProgress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_HeroRelicProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 hero_relic_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hero_relic_type(), output);
  }

  // optional uint32 value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->value(), output);
  }

  // optional uint32 ehandle = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ehandle(), output);
  }

  // optional uint32 event_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->event_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_HeroRelicProgress)
}

::google::protobuf::uint8* CDOTAUserMsg_HeroRelicProgress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_HeroRelicProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 hero_relic_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hero_relic_type(), target);
  }

  // optional uint32 value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->value(), target);
  }

  // optional uint32 ehandle = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ehandle(), target);
  }

  // optional uint32 event_id = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->event_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_HeroRelicProgress)
  return target;
}

size_t CDOTAUserMsg_HeroRelicProgress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_HeroRelicProgress)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 hero_relic_type = 1;
    if (has_hero_relic_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hero_relic_type());
    }

    // optional uint32 value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->value());
    }

    // optional uint32 ehandle = 3;
    if (has_ehandle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ehandle());
    }

    // optional uint32 event_id = 4;
    if (has_event_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->event_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_HeroRelicProgress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_HeroRelicProgress)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_HeroRelicProgress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_HeroRelicProgress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_HeroRelicProgress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_HeroRelicProgress)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_HeroRelicProgress::MergeFrom(const CDOTAUserMsg_HeroRelicProgress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_HeroRelicProgress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      hero_relic_type_ = from.hero_relic_type_;
    }
    if (cached_has_bits & 0x00000002u) {
      value_ = from.value_;
    }
    if (cached_has_bits & 0x00000004u) {
      ehandle_ = from.ehandle_;
    }
    if (cached_has_bits & 0x00000008u) {
      event_id_ = from.event_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_HeroRelicProgress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_HeroRelicProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_HeroRelicProgress::CopyFrom(const CDOTAUserMsg_HeroRelicProgress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_HeroRelicProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_HeroRelicProgress::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_HeroRelicProgress::Swap(CDOTAUserMsg_HeroRelicProgress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_HeroRelicProgress::InternalSwap(CDOTAUserMsg_HeroRelicProgress* other) {
  using std::swap;
  swap(hero_relic_type_, other->hero_relic_type_);
  swap(value_, other->value_);
  swap(ehandle_, other->ehandle_);
  swap(event_id_, other->event_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_HeroRelicProgress::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_AbilityDraftRequestAbility::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_AbilityDraftRequestAbility::kPlayerIdFieldNumber;
const int CDOTAUserMsg_AbilityDraftRequestAbility::kRequestedAbilityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_AbilityDraftRequestAbility::CDOTAUserMsg_AbilityDraftRequestAbility()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_AbilityDraftRequestAbility.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_AbilityDraftRequestAbility)
}
CDOTAUserMsg_AbilityDraftRequestAbility::CDOTAUserMsg_AbilityDraftRequestAbility(const CDOTAUserMsg_AbilityDraftRequestAbility& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&requested_ability_id_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(requested_ability_id_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_AbilityDraftRequestAbility)
}

void CDOTAUserMsg_AbilityDraftRequestAbility::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&requested_ability_id_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(requested_ability_id_));
}

CDOTAUserMsg_AbilityDraftRequestAbility::~CDOTAUserMsg_AbilityDraftRequestAbility() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_AbilityDraftRequestAbility)
  SharedDtor();
}

void CDOTAUserMsg_AbilityDraftRequestAbility::SharedDtor() {
}

void CDOTAUserMsg_AbilityDraftRequestAbility::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_AbilityDraftRequestAbility::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_AbilityDraftRequestAbility& CDOTAUserMsg_AbilityDraftRequestAbility::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_AbilityDraftRequestAbility.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_AbilityDraftRequestAbility::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_AbilityDraftRequestAbility)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&requested_ability_id_) -
        reinterpret_cast<char*>(&player_id_)) + sizeof(requested_ability_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_AbilityDraftRequestAbility::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_AbilityDraftRequestAbility)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 requested_ability_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_requested_ability_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &requested_ability_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_AbilityDraftRequestAbility)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_AbilityDraftRequestAbility)
  return false;
#undef DO_
}

void CDOTAUserMsg_AbilityDraftRequestAbility::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_AbilityDraftRequestAbility)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // optional uint32 requested_ability_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->requested_ability_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_AbilityDraftRequestAbility)
}

::google::protobuf::uint8* CDOTAUserMsg_AbilityDraftRequestAbility::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_AbilityDraftRequestAbility)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // optional uint32 requested_ability_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->requested_ability_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_AbilityDraftRequestAbility)
  return target;
}

size_t CDOTAUserMsg_AbilityDraftRequestAbility::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_AbilityDraftRequestAbility)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->player_id());
    }

    // optional uint32 requested_ability_id = 2;
    if (has_requested_ability_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->requested_ability_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_AbilityDraftRequestAbility::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_AbilityDraftRequestAbility)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_AbilityDraftRequestAbility* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_AbilityDraftRequestAbility>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_AbilityDraftRequestAbility)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_AbilityDraftRequestAbility)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_AbilityDraftRequestAbility::MergeFrom(const CDOTAUserMsg_AbilityDraftRequestAbility& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_AbilityDraftRequestAbility)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      requested_ability_id_ = from.requested_ability_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_AbilityDraftRequestAbility::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_AbilityDraftRequestAbility)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_AbilityDraftRequestAbility::CopyFrom(const CDOTAUserMsg_AbilityDraftRequestAbility& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_AbilityDraftRequestAbility)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_AbilityDraftRequestAbility::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_AbilityDraftRequestAbility::Swap(CDOTAUserMsg_AbilityDraftRequestAbility* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_AbilityDraftRequestAbility::InternalSwap(CDOTAUserMsg_AbilityDraftRequestAbility* other) {
  using std::swap;
  swap(player_id_, other->player_id_);
  swap(requested_ability_id_, other->requested_ability_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_AbilityDraftRequestAbility::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_DamageReport::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_DamageReport::kPlayerIdFieldNumber;
const int CDOTAUserMsg_DamageReport::kTargetHeroIdFieldNumber;
const int CDOTAUserMsg_DamageReport::kSourceHeroIdFieldNumber;
const int CDOTAUserMsg_DamageReport::kDamageAmountFieldNumber;
const int CDOTAUserMsg_DamageReport::kBroadcastFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_DamageReport::CDOTAUserMsg_DamageReport()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_DamageReport.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_DamageReport)
}
CDOTAUserMsg_DamageReport::CDOTAUserMsg_DamageReport(const CDOTAUserMsg_DamageReport& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&broadcast_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(broadcast_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_DamageReport)
}

void CDOTAUserMsg_DamageReport::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&broadcast_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(broadcast_));
}

CDOTAUserMsg_DamageReport::~CDOTAUserMsg_DamageReport() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_DamageReport)
  SharedDtor();
}

void CDOTAUserMsg_DamageReport::SharedDtor() {
}

void CDOTAUserMsg_DamageReport::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_DamageReport::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_DamageReport& CDOTAUserMsg_DamageReport::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_DamageReport.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_DamageReport::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_DamageReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&broadcast_) -
        reinterpret_cast<char*>(&player_id_)) + sizeof(broadcast_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_DamageReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_DamageReport)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 target_hero_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_target_hero_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_hero_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 source_hero_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_source_hero_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_hero_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 damage_amount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_damage_amount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &damage_amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool broadcast = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_broadcast();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &broadcast_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_DamageReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_DamageReport)
  return false;
#undef DO_
}

void CDOTAUserMsg_DamageReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_DamageReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // optional uint32 target_hero_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->target_hero_id(), output);
  }

  // optional uint32 source_hero_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->source_hero_id(), output);
  }

  // optional int32 damage_amount = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->damage_amount(), output);
  }

  // optional bool broadcast = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->broadcast(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_DamageReport)
}

::google::protobuf::uint8* CDOTAUserMsg_DamageReport::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_DamageReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // optional uint32 target_hero_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->target_hero_id(), target);
  }

  // optional uint32 source_hero_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->source_hero_id(), target);
  }

  // optional int32 damage_amount = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->damage_amount(), target);
  }

  // optional bool broadcast = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->broadcast(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_DamageReport)
  return target;
}

size_t CDOTAUserMsg_DamageReport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_DamageReport)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional uint32 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->player_id());
    }

    // optional uint32 target_hero_id = 2;
    if (has_target_hero_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->target_hero_id());
    }

    // optional uint32 source_hero_id = 3;
    if (has_source_hero_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->source_hero_id());
    }

    // optional int32 damage_amount = 4;
    if (has_damage_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->damage_amount());
    }

    // optional bool broadcast = 5;
    if (has_broadcast()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_DamageReport::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_DamageReport)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_DamageReport* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_DamageReport>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_DamageReport)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_DamageReport)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_DamageReport::MergeFrom(const CDOTAUserMsg_DamageReport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_DamageReport)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      target_hero_id_ = from.target_hero_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      source_hero_id_ = from.source_hero_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      damage_amount_ = from.damage_amount_;
    }
    if (cached_has_bits & 0x00000010u) {
      broadcast_ = from.broadcast_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_DamageReport::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_DamageReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_DamageReport::CopyFrom(const CDOTAUserMsg_DamageReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_DamageReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_DamageReport::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_DamageReport::Swap(CDOTAUserMsg_DamageReport* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_DamageReport::InternalSwap(CDOTAUserMsg_DamageReport* other) {
  using std::swap;
  swap(player_id_, other->player_id_);
  swap(target_hero_id_, other->target_hero_id_);
  swap(source_hero_id_, other->source_hero_id_);
  swap(damage_amount_, other->damage_amount_);
  swap(broadcast_, other->broadcast_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_DamageReport::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_SalutePlayer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_SalutePlayer::kSourcePlayerIdFieldNumber;
const int CDOTAUserMsg_SalutePlayer::kTargetPlayerIdFieldNumber;
const int CDOTAUserMsg_SalutePlayer::kTipAmountFieldNumber;
const int CDOTAUserMsg_SalutePlayer::kEventIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_SalutePlayer::CDOTAUserMsg_SalutePlayer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_SalutePlayer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_SalutePlayer)
}
CDOTAUserMsg_SalutePlayer::CDOTAUserMsg_SalutePlayer(const CDOTAUserMsg_SalutePlayer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&source_player_id_, &from.source_player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&event_id_) -
    reinterpret_cast<char*>(&source_player_id_)) + sizeof(event_id_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_SalutePlayer)
}

void CDOTAUserMsg_SalutePlayer::SharedCtor() {
  ::memset(&source_player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&event_id_) -
      reinterpret_cast<char*>(&source_player_id_)) + sizeof(event_id_));
}

CDOTAUserMsg_SalutePlayer::~CDOTAUserMsg_SalutePlayer() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_SalutePlayer)
  SharedDtor();
}

void CDOTAUserMsg_SalutePlayer::SharedDtor() {
}

void CDOTAUserMsg_SalutePlayer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_SalutePlayer::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_SalutePlayer& CDOTAUserMsg_SalutePlayer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_SalutePlayer.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_SalutePlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_SalutePlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&source_player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&event_id_) -
        reinterpret_cast<char*>(&source_player_id_)) + sizeof(event_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_SalutePlayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_SalutePlayer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 source_player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_source_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &source_player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 target_player_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_target_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 tip_amount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_tip_amount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tip_amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 event_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_event_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &event_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_SalutePlayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_SalutePlayer)
  return false;
#undef DO_
}

void CDOTAUserMsg_SalutePlayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_SalutePlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 source_player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->source_player_id(), output);
  }

  // optional int32 target_player_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->target_player_id(), output);
  }

  // optional uint32 tip_amount = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->tip_amount(), output);
  }

  // optional uint32 event_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->event_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_SalutePlayer)
}

::google::protobuf::uint8* CDOTAUserMsg_SalutePlayer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_SalutePlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 source_player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->source_player_id(), target);
  }

  // optional int32 target_player_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->target_player_id(), target);
  }

  // optional uint32 tip_amount = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->tip_amount(), target);
  }

  // optional uint32 event_id = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->event_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_SalutePlayer)
  return target;
}

size_t CDOTAUserMsg_SalutePlayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_SalutePlayer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 source_player_id = 1;
    if (has_source_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->source_player_id());
    }

    // optional int32 target_player_id = 2;
    if (has_target_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_player_id());
    }

    // optional uint32 tip_amount = 3;
    if (has_tip_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tip_amount());
    }

    // optional uint32 event_id = 4;
    if (has_event_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->event_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_SalutePlayer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_SalutePlayer)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_SalutePlayer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_SalutePlayer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_SalutePlayer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_SalutePlayer)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_SalutePlayer::MergeFrom(const CDOTAUserMsg_SalutePlayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_SalutePlayer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      source_player_id_ = from.source_player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      target_player_id_ = from.target_player_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      tip_amount_ = from.tip_amount_;
    }
    if (cached_has_bits & 0x00000008u) {
      event_id_ = from.event_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_SalutePlayer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_SalutePlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_SalutePlayer::CopyFrom(const CDOTAUserMsg_SalutePlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_SalutePlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_SalutePlayer::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_SalutePlayer::Swap(CDOTAUserMsg_SalutePlayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_SalutePlayer::InternalSwap(CDOTAUserMsg_SalutePlayer* other) {
  using std::swap;
  swap(source_player_id_, other->source_player_id_);
  swap(target_player_id_, other->target_player_id_);
  swap(tip_amount_, other->tip_amount_);
  swap(event_id_, other->event_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_SalutePlayer::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_TipAlert::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_TipAlert::kPlayerIdFieldNumber;
const int CDOTAUserMsg_TipAlert::kTipTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_TipAlert::CDOTAUserMsg_TipAlert()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_TipAlert.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_TipAlert)
}
CDOTAUserMsg_TipAlert::CDOTAUserMsg_TipAlert(const CDOTAUserMsg_TipAlert& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tip_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tip_text()) {
    tip_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tip_text_);
  }
  player_id_ = from.player_id_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_TipAlert)
}

void CDOTAUserMsg_TipAlert::SharedCtor() {
  tip_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  player_id_ = 0u;
}

CDOTAUserMsg_TipAlert::~CDOTAUserMsg_TipAlert() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_TipAlert)
  SharedDtor();
}

void CDOTAUserMsg_TipAlert::SharedDtor() {
  tip_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTAUserMsg_TipAlert::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_TipAlert::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_TipAlert& CDOTAUserMsg_TipAlert::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_TipAlert.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_TipAlert::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_TipAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    tip_text_.ClearNonDefaultToEmptyNoArena();
  }
  player_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_TipAlert::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_TipAlert)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string tip_text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tip_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tip_text().data(), static_cast<int>(this->tip_text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAUserMsg_TipAlert.tip_text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_TipAlert)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_TipAlert)
  return false;
#undef DO_
}

void CDOTAUserMsg_TipAlert::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_TipAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // optional string tip_text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tip_text().data(), static_cast<int>(this->tip_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_TipAlert.tip_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tip_text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_TipAlert)
}

::google::protobuf::uint8* CDOTAUserMsg_TipAlert::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_TipAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // optional string tip_text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tip_text().data(), static_cast<int>(this->tip_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAUserMsg_TipAlert.tip_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tip_text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_TipAlert)
  return target;
}

size_t CDOTAUserMsg_TipAlert::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_TipAlert)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string tip_text = 2;
    if (has_tip_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tip_text());
    }

    // optional uint32 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->player_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_TipAlert::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_TipAlert)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_TipAlert* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_TipAlert>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_TipAlert)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_TipAlert)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_TipAlert::MergeFrom(const CDOTAUserMsg_TipAlert& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_TipAlert)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_tip_text();
      tip_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tip_text_);
    }
    if (cached_has_bits & 0x00000002u) {
      player_id_ = from.player_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_TipAlert::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_TipAlert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_TipAlert::CopyFrom(const CDOTAUserMsg_TipAlert& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_TipAlert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_TipAlert::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_TipAlert::Swap(CDOTAUserMsg_TipAlert* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_TipAlert::InternalSwap(CDOTAUserMsg_TipAlert* other) {
  using std::swap;
  tip_text_.Swap(&other->tip_text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(player_id_, other->player_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_TipAlert::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_ReplaceQueryUnit::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_ReplaceQueryUnit::kPlayerIdFieldNumber;
const int CDOTAUserMsg_ReplaceQueryUnit::kSourceEntindexFieldNumber;
const int CDOTAUserMsg_ReplaceQueryUnit::kTargetEntindexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_ReplaceQueryUnit::CDOTAUserMsg_ReplaceQueryUnit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_ReplaceQueryUnit.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_ReplaceQueryUnit)
}
CDOTAUserMsg_ReplaceQueryUnit::CDOTAUserMsg_ReplaceQueryUnit(const CDOTAUserMsg_ReplaceQueryUnit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_entindex_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(target_entindex_));
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_ReplaceQueryUnit)
}

void CDOTAUserMsg_ReplaceQueryUnit::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_entindex_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(target_entindex_));
}

CDOTAUserMsg_ReplaceQueryUnit::~CDOTAUserMsg_ReplaceQueryUnit() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_ReplaceQueryUnit)
  SharedDtor();
}

void CDOTAUserMsg_ReplaceQueryUnit::SharedDtor() {
}

void CDOTAUserMsg_ReplaceQueryUnit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_ReplaceQueryUnit::descriptor() {
  ::protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_ReplaceQueryUnit& CDOTAUserMsg_ReplaceQueryUnit::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dota_5fusermessages_2eproto::scc_info_CDOTAUserMsg_ReplaceQueryUnit.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_ReplaceQueryUnit::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_ReplaceQueryUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&target_entindex_) -
        reinterpret_cast<char*>(&player_id_)) + sizeof(target_entindex_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_ReplaceQueryUnit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_ReplaceQueryUnit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 source_entindex = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_source_entindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_entindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 target_entindex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_target_entindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_entindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_ReplaceQueryUnit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_ReplaceQueryUnit)
  return false;
#undef DO_
}

void CDOTAUserMsg_ReplaceQueryUnit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_ReplaceQueryUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // optional uint32 source_entindex = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->source_entindex(), output);
  }

  // optional uint32 target_entindex = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->target_entindex(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_ReplaceQueryUnit)
}

::google::protobuf::uint8* CDOTAUserMsg_ReplaceQueryUnit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_ReplaceQueryUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // optional uint32 source_entindex = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->source_entindex(), target);
  }

  // optional uint32 target_entindex = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->target_entindex(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_ReplaceQueryUnit)
  return target;
}

size_t CDOTAUserMsg_ReplaceQueryUnit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_ReplaceQueryUnit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 player_id = 1;
  if (has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_id());
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional uint32 source_entindex = 2;
    if (has_source_entindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->source_entindex());
    }

    // optional uint32 target_entindex = 3;
    if (has_target_entindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->target_entindex());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_ReplaceQueryUnit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_ReplaceQueryUnit)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_ReplaceQueryUnit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_ReplaceQueryUnit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_ReplaceQueryUnit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_ReplaceQueryUnit)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_ReplaceQueryUnit::MergeFrom(const CDOTAUserMsg_ReplaceQueryUnit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_ReplaceQueryUnit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      player_id_ = from.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      source_entindex_ = from.source_entindex_;
    }
    if (cached_has_bits & 0x00000004u) {
      target_entindex_ = from.target_entindex_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_ReplaceQueryUnit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_ReplaceQueryUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_ReplaceQueryUnit::CopyFrom(const CDOTAUserMsg_ReplaceQueryUnit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_ReplaceQueryUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_ReplaceQueryUnit::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CDOTAUserMsg_ReplaceQueryUnit::Swap(CDOTAUserMsg_ReplaceQueryUnit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_ReplaceQueryUnit::InternalSwap(CDOTAUserMsg_ReplaceQueryUnit* other) {
  using std::swap;
  swap(player_id_, other->player_id_);
  swap(source_entindex_, other->source_entindex_);
  swap(target_entindex_, other->target_entindex_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_ReplaceQueryUnit::GetMetadata() const {
  protobuf_dota_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dota_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_AIDebugLine* Arena::CreateMaybeMessage< ::CDOTAUserMsg_AIDebugLine >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_AIDebugLine >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_Ping* Arena::CreateMaybeMessage< ::CDOTAUserMsg_Ping >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_Ping >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_SwapVerify* Arena::CreateMaybeMessage< ::CDOTAUserMsg_SwapVerify >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_SwapVerify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_ChatEvent* Arena::CreateMaybeMessage< ::CDOTAUserMsg_ChatEvent >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_ChatEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_BotChat* Arena::CreateMaybeMessage< ::CDOTAUserMsg_BotChat >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_BotChat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_CombatHeroPositions* Arena::CreateMaybeMessage< ::CDOTAUserMsg_CombatHeroPositions >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_CombatHeroPositions >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_CombatLogBulkData* Arena::CreateMaybeMessage< ::CDOTAUserMsg_CombatLogBulkData >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_CombatLogBulkData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability* Arena::CreateMaybeMessage< ::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_MiniKillCamInfo_Attacker* Arena::CreateMaybeMessage< ::CDOTAUserMsg_MiniKillCamInfo_Attacker >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_MiniKillCamInfo_Attacker >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_MiniKillCamInfo* Arena::CreateMaybeMessage< ::CDOTAUserMsg_MiniKillCamInfo >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_MiniKillCamInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_GlobalLightColor* Arena::CreateMaybeMessage< ::CDOTAUserMsg_GlobalLightColor >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_GlobalLightColor >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_GlobalLightDirection* Arena::CreateMaybeMessage< ::CDOTAUserMsg_GlobalLightDirection >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_GlobalLightDirection >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_LocationPing* Arena::CreateMaybeMessage< ::CDOTAUserMsg_LocationPing >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_LocationPing >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_ItemAlert* Arena::CreateMaybeMessage< ::CDOTAUserMsg_ItemAlert >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_ItemAlert >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_EnemyItemAlert* Arena::CreateMaybeMessage< ::CDOTAUserMsg_EnemyItemAlert >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_EnemyItemAlert >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_ModifierAlert* Arena::CreateMaybeMessage< ::CDOTAUserMsg_ModifierAlert >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_ModifierAlert >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_HPManaAlert* Arena::CreateMaybeMessage< ::CDOTAUserMsg_HPManaAlert >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_HPManaAlert >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_GlyphAlert* Arena::CreateMaybeMessage< ::CDOTAUserMsg_GlyphAlert >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_GlyphAlert >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_WillPurchaseAlert* Arena::CreateMaybeMessage< ::CDOTAUserMsg_WillPurchaseAlert >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_WillPurchaseAlert >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_EmptyTeleportAlert* Arena::CreateMaybeMessage< ::CDOTAUserMsg_EmptyTeleportAlert >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_EmptyTeleportAlert >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_BuyBackStateAlert* Arena::CreateMaybeMessage< ::CDOTAUserMsg_BuyBackStateAlert >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_BuyBackStateAlert >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_QuickBuyAlert* Arena::CreateMaybeMessage< ::CDOTAUserMsg_QuickBuyAlert >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_QuickBuyAlert >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_CourierKilledAlert_LostItem* Arena::CreateMaybeMessage< ::CDOTAUserMsg_CourierKilledAlert_LostItem >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_CourierKilledAlert_LostItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_CourierKilledAlert* Arena::CreateMaybeMessage< ::CDOTAUserMsg_CourierKilledAlert >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_CourierKilledAlert >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_MinimapEvent* Arena::CreateMaybeMessage< ::CDOTAUserMsg_MinimapEvent >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_MinimapEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_MapLine* Arena::CreateMaybeMessage< ::CDOTAUserMsg_MapLine >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_MapLine >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_MinimapDebugPoint* Arena::CreateMaybeMessage< ::CDOTAUserMsg_MinimapDebugPoint >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_MinimapDebugPoint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_CreateLinearProjectile* Arena::CreateMaybeMessage< ::CDOTAUserMsg_CreateLinearProjectile >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_CreateLinearProjectile >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_DestroyLinearProjectile* Arena::CreateMaybeMessage< ::CDOTAUserMsg_DestroyLinearProjectile >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_DestroyLinearProjectile >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_DodgeTrackingProjectiles* Arena::CreateMaybeMessage< ::CDOTAUserMsg_DodgeTrackingProjectiles >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_DodgeTrackingProjectiles >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_SpectatorPlayerClick* Arena::CreateMaybeMessage< ::CDOTAUserMsg_SpectatorPlayerClick >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_SpectatorPlayerClick >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_SpectatorPlayerUnitOrders* Arena::CreateMaybeMessage< ::CDOTAUserMsg_SpectatorPlayerUnitOrders >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_SpectatorPlayerUnitOrders >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_NevermoreRequiem* Arena::CreateMaybeMessage< ::CDOTAUserMsg_NevermoreRequiem >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_NevermoreRequiem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_InvalidCommand* Arena::CreateMaybeMessage< ::CDOTAUserMsg_InvalidCommand >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_InvalidCommand >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_HudError* Arena::CreateMaybeMessage< ::CDOTAUserMsg_HudError >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_HudError >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_SharedCooldown* Arena::CreateMaybeMessage< ::CDOTAUserMsg_SharedCooldown >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_SharedCooldown >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_SetNextAutobuyItem* Arena::CreateMaybeMessage< ::CDOTAUserMsg_SetNextAutobuyItem >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_SetNextAutobuyItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_HalloweenDrops* Arena::CreateMaybeMessage< ::CDOTAUserMsg_HalloweenDrops >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_HalloweenDrops >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_PredictionResult_Prediction* Arena::CreateMaybeMessage< ::CDOTAUserMsg_PredictionResult_Prediction >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_PredictionResult_Prediction >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_PredictionResult* Arena::CreateMaybeMessage< ::CDOTAUserMsg_PredictionResult >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_PredictionResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAResponseQuerySerialized_Fact* Arena::CreateMaybeMessage< ::CDOTAResponseQuerySerialized_Fact >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAResponseQuerySerialized_Fact >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAResponseQuerySerialized* Arena::CreateMaybeMessage< ::CDOTAResponseQuerySerialized >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAResponseQuerySerialized >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTASpeechMatchOnClient* Arena::CreateMaybeMessage< ::CDOTASpeechMatchOnClient >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTASpeechMatchOnClient >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_UnitEvent_Speech* Arena::CreateMaybeMessage< ::CDOTAUserMsg_UnitEvent_Speech >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_UnitEvent_Speech >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_UnitEvent_SpeechMute* Arena::CreateMaybeMessage< ::CDOTAUserMsg_UnitEvent_SpeechMute >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_UnitEvent_SpeechMute >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_UnitEvent_AddGesture* Arena::CreateMaybeMessage< ::CDOTAUserMsg_UnitEvent_AddGesture >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_UnitEvent_AddGesture >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_UnitEvent_RemoveGesture* Arena::CreateMaybeMessage< ::CDOTAUserMsg_UnitEvent_RemoveGesture >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_UnitEvent_RemoveGesture >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_UnitEvent_BloodImpact* Arena::CreateMaybeMessage< ::CDOTAUserMsg_UnitEvent_BloodImpact >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_UnitEvent_BloodImpact >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_UnitEvent_FadeGesture* Arena::CreateMaybeMessage< ::CDOTAUserMsg_UnitEvent_FadeGesture >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_UnitEvent_FadeGesture >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_UnitEvent* Arena::CreateMaybeMessage< ::CDOTAUserMsg_UnitEvent >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_UnitEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_ItemPurchased* Arena::CreateMaybeMessage< ::CDOTAUserMsg_ItemPurchased >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_ItemPurchased >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_ItemSold* Arena::CreateMaybeMessage< ::CDOTAUserMsg_ItemSold >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_ItemSold >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_ItemFound* Arena::CreateMaybeMessage< ::CDOTAUserMsg_ItemFound >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_ItemFound >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_OverheadEvent* Arena::CreateMaybeMessage< ::CDOTAUserMsg_OverheadEvent >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_OverheadEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_TutorialTipInfo* Arena::CreateMaybeMessage< ::CDOTAUserMsg_TutorialTipInfo >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_TutorialTipInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_TutorialFinish* Arena::CreateMaybeMessage< ::CDOTAUserMsg_TutorialFinish >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_TutorialFinish >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_TutorialMinimapPosition* Arena::CreateMaybeMessage< ::CDOTAUserMsg_TutorialMinimapPosition >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_TutorialMinimapPosition >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_SendGenericToolTip* Arena::CreateMaybeMessage< ::CDOTAUserMsg_SendGenericToolTip >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_SendGenericToolTip >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_WorldLine* Arena::CreateMaybeMessage< ::CDOTAUserMsg_WorldLine >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_WorldLine >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_ChatWheel* Arena::CreateMaybeMessage< ::CDOTAUserMsg_ChatWheel >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_ChatWheel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_ReceivedXmasGift* Arena::CreateMaybeMessage< ::CDOTAUserMsg_ReceivedXmasGift >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_ReceivedXmasGift >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_ShowSurvey* Arena::CreateMaybeMessage< ::CDOTAUserMsg_ShowSurvey >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_ShowSurvey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_UpdateSharedContent* Arena::CreateMaybeMessage< ::CDOTAUserMsg_UpdateSharedContent >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_UpdateSharedContent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_TutorialRequestExp* Arena::CreateMaybeMessage< ::CDOTAUserMsg_TutorialRequestExp >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_TutorialRequestExp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_TutorialFade* Arena::CreateMaybeMessage< ::CDOTAUserMsg_TutorialFade >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_TutorialFade >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_TutorialPingMinimap* Arena::CreateMaybeMessage< ::CDOTAUserMsg_TutorialPingMinimap >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_TutorialPingMinimap >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_GamerulesStateChanged* Arena::CreateMaybeMessage< ::CDOTAUserMsg_GamerulesStateChanged >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_GamerulesStateChanged >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_AddQuestLogEntry* Arena::CreateMaybeMessage< ::CDOTAUserMsg_AddQuestLogEntry >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_AddQuestLogEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_SendStatPopup* Arena::CreateMaybeMessage< ::CDOTAUserMsg_SendStatPopup >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_SendStatPopup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_DismissAllStatPopups* Arena::CreateMaybeMessage< ::CDOTAUserMsg_DismissAllStatPopups >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_DismissAllStatPopups >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_SendRoshanSpectatorPhase* Arena::CreateMaybeMessage< ::CDOTAUserMsg_SendRoshanSpectatorPhase >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_SendRoshanSpectatorPhase >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_SendRoshanPopup* Arena::CreateMaybeMessage< ::CDOTAUserMsg_SendRoshanPopup >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_SendRoshanPopup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_SendFinalGold* Arena::CreateMaybeMessage< ::CDOTAUserMsg_SendFinalGold >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_SendFinalGold >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_CustomMsg* Arena::CreateMaybeMessage< ::CDOTAUserMsg_CustomMsg >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_CustomMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_CoachHUDPing* Arena::CreateMaybeMessage< ::CDOTAUserMsg_CoachHUDPing >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_CoachHUDPing >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_ClientLoadGridNav* Arena::CreateMaybeMessage< ::CDOTAUserMsg_ClientLoadGridNav >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_ClientLoadGridNav >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_TE_Projectile* Arena::CreateMaybeMessage< ::CDOTAUserMsg_TE_Projectile >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_TE_Projectile >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_TE_ProjectileLoc* Arena::CreateMaybeMessage< ::CDOTAUserMsg_TE_ProjectileLoc >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_TE_ProjectileLoc >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_TE_DestroyProjectile* Arena::CreateMaybeMessage< ::CDOTAUserMsg_TE_DestroyProjectile >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_TE_DestroyProjectile >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_TE_DotaBloodImpact* Arena::CreateMaybeMessage< ::CDOTAUserMsg_TE_DotaBloodImpact >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_TE_DotaBloodImpact >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_AbilityPing* Arena::CreateMaybeMessage< ::CDOTAUserMsg_AbilityPing >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_AbilityPing >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_TE_UnitAnimation* Arena::CreateMaybeMessage< ::CDOTAUserMsg_TE_UnitAnimation >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_TE_UnitAnimation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_TE_UnitAnimationEnd* Arena::CreateMaybeMessage< ::CDOTAUserMsg_TE_UnitAnimationEnd >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_TE_UnitAnimationEnd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_ShowGenericPopup* Arena::CreateMaybeMessage< ::CDOTAUserMsg_ShowGenericPopup >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_ShowGenericPopup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_VoteStart* Arena::CreateMaybeMessage< ::CDOTAUserMsg_VoteStart >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_VoteStart >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_VoteUpdate* Arena::CreateMaybeMessage< ::CDOTAUserMsg_VoteUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_VoteUpdate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_VoteEnd* Arena::CreateMaybeMessage< ::CDOTAUserMsg_VoteEnd >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_VoteEnd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_BoosterStatePlayer* Arena::CreateMaybeMessage< ::CDOTAUserMsg_BoosterStatePlayer >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_BoosterStatePlayer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_BoosterState* Arena::CreateMaybeMessage< ::CDOTAUserMsg_BoosterState >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_BoosterState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_PlayerMMR* Arena::CreateMaybeMessage< ::CDOTAUserMsg_PlayerMMR >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_PlayerMMR >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_AbilitySteal* Arena::CreateMaybeMessage< ::CDOTAUserMsg_AbilitySteal >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_AbilitySteal >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_StatsHeroLookup* Arena::CreateMaybeMessage< ::CDOTAUserMsg_StatsHeroLookup >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_StatsHeroLookup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair* Arena::CreateMaybeMessage< ::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_StatsHeroPositionInfo* Arena::CreateMaybeMessage< ::CDOTAUserMsg_StatsHeroPositionInfo >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_StatsHeroPositionInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_StatsHeroMinuteDetails* Arena::CreateMaybeMessage< ::CDOTAUserMsg_StatsHeroMinuteDetails >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_StatsHeroMinuteDetails >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance* Arena::CreateMaybeMessage< ::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_StatsTeamMinuteDetails* Arena::CreateMaybeMessage< ::CDOTAUserMsg_StatsTeamMinuteDetails >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_StatsTeamMinuteDetails >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_StatsPlayerKillShare* Arena::CreateMaybeMessage< ::CDOTAUserMsg_StatsPlayerKillShare >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_StatsPlayerKillShare >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_StatsKillDetails* Arena::CreateMaybeMessage< ::CDOTAUserMsg_StatsKillDetails >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_StatsKillDetails >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* Arena::CreateMaybeMessage< ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails* Arena::CreateMaybeMessage< ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_StatsMatchDetails* Arena::CreateMaybeMessage< ::CDOTAUserMsg_StatsMatchDetails >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_StatsMatchDetails >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_MiniTaunt* Arena::CreateMaybeMessage< ::CDOTAUserMsg_MiniTaunt >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_MiniTaunt >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_SpeechBubble* Arena::CreateMaybeMessage< ::CDOTAUserMsg_SpeechBubble >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_SpeechBubble >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_CustomHeaderMessage* Arena::CreateMaybeMessage< ::CDOTAUserMsg_CustomHeaderMessage >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_CustomHeaderMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgHeroAbilityStat* Arena::CreateMaybeMessage< ::CMsgHeroAbilityStat >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgHeroAbilityStat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgCombatAnalyzerPlayerStat* Arena::CreateMaybeMessage< ::CMsgCombatAnalyzerPlayerStat >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgCombatAnalyzerPlayerStat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsgCombatAnalyzerStats* Arena::CreateMaybeMessage< ::CMsgCombatAnalyzerStats >(Arena* arena) {
  return Arena::CreateInternal< ::CMsgCombatAnalyzerStats >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_BeastChat* Arena::CreateMaybeMessage< ::CDOTAUserMsg_BeastChat >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_BeastChat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_CustomHudElement_Create* Arena::CreateMaybeMessage< ::CDOTAUserMsg_CustomHudElement_Create >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_CustomHudElement_Create >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_CustomHudElement_Modify* Arena::CreateMaybeMessage< ::CDOTAUserMsg_CustomHudElement_Modify >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_CustomHudElement_Modify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_CustomHudElement_Destroy* Arena::CreateMaybeMessage< ::CDOTAUserMsg_CustomHudElement_Destroy >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_CustomHudElement_Destroy >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_CompendiumStatePlayer* Arena::CreateMaybeMessage< ::CDOTAUserMsg_CompendiumStatePlayer >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_CompendiumStatePlayer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_CompendiumState* Arena::CreateMaybeMessage< ::CDOTAUserMsg_CompendiumState >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_CompendiumState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_ProjectionAbility* Arena::CreateMaybeMessage< ::CDOTAUserMsg_ProjectionAbility >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_ProjectionAbility >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_ProjectionEvent* Arena::CreateMaybeMessage< ::CDOTAUserMsg_ProjectionEvent >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_ProjectionEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_XPAlert* Arena::CreateMaybeMessage< ::CDOTAUserMsg_XPAlert >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_XPAlert >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_UpdateQuestProgress* Arena::CreateMaybeMessage< ::CDOTAUserMsg_UpdateQuestProgress >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_UpdateQuestProgress >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_QuestStatus* Arena::CreateMaybeMessage< ::CDOTAUserMsg_QuestStatus >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_QuestStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_SuggestHeroPick* Arena::CreateMaybeMessage< ::CDOTAUserMsg_SuggestHeroPick >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_SuggestHeroPick >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_SuggestHeroRole* Arena::CreateMaybeMessage< ::CDOTAUserMsg_SuggestHeroRole >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_SuggestHeroRole >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_KillcamDamageTaken* Arena::CreateMaybeMessage< ::CDOTAUserMsg_KillcamDamageTaken >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_KillcamDamageTaken >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_SelectPenaltyGold* Arena::CreateMaybeMessage< ::CDOTAUserMsg_SelectPenaltyGold >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_SelectPenaltyGold >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_RollDiceResult* Arena::CreateMaybeMessage< ::CDOTAUserMsg_RollDiceResult >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_RollDiceResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_FlipCoinResult* Arena::CreateMaybeMessage< ::CDOTAUserMsg_FlipCoinResult >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_FlipCoinResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMessage_RequestItemSuggestions* Arena::CreateMaybeMessage< ::CDOTAUserMessage_RequestItemSuggestions >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMessage_RequestItemSuggestions >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMessage_TeamCaptainChanged* Arena::CreateMaybeMessage< ::CDOTAUserMessage_TeamCaptainChanged >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMessage_TeamCaptainChanged >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_ChatWheelCooldown* Arena::CreateMaybeMessage< ::CDOTAUserMsg_ChatWheelCooldown >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_ChatWheelCooldown >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_HeroRelicProgress* Arena::CreateMaybeMessage< ::CDOTAUserMsg_HeroRelicProgress >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_HeroRelicProgress >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_AbilityDraftRequestAbility* Arena::CreateMaybeMessage< ::CDOTAUserMsg_AbilityDraftRequestAbility >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_AbilityDraftRequestAbility >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_DamageReport* Arena::CreateMaybeMessage< ::CDOTAUserMsg_DamageReport >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_DamageReport >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_SalutePlayer* Arena::CreateMaybeMessage< ::CDOTAUserMsg_SalutePlayer >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_SalutePlayer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_TipAlert* Arena::CreateMaybeMessage< ::CDOTAUserMsg_TipAlert >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_TipAlert >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_ReplaceQueryUnit* Arena::CreateMaybeMessage< ::CDOTAUserMsg_ReplaceQueryUnit >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_ReplaceQueryUnit >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
